{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/canvas-nest.min.js","path":"js/src/canvas-nest.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","path":"lib/canvas-ribbon/canvas-ribbon.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","path":"lib/needsharebutton/font-embedded.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","path":"lib/needsharebutton/needsharebutton.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","path":"lib/needsharebutton/needsharebutton.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","path":"lib/pace/pace-theme-barber-shop.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","path":"lib/pace/pace-theme-big-counter.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","path":"lib/pace/pace-theme-bounce.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","path":"lib/pace/pace-theme-center-atom.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","path":"lib/pace/pace-theme-center-circle.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","path":"lib/pace/pace-theme-center-radar.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","path":"lib/pace/pace-theme-center-simple.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","path":"lib/pace/pace-theme-corner-indicator.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","path":"lib/pace/pace-theme-fill-left.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","path":"lib/pace/pace-theme-flash.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","path":"lib/pace/pace-theme-loading-bar.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","path":"lib/pace/pace-theme-mac-osx.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","path":"lib/pace/pace-theme-minimal.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace.min.js","path":"lib/pace/pace.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","path":"lib/three/canvas_lines.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","path":"lib/three/canvas_sphere.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.css","path":"lib/Han/dist/han.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.css","path":"lib/Han/dist/han.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.js","path":"lib/Han/dist/han.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.js","path":"lib/Han/dist/han.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","path":"lib/Han/dist/font/han-space.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","path":"lib/Han/dist/font/han-space.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","path":"lib/Han/dist/font/han.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","path":"lib/Han/dist/font/han.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","path":"lib/Han/dist/font/han.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":1,"renderable":1}],"Cache":[{"_id":"themes/next/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1514806389000},{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1514806389000},{"_id":"themes/next/.gitattributes","hash":"44bd4729c74ccb88110804f41746fec07bf487d4","modified":1514806389000},{"_id":"themes/next/.gitignore","hash":"0b5c2ffd41f66eb1849d6426ba8cf9649eeed329","modified":1514806389000},{"_id":"themes/next/.hound.yml","hash":"b76daa84c9ca3ad292c78412603370a367cc2bc3","modified":1514806389000},{"_id":"themes/next/.javascript_ignore","hash":"8a224b381155f10e6eb132a4d815c5b52962a9d1","modified":1514806389000},{"_id":"themes/next/.jshintrc","hash":"9928f81bd822f6a8d67fdbc909b517178533bca9","modified":1514806389000},{"_id":"themes/next/.stylintrc","hash":"b28e24704a5d8de08346c45286574c8e76cc109f","modified":1514806389000},{"_id":"themes/next/.travis.yml","hash":"d60d4a5375fea23d53b2156b764a99b2e56fa660","modified":1514806389000},{"_id":"themes/next/LICENSE","hash":"f293bcfcdc06c0b77ba13570bb8af55eb5c059fd","modified":1514806389000},{"_id":"themes/next/README.cn.md","hash":"58ffe752bc4b7f0069fcd6304bbc2d5ff7b80f89","modified":1514806389000},{"_id":"themes/next/README.md","hash":"898213e66d34a46c3cf8446bf693bd50db0d3269","modified":1514806389000},{"_id":"themes/next/_config.yml","hash":"b1f54bc04c69b12637e5e10c8f2eab7f9b23e4f7","modified":1517561296707},{"_id":"themes/next/bower.json","hash":"0674f11d3d514e087a176da0e1d85c2286aa5fba","modified":1514806389000},{"_id":"themes/next/gulpfile.coffee","hash":"031bffc483e417b20e90eceb6cf358e7596d2e69","modified":1514806389000},{"_id":"themes/next/package.json","hash":"036d3a1346203d2f1a3958024df7f74e7ac07bfe","modified":1514806389000},{"_id":"source/_posts/Linux-awk.md","hash":"dbd22a3b625308e495a7e161b40dd46bb0bb8014","modified":1517714653459},{"_id":"source/_posts/Linux-commands.md","hash":"fbd2a6b2230bc4dc38d5883bf464902f09b8b7e2","modified":1517551716971},{"_id":"source/_posts/Linux-grep.md","hash":"93c82c2dffbeeddd2bb4137ad67c93f754b6c0f2","modified":1517716595636},{"_id":"source/_posts/Linux-regular.md","hash":"431035c0212186c2d5d6f7b5a28da3449a0e6913","modified":1517652104587},{"_id":"source/_posts/Linux-sed.md","hash":"3c74482ff957089a2b5ffefbfd31707f9d738587","modified":1517652088609},{"_id":"source/_posts/Linux-shell.md","hash":"bf3241c68033d20bd193a09101a8b5264a170a01","modified":1517731328867},{"_id":"source/_posts/docker.md","hash":"4eff070d356b34ef1bf43fbc13cd1e3d860a6c71","modified":1517477616977},{"_id":"source/_posts/hexo_install_use.md","hash":"09d8148d9567e476dc89d4ad00e3e84b787acf44","modified":1517726208929},{"_id":"source/_posts/keepalived_nginx.md","hash":"df8f6e5d7622cb52f86cd44644794d935d560684","modified":1517408592441},{"_id":"source/_posts/nginx_proxypass_rewrite.md","hash":"1a331d560239eaee9555039d15994d81ebdba980","modified":1517410349673},{"_id":"source/_posts/vim_base.md","hash":"3e27f22dd8312cdc3951fb0fc8b920237935cab7","modified":1517469641600},{"_id":"source/_posts/zookeeper_install.md","hash":"d64cec4c6ac0ebc7486a7a9d831240b913b5bad8","modified":1517455025843},{"_id":"source/about/index.md","hash":"7d61ac05d7e4ecc703e54176c3c4e06cd9976f63","modified":1517367613674},{"_id":"source/categories/index.md","hash":"b59376be8c02b52bf3b7cbeb6a12f827bd4e9d58","modified":1517369666645},{"_id":"source/tags/index.md","hash":"a450f2bbfb3fb6116a4faeb5e353e326b82bac2e","modified":1517377694580},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"3b5eafd32abb718e56ccf8d1cee0607ad8ce611d","modified":1514806389000},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"352093a1b210c72136687fd2eee649244cee402c","modified":1514806389000},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"902f627155a65099e0a37842ff396a58d0dc306f","modified":1514806389000},{"_id":"themes/next/.github/browserstack_logo.png","hash":"a6c43887f64a7f48a2814e3714eaa1215e542037","modified":1514806389000},{"_id":"themes/next/languages/de.yml","hash":"057e7df11ddeb1c8c15a5d7c5ff29430d725ec6b","modified":1514806389000},{"_id":"themes/next/languages/default.yml","hash":"44ef3f26917f467459326c2c8be2f73e4d947f35","modified":1514806389000},{"_id":"themes/next/languages/en.yml","hash":"7e680d9bb8f3a3a9d1ba1c9d312b3d257183dded","modified":1514806389000},{"_id":"themes/next/languages/fr-FR.yml","hash":"7e4eb7011b8feee641cfb11c6e73180b0ded1c0f","modified":1514806389000},{"_id":"themes/next/languages/id.yml","hash":"b5de1ea66dd9ef54cac9a1440eaa4e3f5fc011f5","modified":1514806389000},{"_id":"themes/next/languages/it.yml","hash":"aa595f2bda029f73ef7bfa104b4c55c3f4e9fb4c","modified":1514806389000},{"_id":"themes/next/languages/ja.yml","hash":"3c76e16fd19b262864475faa6854b718bc08c4d8","modified":1514806389000},{"_id":"themes/next/languages/ko.yml","hash":"ea5b46056e73ebcee121d5551627af35cbffc900","modified":1514806389000},{"_id":"themes/next/languages/nl-NL.yml","hash":"edca4f3598857dbc3cbf19ed412213329b6edd47","modified":1514806389000},{"_id":"themes/next/languages/pt-BR.yml","hash":"b1694ae766ed90277bcc4daca4b1cfa19cdcb72b","modified":1514806389000},{"_id":"themes/next/languages/pt.yml","hash":"44b61f2d085b827b507909a0b8f8ce31c6ef5d04","modified":1514806389000},{"_id":"themes/next/languages/ru.yml","hash":"98ec6f0b7183282e11cffc7ff586ceb82400dd75","modified":1514806389000},{"_id":"themes/next/languages/vi.yml","hash":"fd08d3c8d2c62965a98ac420fdaf95e54c25d97c","modified":1514806389000},{"_id":"themes/next/languages/zh-Hans.yml","hash":"83c6d260dc477d3f4034b466e3b588d2e6af2f7d","modified":1517552213657},{"_id":"themes/next/languages/zh-hk.yml","hash":"9396f41ae76e4fef99b257c93c7354e661f6e0fa","modified":1514806389000},{"_id":"themes/next/languages/zh-tw.yml","hash":"50b71abb3ecc0686f9739e179e2f829cd074ecd9","modified":1514806389000},{"_id":"themes/next/layout/_layout.swig","hash":"47cd72772de82869158ae41a2a6f1761b1afd7cd","modified":1517557339953},{"_id":"themes/next/layout/category.swig","hash":"4472255f4a3e3dd6d79201523a9526dcabdfbf18","modified":1514806389000},{"_id":"themes/next/layout/archive.swig","hash":"f0a8225feafd971419837cdb4bcfec98a4a59b2f","modified":1514806389000},{"_id":"themes/next/layout/index.swig","hash":"783611349c941848a0e26ee2f1dc44dd14879bd1","modified":1514806389000},{"_id":"themes/next/layout/page.swig","hash":"969caaee05bdea725e99016eb63d810893a73e99","modified":1514806389000},{"_id":"themes/next/layout/post.swig","hash":"b3589a8e46288a10d20e41c7a5985d2493725aec","modified":1514806389000},{"_id":"themes/next/layout/schedule.swig","hash":"d86f8de4e118f8c4d778b285c140474084a271db","modified":1514806389000},{"_id":"themes/next/layout/tag.swig","hash":"7e0a7d7d832883eddb1297483ad22c184e4368de","modified":1514806389000},{"_id":"themes/next/scripts/merge-configs.js","hash":"81e86717ecfb775986b945d17f0a4ba27532ef07","modified":1514806389000},{"_id":"themes/next/scripts/merge.js","hash":"9130dabe6a674c54b535f322b17d75fe6081472f","modified":1514806389000},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1514806389000},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1514806389000},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1514806389000},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1514806389000},{"_id":"themes/next/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1514806389000},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1514806389000},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"31322a7f57936cf2dc62e824af5490da5354cf02","modified":1514806389000},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"665a928604f99d2ba7dc4a4a9150178229568cc6","modified":1514806389000},{"_id":"themes/next/layout/_macro/post.swig","hash":"446a35a2cd389f8cfc3aa38973a9b44ad0740134","modified":1517375845299},{"_id":"themes/next/layout/_macro/reward.swig","hash":"56e8d8556cf474c56ae1bef9cb7bbd26554adb07","modified":1514806389000},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"6a54c3c85ff6b19d275827a327abbf4bd99b2ebf","modified":1514806389000},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"39852700e4084ecccffa6d4669168e5cc0514c9e","modified":1514806389000},{"_id":"themes/next/layout/_partials/comments.swig","hash":"4a6f5b1792b2e5262b7fdab9a716b3108e2f09c7","modified":1514806389000},{"_id":"themes/next/layout/_partials/footer.swig","hash":"c4d6181f5d3db5365e622f78714af8cc58d7a45e","modified":1514806389000},{"_id":"themes/next/layout/_partials/head.swig","hash":"6b94fe8f3279daea5623c49ef4bb35917ba57510","modified":1514806389000},{"_id":"themes/next/layout/_partials/header.swig","hash":"ed042be6252848058c90109236ec988e392d91d4","modified":1514806389000},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"1efd925d34a5d4ba2dc0838d9c86ba911e705fc9","modified":1514806389000},{"_id":"themes/next/layout/_partials/search.swig","hash":"9dbd378e94abfcb3f864a5b8dbbf18d212ca2ee0","modified":1514806389000},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9e8e21d194ef44d271b1cca0bc1448c14d7edf4f","modified":1514806389000},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"766b2bdda29523ed6cd8d7aa197f996022f8fd94","modified":1514806389000},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1514806389000},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"a266f96ad06ee87bdeae6e105a4b53cd587bbd04","modified":1514806389000},{"_id":"themes/next/layout/_third-party/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1514806389000},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"7c04a42319d728be356746363aff8ea247791d24","modified":1514806389000},{"_id":"themes/next/layout/_third-party/mathjax.swig","hash":"6d25596d6a7c57700d37b607f8d9a62d89708683","modified":1514806389000},{"_id":"themes/next/layout/_third-party/needsharebutton.swig","hash":"5fe0447cc88a5a63b530cf0426f93c4634811876","modified":1514806389000},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"fc93b1a7e6aed0dddb1f3910142b48d8ab61174e","modified":1514806389000},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"22369026c87fc23893c35a7f250b42f3bb1b60f1","modified":1514806389000},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"1ddb2336a1a19b47af3017047012c01ec5f54529","modified":1514806389000},{"_id":"themes/next/scripts/tags/button.js","hash":"d023f10a00077f47082b0517e2ad666e6e994f60","modified":1514806389000},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"535fc542781021c4326dec24d8495cbb1387634a","modified":1514806389000},{"_id":"themes/next/scripts/tags/exturl.js","hash":"8d7e60f60779bde050d20fd76f6fdc36fc85e06d","modified":1514806389000},{"_id":"themes/next/scripts/tags/full-image.js","hash":"8eeb3fb89540299bdbb799edfdfdac3743b50596","modified":1514806389000},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1514806389000},{"_id":"themes/next/scripts/tags/label.js","hash":"2f8f41a7316372f0d1ed6b51190dc4acd3e16fff","modified":1514806389000},{"_id":"themes/next/scripts/tags/lazy-image.js","hash":"eeeabede68cf263de9e6593ecf682f620da16f0a","modified":1514806389000},{"_id":"themes/next/scripts/tags/note.js","hash":"64de4e9d01cf3b491ffc7d53afdf148ee5ad9779","modified":1514806389000},{"_id":"themes/next/scripts/tags/tabs.js","hash":"5786545d51c38e8ca38d1bfc7dd9e946fc70a316","modified":1514806389000},{"_id":"themes/next/source/css/main.styl","hash":"20702c48d6053c92c5bcdbc68e8d0ef1369848a0","modified":1514806389000},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1514806389000},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1514806389000},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1514806389000},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1514806389000},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1514806389000},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1514806389000},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1514806389000},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1514806389000},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1514806389000},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1514806389000},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1514806389000},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1514806389000},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1514806389000},{"_id":"themes/next/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1514806389000},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1514806389000},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1514806389000},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1514806389000},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1514806389000},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1514806389000},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1514806389000},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1514806389000},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1514806389000},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1514806389000},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1514806389000},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1514806389000},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1514806389000},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1514806389000},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"957701729b85fb0c5bfcf2fb99c19d54582f91ed","modified":1514806389000},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1514806389000},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1514806389000},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"23e23dc0f76ef3c631f24c65277adf7ea517b383","modified":1514806389000},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"1f1107468aaf03f7d0dcd7eb2b653e2813a675b4","modified":1514806389000},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1514806389000},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"048fd5e98149469f8c28c21ba3561a7a67952c9b","modified":1514806389000},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1514806389000},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1514806389000},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"069d1357c717572256e5cdee09574ebce529cbae","modified":1514806389000},{"_id":"themes/next/layout/_third-party/analytics/analytics-with-widget.swig","hash":"98df9d72e37dd071e882f2d5623c9d817815b139","modified":1514806389000},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"60426bf73f8a89ba61fb1be2df3ad5398e32c4ef","modified":1514806389000},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"deda6a814ed48debc694c4e0c466f06c127163d0","modified":1514806389000},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"18e7bef8923d83ea42df6c97405e515a876cede4","modified":1514806389000},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"8160b27bee0aa372c7dc7c8476c05bae57f58d0f","modified":1514806389000},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"a234c5cd1f75ca5731e814d0dbb92fdcf9240d1b","modified":1514806389000},{"_id":"themes/next/layout/_third-party/analytics/firestore.swig","hash":"1cd01c6e92ab1913d48e556a92bb4f28b6dc4996","modified":1514806389000},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"5d9943d74cc2e0a91badcf4f755c6de77eab193a","modified":1514806389000},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"5e9bb24c750b49513d9a65799e832f07410002ac","modified":1514806389000},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"fc65b9c98a0a8ab43a5e7aabff6c5f03838e09c8","modified":1514806389000},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1514806389000},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"0ddc94ed4ba0c19627765fdf1abc4d8efbe53d5a","modified":1514806389000},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"c3971fd154d781088e1cc665035f8561a4098f4c","modified":1514806389000},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"0e3378f7c39b2b0f69638290873ede6b6b6825c0","modified":1514806389000},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"c316758546dc9ba6c60cb4d852c17ca6bb6d6724","modified":1514806389000},{"_id":"themes/next/layout/_third-party/comments/duoshuo.swig","hash":"a356b2185d40914447fde817eb3d358ab6b3e4c3","modified":1514806389000},{"_id":"themes/next/layout/_third-party/comments/gitment.swig","hash":"10160daceaa6f1ecf632323d422ebe2caae49ddf","modified":1514806389000},{"_id":"themes/next/layout/_third-party/comments/hypercomments.swig","hash":"3e8dc5c6c912628a37e3b5f886bec7b2e5ed14ea","modified":1514806389000},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"aa0629277d751c55c6d973e7691bf84af9b17a60","modified":1514806389000},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"8a2e393d2e49f7bf560766d8a07cd461bf3fce4f","modified":1514806389000},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"fcabbb241f894c9a6309c44e126cf3e8fea81fd4","modified":1514806389000},{"_id":"themes/next/layout/_third-party/comments/youyan.swig","hash":"8b6650f77fe0a824c8075b2659e0403e0c78a705","modified":1514806389000},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"c747fb5c6b1f500e8f0c583e44195878b66e4e29","modified":1514806389000},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"385c066af96bee30be2459dbec8aae1f15d382f5","modified":1514806389000},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1514806389000},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"c057b17f79e8261680fbae8dc4e81317a127c799","modified":1514806389000},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1514806389000},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"2aa5b7166a85a8aa34b17792ae4f58a5a96df6cc","modified":1514806389000},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"9ab65361ba0a12a986edd103e56492644c2db0b8","modified":1514806389000},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"82f9055955920ed88a2ab6a20ab02169abb2c634","modified":1514806389000},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"99fbb4686ea9a3e03a4726ed7cf4d8f529034452","modified":1514806389000},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"be087dcc060e8179f7e7f60ab4feb65817bd3d9f","modified":1514806389000},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"f29165e36489a87ba32d17dddfd2720d84e3f3ec","modified":1514806389000},{"_id":"themes/next/source/css/_variables/base.styl","hash":"29c261fa6b4046322559074d75239c6b272fb8a3","modified":1514806389000},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1514806389000},{"_id":"themes/next/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1514806389000},{"_id":"themes/next/source/js/src/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1517557944000},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"034bc8113e0966fe2096ba5b56061bbf10ef0512","modified":1514806389000},{"_id":"themes/next/source/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1514806389000},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1514806389000},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1514806389000},{"_id":"themes/next/source/js/src/motion.js","hash":"754b294394f102c8fd9423a1789ddb1201677898","modified":1514806389000},{"_id":"themes/next/source/js/src/post-details.js","hash":"a13f45f7aa8291cf7244ec5ba93907d119c5dbdd","modified":1514806389000},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1514806389000},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1514806389000},{"_id":"themes/next/source/js/src/utils.js","hash":"9b1325801d27213083d1487a12b1a62b539ab6f8","modified":1514806389000},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1514806389000},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1514806389000},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","hash":"ff5915eb2596e890a2fc6697c864f861a1995ec0","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/.bower.json","hash":"cc40a9b11e52348e554c84e4a5c058056f6b7aeb","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/.gitattributes","hash":"2db21acfbd457452462f71cc4048a943ee61b8e0","modified":1514806389000},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"93ebd5b35e632f714dcf1753e1f6db77ec74449b","modified":1514806389000},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1514806389000},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1514806389000},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1514806389000},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"a2aaaf12378db56bd10596ba3daae30950eac051","modified":1514806389000},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1514806389000},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1514806389000},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1514806389000},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1514806389000},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"91745c2cc6c946c7275f952b2b0760b880cea69e","modified":1514806389000},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"b7638afc93e9cd350d0783565ee9a7da6805ad8e","modified":1514806389000},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1514806389000},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"895d50fa29759af7835256522e9dd7dac597765c","modified":1514806389000},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1514806389000},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1514806389000},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","hash":"c39d37278c1e178838732af21bd26cd0baeddfe0","modified":1514806389000},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","hash":"3ef0020a1815ca6151ea4886cd0d37421ae3695c","modified":1514806389000},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1514806389000},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","hash":"9885fd9bea5e7ebafc5b1de9d17be5e106248d96","modified":1514806389000},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1514806389000},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1514806389000},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1514806389000},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1514806389000},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1514806389000},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1514806389000},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1514806389000},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1514806389000},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1514806389000},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1514806389000},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1514806389000},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1514806389000},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1514806389000},{"_id":"themes/next/source/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1514806389000},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1514806389000},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1514806389000},{"_id":"themes/next/source/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1514806389000},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"05f960846f1c7a93dab1d3f9a1121e86812e8c88","modified":1514806389000},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1514806389000},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1514806389000},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1514806389000},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1514806389000},{"_id":"themes/next/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1514806389000},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"28ff4ed6714c59124569ffcbd10f1173d53ca923","modified":1514806389000},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"ba698f49dd3a868c95b240d802f5b1b24ff287e4","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"4719ce717962663c5c33ef97b1119a0b3a4ecdc3","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"31050fc7a25784805b4843550151c93bfa55c9c8","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"7e509c7c28c59f905b847304dd3d14d94b6f3b8e","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"a6bb5256be6195e76addbda12f4ed7c662d65e7a","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"c5d48863f332ff8ce7c88dec2c893f709d7331d3","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1514806389000},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1514806389000},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"f7c44b0ee46cf2cf82a4c9455ba8d8b55299976f","modified":1514806389000},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"9c25c75311e1bd4d68df031d3f2ae6d141a90766","modified":1514806389000},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"47a46583a1f3731157a3f53f80ed1ed5e2753e8e","modified":1514806389000},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1514806389000},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a280a583b7615e939aaddbf778f5c108ef8a2a6c","modified":1514806389000},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"64f5d56c08d74a338813df1265580ca0cbf0190b","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"18c3336ee3d09bd2da6a876e1336539f03d5a973","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"c2d079788d6fc2e9a191ccdae94e50d55bf849dc","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"b0dcca862cd0cc6e732e33d975b476d744911742","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"3b25edfa187d1bbbd0d38b50dd013cef54758abf","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9a5581a770af8964064fef7afd3e16963e45547f","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"02fb8fa6b6c252b6bed469539cd057716606a787","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"c4ed249798296f60bda02351fe6404fb3ef2126f","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"5b93958239d3d2bf9aeaede44eced2434d784462","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"215de948be49bcf14f06d500cef9f7035e406a43","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"9d16fa3c14ed76b71229f022b63a02fd0f580958","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"69ecd6c97e7cdfd822ac8102b45ad0ede85050db","modified":1514806389000},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"8050a5b2683d1d77238c5762b6bd89c543daed6e","modified":1514806389000},{"_id":"themes/next/source/lib/Han/dist/han.css","hash":"bd40da3fba8735df5850956814e312bd7b3193d7","modified":1514806389000},{"_id":"themes/next/source/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1514806389000},{"_id":"themes/next/source/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1514806389000},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1514806389000},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1514806389000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1514806389000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1514806389000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1514806389000},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1514806389000},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1514806389000},{"_id":"themes/next/source/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1514806389000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1514806389000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1514806389000},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"7905a7f625702b45645d8be1268cb8af3f698c70","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"ae1ca14e51de67b07dba8f61ec79ee0e2e344574","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"8a2421cb9005352905fae9d41a847ae56957247e","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"96f32ea6c3265a3889e6abe57587f6e2a2a40dfb","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"25dc25f61a232f03ca72472b7852f882448ec185","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"f5aa2ba3bfffc15475e7e72a55b5c9d18609fdf5","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"2039590632bba3943c39319d80ef630af7928185","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"a82afbb72d83ee394aedc7b37ac0008a9823b4f4","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"e72a89e0f421444453e149ba32c77a64bd8e44e8","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"0f7f522cc6bfb3401d5afd62b0fcdf48bb2d604b","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"f54367c0feda6986c030cc4d15a0ca6ceea14bcb","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"535b3b4f8cb1eec2558e094320e7dfb01f94c0e7","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"aea21141015ca8c409d8b33e3e34ec505f464e93","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"a5d8617a24d7cb6c5ad91ea621183ca2c0917331","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"36332c8a91f089f545f3c3e8ea90d08aa4d6e60c","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"017074ef58166e2d69c53bb7590a0e7a8947a1ed","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"d5a4e4fc17f1f7e7c3a61b52d8e2e9677e139de7","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"e4055a0d2cd2b0ad9dc55928e2f3e7bd4e499da3","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"262debfd4442fa03d9919ceb88b948339df03fb0","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"0a6c0efffdf18bddbc1d1238feaed282b09cd0fe","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"920343e41c124221a17f050bbb989494d44f7a24","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"89dd4f8b1f1cce3ad46cf2256038472712387d02","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"efa5e5022e205b52786ce495d4879f5e7b8f84b2","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"12937cae17c96c74d5c58db6cb29de3b2dfa14a2","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"f7784aba0c1cd20d824c918c120012d57a5eaa2a","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"50305b6ad7d09d2ffa4854e39f41ec1f4fe984fd","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"1b3cc9f4e5a7f6e05b4100e9990b37b20d4a2005","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"37e951e734a252fe8a81f452b963df2ba90bfe90","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"4a457d265d62f287c63d48764ce45d9bcfc9ec5a","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/tags/note-modern.styl","hash":"ee7528900578ef4753effe05b346381c40de5499","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"32c9156bea5bac9e9ad0b4c08ffbca8b3d9aac4b","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"4ab5deed8c3b0c338212380f678f8382672e1bcb","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"ead0d0f2321dc71505788c7f689f92257cf14947","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"fd42777b9125fd8969dc39d4f15473e2b91b4142","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"d4e6d8d7b34dc69994593c208f875ae8f7e8a3ae","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"2340dd9b3202c61d73cc708b790fac5adddbfc7f","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/third-party/gitment.styl","hash":"34935b40237c074be5f5e8818c14ccfd802b7439","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"cce6772e2cdb4db85d35486ae4c6c59367fbdd40","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"d89c4b562b528e4746696b2ad8935764d133bdae","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/third-party/needsharebutton.styl","hash":"a5e3e6b4b4b814a9fe40b34d784fed67d6d977fa","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"1ccfbd4d0f5754b2dc2719a91245c95f547a7652","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1514806389000},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1514806389000},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1514806389000},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1514806389000},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1514806389000},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1514806389000},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1514806389000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1514806389000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1514806389000},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1514806389000},{"_id":"themes/next/source/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1514806389000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1514806389000}],"Category":[{"name":"Linux","_id":"cjd8i92070002tyasqf1ycjqz"},{"name":"前端","_id":"cjd8i921u000ltyasbr75o03o"},{"name":"Zookeeper","_id":"cjd8i92c4001styasyf0sd62m"}],"Data":[],"Page":[{"title":"关于我","date":"2018-01-31T03:00:00.000Z","_content":"","source":"about/index.md","raw":"---\ntitle: 关于我\ndate: 2018-01-31 11:00:00\n---\n","updated":"2018-01-31T03:00:13.674Z","path":"about/index.html","comments":1,"layout":"page","_id":"cjd8i92bv001qtyasr8xvwhpw","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"文章分类","date":"2018-01-31T11:42:16.781Z","type":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: 文章分类\ndate: 日期 \ntype: \"categories\"\ncomments: false\n---\n","updated":"2018-01-31T03:34:26.645Z","path":"categories/index.html","layout":"page","_id":"cjd8i92c0001rtyasn69j482a","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"文章标签","date":"2018-01-31T11:42:16.781Z","type":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: 文章标签\ndate: 日期\ntype: \"tags\"\ncomments: false\n---\n","updated":"2018-01-31T05:48:14.580Z","path":"tags/index.html","layout":"page","_id":"cjd8i92c5001utyas397qd2mc","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"Linux之awk详解","date":"2018-02-04T03:24:13.463Z","modified":null,"_content":"\nawk是一个强大的文本分析工具，相对于grep的查找，sed的编辑，awk在其对数据分析并生成报告时，显得尤为强大。简单来说awk就是把文件逐行的读入，以空格为默认分隔符将每行切片，切开的部分再进行各种分析处理。\nawk有3个不同版本: awk、nawk和gawk，未作特别说明，一般指gawk，gawk是AWK的GNU版本。\n\n#### 命令格式\n\n> awk ‘{pattern + action}’ {filenames}\n\n其中pattern表示AWK在数据中查找的内容，而action是在找到匹配内容时所执行的一系列命令。花括号({})不需要在程序中始终出现，但它们用于根据特定的模式对一系列指令进行分组。pattern就是要表示的正则表达式，用斜杠括起来。\n\n#### 调用方式\n\nawk的调用方式通常分为以下三种：\n\n##### 命令行方式\n\n> awk [-F  field-separator]  'commands'  input-file(s)\n\n其中，commands 是真正awk命令，[-F域分隔符]是可选的。 input-file(s) 是待处理的文件。\n在awk中，文件的每一行中，由域分隔符分开的每一项称为一个域。通常，在不指名-F域分隔符的情况下，默认的域分隔符是空格。\n\n##### shell脚本方式\n\n将所有的awk命令插入一个文件，并使awk程序可执行，然后awk命令解释器作为脚本的首行，一遍通过键入脚本名称来调用。\n\n> 相当于shell脚本首行的：#!/bin/sh\n  可以换成：#!/bin/awk\n\n##### 将所有的awk命令插入一个单独文件，然后调用\n\n> awk -f awk-script-file input-file(s)\n\n其中，-f选项加载awk-script-file中的awk脚本，input-file(s)跟上面的是一样的。\n\n#### 入门实例\n\n1. 显示最近登录的5个账号名\n\n  ```\n  last -n 5 | awk '{print $1}'\n  ```\n  > awk工作流程是这样的：读入有'\\n'换行符分割的一条记录，然后将记录按指定的域分隔符划分域，填充域，$0则表示所有域,$1表示第一个域,$n表示第n个域。默认域分隔符是\"空白键\" 或 \"[tab]键\",所以$1表示登录用户，$3表示登录用户ip,以此类推。\n\n2. 只显示/etc/passwd的账户名\n\n  ```\n  cat /etc/passwd | awk -F':' '{print $1}'\n  ```\n\n  > 这种是awk+action的示例，每行都会执行`action{print $1}`。\n    -F指定域分隔符为`:`。\n\n3. 只显示/etc/passwd的账户和账户对应的shell,并且账户与shell之间以tab键分割\n\n  ```\n  cat /etc/passwd | awk -F':' '{print $1\"\\t\"$7}'\n  ```\n\n4. 只显示/etc/passwd的账户和账户对应的shell,账户与shell之间以逗号分割,并且在所有行前添加列名name,shell,在最后一行添加\"blue,/bin/nosh\"。\n\n  ```\n  cat /etc/passwd | awk -F':' 'BEGIN{print \"name,shell\"} {print $1\",\"$7} END{print \"blue,/bin/nosh\"}' \n  ```\n\n  > awk工作流程是这样的：先执行BEGIN，然后读取文件，读入有/n换行符分割的一条记录，然后将记录按指定的域分隔符划分域，填充域，$0则表示所有域,$1表示第一个域,$n表示第n个域,随后开始执行模式所对应的动作action。接着开始读入第二条记录······直到所有的记录都读完，最后执行END操作。\n\n5. 搜索/etc/passwd有root关键字的所有行\n\n  ```\n  cat /etc/passwd | awk -F':' '/root/'\n  ```\n\n  > 这种是pattern的使用示例，匹配了pattern(这里是root)的行才会执行action(没有指定action，默认输出每行的内容)。\n    搜索支持正则，例如找root开头的: `awk -F: '/^root/' /etc/passwd`\n\n6. 获取/etc/passwd有root关键字的所有行，并显示对应的shell\n\n  ```\n  cat /etc/passwd | awk -F: '/root/{print $7}'\n  ```\n\n#### awk内置变量\n\nawk有许多内置变量用来设置环境信息，这些变量可以被改变，下面给出了最常用的一些变量。\n\n|变量名|说明|\n|:---:|:---|\n|ARGC|命令行参数个数|\n|ARGV|命令行参数排列|\n|ENVIRON|支持队列中系统环境变量的使用|\n|FILENAME|awk浏览的文件名|\n|FNR|浏览文件的记录数|\n|FS|设置输入域分隔符，等价于命令行 -F选项|\n|NF|浏览记录的域的个数|\n|NR|已读的记录数|\n|OFS|输出域分隔符|\n|ORS|输出记录分隔符|\n|RS|控制记录分隔符|\n\n##### 练习\n\n1. 统计/etc/passwd:文件名，每行的行号，每行的列数，对应的完整行内容\n\n  ```\n  awk -F':' '{print \"filename: \" FILENAME \", linenumber: \" NR \", columns: \" NF \", linecontent: \" $0}' /etc/passwd\n  ```\n\n#### print和printf\nawk中同时提供了print和printf两种打印输出的函数。\n其中print函数的参数可以是变量、数值或者字符串。字符串必须用双引号引用，参数用逗号分隔。如果没有逗号，参数就串联在一起而无法区分。这里，逗号的作用与输出文件的分隔符的作用是一样的，只是后者是空格而已。\nprintf函数，其用法和c语言中printf基本相似,可以格式化字符串,输出复杂时，printf更加好用，代码更易懂。\n\n> 可以将上面的例子1改写为以下形式：\n\n```\n  awk -F':' '{printf(\"filename: %10s, linenumber: %s, columns: %s, linecon\ntent: %s\\n\", FILENAME, NR, NF, $0)}' /etc/passwd\n```\n\n#### awk编程\n\n##### 变量和赋值\n\n除了awk的内置变量，awk还可以自定义变量。\n\n1. 统计/etc/passwd的账户人数\n\n  ```\n  awk 'BEGIN{count=0} {count++} END{print \"the number of users is \",count}' /etc/passwd\n  ```\n\n2. 统计某个文件夹下的文件占用的字节数\n\n  ```\n  ls -l | awk 'BEGIN{size=0} {size+=$5;} END{print \"[end]size is \",size}'\n  ```\n\n##### 条件语句\n\nawk中的条件语句是从C语言中借鉴来的，声明方式如下：\n\n> if (expression) {\n    statement;\n    statement;\n    ... ...\n  }\n\n或\n\n> if (expression) {\n    statement;\n  } else {\n    statement2;\n  }\n\n或\n\n> if (expression) {\n    statement1;\n  } else if (expression1) {\n    statement2;\n  } else {\n    statement3;\n  }\n\n1. 统计某个文件夹下的文件占用的字节数,过滤4096大小的文件\n\n  ```\n  ls -l | awk 'BEGIN{size=0} {if($5==4096){size+=$5}} END{print \"the size of file is \",size}'\n  ```\n\n##### 循环语句\n\nawk中的循环语句同样借鉴于C语言，支持while、do/while、for、break、continue，这些关键字的语义和C语言中的语义完全相同。\n\n##### 数组\n\n因为awk中数组的下标可以是数字和字母，数组的下标通常被称为关键字(key)。值和关键字都存储在内部的一张针对key/value应用hash的表格里。由于hash不是顺序存储，因此在显示数组内容时会发现，它们并不是按照你预料的顺序显示出来的。数组和变量一样，都是在使用时自动创建的，awk也同样会自动判断其存储的是数字还是字符串。一般而言，awk中的数组用来从记录中收集信息，可以用于计算总和、统计单词以及跟踪模板被匹配的次数等等。\n\n1. 显示/etc/passwd的账户\n\n  ```\n  awk -F':' 'BEGIN{count=0;} {name[count]=$1;count++} END{for(i=0;i<NR;i++){print i, name[i]}}' /etc/passwd\n  ```\n\n\n#### 练习\n\n1. 取出/etc/passwd中的账户名以a或b开头的行并排序\n\n  ```\n  awk '$1~/^(a|b)/{print $0}' /etc/passwd | sort\n  ```\n\n  > 这里需要注意`~`是进行对`$1`的模糊匹配的意思。\n\n2. 取出常用服务及其端口号\n\n  ```\n  cat /etc/services | awk -F'[ /]+' '$1~/^(ssh|ftp|https)/{print $1,$2}'| uniq\n  ```\n\n3. 获取文件中空行的数量\n\n  ```\n  awk 'BEGIN{count=0} {if($0==\"\"){count++}} END{print count}' filename\n  或\n  awk 'BEGIN{count=0} /^$/{count++} END{print count}' filename\n  ```\n\n4. 从链接中获取域名\n\n  ```\n  awk -F'/' '{array[$3]++}END{for(key in array){print key,array[key]}}' filename\n  ```\n","source":"_posts/Linux-awk.md","raw":"---\ntitle: Linux之awk详解\ndate:\nmodified:\ncategories:\n- Linux\ntags:\n- Linux\n- awk\n---\n\nawk是一个强大的文本分析工具，相对于grep的查找，sed的编辑，awk在其对数据分析并生成报告时，显得尤为强大。简单来说awk就是把文件逐行的读入，以空格为默认分隔符将每行切片，切开的部分再进行各种分析处理。\nawk有3个不同版本: awk、nawk和gawk，未作特别说明，一般指gawk，gawk是AWK的GNU版本。\n\n#### 命令格式\n\n> awk ‘{pattern + action}’ {filenames}\n\n其中pattern表示AWK在数据中查找的内容，而action是在找到匹配内容时所执行的一系列命令。花括号({})不需要在程序中始终出现，但它们用于根据特定的模式对一系列指令进行分组。pattern就是要表示的正则表达式，用斜杠括起来。\n\n#### 调用方式\n\nawk的调用方式通常分为以下三种：\n\n##### 命令行方式\n\n> awk [-F  field-separator]  'commands'  input-file(s)\n\n其中，commands 是真正awk命令，[-F域分隔符]是可选的。 input-file(s) 是待处理的文件。\n在awk中，文件的每一行中，由域分隔符分开的每一项称为一个域。通常，在不指名-F域分隔符的情况下，默认的域分隔符是空格。\n\n##### shell脚本方式\n\n将所有的awk命令插入一个文件，并使awk程序可执行，然后awk命令解释器作为脚本的首行，一遍通过键入脚本名称来调用。\n\n> 相当于shell脚本首行的：#!/bin/sh\n  可以换成：#!/bin/awk\n\n##### 将所有的awk命令插入一个单独文件，然后调用\n\n> awk -f awk-script-file input-file(s)\n\n其中，-f选项加载awk-script-file中的awk脚本，input-file(s)跟上面的是一样的。\n\n#### 入门实例\n\n1. 显示最近登录的5个账号名\n\n  ```\n  last -n 5 | awk '{print $1}'\n  ```\n  > awk工作流程是这样的：读入有'\\n'换行符分割的一条记录，然后将记录按指定的域分隔符划分域，填充域，$0则表示所有域,$1表示第一个域,$n表示第n个域。默认域分隔符是\"空白键\" 或 \"[tab]键\",所以$1表示登录用户，$3表示登录用户ip,以此类推。\n\n2. 只显示/etc/passwd的账户名\n\n  ```\n  cat /etc/passwd | awk -F':' '{print $1}'\n  ```\n\n  > 这种是awk+action的示例，每行都会执行`action{print $1}`。\n    -F指定域分隔符为`:`。\n\n3. 只显示/etc/passwd的账户和账户对应的shell,并且账户与shell之间以tab键分割\n\n  ```\n  cat /etc/passwd | awk -F':' '{print $1\"\\t\"$7}'\n  ```\n\n4. 只显示/etc/passwd的账户和账户对应的shell,账户与shell之间以逗号分割,并且在所有行前添加列名name,shell,在最后一行添加\"blue,/bin/nosh\"。\n\n  ```\n  cat /etc/passwd | awk -F':' 'BEGIN{print \"name,shell\"} {print $1\",\"$7} END{print \"blue,/bin/nosh\"}' \n  ```\n\n  > awk工作流程是这样的：先执行BEGIN，然后读取文件，读入有/n换行符分割的一条记录，然后将记录按指定的域分隔符划分域，填充域，$0则表示所有域,$1表示第一个域,$n表示第n个域,随后开始执行模式所对应的动作action。接着开始读入第二条记录······直到所有的记录都读完，最后执行END操作。\n\n5. 搜索/etc/passwd有root关键字的所有行\n\n  ```\n  cat /etc/passwd | awk -F':' '/root/'\n  ```\n\n  > 这种是pattern的使用示例，匹配了pattern(这里是root)的行才会执行action(没有指定action，默认输出每行的内容)。\n    搜索支持正则，例如找root开头的: `awk -F: '/^root/' /etc/passwd`\n\n6. 获取/etc/passwd有root关键字的所有行，并显示对应的shell\n\n  ```\n  cat /etc/passwd | awk -F: '/root/{print $7}'\n  ```\n\n#### awk内置变量\n\nawk有许多内置变量用来设置环境信息，这些变量可以被改变，下面给出了最常用的一些变量。\n\n|变量名|说明|\n|:---:|:---|\n|ARGC|命令行参数个数|\n|ARGV|命令行参数排列|\n|ENVIRON|支持队列中系统环境变量的使用|\n|FILENAME|awk浏览的文件名|\n|FNR|浏览文件的记录数|\n|FS|设置输入域分隔符，等价于命令行 -F选项|\n|NF|浏览记录的域的个数|\n|NR|已读的记录数|\n|OFS|输出域分隔符|\n|ORS|输出记录分隔符|\n|RS|控制记录分隔符|\n\n##### 练习\n\n1. 统计/etc/passwd:文件名，每行的行号，每行的列数，对应的完整行内容\n\n  ```\n  awk -F':' '{print \"filename: \" FILENAME \", linenumber: \" NR \", columns: \" NF \", linecontent: \" $0}' /etc/passwd\n  ```\n\n#### print和printf\nawk中同时提供了print和printf两种打印输出的函数。\n其中print函数的参数可以是变量、数值或者字符串。字符串必须用双引号引用，参数用逗号分隔。如果没有逗号，参数就串联在一起而无法区分。这里，逗号的作用与输出文件的分隔符的作用是一样的，只是后者是空格而已。\nprintf函数，其用法和c语言中printf基本相似,可以格式化字符串,输出复杂时，printf更加好用，代码更易懂。\n\n> 可以将上面的例子1改写为以下形式：\n\n```\n  awk -F':' '{printf(\"filename: %10s, linenumber: %s, columns: %s, linecon\ntent: %s\\n\", FILENAME, NR, NF, $0)}' /etc/passwd\n```\n\n#### awk编程\n\n##### 变量和赋值\n\n除了awk的内置变量，awk还可以自定义变量。\n\n1. 统计/etc/passwd的账户人数\n\n  ```\n  awk 'BEGIN{count=0} {count++} END{print \"the number of users is \",count}' /etc/passwd\n  ```\n\n2. 统计某个文件夹下的文件占用的字节数\n\n  ```\n  ls -l | awk 'BEGIN{size=0} {size+=$5;} END{print \"[end]size is \",size}'\n  ```\n\n##### 条件语句\n\nawk中的条件语句是从C语言中借鉴来的，声明方式如下：\n\n> if (expression) {\n    statement;\n    statement;\n    ... ...\n  }\n\n或\n\n> if (expression) {\n    statement;\n  } else {\n    statement2;\n  }\n\n或\n\n> if (expression) {\n    statement1;\n  } else if (expression1) {\n    statement2;\n  } else {\n    statement3;\n  }\n\n1. 统计某个文件夹下的文件占用的字节数,过滤4096大小的文件\n\n  ```\n  ls -l | awk 'BEGIN{size=0} {if($5==4096){size+=$5}} END{print \"the size of file is \",size}'\n  ```\n\n##### 循环语句\n\nawk中的循环语句同样借鉴于C语言，支持while、do/while、for、break、continue，这些关键字的语义和C语言中的语义完全相同。\n\n##### 数组\n\n因为awk中数组的下标可以是数字和字母，数组的下标通常被称为关键字(key)。值和关键字都存储在内部的一张针对key/value应用hash的表格里。由于hash不是顺序存储，因此在显示数组内容时会发现，它们并不是按照你预料的顺序显示出来的。数组和变量一样，都是在使用时自动创建的，awk也同样会自动判断其存储的是数字还是字符串。一般而言，awk中的数组用来从记录中收集信息，可以用于计算总和、统计单词以及跟踪模板被匹配的次数等等。\n\n1. 显示/etc/passwd的账户\n\n  ```\n  awk -F':' 'BEGIN{count=0;} {name[count]=$1;count++} END{for(i=0;i<NR;i++){print i, name[i]}}' /etc/passwd\n  ```\n\n\n#### 练习\n\n1. 取出/etc/passwd中的账户名以a或b开头的行并排序\n\n  ```\n  awk '$1~/^(a|b)/{print $0}' /etc/passwd | sort\n  ```\n\n  > 这里需要注意`~`是进行对`$1`的模糊匹配的意思。\n\n2. 取出常用服务及其端口号\n\n  ```\n  cat /etc/services | awk -F'[ /]+' '$1~/^(ssh|ftp|https)/{print $1,$2}'| uniq\n  ```\n\n3. 获取文件中空行的数量\n\n  ```\n  awk 'BEGIN{count=0} {if($0==\"\"){count++}} END{print count}' filename\n  或\n  awk 'BEGIN{count=0} /^$/{count++} END{print count}' filename\n  ```\n\n4. 从链接中获取域名\n\n  ```\n  awk -F'/' '{array[$3]++}END{for(key in array){print key,array[key]}}' filename\n  ```\n","slug":"Linux-awk","published":1,"updated":"2018-02-04T03:24:13.459Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjd8i91zj0000tyasvtbnvkdj","content":"<p>awk是一个强大的文本分析工具，相对于grep的查找，sed的编辑，awk在其对数据分析并生成报告时，显得尤为强大。简单来说awk就是把文件逐行的读入，以空格为默认分隔符将每行切片，切开的部分再进行各种分析处理。<br>awk有3个不同版本: awk、nawk和gawk，未作特别说明，一般指gawk，gawk是AWK的GNU版本。</p>\n<h4 id=\"命令格式\"><a href=\"#命令格式\" class=\"headerlink\" title=\"命令格式\"></a>命令格式</h4><blockquote>\n<p>awk ‘{pattern + action}’ {filenames}</p>\n</blockquote>\n<p>其中pattern表示AWK在数据中查找的内容，而action是在找到匹配内容时所执行的一系列命令。花括号({})不需要在程序中始终出现，但它们用于根据特定的模式对一系列指令进行分组。pattern就是要表示的正则表达式，用斜杠括起来。</p>\n<h4 id=\"调用方式\"><a href=\"#调用方式\" class=\"headerlink\" title=\"调用方式\"></a>调用方式</h4><p>awk的调用方式通常分为以下三种：</p>\n<h5 id=\"命令行方式\"><a href=\"#命令行方式\" class=\"headerlink\" title=\"命令行方式\"></a>命令行方式</h5><blockquote>\n<p>awk [-F  field-separator]  ‘commands’  input-file(s)</p>\n</blockquote>\n<p>其中，commands 是真正awk命令，[-F域分隔符]是可选的。 input-file(s) 是待处理的文件。<br>在awk中，文件的每一行中，由域分隔符分开的每一项称为一个域。通常，在不指名-F域分隔符的情况下，默认的域分隔符是空格。</p>\n<h5 id=\"shell脚本方式\"><a href=\"#shell脚本方式\" class=\"headerlink\" title=\"shell脚本方式\"></a>shell脚本方式</h5><p>将所有的awk命令插入一个文件，并使awk程序可执行，然后awk命令解释器作为脚本的首行，一遍通过键入脚本名称来调用。</p>\n<blockquote>\n<p>相当于shell脚本首行的：#!/bin/sh<br>  可以换成：#!/bin/awk</p>\n</blockquote>\n<h5 id=\"将所有的awk命令插入一个单独文件，然后调用\"><a href=\"#将所有的awk命令插入一个单独文件，然后调用\" class=\"headerlink\" title=\"将所有的awk命令插入一个单独文件，然后调用\"></a>将所有的awk命令插入一个单独文件，然后调用</h5><blockquote>\n<p>awk -f awk-script-file input-file(s)</p>\n</blockquote>\n<p>其中，-f选项加载awk-script-file中的awk脚本，input-file(s)跟上面的是一样的。</p>\n<h4 id=\"入门实例\"><a href=\"#入门实例\" class=\"headerlink\" title=\"入门实例\"></a>入门实例</h4><ol>\n<li><p>显示最近登录的5个账号名</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">last -n 5 | awk &apos;&#123;print $1&#125;&apos;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>awk工作流程是这样的：读入有’\\n’换行符分割的一条记录，然后将记录按指定的域分隔符划分域，填充域，$0则表示所有域,$1表示第一个域,$n表示第n个域。默认域分隔符是”空白键” 或 “[tab]键”,所以$1表示登录用户，$3表示登录用户ip,以此类推。</p>\n</blockquote>\n</li>\n<li><p>只显示/etc/passwd的账户名</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat /etc/passwd | awk -F&apos;:&apos; &apos;&#123;print $1&#125;&apos;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>这种是awk+action的示例，每行都会执行<code>action{print $1}</code>。<br> -F指定域分隔符为<code>:</code>。</p>\n</blockquote>\n</li>\n<li><p>只显示/etc/passwd的账户和账户对应的shell,并且账户与shell之间以tab键分割</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat /etc/passwd | awk -F&apos;:&apos; &apos;&#123;print $1&quot;\\t&quot;$7&#125;&apos;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>只显示/etc/passwd的账户和账户对应的shell,账户与shell之间以逗号分割,并且在所有行前添加列名name,shell,在最后一行添加”blue,/bin/nosh”。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat /etc/passwd | awk -F&apos;:&apos; &apos;BEGIN&#123;print &quot;name,shell&quot;&#125; &#123;print $1&quot;,&quot;$7&#125; END&#123;print &quot;blue,/bin/nosh&quot;&#125;&apos;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>awk工作流程是这样的：先执行BEGIN，然后读取文件，读入有/n换行符分割的一条记录，然后将记录按指定的域分隔符划分域，填充域，$0则表示所有域,$1表示第一个域,$n表示第n个域,随后开始执行模式所对应的动作action。接着开始读入第二条记录······直到所有的记录都读完，最后执行END操作。</p>\n</blockquote>\n</li>\n<li><p>搜索/etc/passwd有root关键字的所有行</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat /etc/passwd | awk -F&apos;:&apos; &apos;/root/&apos;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>这种是pattern的使用示例，匹配了pattern(这里是root)的行才会执行action(没有指定action，默认输出每行的内容)。<br> 搜索支持正则，例如找root开头的: <code>awk -F: &#39;/^root/&#39; /etc/passwd</code></p>\n</blockquote>\n</li>\n<li><p>获取/etc/passwd有root关键字的所有行，并显示对应的shell</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat /etc/passwd | awk -F: &apos;/root/&#123;print $7&#125;&apos;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h4 id=\"awk内置变量\"><a href=\"#awk内置变量\" class=\"headerlink\" title=\"awk内置变量\"></a>awk内置变量</h4><p>awk有许多内置变量用来设置环境信息，这些变量可以被改变，下面给出了最常用的一些变量。</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">变量名</th>\n<th style=\"text-align:left\">说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">ARGC</td>\n<td style=\"text-align:left\">命令行参数个数</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ARGV</td>\n<td style=\"text-align:left\">命令行参数排列</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ENVIRON</td>\n<td style=\"text-align:left\">支持队列中系统环境变量的使用</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">FILENAME</td>\n<td style=\"text-align:left\">awk浏览的文件名</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">FNR</td>\n<td style=\"text-align:left\">浏览文件的记录数</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">FS</td>\n<td style=\"text-align:left\">设置输入域分隔符，等价于命令行 -F选项</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">NF</td>\n<td style=\"text-align:left\">浏览记录的域的个数</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">NR</td>\n<td style=\"text-align:left\">已读的记录数</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">OFS</td>\n<td style=\"text-align:left\">输出域分隔符</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ORS</td>\n<td style=\"text-align:left\">输出记录分隔符</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">RS</td>\n<td style=\"text-align:left\">控制记录分隔符</td>\n</tr>\n</tbody>\n</table>\n<h5 id=\"练习\"><a href=\"#练习\" class=\"headerlink\" title=\"练习\"></a>练习</h5><ol>\n<li><p>统计/etc/passwd:文件名，每行的行号，每行的列数，对应的完整行内容</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">awk -F&apos;:&apos; &apos;&#123;print &quot;filename: &quot; FILENAME &quot;, linenumber: &quot; NR &quot;, columns: &quot; NF &quot;, linecontent: &quot; $0&#125;&apos; /etc/passwd</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h4 id=\"print和printf\"><a href=\"#print和printf\" class=\"headerlink\" title=\"print和printf\"></a>print和printf</h4><p>awk中同时提供了print和printf两种打印输出的函数。<br>其中print函数的参数可以是变量、数值或者字符串。字符串必须用双引号引用，参数用逗号分隔。如果没有逗号，参数就串联在一起而无法区分。这里，逗号的作用与输出文件的分隔符的作用是一样的，只是后者是空格而已。<br>printf函数，其用法和c语言中printf基本相似,可以格式化字符串,输出复杂时，printf更加好用，代码更易懂。</p>\n<blockquote>\n<p>可以将上面的例子1改写为以下形式：</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  awk -F&apos;:&apos; &apos;&#123;printf(&quot;filename: %10s, linenumber: %s, columns: %s, linecon</span><br><span class=\"line\">tent: %s\\n&quot;, FILENAME, NR, NF, $0)&#125;&apos; /etc/passwd</span><br></pre></td></tr></table></figure>\n<h4 id=\"awk编程\"><a href=\"#awk编程\" class=\"headerlink\" title=\"awk编程\"></a>awk编程</h4><h5 id=\"变量和赋值\"><a href=\"#变量和赋值\" class=\"headerlink\" title=\"变量和赋值\"></a>变量和赋值</h5><p>除了awk的内置变量，awk还可以自定义变量。</p>\n<ol>\n<li><p>统计/etc/passwd的账户人数</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">awk &apos;BEGIN&#123;count=0&#125; &#123;count++&#125; END&#123;print &quot;the number of users is &quot;,count&#125;&apos; /etc/passwd</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>统计某个文件夹下的文件占用的字节数</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ls -l | awk &apos;BEGIN&#123;size=0&#125; &#123;size+=$5;&#125; END&#123;print &quot;[end]size is &quot;,size&#125;&apos;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h5 id=\"条件语句\"><a href=\"#条件语句\" class=\"headerlink\" title=\"条件语句\"></a>条件语句</h5><p>awk中的条件语句是从C语言中借鉴来的，声明方式如下：</p>\n<blockquote>\n<p>if (expression) {<br>    statement;<br>    statement;<br>    … …<br>  }</p>\n</blockquote>\n<p>或</p>\n<blockquote>\n<p>if (expression) {<br>    statement;<br>  } else {<br>    statement2;<br>  }</p>\n</blockquote>\n<p>或</p>\n<blockquote>\n<p>if (expression) {<br>    statement1;<br>  } else if (expression1) {<br>    statement2;<br>  } else {<br>    statement3;<br>  }</p>\n</blockquote>\n<ol>\n<li><p>统计某个文件夹下的文件占用的字节数,过滤4096大小的文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ls -l | awk &apos;BEGIN&#123;size=0&#125; &#123;if($5==4096)&#123;size+=$5&#125;&#125; END&#123;print &quot;the size of file is &quot;,size&#125;&apos;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h5 id=\"循环语句\"><a href=\"#循环语句\" class=\"headerlink\" title=\"循环语句\"></a>循环语句</h5><p>awk中的循环语句同样借鉴于C语言，支持while、do/while、for、break、continue，这些关键字的语义和C语言中的语义完全相同。</p>\n<h5 id=\"数组\"><a href=\"#数组\" class=\"headerlink\" title=\"数组\"></a>数组</h5><p>因为awk中数组的下标可以是数字和字母，数组的下标通常被称为关键字(key)。值和关键字都存储在内部的一张针对key/value应用hash的表格里。由于hash不是顺序存储，因此在显示数组内容时会发现，它们并不是按照你预料的顺序显示出来的。数组和变量一样，都是在使用时自动创建的，awk也同样会自动判断其存储的是数字还是字符串。一般而言，awk中的数组用来从记录中收集信息，可以用于计算总和、统计单词以及跟踪模板被匹配的次数等等。</p>\n<ol>\n<li><p>显示/etc/passwd的账户</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">awk -F&apos;:&apos; &apos;BEGIN&#123;count=0;&#125; &#123;name[count]=$1;count++&#125; END&#123;for(i=0;i&lt;NR;i++)&#123;print i, name[i]&#125;&#125;&apos; /etc/passwd</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h4 id=\"练习-1\"><a href=\"#练习-1\" class=\"headerlink\" title=\"练习\"></a>练习</h4><ol>\n<li><p>取出/etc/passwd中的账户名以a或b开头的行并排序</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">awk &apos;$1~/^(a|b)/&#123;print $0&#125;&apos; /etc/passwd | sort</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>这里需要注意<code>~</code>是进行对<code>$1</code>的模糊匹配的意思。</p>\n</blockquote>\n</li>\n<li><p>取出常用服务及其端口号</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat /etc/services | awk -F&apos;[ /]+&apos; &apos;$1~/^(ssh|ftp|https)/&#123;print $1,$2&#125;&apos;| uniq</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>获取文件中空行的数量</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">awk &apos;BEGIN&#123;count=0&#125; &#123;if($0==&quot;&quot;)&#123;count++&#125;&#125; END&#123;print count&#125;&apos; filename</span><br><span class=\"line\">或</span><br><span class=\"line\">awk &apos;BEGIN&#123;count=0&#125; /^$/&#123;count++&#125; END&#123;print count&#125;&apos; filename</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>从链接中获取域名</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">awk -F&apos;/&apos; &apos;&#123;array[$3]++&#125;END&#123;for(key in array)&#123;print key,array[key]&#125;&#125;&apos; filename</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<p>awk是一个强大的文本分析工具，相对于grep的查找，sed的编辑，awk在其对数据分析并生成报告时，显得尤为强大。简单来说awk就是把文件逐行的读入，以空格为默认分隔符将每行切片，切开的部分再进行各种分析处理。<br>awk有3个不同版本: awk、nawk和gawk，未作特别说明，一般指gawk，gawk是AWK的GNU版本。</p>\n<h4 id=\"命令格式\"><a href=\"#命令格式\" class=\"headerlink\" title=\"命令格式\"></a>命令格式</h4><blockquote>\n<p>awk ‘{pattern + action}’ {filenames}</p>\n</blockquote>\n<p>其中pattern表示AWK在数据中查找的内容，而action是在找到匹配内容时所执行的一系列命令。花括号({})不需要在程序中始终出现，但它们用于根据特定的模式对一系列指令进行分组。pattern就是要表示的正则表达式，用斜杠括起来。</p>\n<h4 id=\"调用方式\"><a href=\"#调用方式\" class=\"headerlink\" title=\"调用方式\"></a>调用方式</h4><p>awk的调用方式通常分为以下三种：</p>\n<h5 id=\"命令行方式\"><a href=\"#命令行方式\" class=\"headerlink\" title=\"命令行方式\"></a>命令行方式</h5><blockquote>\n<p>awk [-F  field-separator]  ‘commands’  input-file(s)</p>\n</blockquote>\n<p>其中，commands 是真正awk命令，[-F域分隔符]是可选的。 input-file(s) 是待处理的文件。<br>在awk中，文件的每一行中，由域分隔符分开的每一项称为一个域。通常，在不指名-F域分隔符的情况下，默认的域分隔符是空格。</p>\n<h5 id=\"shell脚本方式\"><a href=\"#shell脚本方式\" class=\"headerlink\" title=\"shell脚本方式\"></a>shell脚本方式</h5><p>将所有的awk命令插入一个文件，并使awk程序可执行，然后awk命令解释器作为脚本的首行，一遍通过键入脚本名称来调用。</p>\n<blockquote>\n<p>相当于shell脚本首行的：#!/bin/sh<br>  可以换成：#!/bin/awk</p>\n</blockquote>\n<h5 id=\"将所有的awk命令插入一个单独文件，然后调用\"><a href=\"#将所有的awk命令插入一个单独文件，然后调用\" class=\"headerlink\" title=\"将所有的awk命令插入一个单独文件，然后调用\"></a>将所有的awk命令插入一个单独文件，然后调用</h5><blockquote>\n<p>awk -f awk-script-file input-file(s)</p>\n</blockquote>\n<p>其中，-f选项加载awk-script-file中的awk脚本，input-file(s)跟上面的是一样的。</p>\n<h4 id=\"入门实例\"><a href=\"#入门实例\" class=\"headerlink\" title=\"入门实例\"></a>入门实例</h4><ol>\n<li><p>显示最近登录的5个账号名</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">last -n 5 | awk &apos;&#123;print $1&#125;&apos;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>awk工作流程是这样的：读入有’\\n’换行符分割的一条记录，然后将记录按指定的域分隔符划分域，填充域，$0则表示所有域,$1表示第一个域,$n表示第n个域。默认域分隔符是”空白键” 或 “[tab]键”,所以$1表示登录用户，$3表示登录用户ip,以此类推。</p>\n</blockquote>\n</li>\n<li><p>只显示/etc/passwd的账户名</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat /etc/passwd | awk -F&apos;:&apos; &apos;&#123;print $1&#125;&apos;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>这种是awk+action的示例，每行都会执行<code>action{print $1}</code>。<br> -F指定域分隔符为<code>:</code>。</p>\n</blockquote>\n</li>\n<li><p>只显示/etc/passwd的账户和账户对应的shell,并且账户与shell之间以tab键分割</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat /etc/passwd | awk -F&apos;:&apos; &apos;&#123;print $1&quot;\\t&quot;$7&#125;&apos;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>只显示/etc/passwd的账户和账户对应的shell,账户与shell之间以逗号分割,并且在所有行前添加列名name,shell,在最后一行添加”blue,/bin/nosh”。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat /etc/passwd | awk -F&apos;:&apos; &apos;BEGIN&#123;print &quot;name,shell&quot;&#125; &#123;print $1&quot;,&quot;$7&#125; END&#123;print &quot;blue,/bin/nosh&quot;&#125;&apos;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>awk工作流程是这样的：先执行BEGIN，然后读取文件，读入有/n换行符分割的一条记录，然后将记录按指定的域分隔符划分域，填充域，$0则表示所有域,$1表示第一个域,$n表示第n个域,随后开始执行模式所对应的动作action。接着开始读入第二条记录······直到所有的记录都读完，最后执行END操作。</p>\n</blockquote>\n</li>\n<li><p>搜索/etc/passwd有root关键字的所有行</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat /etc/passwd | awk -F&apos;:&apos; &apos;/root/&apos;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>这种是pattern的使用示例，匹配了pattern(这里是root)的行才会执行action(没有指定action，默认输出每行的内容)。<br> 搜索支持正则，例如找root开头的: <code>awk -F: &#39;/^root/&#39; /etc/passwd</code></p>\n</blockquote>\n</li>\n<li><p>获取/etc/passwd有root关键字的所有行，并显示对应的shell</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat /etc/passwd | awk -F: &apos;/root/&#123;print $7&#125;&apos;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h4 id=\"awk内置变量\"><a href=\"#awk内置变量\" class=\"headerlink\" title=\"awk内置变量\"></a>awk内置变量</h4><p>awk有许多内置变量用来设置环境信息，这些变量可以被改变，下面给出了最常用的一些变量。</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">变量名</th>\n<th style=\"text-align:left\">说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">ARGC</td>\n<td style=\"text-align:left\">命令行参数个数</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ARGV</td>\n<td style=\"text-align:left\">命令行参数排列</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ENVIRON</td>\n<td style=\"text-align:left\">支持队列中系统环境变量的使用</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">FILENAME</td>\n<td style=\"text-align:left\">awk浏览的文件名</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">FNR</td>\n<td style=\"text-align:left\">浏览文件的记录数</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">FS</td>\n<td style=\"text-align:left\">设置输入域分隔符，等价于命令行 -F选项</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">NF</td>\n<td style=\"text-align:left\">浏览记录的域的个数</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">NR</td>\n<td style=\"text-align:left\">已读的记录数</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">OFS</td>\n<td style=\"text-align:left\">输出域分隔符</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ORS</td>\n<td style=\"text-align:left\">输出记录分隔符</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">RS</td>\n<td style=\"text-align:left\">控制记录分隔符</td>\n</tr>\n</tbody>\n</table>\n<h5 id=\"练习\"><a href=\"#练习\" class=\"headerlink\" title=\"练习\"></a>练习</h5><ol>\n<li><p>统计/etc/passwd:文件名，每行的行号，每行的列数，对应的完整行内容</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">awk -F&apos;:&apos; &apos;&#123;print &quot;filename: &quot; FILENAME &quot;, linenumber: &quot; NR &quot;, columns: &quot; NF &quot;, linecontent: &quot; $0&#125;&apos; /etc/passwd</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h4 id=\"print和printf\"><a href=\"#print和printf\" class=\"headerlink\" title=\"print和printf\"></a>print和printf</h4><p>awk中同时提供了print和printf两种打印输出的函数。<br>其中print函数的参数可以是变量、数值或者字符串。字符串必须用双引号引用，参数用逗号分隔。如果没有逗号，参数就串联在一起而无法区分。这里，逗号的作用与输出文件的分隔符的作用是一样的，只是后者是空格而已。<br>printf函数，其用法和c语言中printf基本相似,可以格式化字符串,输出复杂时，printf更加好用，代码更易懂。</p>\n<blockquote>\n<p>可以将上面的例子1改写为以下形式：</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  awk -F&apos;:&apos; &apos;&#123;printf(&quot;filename: %10s, linenumber: %s, columns: %s, linecon</span><br><span class=\"line\">tent: %s\\n&quot;, FILENAME, NR, NF, $0)&#125;&apos; /etc/passwd</span><br></pre></td></tr></table></figure>\n<h4 id=\"awk编程\"><a href=\"#awk编程\" class=\"headerlink\" title=\"awk编程\"></a>awk编程</h4><h5 id=\"变量和赋值\"><a href=\"#变量和赋值\" class=\"headerlink\" title=\"变量和赋值\"></a>变量和赋值</h5><p>除了awk的内置变量，awk还可以自定义变量。</p>\n<ol>\n<li><p>统计/etc/passwd的账户人数</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">awk &apos;BEGIN&#123;count=0&#125; &#123;count++&#125; END&#123;print &quot;the number of users is &quot;,count&#125;&apos; /etc/passwd</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>统计某个文件夹下的文件占用的字节数</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ls -l | awk &apos;BEGIN&#123;size=0&#125; &#123;size+=$5;&#125; END&#123;print &quot;[end]size is &quot;,size&#125;&apos;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h5 id=\"条件语句\"><a href=\"#条件语句\" class=\"headerlink\" title=\"条件语句\"></a>条件语句</h5><p>awk中的条件语句是从C语言中借鉴来的，声明方式如下：</p>\n<blockquote>\n<p>if (expression) {<br>    statement;<br>    statement;<br>    … …<br>  }</p>\n</blockquote>\n<p>或</p>\n<blockquote>\n<p>if (expression) {<br>    statement;<br>  } else {<br>    statement2;<br>  }</p>\n</blockquote>\n<p>或</p>\n<blockquote>\n<p>if (expression) {<br>    statement1;<br>  } else if (expression1) {<br>    statement2;<br>  } else {<br>    statement3;<br>  }</p>\n</blockquote>\n<ol>\n<li><p>统计某个文件夹下的文件占用的字节数,过滤4096大小的文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ls -l | awk &apos;BEGIN&#123;size=0&#125; &#123;if($5==4096)&#123;size+=$5&#125;&#125; END&#123;print &quot;the size of file is &quot;,size&#125;&apos;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h5 id=\"循环语句\"><a href=\"#循环语句\" class=\"headerlink\" title=\"循环语句\"></a>循环语句</h5><p>awk中的循环语句同样借鉴于C语言，支持while、do/while、for、break、continue，这些关键字的语义和C语言中的语义完全相同。</p>\n<h5 id=\"数组\"><a href=\"#数组\" class=\"headerlink\" title=\"数组\"></a>数组</h5><p>因为awk中数组的下标可以是数字和字母，数组的下标通常被称为关键字(key)。值和关键字都存储在内部的一张针对key/value应用hash的表格里。由于hash不是顺序存储，因此在显示数组内容时会发现，它们并不是按照你预料的顺序显示出来的。数组和变量一样，都是在使用时自动创建的，awk也同样会自动判断其存储的是数字还是字符串。一般而言，awk中的数组用来从记录中收集信息，可以用于计算总和、统计单词以及跟踪模板被匹配的次数等等。</p>\n<ol>\n<li><p>显示/etc/passwd的账户</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">awk -F&apos;:&apos; &apos;BEGIN&#123;count=0;&#125; &#123;name[count]=$1;count++&#125; END&#123;for(i=0;i&lt;NR;i++)&#123;print i, name[i]&#125;&#125;&apos; /etc/passwd</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h4 id=\"练习-1\"><a href=\"#练习-1\" class=\"headerlink\" title=\"练习\"></a>练习</h4><ol>\n<li><p>取出/etc/passwd中的账户名以a或b开头的行并排序</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">awk &apos;$1~/^(a|b)/&#123;print $0&#125;&apos; /etc/passwd | sort</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>这里需要注意<code>~</code>是进行对<code>$1</code>的模糊匹配的意思。</p>\n</blockquote>\n</li>\n<li><p>取出常用服务及其端口号</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat /etc/services | awk -F&apos;[ /]+&apos; &apos;$1~/^(ssh|ftp|https)/&#123;print $1,$2&#125;&apos;| uniq</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>获取文件中空行的数量</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">awk &apos;BEGIN&#123;count=0&#125; &#123;if($0==&quot;&quot;)&#123;count++&#125;&#125; END&#123;print count&#125;&apos; filename</span><br><span class=\"line\">或</span><br><span class=\"line\">awk &apos;BEGIN&#123;count=0&#125; /^$/&#123;count++&#125; END&#123;print count&#125;&apos; filename</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>从链接中获取域名</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">awk -F&apos;/&apos; &apos;&#123;array[$3]++&#125;END&#123;for(key in array)&#123;print key,array[key]&#125;&#125;&apos; filename</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n"},{"title":"Linux常用命令","date":"2018-02-01T12:17:26.000Z","modified":null,"_content":"\n### 系统信息\n\n#### 显示机器的处理器架构\n> arch\n  uname -m\n\n#### 显示正在使用的内核版本\n> uname -r\n\n#### 显示CPU的信息\n> cat /proc/cpuinfo\n\n#### 显示内存使用\n> cat /proc/meminfo\n\n#### 显示内核的版本\n> cat /proc/version\n\n#### 显示系统日期\n> date\n\n#### 同步时间\n> ntpdate time.ntp.org \n\n### 关机\n#### 关闭系统\n> shutdown -h now\n  init 0\n\n#### 重启\n> shutdown -r now\n  reboot\n\n#### 注销\n> logout\n\n### 文件和目录\n#### cd\n> /home 进入/home目录\n  .. 返回上一级目录\n  \\- 返回上次所在的目录\n\n#### pwd\n显示工作路径\n\n#### ls\n> -F 查看目录中的文件 \n  -l 显示文件和目录的详细资料\n  -a 显示隐藏文件\n\n#### mkdir\n创建目录\n> -Z：设置安全上下文，当使用SELinux时有效；\n  -m<目标属性>或--mode<目标属性>建立目录的同时设置目录的权限；\n  -p或--parents 若所要建立目录的上层目录目前尚未建立，则会一并建立上层目录；\n  --version 显示版本信息。 \n\n#### rm\n> rm -f file1 删除一个叫做 'file1' 的文件' \n  rm dir dir1 删除一个叫做 'dir1' 的目录' \n  rm -rf dir1 删除一个叫做 'dir1' 的目录并同时删除其内容 \n  rm -rf dir1 dir2 同时删除两个目录及它们的内容\n\n#### mv\n> mv dir1 new_dir 重命名/移动 一个目录 \n\n#### cp\n> cp file1 file2 复制一个文件 \n  cp dir/* . 复制一个目录下的所有文件到当前工作目录 \n  cp -a /tmp/dir1 . 复制一个目录到当前工作目录 \n  cp -a dir1 dir2 复制一个目录\n\n#### ln\n\n### 文件搜索\n#### find\n> find / -name file1 从 '/' 开始进入根文件系统搜索文件和目录 \n  find / -user user1 搜索属于用户 'user1' 的文件和目录 \n  find /home/user1 -name \\*.bin 在目录 '/ home/user1' 中搜索带有'.bin' 结尾的文件 \n  find /usr/bin -type f -atime +100 搜索在过去100天内未被使用过的执行文件 \n  find /usr/bin -type f -mtime -10 搜索在10天内被创建或者修改过的文件 \n  find / -name \\*.rpm -exec chmod 755 '{}' \\; 搜索以 '.rpm' 结尾的文件并定义其权限 \n  find / -xdev -name \\*.rpm 搜索以 '.rpm' 结尾的文件，忽略光驱、捷盘等可移动设备\n\n#### locate\n> locate \\*.ps 寻找以 '.ps' 结尾的文件 - 先运行 'updatedb' 命令 \n\n#### whereis\n> whereis halt 显示一个二进制文件、源码或man的位置\n\n#### which\n> which halt 显示一个二进制文件或可执行文件的完整路径\n\n### 挂载文件系统\n#### mount\n\n#### unmount\n\n\n### 磁盘空间\n#### df\n> -a或--all：包含全部的文件系统；\n  --block-size=<区块大小>：以指定的区块大小来显示区块数目；\n  -h或--human-readable：以可读性较高的方式来显示信息；\n  -H或--si：与-h参数相同，但在计算时是以1000 Bytes为换算单位而非1024 Bytes；\n  -i或--inodes：显示inode的信息；\n  -k或--kilobytes：指定区块大小为1024字节；\n  -l或--local：仅显示本地端的文件系统；\n  -m或--megabytes：指定区块大小为1048576字节；\n  --no-sync：在取得磁盘使用信息前，不要执行sync指令，此为预设值；\n  -P或--portability：使用POSIX的输出格式；\n  --sync：在取得磁盘使用信息前，先执行sync指令；\n  -t<文件系统类型>或--type=<文件系统类型>：仅显示指定文件系统类型的磁盘信息；\n  -T或--print-type：显示文件系统的类型；\n  -x<文件系统类型>或--exclude-type=<文件系统类型>：不要显示指定文件系统类型的磁盘信息；\n  --help：显示帮助；\n  --version：显示版本信息。\n\n#### du\n> -a或-all 显示目录中个别文件的大小。\n  -b或-bytes 显示目录或文件大小时，以byte为单位。\n  -c或--total 除了显示个别目录或文件的大小外，同时也显示所有目录或文件的总和。\n  -k或--kilobytes 以KB(1024bytes)为单位输出。\n  -m或--megabytes 以MB为单位输出。\n  -s或--summarize 仅显示总计，只列出最后加总的值。\n  -h或--human-readable 以K，M，G为单位，提高信息的可读性。\n  -x或--one-file-xystem 以一开始处理时的文件系统为准，若遇上其它不同的文件系统目录则略过。\n  -L<符号链接>或--dereference<符号链接> 显示选项中所指定符号链接的源文件大小。\n  -S或--separate-dirs 显示个别目录的大小时，并不含其子目录的大小。\n  -X<文件>或--exclude-from=<文件> 在<文件>指定目录或文件。\n  --exclude=<目录或文件> 略过指定的目录或文件。\n  -D或--dereference-args 显示指定符号链接的源文件大小。\n  -H或--si 与-h参数相同，但是K，M，G是以1000为换算单位。\n  -l或--count-links 重复计算硬件链接的文件。\n\n### 用户和组\n#### useradd\n创建的新的系统用户。使用useradd指令所建立的帐号，实际上是保存在`/etc/passwd`文本文件中。\n> -c<备注>：加上备注文字。备注文字会保存在passwd的备注栏位中；\n  -d<登入目录>：指定用户登入时的启始目录；\n  -D：变更预设值；\n  -e<有效期限>：指定帐号的有效期限；\n  -f<缓冲天数>：指定在密码过期后多少天即关闭该帐号；\n  -g<群组>：指定用户所属的群组；\n  -G<群组>：指定用户所属的附加群组；\n  -m：自动建立用户的登入目录；\n  -M：不要自动建立用户的登入目录；\n  -n：取消建立以用户名称为名的群组；\n  -r：建立系统帐号；\n  -s<shell>：指定用户登入后所使用的shell；\n  -u<uid>：指定用户id。\n  \n#### userdel\n删除给定的用户，以及与用户相关的文件。若不加选项，则仅删除用户帐号，而不删除相关文件。\n> -f：强制删除用户，即使用户当前已登录；\n  -r：删除用户的同时，删除与用户相关的所有文件。\n\n#### passwd\n设置用户的认证信息，包括用户密码、密码过期时间等。\n系统管理者则能用它管理系统用户的密码。只有管理者可以指定用户名称，一般用户只能变更自己的密码。\n> -d：删除密码，仅有系统管理者才能使用；\n  -f：强制执行；\n  -k：设置只有在密码过期失效后，方能更新；\n  -l：锁住密码；\n  -s：列出密码的相关信息，仅有系统管理者才能使用；\n  -u：解开已上锁的帐号。\n\n#### groupadd\n创建一个新的工作组，新工作组的信息将被添加到系统文件中。\n> -g：指定新建工作组的id；\n  -r：创建系统工作组，系统工作组的组ID小于500；\n  -K：覆盖配置文件“/ect/login.defs”；\n  -o：允许添加组ID号不唯一的工作组。\n\n#### groupdel\n删除指定的工作组，本命令要修改的系统文件包括/ect/group和/ect/gshadow。若该群组中仍包括某些用户，则必须先删除这些用户后，方能删除群组。\n\n### 文件权限\n#### chmod\n用来变更文件或目录的权限。在UNIX系统家族里，文件或目录权限的控制分别以读取、写入、执行3种一般权限来区分，另有3种特殊权限可供运用。用户可以使用chmod指令去变更文件与目录的权限，设置方式采用文字或数字代号皆可。符号连接的权限无法变更，如果用户对符号连接修改权限，其改变会作用在被连接的原始文件。\n\n权限范围表示法如下：\n`u` User，即文件或目录的拥有者；\n`g` Group，即文件或目录的所属群组；\n`o` Other，除了文件或目录拥有者或所属群组之外，其他用户皆属于这个范围；\n`a` All，即全部的用户，包含拥有者，所属群组以及其他用户；\n`r` 读取权限，数字代号为“4”;\n`w` 写入权限，数字代号为“2”；\n`x` 执行或切换权限，数字代号为“1”；\n`-` 不具任何权限，数字代号为“0”；\n`s` 特殊功能说明：变更文件或目录的权限。\n\n> -c或——changes：效果类似“-v”参数，但仅回报更改的部分；\n  -f或--quiet或——silent：不显示错误信息；\n  -R或——recursive：递归处理，将指令目录下的所有文件及子目录一并处理；\n  -v或——verbose：显示指令执行过程；\n  --reference=<参考文件或目录>：把指定文件或目录的所属群组全部设成和参考文件或目录的所属群组相同；\n  <权限范围>+<权限设置>：开启权限范围的文件或目录的该选项权限设置；\n  <权限范围>-<权限设置>：关闭权限范围的文件或目录的该选项权限设置；\n  <权限范围>=<权限设置>：指定权限范围的文件或目录的该选项权限设置；\n\n#### chown\n\n#### chgrp\n\n\n### 打包和压缩\n#### gzip\n\n#### tar\n\n#### zip\n\n### yum软件包管理\n> yum install package_name 下载并安装一个rpm包 \n  yum localinstall package_name.rpm 将安装一个rpm包，使用你自己的软件仓库为你解决所有依赖关系 \n  yum update package_name.rpm 更新当前系统中所有安装的rpm包 \n  yum update package_name 更新一个rpm包 \n  yum remove package_name 删除一个rpm包 \n  yum list 列出当前系统中安装的所有包 \n  yum search package_name 在rpm仓库中搜寻软件包 \n  yum clean packages 清理rpm缓存删除下载的包 \n  yum clean headers 删除所有头文件 \n  yum clean all 删除所有缓存的包和头文件 \n","source":"_posts/Linux-commands.md","raw":"---\ntitle: Linux常用命令\ndate: 2018-02-01 20:17:26\nmodified:\ncategories:\n- Linux\ntags:\n- Linux\n---\n\n### 系统信息\n\n#### 显示机器的处理器架构\n> arch\n  uname -m\n\n#### 显示正在使用的内核版本\n> uname -r\n\n#### 显示CPU的信息\n> cat /proc/cpuinfo\n\n#### 显示内存使用\n> cat /proc/meminfo\n\n#### 显示内核的版本\n> cat /proc/version\n\n#### 显示系统日期\n> date\n\n#### 同步时间\n> ntpdate time.ntp.org \n\n### 关机\n#### 关闭系统\n> shutdown -h now\n  init 0\n\n#### 重启\n> shutdown -r now\n  reboot\n\n#### 注销\n> logout\n\n### 文件和目录\n#### cd\n> /home 进入/home目录\n  .. 返回上一级目录\n  \\- 返回上次所在的目录\n\n#### pwd\n显示工作路径\n\n#### ls\n> -F 查看目录中的文件 \n  -l 显示文件和目录的详细资料\n  -a 显示隐藏文件\n\n#### mkdir\n创建目录\n> -Z：设置安全上下文，当使用SELinux时有效；\n  -m<目标属性>或--mode<目标属性>建立目录的同时设置目录的权限；\n  -p或--parents 若所要建立目录的上层目录目前尚未建立，则会一并建立上层目录；\n  --version 显示版本信息。 \n\n#### rm\n> rm -f file1 删除一个叫做 'file1' 的文件' \n  rm dir dir1 删除一个叫做 'dir1' 的目录' \n  rm -rf dir1 删除一个叫做 'dir1' 的目录并同时删除其内容 \n  rm -rf dir1 dir2 同时删除两个目录及它们的内容\n\n#### mv\n> mv dir1 new_dir 重命名/移动 一个目录 \n\n#### cp\n> cp file1 file2 复制一个文件 \n  cp dir/* . 复制一个目录下的所有文件到当前工作目录 \n  cp -a /tmp/dir1 . 复制一个目录到当前工作目录 \n  cp -a dir1 dir2 复制一个目录\n\n#### ln\n\n### 文件搜索\n#### find\n> find / -name file1 从 '/' 开始进入根文件系统搜索文件和目录 \n  find / -user user1 搜索属于用户 'user1' 的文件和目录 \n  find /home/user1 -name \\*.bin 在目录 '/ home/user1' 中搜索带有'.bin' 结尾的文件 \n  find /usr/bin -type f -atime +100 搜索在过去100天内未被使用过的执行文件 \n  find /usr/bin -type f -mtime -10 搜索在10天内被创建或者修改过的文件 \n  find / -name \\*.rpm -exec chmod 755 '{}' \\; 搜索以 '.rpm' 结尾的文件并定义其权限 \n  find / -xdev -name \\*.rpm 搜索以 '.rpm' 结尾的文件，忽略光驱、捷盘等可移动设备\n\n#### locate\n> locate \\*.ps 寻找以 '.ps' 结尾的文件 - 先运行 'updatedb' 命令 \n\n#### whereis\n> whereis halt 显示一个二进制文件、源码或man的位置\n\n#### which\n> which halt 显示一个二进制文件或可执行文件的完整路径\n\n### 挂载文件系统\n#### mount\n\n#### unmount\n\n\n### 磁盘空间\n#### df\n> -a或--all：包含全部的文件系统；\n  --block-size=<区块大小>：以指定的区块大小来显示区块数目；\n  -h或--human-readable：以可读性较高的方式来显示信息；\n  -H或--si：与-h参数相同，但在计算时是以1000 Bytes为换算单位而非1024 Bytes；\n  -i或--inodes：显示inode的信息；\n  -k或--kilobytes：指定区块大小为1024字节；\n  -l或--local：仅显示本地端的文件系统；\n  -m或--megabytes：指定区块大小为1048576字节；\n  --no-sync：在取得磁盘使用信息前，不要执行sync指令，此为预设值；\n  -P或--portability：使用POSIX的输出格式；\n  --sync：在取得磁盘使用信息前，先执行sync指令；\n  -t<文件系统类型>或--type=<文件系统类型>：仅显示指定文件系统类型的磁盘信息；\n  -T或--print-type：显示文件系统的类型；\n  -x<文件系统类型>或--exclude-type=<文件系统类型>：不要显示指定文件系统类型的磁盘信息；\n  --help：显示帮助；\n  --version：显示版本信息。\n\n#### du\n> -a或-all 显示目录中个别文件的大小。\n  -b或-bytes 显示目录或文件大小时，以byte为单位。\n  -c或--total 除了显示个别目录或文件的大小外，同时也显示所有目录或文件的总和。\n  -k或--kilobytes 以KB(1024bytes)为单位输出。\n  -m或--megabytes 以MB为单位输出。\n  -s或--summarize 仅显示总计，只列出最后加总的值。\n  -h或--human-readable 以K，M，G为单位，提高信息的可读性。\n  -x或--one-file-xystem 以一开始处理时的文件系统为准，若遇上其它不同的文件系统目录则略过。\n  -L<符号链接>或--dereference<符号链接> 显示选项中所指定符号链接的源文件大小。\n  -S或--separate-dirs 显示个别目录的大小时，并不含其子目录的大小。\n  -X<文件>或--exclude-from=<文件> 在<文件>指定目录或文件。\n  --exclude=<目录或文件> 略过指定的目录或文件。\n  -D或--dereference-args 显示指定符号链接的源文件大小。\n  -H或--si 与-h参数相同，但是K，M，G是以1000为换算单位。\n  -l或--count-links 重复计算硬件链接的文件。\n\n### 用户和组\n#### useradd\n创建的新的系统用户。使用useradd指令所建立的帐号，实际上是保存在`/etc/passwd`文本文件中。\n> -c<备注>：加上备注文字。备注文字会保存在passwd的备注栏位中；\n  -d<登入目录>：指定用户登入时的启始目录；\n  -D：变更预设值；\n  -e<有效期限>：指定帐号的有效期限；\n  -f<缓冲天数>：指定在密码过期后多少天即关闭该帐号；\n  -g<群组>：指定用户所属的群组；\n  -G<群组>：指定用户所属的附加群组；\n  -m：自动建立用户的登入目录；\n  -M：不要自动建立用户的登入目录；\n  -n：取消建立以用户名称为名的群组；\n  -r：建立系统帐号；\n  -s<shell>：指定用户登入后所使用的shell；\n  -u<uid>：指定用户id。\n  \n#### userdel\n删除给定的用户，以及与用户相关的文件。若不加选项，则仅删除用户帐号，而不删除相关文件。\n> -f：强制删除用户，即使用户当前已登录；\n  -r：删除用户的同时，删除与用户相关的所有文件。\n\n#### passwd\n设置用户的认证信息，包括用户密码、密码过期时间等。\n系统管理者则能用它管理系统用户的密码。只有管理者可以指定用户名称，一般用户只能变更自己的密码。\n> -d：删除密码，仅有系统管理者才能使用；\n  -f：强制执行；\n  -k：设置只有在密码过期失效后，方能更新；\n  -l：锁住密码；\n  -s：列出密码的相关信息，仅有系统管理者才能使用；\n  -u：解开已上锁的帐号。\n\n#### groupadd\n创建一个新的工作组，新工作组的信息将被添加到系统文件中。\n> -g：指定新建工作组的id；\n  -r：创建系统工作组，系统工作组的组ID小于500；\n  -K：覆盖配置文件“/ect/login.defs”；\n  -o：允许添加组ID号不唯一的工作组。\n\n#### groupdel\n删除指定的工作组，本命令要修改的系统文件包括/ect/group和/ect/gshadow。若该群组中仍包括某些用户，则必须先删除这些用户后，方能删除群组。\n\n### 文件权限\n#### chmod\n用来变更文件或目录的权限。在UNIX系统家族里，文件或目录权限的控制分别以读取、写入、执行3种一般权限来区分，另有3种特殊权限可供运用。用户可以使用chmod指令去变更文件与目录的权限，设置方式采用文字或数字代号皆可。符号连接的权限无法变更，如果用户对符号连接修改权限，其改变会作用在被连接的原始文件。\n\n权限范围表示法如下：\n`u` User，即文件或目录的拥有者；\n`g` Group，即文件或目录的所属群组；\n`o` Other，除了文件或目录拥有者或所属群组之外，其他用户皆属于这个范围；\n`a` All，即全部的用户，包含拥有者，所属群组以及其他用户；\n`r` 读取权限，数字代号为“4”;\n`w` 写入权限，数字代号为“2”；\n`x` 执行或切换权限，数字代号为“1”；\n`-` 不具任何权限，数字代号为“0”；\n`s` 特殊功能说明：变更文件或目录的权限。\n\n> -c或——changes：效果类似“-v”参数，但仅回报更改的部分；\n  -f或--quiet或——silent：不显示错误信息；\n  -R或——recursive：递归处理，将指令目录下的所有文件及子目录一并处理；\n  -v或——verbose：显示指令执行过程；\n  --reference=<参考文件或目录>：把指定文件或目录的所属群组全部设成和参考文件或目录的所属群组相同；\n  <权限范围>+<权限设置>：开启权限范围的文件或目录的该选项权限设置；\n  <权限范围>-<权限设置>：关闭权限范围的文件或目录的该选项权限设置；\n  <权限范围>=<权限设置>：指定权限范围的文件或目录的该选项权限设置；\n\n#### chown\n\n#### chgrp\n\n\n### 打包和压缩\n#### gzip\n\n#### tar\n\n#### zip\n\n### yum软件包管理\n> yum install package_name 下载并安装一个rpm包 \n  yum localinstall package_name.rpm 将安装一个rpm包，使用你自己的软件仓库为你解决所有依赖关系 \n  yum update package_name.rpm 更新当前系统中所有安装的rpm包 \n  yum update package_name 更新一个rpm包 \n  yum remove package_name 删除一个rpm包 \n  yum list 列出当前系统中安装的所有包 \n  yum search package_name 在rpm仓库中搜寻软件包 \n  yum clean packages 清理rpm缓存删除下载的包 \n  yum clean headers 删除所有头文件 \n  yum clean all 删除所有缓存的包和头文件 \n","slug":"Linux-commands","published":1,"updated":"2018-02-02T06:08:36.971Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjd8i91zz0001tyasb3o58eaw","content":"<h3 id=\"系统信息\"><a href=\"#系统信息\" class=\"headerlink\" title=\"系统信息\"></a>系统信息</h3><h4 id=\"显示机器的处理器架构\"><a href=\"#显示机器的处理器架构\" class=\"headerlink\" title=\"显示机器的处理器架构\"></a>显示机器的处理器架构</h4><blockquote>\n<p>arch<br>  uname -m</p>\n</blockquote>\n<h4 id=\"显示正在使用的内核版本\"><a href=\"#显示正在使用的内核版本\" class=\"headerlink\" title=\"显示正在使用的内核版本\"></a>显示正在使用的内核版本</h4><blockquote>\n<p>uname -r</p>\n</blockquote>\n<h4 id=\"显示CPU的信息\"><a href=\"#显示CPU的信息\" class=\"headerlink\" title=\"显示CPU的信息\"></a>显示CPU的信息</h4><blockquote>\n<p>cat /proc/cpuinfo</p>\n</blockquote>\n<h4 id=\"显示内存使用\"><a href=\"#显示内存使用\" class=\"headerlink\" title=\"显示内存使用\"></a>显示内存使用</h4><blockquote>\n<p>cat /proc/meminfo</p>\n</blockquote>\n<h4 id=\"显示内核的版本\"><a href=\"#显示内核的版本\" class=\"headerlink\" title=\"显示内核的版本\"></a>显示内核的版本</h4><blockquote>\n<p>cat /proc/version</p>\n</blockquote>\n<h4 id=\"显示系统日期\"><a href=\"#显示系统日期\" class=\"headerlink\" title=\"显示系统日期\"></a>显示系统日期</h4><blockquote>\n<p>date</p>\n</blockquote>\n<h4 id=\"同步时间\"><a href=\"#同步时间\" class=\"headerlink\" title=\"同步时间\"></a>同步时间</h4><blockquote>\n<p>ntpdate time.ntp.org </p>\n</blockquote>\n<h3 id=\"关机\"><a href=\"#关机\" class=\"headerlink\" title=\"关机\"></a>关机</h3><h4 id=\"关闭系统\"><a href=\"#关闭系统\" class=\"headerlink\" title=\"关闭系统\"></a>关闭系统</h4><blockquote>\n<p>shutdown -h now<br>  init 0</p>\n</blockquote>\n<h4 id=\"重启\"><a href=\"#重启\" class=\"headerlink\" title=\"重启\"></a>重启</h4><blockquote>\n<p>shutdown -r now<br>  reboot</p>\n</blockquote>\n<h4 id=\"注销\"><a href=\"#注销\" class=\"headerlink\" title=\"注销\"></a>注销</h4><blockquote>\n<p>logout</p>\n</blockquote>\n<h3 id=\"文件和目录\"><a href=\"#文件和目录\" class=\"headerlink\" title=\"文件和目录\"></a>文件和目录</h3><h4 id=\"cd\"><a href=\"#cd\" class=\"headerlink\" title=\"cd\"></a>cd</h4><blockquote>\n<p>/home 进入/home目录<br>  .. 返回上一级目录<br>  - 返回上次所在的目录</p>\n</blockquote>\n<h4 id=\"pwd\"><a href=\"#pwd\" class=\"headerlink\" title=\"pwd\"></a>pwd</h4><p>显示工作路径</p>\n<h4 id=\"ls\"><a href=\"#ls\" class=\"headerlink\" title=\"ls\"></a>ls</h4><blockquote>\n<p>-F 查看目录中的文件<br>  -l 显示文件和目录的详细资料<br>  -a 显示隐藏文件</p>\n</blockquote>\n<h4 id=\"mkdir\"><a href=\"#mkdir\" class=\"headerlink\" title=\"mkdir\"></a>mkdir</h4><p>创建目录</p>\n<blockquote>\n<p>-Z：设置安全上下文，当使用SELinux时有效；<br>  -m&lt;目标属性&gt;或–mode&lt;目标属性&gt;建立目录的同时设置目录的权限；<br>  -p或–parents 若所要建立目录的上层目录目前尚未建立，则会一并建立上层目录；<br>  –version 显示版本信息。 </p>\n</blockquote>\n<h4 id=\"rm\"><a href=\"#rm\" class=\"headerlink\" title=\"rm\"></a>rm</h4><blockquote>\n<p>rm -f file1 删除一个叫做 ‘file1’ 的文件’<br>  rm dir dir1 删除一个叫做 ‘dir1’ 的目录’<br>  rm -rf dir1 删除一个叫做 ‘dir1’ 的目录并同时删除其内容<br>  rm -rf dir1 dir2 同时删除两个目录及它们的内容</p>\n</blockquote>\n<h4 id=\"mv\"><a href=\"#mv\" class=\"headerlink\" title=\"mv\"></a>mv</h4><blockquote>\n<p>mv dir1 new_dir 重命名/移动 一个目录 </p>\n</blockquote>\n<h4 id=\"cp\"><a href=\"#cp\" class=\"headerlink\" title=\"cp\"></a>cp</h4><blockquote>\n<p>cp file1 file2 复制一个文件<br>  cp dir/* . 复制一个目录下的所有文件到当前工作目录<br>  cp -a /tmp/dir1 . 复制一个目录到当前工作目录<br>  cp -a dir1 dir2 复制一个目录</p>\n</blockquote>\n<h4 id=\"ln\"><a href=\"#ln\" class=\"headerlink\" title=\"ln\"></a>ln</h4><h3 id=\"文件搜索\"><a href=\"#文件搜索\" class=\"headerlink\" title=\"文件搜索\"></a>文件搜索</h3><h4 id=\"find\"><a href=\"#find\" class=\"headerlink\" title=\"find\"></a>find</h4><blockquote>\n<p>find / -name file1 从 ‘/‘ 开始进入根文件系统搜索文件和目录<br>  find / -user user1 搜索属于用户 ‘user1’ 的文件和目录<br>  find /home/user1 -name *.bin 在目录 ‘/ home/user1’ 中搜索带有’.bin’ 结尾的文件<br>  find /usr/bin -type f -atime +100 搜索在过去100天内未被使用过的执行文件<br>  find /usr/bin -type f -mtime -10 搜索在10天内被创建或者修改过的文件<br>  find / -name *.rpm -exec chmod 755 ‘{}’ \\; 搜索以 ‘.rpm’ 结尾的文件并定义其权限<br>  find / -xdev -name *.rpm 搜索以 ‘.rpm’ 结尾的文件，忽略光驱、捷盘等可移动设备</p>\n</blockquote>\n<h4 id=\"locate\"><a href=\"#locate\" class=\"headerlink\" title=\"locate\"></a>locate</h4><blockquote>\n<p>locate *.ps 寻找以 ‘.ps’ 结尾的文件 - 先运行 ‘updatedb’ 命令 </p>\n</blockquote>\n<h4 id=\"whereis\"><a href=\"#whereis\" class=\"headerlink\" title=\"whereis\"></a>whereis</h4><blockquote>\n<p>whereis halt 显示一个二进制文件、源码或man的位置</p>\n</blockquote>\n<h4 id=\"which\"><a href=\"#which\" class=\"headerlink\" title=\"which\"></a>which</h4><blockquote>\n<p>which halt 显示一个二进制文件或可执行文件的完整路径</p>\n</blockquote>\n<h3 id=\"挂载文件系统\"><a href=\"#挂载文件系统\" class=\"headerlink\" title=\"挂载文件系统\"></a>挂载文件系统</h3><h4 id=\"mount\"><a href=\"#mount\" class=\"headerlink\" title=\"mount\"></a>mount</h4><h4 id=\"unmount\"><a href=\"#unmount\" class=\"headerlink\" title=\"unmount\"></a>unmount</h4><h3 id=\"磁盘空间\"><a href=\"#磁盘空间\" class=\"headerlink\" title=\"磁盘空间\"></a>磁盘空间</h3><h4 id=\"df\"><a href=\"#df\" class=\"headerlink\" title=\"df\"></a>df</h4><blockquote>\n<p>-a或–all：包含全部的文件系统；<br>  –block-size=&lt;区块大小&gt;：以指定的区块大小来显示区块数目；<br>  -h或–human-readable：以可读性较高的方式来显示信息；<br>  -H或–si：与-h参数相同，但在计算时是以1000 Bytes为换算单位而非1024 Bytes；<br>  -i或–inodes：显示inode的信息；<br>  -k或–kilobytes：指定区块大小为1024字节；<br>  -l或–local：仅显示本地端的文件系统；<br>  -m或–megabytes：指定区块大小为1048576字节；<br>  –no-sync：在取得磁盘使用信息前，不要执行sync指令，此为预设值；<br>  -P或–portability：使用POSIX的输出格式；<br>  –sync：在取得磁盘使用信息前，先执行sync指令；<br>  -t&lt;文件系统类型&gt;或–type=&lt;文件系统类型&gt;：仅显示指定文件系统类型的磁盘信息；<br>  -T或–print-type：显示文件系统的类型；<br>  -x&lt;文件系统类型&gt;或–exclude-type=&lt;文件系统类型&gt;：不要显示指定文件系统类型的磁盘信息；<br>  –help：显示帮助；<br>  –version：显示版本信息。</p>\n</blockquote>\n<h4 id=\"du\"><a href=\"#du\" class=\"headerlink\" title=\"du\"></a>du</h4><blockquote>\n<p>-a或-all 显示目录中个别文件的大小。<br>  -b或-bytes 显示目录或文件大小时，以byte为单位。<br>  -c或–total 除了显示个别目录或文件的大小外，同时也显示所有目录或文件的总和。<br>  -k或–kilobytes 以KB(1024bytes)为单位输出。<br>  -m或–megabytes 以MB为单位输出。<br>  -s或–summarize 仅显示总计，只列出最后加总的值。<br>  -h或–human-readable 以K，M，G为单位，提高信息的可读性。<br>  -x或–one-file-xystem 以一开始处理时的文件系统为准，若遇上其它不同的文件系统目录则略过。<br>  -L&lt;符号链接&gt;或–dereference&lt;符号链接&gt; 显示选项中所指定符号链接的源文件大小。<br>  -S或–separate-dirs 显示个别目录的大小时，并不含其子目录的大小。<br>  -X&lt;文件&gt;或–exclude-from=&lt;文件&gt; 在&lt;文件&gt;指定目录或文件。<br>  –exclude=&lt;目录或文件&gt; 略过指定的目录或文件。<br>  -D或–dereference-args 显示指定符号链接的源文件大小。<br>  -H或–si 与-h参数相同，但是K，M，G是以1000为换算单位。<br>  -l或–count-links 重复计算硬件链接的文件。</p>\n</blockquote>\n<h3 id=\"用户和组\"><a href=\"#用户和组\" class=\"headerlink\" title=\"用户和组\"></a>用户和组</h3><h4 id=\"useradd\"><a href=\"#useradd\" class=\"headerlink\" title=\"useradd\"></a>useradd</h4><p>创建的新的系统用户。使用useradd指令所建立的帐号，实际上是保存在<code>/etc/passwd</code>文本文件中。</p>\n<blockquote>\n<p>-c&lt;备注&gt;：加上备注文字。备注文字会保存在passwd的备注栏位中；<br>  -d&lt;登入目录&gt;：指定用户登入时的启始目录；<br>  -D：变更预设值；<br>  -e&lt;有效期限&gt;：指定帐号的有效期限；<br>  -f&lt;缓冲天数&gt;：指定在密码过期后多少天即关闭该帐号；<br>  -g&lt;群组&gt;：指定用户所属的群组；<br>  -G&lt;群组&gt;：指定用户所属的附加群组；<br>  -m：自动建立用户的登入目录；<br>  -M：不要自动建立用户的登入目录；<br>  -n：取消建立以用户名称为名的群组；<br>  -r：建立系统帐号；<br>  -s<shell>：指定用户登入后所使用的shell；<br>  -u<uid>：指定用户id。</uid></shell></p>\n</blockquote>\n<h4 id=\"userdel\"><a href=\"#userdel\" class=\"headerlink\" title=\"userdel\"></a>userdel</h4><p>删除给定的用户，以及与用户相关的文件。若不加选项，则仅删除用户帐号，而不删除相关文件。</p>\n<blockquote>\n<p>-f：强制删除用户，即使用户当前已登录；<br>  -r：删除用户的同时，删除与用户相关的所有文件。</p>\n</blockquote>\n<h4 id=\"passwd\"><a href=\"#passwd\" class=\"headerlink\" title=\"passwd\"></a>passwd</h4><p>设置用户的认证信息，包括用户密码、密码过期时间等。<br>系统管理者则能用它管理系统用户的密码。只有管理者可以指定用户名称，一般用户只能变更自己的密码。</p>\n<blockquote>\n<p>-d：删除密码，仅有系统管理者才能使用；<br>  -f：强制执行；<br>  -k：设置只有在密码过期失效后，方能更新；<br>  -l：锁住密码；<br>  -s：列出密码的相关信息，仅有系统管理者才能使用；<br>  -u：解开已上锁的帐号。</p>\n</blockquote>\n<h4 id=\"groupadd\"><a href=\"#groupadd\" class=\"headerlink\" title=\"groupadd\"></a>groupadd</h4><p>创建一个新的工作组，新工作组的信息将被添加到系统文件中。</p>\n<blockquote>\n<p>-g：指定新建工作组的id；<br>  -r：创建系统工作组，系统工作组的组ID小于500；<br>  -K：覆盖配置文件“/ect/login.defs”；<br>  -o：允许添加组ID号不唯一的工作组。</p>\n</blockquote>\n<h4 id=\"groupdel\"><a href=\"#groupdel\" class=\"headerlink\" title=\"groupdel\"></a>groupdel</h4><p>删除指定的工作组，本命令要修改的系统文件包括/ect/group和/ect/gshadow。若该群组中仍包括某些用户，则必须先删除这些用户后，方能删除群组。</p>\n<h3 id=\"文件权限\"><a href=\"#文件权限\" class=\"headerlink\" title=\"文件权限\"></a>文件权限</h3><h4 id=\"chmod\"><a href=\"#chmod\" class=\"headerlink\" title=\"chmod\"></a>chmod</h4><p>用来变更文件或目录的权限。在UNIX系统家族里，文件或目录权限的控制分别以读取、写入、执行3种一般权限来区分，另有3种特殊权限可供运用。用户可以使用chmod指令去变更文件与目录的权限，设置方式采用文字或数字代号皆可。符号连接的权限无法变更，如果用户对符号连接修改权限，其改变会作用在被连接的原始文件。</p>\n<p>权限范围表示法如下：<br><code>u</code> User，即文件或目录的拥有者；<br><code>g</code> Group，即文件或目录的所属群组；<br><code>o</code> Other，除了文件或目录拥有者或所属群组之外，其他用户皆属于这个范围；<br><code>a</code> All，即全部的用户，包含拥有者，所属群组以及其他用户；<br><code>r</code> 读取权限，数字代号为“4”;<br><code>w</code> 写入权限，数字代号为“2”；<br><code>x</code> 执行或切换权限，数字代号为“1”；<br><code>-</code> 不具任何权限，数字代号为“0”；<br><code>s</code> 特殊功能说明：变更文件或目录的权限。</p>\n<blockquote>\n<p>-c或——changes：效果类似“-v”参数，但仅回报更改的部分；<br>  -f或–quiet或——silent：不显示错误信息；<br>  -R或——recursive：递归处理，将指令目录下的所有文件及子目录一并处理；<br>  -v或——verbose：显示指令执行过程；<br>  –reference=&lt;参考文件或目录&gt;：把指定文件或目录的所属群组全部设成和参考文件或目录的所属群组相同；<br>  &lt;权限范围&gt;+&lt;权限设置&gt;：开启权限范围的文件或目录的该选项权限设置；<br>  &lt;权限范围&gt;-&lt;权限设置&gt;：关闭权限范围的文件或目录的该选项权限设置；<br>  &lt;权限范围&gt;=&lt;权限设置&gt;：指定权限范围的文件或目录的该选项权限设置；</p>\n</blockquote>\n<h4 id=\"chown\"><a href=\"#chown\" class=\"headerlink\" title=\"chown\"></a>chown</h4><h4 id=\"chgrp\"><a href=\"#chgrp\" class=\"headerlink\" title=\"chgrp\"></a>chgrp</h4><h3 id=\"打包和压缩\"><a href=\"#打包和压缩\" class=\"headerlink\" title=\"打包和压缩\"></a>打包和压缩</h3><h4 id=\"gzip\"><a href=\"#gzip\" class=\"headerlink\" title=\"gzip\"></a>gzip</h4><h4 id=\"tar\"><a href=\"#tar\" class=\"headerlink\" title=\"tar\"></a>tar</h4><h4 id=\"zip\"><a href=\"#zip\" class=\"headerlink\" title=\"zip\"></a>zip</h4><h3 id=\"yum软件包管理\"><a href=\"#yum软件包管理\" class=\"headerlink\" title=\"yum软件包管理\"></a>yum软件包管理</h3><blockquote>\n<p>yum install package_name 下载并安装一个rpm包<br>  yum localinstall package_name.rpm 将安装一个rpm包，使用你自己的软件仓库为你解决所有依赖关系<br>  yum update package_name.rpm 更新当前系统中所有安装的rpm包<br>  yum update package_name 更新一个rpm包<br>  yum remove package_name 删除一个rpm包<br>  yum list 列出当前系统中安装的所有包<br>  yum search package_name 在rpm仓库中搜寻软件包<br>  yum clean packages 清理rpm缓存删除下载的包<br>  yum clean headers 删除所有头文件<br>  yum clean all 删除所有缓存的包和头文件 </p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"系统信息\"><a href=\"#系统信息\" class=\"headerlink\" title=\"系统信息\"></a>系统信息</h3><h4 id=\"显示机器的处理器架构\"><a href=\"#显示机器的处理器架构\" class=\"headerlink\" title=\"显示机器的处理器架构\"></a>显示机器的处理器架构</h4><blockquote>\n<p>arch<br>  uname -m</p>\n</blockquote>\n<h4 id=\"显示正在使用的内核版本\"><a href=\"#显示正在使用的内核版本\" class=\"headerlink\" title=\"显示正在使用的内核版本\"></a>显示正在使用的内核版本</h4><blockquote>\n<p>uname -r</p>\n</blockquote>\n<h4 id=\"显示CPU的信息\"><a href=\"#显示CPU的信息\" class=\"headerlink\" title=\"显示CPU的信息\"></a>显示CPU的信息</h4><blockquote>\n<p>cat /proc/cpuinfo</p>\n</blockquote>\n<h4 id=\"显示内存使用\"><a href=\"#显示内存使用\" class=\"headerlink\" title=\"显示内存使用\"></a>显示内存使用</h4><blockquote>\n<p>cat /proc/meminfo</p>\n</blockquote>\n<h4 id=\"显示内核的版本\"><a href=\"#显示内核的版本\" class=\"headerlink\" title=\"显示内核的版本\"></a>显示内核的版本</h4><blockquote>\n<p>cat /proc/version</p>\n</blockquote>\n<h4 id=\"显示系统日期\"><a href=\"#显示系统日期\" class=\"headerlink\" title=\"显示系统日期\"></a>显示系统日期</h4><blockquote>\n<p>date</p>\n</blockquote>\n<h4 id=\"同步时间\"><a href=\"#同步时间\" class=\"headerlink\" title=\"同步时间\"></a>同步时间</h4><blockquote>\n<p>ntpdate time.ntp.org </p>\n</blockquote>\n<h3 id=\"关机\"><a href=\"#关机\" class=\"headerlink\" title=\"关机\"></a>关机</h3><h4 id=\"关闭系统\"><a href=\"#关闭系统\" class=\"headerlink\" title=\"关闭系统\"></a>关闭系统</h4><blockquote>\n<p>shutdown -h now<br>  init 0</p>\n</blockquote>\n<h4 id=\"重启\"><a href=\"#重启\" class=\"headerlink\" title=\"重启\"></a>重启</h4><blockquote>\n<p>shutdown -r now<br>  reboot</p>\n</blockquote>\n<h4 id=\"注销\"><a href=\"#注销\" class=\"headerlink\" title=\"注销\"></a>注销</h4><blockquote>\n<p>logout</p>\n</blockquote>\n<h3 id=\"文件和目录\"><a href=\"#文件和目录\" class=\"headerlink\" title=\"文件和目录\"></a>文件和目录</h3><h4 id=\"cd\"><a href=\"#cd\" class=\"headerlink\" title=\"cd\"></a>cd</h4><blockquote>\n<p>/home 进入/home目录<br>  .. 返回上一级目录<br>  - 返回上次所在的目录</p>\n</blockquote>\n<h4 id=\"pwd\"><a href=\"#pwd\" class=\"headerlink\" title=\"pwd\"></a>pwd</h4><p>显示工作路径</p>\n<h4 id=\"ls\"><a href=\"#ls\" class=\"headerlink\" title=\"ls\"></a>ls</h4><blockquote>\n<p>-F 查看目录中的文件<br>  -l 显示文件和目录的详细资料<br>  -a 显示隐藏文件</p>\n</blockquote>\n<h4 id=\"mkdir\"><a href=\"#mkdir\" class=\"headerlink\" title=\"mkdir\"></a>mkdir</h4><p>创建目录</p>\n<blockquote>\n<p>-Z：设置安全上下文，当使用SELinux时有效；<br>  -m&lt;目标属性&gt;或–mode&lt;目标属性&gt;建立目录的同时设置目录的权限；<br>  -p或–parents 若所要建立目录的上层目录目前尚未建立，则会一并建立上层目录；<br>  –version 显示版本信息。 </p>\n</blockquote>\n<h4 id=\"rm\"><a href=\"#rm\" class=\"headerlink\" title=\"rm\"></a>rm</h4><blockquote>\n<p>rm -f file1 删除一个叫做 ‘file1’ 的文件’<br>  rm dir dir1 删除一个叫做 ‘dir1’ 的目录’<br>  rm -rf dir1 删除一个叫做 ‘dir1’ 的目录并同时删除其内容<br>  rm -rf dir1 dir2 同时删除两个目录及它们的内容</p>\n</blockquote>\n<h4 id=\"mv\"><a href=\"#mv\" class=\"headerlink\" title=\"mv\"></a>mv</h4><blockquote>\n<p>mv dir1 new_dir 重命名/移动 一个目录 </p>\n</blockquote>\n<h4 id=\"cp\"><a href=\"#cp\" class=\"headerlink\" title=\"cp\"></a>cp</h4><blockquote>\n<p>cp file1 file2 复制一个文件<br>  cp dir/* . 复制一个目录下的所有文件到当前工作目录<br>  cp -a /tmp/dir1 . 复制一个目录到当前工作目录<br>  cp -a dir1 dir2 复制一个目录</p>\n</blockquote>\n<h4 id=\"ln\"><a href=\"#ln\" class=\"headerlink\" title=\"ln\"></a>ln</h4><h3 id=\"文件搜索\"><a href=\"#文件搜索\" class=\"headerlink\" title=\"文件搜索\"></a>文件搜索</h3><h4 id=\"find\"><a href=\"#find\" class=\"headerlink\" title=\"find\"></a>find</h4><blockquote>\n<p>find / -name file1 从 ‘/‘ 开始进入根文件系统搜索文件和目录<br>  find / -user user1 搜索属于用户 ‘user1’ 的文件和目录<br>  find /home/user1 -name *.bin 在目录 ‘/ home/user1’ 中搜索带有’.bin’ 结尾的文件<br>  find /usr/bin -type f -atime +100 搜索在过去100天内未被使用过的执行文件<br>  find /usr/bin -type f -mtime -10 搜索在10天内被创建或者修改过的文件<br>  find / -name *.rpm -exec chmod 755 ‘{}’ \\; 搜索以 ‘.rpm’ 结尾的文件并定义其权限<br>  find / -xdev -name *.rpm 搜索以 ‘.rpm’ 结尾的文件，忽略光驱、捷盘等可移动设备</p>\n</blockquote>\n<h4 id=\"locate\"><a href=\"#locate\" class=\"headerlink\" title=\"locate\"></a>locate</h4><blockquote>\n<p>locate *.ps 寻找以 ‘.ps’ 结尾的文件 - 先运行 ‘updatedb’ 命令 </p>\n</blockquote>\n<h4 id=\"whereis\"><a href=\"#whereis\" class=\"headerlink\" title=\"whereis\"></a>whereis</h4><blockquote>\n<p>whereis halt 显示一个二进制文件、源码或man的位置</p>\n</blockquote>\n<h4 id=\"which\"><a href=\"#which\" class=\"headerlink\" title=\"which\"></a>which</h4><blockquote>\n<p>which halt 显示一个二进制文件或可执行文件的完整路径</p>\n</blockquote>\n<h3 id=\"挂载文件系统\"><a href=\"#挂载文件系统\" class=\"headerlink\" title=\"挂载文件系统\"></a>挂载文件系统</h3><h4 id=\"mount\"><a href=\"#mount\" class=\"headerlink\" title=\"mount\"></a>mount</h4><h4 id=\"unmount\"><a href=\"#unmount\" class=\"headerlink\" title=\"unmount\"></a>unmount</h4><h3 id=\"磁盘空间\"><a href=\"#磁盘空间\" class=\"headerlink\" title=\"磁盘空间\"></a>磁盘空间</h3><h4 id=\"df\"><a href=\"#df\" class=\"headerlink\" title=\"df\"></a>df</h4><blockquote>\n<p>-a或–all：包含全部的文件系统；<br>  –block-size=&lt;区块大小&gt;：以指定的区块大小来显示区块数目；<br>  -h或–human-readable：以可读性较高的方式来显示信息；<br>  -H或–si：与-h参数相同，但在计算时是以1000 Bytes为换算单位而非1024 Bytes；<br>  -i或–inodes：显示inode的信息；<br>  -k或–kilobytes：指定区块大小为1024字节；<br>  -l或–local：仅显示本地端的文件系统；<br>  -m或–megabytes：指定区块大小为1048576字节；<br>  –no-sync：在取得磁盘使用信息前，不要执行sync指令，此为预设值；<br>  -P或–portability：使用POSIX的输出格式；<br>  –sync：在取得磁盘使用信息前，先执行sync指令；<br>  -t&lt;文件系统类型&gt;或–type=&lt;文件系统类型&gt;：仅显示指定文件系统类型的磁盘信息；<br>  -T或–print-type：显示文件系统的类型；<br>  -x&lt;文件系统类型&gt;或–exclude-type=&lt;文件系统类型&gt;：不要显示指定文件系统类型的磁盘信息；<br>  –help：显示帮助；<br>  –version：显示版本信息。</p>\n</blockquote>\n<h4 id=\"du\"><a href=\"#du\" class=\"headerlink\" title=\"du\"></a>du</h4><blockquote>\n<p>-a或-all 显示目录中个别文件的大小。<br>  -b或-bytes 显示目录或文件大小时，以byte为单位。<br>  -c或–total 除了显示个别目录或文件的大小外，同时也显示所有目录或文件的总和。<br>  -k或–kilobytes 以KB(1024bytes)为单位输出。<br>  -m或–megabytes 以MB为单位输出。<br>  -s或–summarize 仅显示总计，只列出最后加总的值。<br>  -h或–human-readable 以K，M，G为单位，提高信息的可读性。<br>  -x或–one-file-xystem 以一开始处理时的文件系统为准，若遇上其它不同的文件系统目录则略过。<br>  -L&lt;符号链接&gt;或–dereference&lt;符号链接&gt; 显示选项中所指定符号链接的源文件大小。<br>  -S或–separate-dirs 显示个别目录的大小时，并不含其子目录的大小。<br>  -X&lt;文件&gt;或–exclude-from=&lt;文件&gt; 在&lt;文件&gt;指定目录或文件。<br>  –exclude=&lt;目录或文件&gt; 略过指定的目录或文件。<br>  -D或–dereference-args 显示指定符号链接的源文件大小。<br>  -H或–si 与-h参数相同，但是K，M，G是以1000为换算单位。<br>  -l或–count-links 重复计算硬件链接的文件。</p>\n</blockquote>\n<h3 id=\"用户和组\"><a href=\"#用户和组\" class=\"headerlink\" title=\"用户和组\"></a>用户和组</h3><h4 id=\"useradd\"><a href=\"#useradd\" class=\"headerlink\" title=\"useradd\"></a>useradd</h4><p>创建的新的系统用户。使用useradd指令所建立的帐号，实际上是保存在<code>/etc/passwd</code>文本文件中。</p>\n<blockquote>\n<p>-c&lt;备注&gt;：加上备注文字。备注文字会保存在passwd的备注栏位中；<br>  -d&lt;登入目录&gt;：指定用户登入时的启始目录；<br>  -D：变更预设值；<br>  -e&lt;有效期限&gt;：指定帐号的有效期限；<br>  -f&lt;缓冲天数&gt;：指定在密码过期后多少天即关闭该帐号；<br>  -g&lt;群组&gt;：指定用户所属的群组；<br>  -G&lt;群组&gt;：指定用户所属的附加群组；<br>  -m：自动建立用户的登入目录；<br>  -M：不要自动建立用户的登入目录；<br>  -n：取消建立以用户名称为名的群组；<br>  -r：建立系统帐号；<br>  -s<shell>：指定用户登入后所使用的shell；<br>  -u<uid>：指定用户id。</uid></shell></p>\n</blockquote>\n<h4 id=\"userdel\"><a href=\"#userdel\" class=\"headerlink\" title=\"userdel\"></a>userdel</h4><p>删除给定的用户，以及与用户相关的文件。若不加选项，则仅删除用户帐号，而不删除相关文件。</p>\n<blockquote>\n<p>-f：强制删除用户，即使用户当前已登录；<br>  -r：删除用户的同时，删除与用户相关的所有文件。</p>\n</blockquote>\n<h4 id=\"passwd\"><a href=\"#passwd\" class=\"headerlink\" title=\"passwd\"></a>passwd</h4><p>设置用户的认证信息，包括用户密码、密码过期时间等。<br>系统管理者则能用它管理系统用户的密码。只有管理者可以指定用户名称，一般用户只能变更自己的密码。</p>\n<blockquote>\n<p>-d：删除密码，仅有系统管理者才能使用；<br>  -f：强制执行；<br>  -k：设置只有在密码过期失效后，方能更新；<br>  -l：锁住密码；<br>  -s：列出密码的相关信息，仅有系统管理者才能使用；<br>  -u：解开已上锁的帐号。</p>\n</blockquote>\n<h4 id=\"groupadd\"><a href=\"#groupadd\" class=\"headerlink\" title=\"groupadd\"></a>groupadd</h4><p>创建一个新的工作组，新工作组的信息将被添加到系统文件中。</p>\n<blockquote>\n<p>-g：指定新建工作组的id；<br>  -r：创建系统工作组，系统工作组的组ID小于500；<br>  -K：覆盖配置文件“/ect/login.defs”；<br>  -o：允许添加组ID号不唯一的工作组。</p>\n</blockquote>\n<h4 id=\"groupdel\"><a href=\"#groupdel\" class=\"headerlink\" title=\"groupdel\"></a>groupdel</h4><p>删除指定的工作组，本命令要修改的系统文件包括/ect/group和/ect/gshadow。若该群组中仍包括某些用户，则必须先删除这些用户后，方能删除群组。</p>\n<h3 id=\"文件权限\"><a href=\"#文件权限\" class=\"headerlink\" title=\"文件权限\"></a>文件权限</h3><h4 id=\"chmod\"><a href=\"#chmod\" class=\"headerlink\" title=\"chmod\"></a>chmod</h4><p>用来变更文件或目录的权限。在UNIX系统家族里，文件或目录权限的控制分别以读取、写入、执行3种一般权限来区分，另有3种特殊权限可供运用。用户可以使用chmod指令去变更文件与目录的权限，设置方式采用文字或数字代号皆可。符号连接的权限无法变更，如果用户对符号连接修改权限，其改变会作用在被连接的原始文件。</p>\n<p>权限范围表示法如下：<br><code>u</code> User，即文件或目录的拥有者；<br><code>g</code> Group，即文件或目录的所属群组；<br><code>o</code> Other，除了文件或目录拥有者或所属群组之外，其他用户皆属于这个范围；<br><code>a</code> All，即全部的用户，包含拥有者，所属群组以及其他用户；<br><code>r</code> 读取权限，数字代号为“4”;<br><code>w</code> 写入权限，数字代号为“2”；<br><code>x</code> 执行或切换权限，数字代号为“1”；<br><code>-</code> 不具任何权限，数字代号为“0”；<br><code>s</code> 特殊功能说明：变更文件或目录的权限。</p>\n<blockquote>\n<p>-c或——changes：效果类似“-v”参数，但仅回报更改的部分；<br>  -f或–quiet或——silent：不显示错误信息；<br>  -R或——recursive：递归处理，将指令目录下的所有文件及子目录一并处理；<br>  -v或——verbose：显示指令执行过程；<br>  –reference=&lt;参考文件或目录&gt;：把指定文件或目录的所属群组全部设成和参考文件或目录的所属群组相同；<br>  &lt;权限范围&gt;+&lt;权限设置&gt;：开启权限范围的文件或目录的该选项权限设置；<br>  &lt;权限范围&gt;-&lt;权限设置&gt;：关闭权限范围的文件或目录的该选项权限设置；<br>  &lt;权限范围&gt;=&lt;权限设置&gt;：指定权限范围的文件或目录的该选项权限设置；</p>\n</blockquote>\n<h4 id=\"chown\"><a href=\"#chown\" class=\"headerlink\" title=\"chown\"></a>chown</h4><h4 id=\"chgrp\"><a href=\"#chgrp\" class=\"headerlink\" title=\"chgrp\"></a>chgrp</h4><h3 id=\"打包和压缩\"><a href=\"#打包和压缩\" class=\"headerlink\" title=\"打包和压缩\"></a>打包和压缩</h3><h4 id=\"gzip\"><a href=\"#gzip\" class=\"headerlink\" title=\"gzip\"></a>gzip</h4><h4 id=\"tar\"><a href=\"#tar\" class=\"headerlink\" title=\"tar\"></a>tar</h4><h4 id=\"zip\"><a href=\"#zip\" class=\"headerlink\" title=\"zip\"></a>zip</h4><h3 id=\"yum软件包管理\"><a href=\"#yum软件包管理\" class=\"headerlink\" title=\"yum软件包管理\"></a>yum软件包管理</h3><blockquote>\n<p>yum install package_name 下载并安装一个rpm包<br>  yum localinstall package_name.rpm 将安装一个rpm包，使用你自己的软件仓库为你解决所有依赖关系<br>  yum update package_name.rpm 更新当前系统中所有安装的rpm包<br>  yum update package_name 更新一个rpm包<br>  yum remove package_name 删除一个rpm包<br>  yum list 列出当前系统中安装的所有包<br>  yum search package_name 在rpm仓库中搜寻软件包<br>  yum clean packages 清理rpm缓存删除下载的包<br>  yum clean headers 删除所有头文件<br>  yum clean all 删除所有缓存的包和头文件 </p>\n</blockquote>\n"},{"title":"Linux之grep详解","date":"2018-02-03T09:41:42.000Z","modified":null,"_content":"\ngrep（global search regular expression(RE) and print out the line）是一种强大的文本搜索工具，它能使用正则表达式搜索文本，并把匹配的行打印出来。\n\n#### 选项\n\n> -a 不要忽略二进制数据。\n  -A<显示列数> 除了显示符合范本样式的那一行之外，并显示该行之后的内容。\n  -b 在显示符合范本样式的那一行之外，并显示该行之前的内容。\n  -c 计算符合范本样式的列数。\n  -C<显示列数>或-<显示列数>  除了显示符合范本样式的那一列之外，并显示该列之前后的内容。\n  -d<进行动作> 当指定要查找的是目录而非文件时，必须使用这项参数，否则grep命令将回报信息并停止动作。\n  -e<范本样式> 指定字符串作为查找文件内容的范本样式。\n  -E 将范本样式为延伸的普通表示法来使用，意味着使用能使用扩展正则表达式。\n  -f<范本文件> 指定范本文件，其内容有一个或多个范本样式，让grep查找符合范本条件的文件内容，格式为每一列的范本样式。\n  -F 将范本样式视为固定字符串的列表。\n  -G 将范本样式视为普通的表示法来使用。\n  -h 在显示符合范本样式的那一列之前，不标示该列所属的文件名称。\n  -H 在显示符合范本样式的那一列之前，标示该列的文件名称。\n  -i 忽略字符大小写的差别。\n  -l 列出文件内容符合指定的范本样式的文件名称。\n  -L 列出文件内容不符合指定的范本样式的文件名称。\n  -n 在显示符合范本样式的那一列之前，标示出该列的编号。\n  -q 不显示任何信息。\n  -R/-r 此参数的效果和指定“-d recurse”参数相同。\n  -s 不显示错误信息。\n  -v 反转查找。\n  -w 只显示全字符合的列。\n  -x 只显示全列符合的列。\n  -y 此参数效果跟“-i”相同。\n  -o 只输出文件中匹配到的部分。\n\n#### 常见用法\n\n在文件中搜索一个单词，命令会返回一个包含“match_pattern”的文本行：\n\n> grep match_pattern file_name\n  grep \"match_pattern\" file_name\n\n在多个文件中查找：\n\n> grep \"match_pattern\" file_1 file_2 file_3 ...\n\n输出除之外的所有行 -v 选项：\n\n> grep -v \"match_pattern\" file_name\n\n使用正则表达式 -E 选项：\n\n> grep -E \"[1-9]+\"\n  或\n  egrep \"[1-9]+\"\n\n只输出文件中匹配到的部分 -o 选项：\n\n> echo this is a test line. | grep -o -E \"[a-z]+\\.\"\n  line.\n  echo this is a test line. | egrep -o \"[a-z]+\\.\"\n  line.\n\n统计文件或者文本中包含匹配字符串的行数 -c 选项：\n\n> grep -c \"text\" file_name\n\n输出包含匹配字符串的行数 -n 选项：\n\n> grep \"text\" -n file_name\n  或\n  cat file_name | grep \"text\" -n\n  #多个文件\n  grep \"text\" -n file_1 file_2\n\n搜索多个文件并查找匹配文本在哪些文件中：\n\n> grep -l \"text\" file1 file2 file3...\n\n\n#### 练习\n\n1. 获取root用户的shell程序\n\n  ```\n  cat /etc/passwd|grep ^root.*\"/root:\" | cut -d : -f 7\n  ```\n\n2. 显示CentOS7的/etc/grub2.cfg文件中，至少以一个空白 字符开头的且后面存非空白字符的行\n \n  ```\n  cat /etc/grub2.cfg | egrep \"^[[:space:]] [^[:space:]]\"\n  ```\n\n3. 找出`netstat -tan`命令的结果中以`LISTEN`后跟任意多个空白字符结尾的行\n\n  ```\n  netstat -tan | grep \".*LISTEN.*$\"\n  ```\n","source":"_posts/Linux-grep.md","raw":"---\ntitle: Linux之grep详解\ndate: 2018-02-03 17:41:42\nmodified:\ncategories:\n- Linux\ntags:\n- Linux\n- grep\n---\n\ngrep（global search regular expression(RE) and print out the line）是一种强大的文本搜索工具，它能使用正则表达式搜索文本，并把匹配的行打印出来。\n\n#### 选项\n\n> -a 不要忽略二进制数据。\n  -A<显示列数> 除了显示符合范本样式的那一行之外，并显示该行之后的内容。\n  -b 在显示符合范本样式的那一行之外，并显示该行之前的内容。\n  -c 计算符合范本样式的列数。\n  -C<显示列数>或-<显示列数>  除了显示符合范本样式的那一列之外，并显示该列之前后的内容。\n  -d<进行动作> 当指定要查找的是目录而非文件时，必须使用这项参数，否则grep命令将回报信息并停止动作。\n  -e<范本样式> 指定字符串作为查找文件内容的范本样式。\n  -E 将范本样式为延伸的普通表示法来使用，意味着使用能使用扩展正则表达式。\n  -f<范本文件> 指定范本文件，其内容有一个或多个范本样式，让grep查找符合范本条件的文件内容，格式为每一列的范本样式。\n  -F 将范本样式视为固定字符串的列表。\n  -G 将范本样式视为普通的表示法来使用。\n  -h 在显示符合范本样式的那一列之前，不标示该列所属的文件名称。\n  -H 在显示符合范本样式的那一列之前，标示该列的文件名称。\n  -i 忽略字符大小写的差别。\n  -l 列出文件内容符合指定的范本样式的文件名称。\n  -L 列出文件内容不符合指定的范本样式的文件名称。\n  -n 在显示符合范本样式的那一列之前，标示出该列的编号。\n  -q 不显示任何信息。\n  -R/-r 此参数的效果和指定“-d recurse”参数相同。\n  -s 不显示错误信息。\n  -v 反转查找。\n  -w 只显示全字符合的列。\n  -x 只显示全列符合的列。\n  -y 此参数效果跟“-i”相同。\n  -o 只输出文件中匹配到的部分。\n\n#### 常见用法\n\n在文件中搜索一个单词，命令会返回一个包含“match_pattern”的文本行：\n\n> grep match_pattern file_name\n  grep \"match_pattern\" file_name\n\n在多个文件中查找：\n\n> grep \"match_pattern\" file_1 file_2 file_3 ...\n\n输出除之外的所有行 -v 选项：\n\n> grep -v \"match_pattern\" file_name\n\n使用正则表达式 -E 选项：\n\n> grep -E \"[1-9]+\"\n  或\n  egrep \"[1-9]+\"\n\n只输出文件中匹配到的部分 -o 选项：\n\n> echo this is a test line. | grep -o -E \"[a-z]+\\.\"\n  line.\n  echo this is a test line. | egrep -o \"[a-z]+\\.\"\n  line.\n\n统计文件或者文本中包含匹配字符串的行数 -c 选项：\n\n> grep -c \"text\" file_name\n\n输出包含匹配字符串的行数 -n 选项：\n\n> grep \"text\" -n file_name\n  或\n  cat file_name | grep \"text\" -n\n  #多个文件\n  grep \"text\" -n file_1 file_2\n\n搜索多个文件并查找匹配文本在哪些文件中：\n\n> grep -l \"text\" file1 file2 file3...\n\n\n#### 练习\n\n1. 获取root用户的shell程序\n\n  ```\n  cat /etc/passwd|grep ^root.*\"/root:\" | cut -d : -f 7\n  ```\n\n2. 显示CentOS7的/etc/grub2.cfg文件中，至少以一个空白 字符开头的且后面存非空白字符的行\n \n  ```\n  cat /etc/grub2.cfg | egrep \"^[[:space:]] [^[:space:]]\"\n  ```\n\n3. 找出`netstat -tan`命令的结果中以`LISTEN`后跟任意多个空白字符结尾的行\n\n  ```\n  netstat -tan | grep \".*LISTEN.*$\"\n  ```\n","slug":"Linux-grep","published":1,"updated":"2018-02-04T03:56:35.636Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjd8i920g0004tyasxqmemz3f","content":"<p>grep（global search regular expression(RE) and print out the line）是一种强大的文本搜索工具，它能使用正则表达式搜索文本，并把匹配的行打印出来。</p>\n<h4 id=\"选项\"><a href=\"#选项\" class=\"headerlink\" title=\"选项\"></a>选项</h4><blockquote>\n<p>-a 不要忽略二进制数据。<br>  -A&lt;显示列数&gt; 除了显示符合范本样式的那一行之外，并显示该行之后的内容。<br>  -b 在显示符合范本样式的那一行之外，并显示该行之前的内容。<br>  -c 计算符合范本样式的列数。<br>  -C&lt;显示列数&gt;或-&lt;显示列数&gt;  除了显示符合范本样式的那一列之外，并显示该列之前后的内容。<br>  -d&lt;进行动作&gt; 当指定要查找的是目录而非文件时，必须使用这项参数，否则grep命令将回报信息并停止动作。<br>  -e&lt;范本样式&gt; 指定字符串作为查找文件内容的范本样式。<br>  -E 将范本样式为延伸的普通表示法来使用，意味着使用能使用扩展正则表达式。<br>  -f&lt;范本文件&gt; 指定范本文件，其内容有一个或多个范本样式，让grep查找符合范本条件的文件内容，格式为每一列的范本样式。<br>  -F 将范本样式视为固定字符串的列表。<br>  -G 将范本样式视为普通的表示法来使用。<br>  -h 在显示符合范本样式的那一列之前，不标示该列所属的文件名称。<br>  -H 在显示符合范本样式的那一列之前，标示该列的文件名称。<br>  -i 忽略字符大小写的差别。<br>  -l 列出文件内容符合指定的范本样式的文件名称。<br>  -L 列出文件内容不符合指定的范本样式的文件名称。<br>  -n 在显示符合范本样式的那一列之前，标示出该列的编号。<br>  -q 不显示任何信息。<br>  -R/-r 此参数的效果和指定“-d recurse”参数相同。<br>  -s 不显示错误信息。<br>  -v 反转查找。<br>  -w 只显示全字符合的列。<br>  -x 只显示全列符合的列。<br>  -y 此参数效果跟“-i”相同。<br>  -o 只输出文件中匹配到的部分。</p>\n</blockquote>\n<h4 id=\"常见用法\"><a href=\"#常见用法\" class=\"headerlink\" title=\"常见用法\"></a>常见用法</h4><p>在文件中搜索一个单词，命令会返回一个包含“match_pattern”的文本行：</p>\n<blockquote>\n<p>grep match_pattern file_name<br>  grep “match_pattern” file_name</p>\n</blockquote>\n<p>在多个文件中查找：</p>\n<blockquote>\n<p>grep “match_pattern” file_1 file_2 file_3 …</p>\n</blockquote>\n<p>输出除之外的所有行 -v 选项：</p>\n<blockquote>\n<p>grep -v “match_pattern” file_name</p>\n</blockquote>\n<p>使用正则表达式 -E 选项：</p>\n<blockquote>\n<p>grep -E “[1-9]+”<br>  或<br>  egrep “[1-9]+”</p>\n</blockquote>\n<p>只输出文件中匹配到的部分 -o 选项：</p>\n<blockquote>\n<p>echo this is a test line. | grep -o -E “[a-z]+.“<br>  line.<br>  echo this is a test line. | egrep -o “[a-z]+.“<br>  line.</p>\n</blockquote>\n<p>统计文件或者文本中包含匹配字符串的行数 -c 选项：</p>\n<blockquote>\n<p>grep -c “text” file_name</p>\n</blockquote>\n<p>输出包含匹配字符串的行数 -n 选项：</p>\n<blockquote>\n<p>grep “text” -n file_name<br>  或<br>  cat file_name | grep “text” -n</p>\n<p>  #多个文件<br>  grep “text” -n file_1 file_2</p>\n</blockquote>\n<p>搜索多个文件并查找匹配文本在哪些文件中：</p>\n<blockquote>\n<p>grep -l “text” file1 file2 file3…</p>\n</blockquote>\n<h4 id=\"练习\"><a href=\"#练习\" class=\"headerlink\" title=\"练习\"></a>练习</h4><ol>\n<li><p>获取root用户的shell程序</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat /etc/passwd|grep ^root.*&quot;/root:&quot; | cut -d : -f 7</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>显示CentOS7的/etc/grub2.cfg文件中，至少以一个空白 字符开头的且后面存非空白字符的行</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat /etc/grub2.cfg | egrep &quot;^[[:space:]] [^[:space:]]&quot;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>找出<code>netstat -tan</code>命令的结果中以<code>LISTEN</code>后跟任意多个空白字符结尾的行</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">netstat -tan | grep &quot;.*LISTEN.*$&quot;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<p>grep（global search regular expression(RE) and print out the line）是一种强大的文本搜索工具，它能使用正则表达式搜索文本，并把匹配的行打印出来。</p>\n<h4 id=\"选项\"><a href=\"#选项\" class=\"headerlink\" title=\"选项\"></a>选项</h4><blockquote>\n<p>-a 不要忽略二进制数据。<br>  -A&lt;显示列数&gt; 除了显示符合范本样式的那一行之外，并显示该行之后的内容。<br>  -b 在显示符合范本样式的那一行之外，并显示该行之前的内容。<br>  -c 计算符合范本样式的列数。<br>  -C&lt;显示列数&gt;或-&lt;显示列数&gt;  除了显示符合范本样式的那一列之外，并显示该列之前后的内容。<br>  -d&lt;进行动作&gt; 当指定要查找的是目录而非文件时，必须使用这项参数，否则grep命令将回报信息并停止动作。<br>  -e&lt;范本样式&gt; 指定字符串作为查找文件内容的范本样式。<br>  -E 将范本样式为延伸的普通表示法来使用，意味着使用能使用扩展正则表达式。<br>  -f&lt;范本文件&gt; 指定范本文件，其内容有一个或多个范本样式，让grep查找符合范本条件的文件内容，格式为每一列的范本样式。<br>  -F 将范本样式视为固定字符串的列表。<br>  -G 将范本样式视为普通的表示法来使用。<br>  -h 在显示符合范本样式的那一列之前，不标示该列所属的文件名称。<br>  -H 在显示符合范本样式的那一列之前，标示该列的文件名称。<br>  -i 忽略字符大小写的差别。<br>  -l 列出文件内容符合指定的范本样式的文件名称。<br>  -L 列出文件内容不符合指定的范本样式的文件名称。<br>  -n 在显示符合范本样式的那一列之前，标示出该列的编号。<br>  -q 不显示任何信息。<br>  -R/-r 此参数的效果和指定“-d recurse”参数相同。<br>  -s 不显示错误信息。<br>  -v 反转查找。<br>  -w 只显示全字符合的列。<br>  -x 只显示全列符合的列。<br>  -y 此参数效果跟“-i”相同。<br>  -o 只输出文件中匹配到的部分。</p>\n</blockquote>\n<h4 id=\"常见用法\"><a href=\"#常见用法\" class=\"headerlink\" title=\"常见用法\"></a>常见用法</h4><p>在文件中搜索一个单词，命令会返回一个包含“match_pattern”的文本行：</p>\n<blockquote>\n<p>grep match_pattern file_name<br>  grep “match_pattern” file_name</p>\n</blockquote>\n<p>在多个文件中查找：</p>\n<blockquote>\n<p>grep “match_pattern” file_1 file_2 file_3 …</p>\n</blockquote>\n<p>输出除之外的所有行 -v 选项：</p>\n<blockquote>\n<p>grep -v “match_pattern” file_name</p>\n</blockquote>\n<p>使用正则表达式 -E 选项：</p>\n<blockquote>\n<p>grep -E “[1-9]+”<br>  或<br>  egrep “[1-9]+”</p>\n</blockquote>\n<p>只输出文件中匹配到的部分 -o 选项：</p>\n<blockquote>\n<p>echo this is a test line. | grep -o -E “[a-z]+.“<br>  line.<br>  echo this is a test line. | egrep -o “[a-z]+.“<br>  line.</p>\n</blockquote>\n<p>统计文件或者文本中包含匹配字符串的行数 -c 选项：</p>\n<blockquote>\n<p>grep -c “text” file_name</p>\n</blockquote>\n<p>输出包含匹配字符串的行数 -n 选项：</p>\n<blockquote>\n<p>grep “text” -n file_name<br>  或<br>  cat file_name | grep “text” -n</p>\n<p>  #多个文件<br>  grep “text” -n file_1 file_2</p>\n</blockquote>\n<p>搜索多个文件并查找匹配文本在哪些文件中：</p>\n<blockquote>\n<p>grep -l “text” file1 file2 file3…</p>\n</blockquote>\n<h4 id=\"练习\"><a href=\"#练习\" class=\"headerlink\" title=\"练习\"></a>练习</h4><ol>\n<li><p>获取root用户的shell程序</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat /etc/passwd|grep ^root.*&quot;/root:&quot; | cut -d : -f 7</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>显示CentOS7的/etc/grub2.cfg文件中，至少以一个空白 字符开头的且后面存非空白字符的行</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat /etc/grub2.cfg | egrep &quot;^[[:space:]] [^[:space:]]&quot;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>找出<code>netstat -tan</code>命令的结果中以<code>LISTEN</code>后跟任意多个空白字符结尾的行</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">netstat -tan | grep &quot;.*LISTEN.*$&quot;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n"},{"title":"Linux的正则表达式","date":"2018-02-03T01:17:37.000Z","modified":null,"_content":"\n### 通配符\n|元字符|作用|\n|:---:|:---|\n|*|匹配0个或任意多个字符，也就是可以匹配任何内容|\n|?|匹配任意一个字符|\n|[]|匹配[ ]中任意一个字符|\n|[-]|匹配括号中任意一个字符，-代表一个范围，例如：[a-z]代表匹配一个小写字母|\n|[^]|逻辑非，表示匹配不是中括号内的一个字符，例如[^0-9]代表匹配一个不是数字的字符|\n\n\n### 正则表达式\n#### 基础正则表达式\n|元字符|作用|\n|:---:|:---|\n|*|前一个字符匹配0次或任意多次，匹配0次前一个字符则表示匹配任意字符，包括空白行|\n|.|匹配除了换行符以外任意一个字符，“.*”匹配所有内容|\n|^|用于指定匹配字符串的头部，也称行首定位符；匹配行首。例如：^hello会匹配以hello开头的行，grep -n “^$” test.txt匹配空白行并显示行号|\n|$|用于指定匹配字符串的尾部，也称行尾定位符；匹配行尾。例如：hello$会匹配以hello结尾的行|\n|[]|匹配中括号中指定的任意一个字符，只匹配一个字符，要匹配[则要转义\\[|\n|[^]|匹配除中括号的字符以外的任意一个字符|\n|\\|转义符用于取消特殊符号的含义，匹配包含以.结尾的行grep “\\.$” test.txt|\n|\\{n\\}|表示其前面的字符恰好出现n次。例如：[0-9]\\{4\\}匹配4位数字，但注意添加两边的定界符，以精确匹配|\n|\\{n,\\}|表示其前面的字符出现不小于n次。例如：[0-9]\\{2,\\}匹配2位以上的数字|\n|\\{n,m\\}|表示其前面的字符至少出现n次，最多出现m次。例如：[a-z]\\{6,8}匹配6到8位的小写字母|\n\n> 注1：`?、()`是扩展正则中的元字符 \n  注2：正则表达式中使用以上的元字符，如`[]、{}、*、. `等所以在匹配字符串中包含有这些元字符时必须使用反斜杠`\\\\`转义，但像`<>`这个非元字符符号就不需要转义。\n\n#### 扩展正则表达式\n|元字符|作用| \n|:---:|:---|\n|&#124;|管道符，表示或，即匹配其中任何一个，book&#124;desk将匹配book或desk\n|()|小括号，可以将正则字符和元字符或表达式进行组合，(book&#124;desk)s将匹配books或desks\n|?|问号，匹配0个或1个前导表达式，如`a?`匹配其他字符串或a\n|\\<|反斜杠+小于号，词首定位符， `\\< abc`表示所有包含以`abc`开头的单词的行\n|\\\\>|反斜杠+大于号，词尾定位符， `\\>abc`表示所有包含以`abc`结尾的单词的行\n|-|减号，用于指明字符范围， `[a-c]`将匹配包含`a、b和c`中任意一个字符的字符串\n|+|加号，匹配一个或多个前导表达式，相当于`expr{1,}`\n\n","source":"_posts/Linux-regular.md","raw":"---\ntitle: Linux的正则表达式\ndate: 2018-02-03 09:17:37\nmodified:\ncategories:\n- Linux\ntags:\n- Linux\n- Shell\n---\n\n### 通配符\n|元字符|作用|\n|:---:|:---|\n|*|匹配0个或任意多个字符，也就是可以匹配任何内容|\n|?|匹配任意一个字符|\n|[]|匹配[ ]中任意一个字符|\n|[-]|匹配括号中任意一个字符，-代表一个范围，例如：[a-z]代表匹配一个小写字母|\n|[^]|逻辑非，表示匹配不是中括号内的一个字符，例如[^0-9]代表匹配一个不是数字的字符|\n\n\n### 正则表达式\n#### 基础正则表达式\n|元字符|作用|\n|:---:|:---|\n|*|前一个字符匹配0次或任意多次，匹配0次前一个字符则表示匹配任意字符，包括空白行|\n|.|匹配除了换行符以外任意一个字符，“.*”匹配所有内容|\n|^|用于指定匹配字符串的头部，也称行首定位符；匹配行首。例如：^hello会匹配以hello开头的行，grep -n “^$” test.txt匹配空白行并显示行号|\n|$|用于指定匹配字符串的尾部，也称行尾定位符；匹配行尾。例如：hello$会匹配以hello结尾的行|\n|[]|匹配中括号中指定的任意一个字符，只匹配一个字符，要匹配[则要转义\\[|\n|[^]|匹配除中括号的字符以外的任意一个字符|\n|\\|转义符用于取消特殊符号的含义，匹配包含以.结尾的行grep “\\.$” test.txt|\n|\\{n\\}|表示其前面的字符恰好出现n次。例如：[0-9]\\{4\\}匹配4位数字，但注意添加两边的定界符，以精确匹配|\n|\\{n,\\}|表示其前面的字符出现不小于n次。例如：[0-9]\\{2,\\}匹配2位以上的数字|\n|\\{n,m\\}|表示其前面的字符至少出现n次，最多出现m次。例如：[a-z]\\{6,8}匹配6到8位的小写字母|\n\n> 注1：`?、()`是扩展正则中的元字符 \n  注2：正则表达式中使用以上的元字符，如`[]、{}、*、. `等所以在匹配字符串中包含有这些元字符时必须使用反斜杠`\\\\`转义，但像`<>`这个非元字符符号就不需要转义。\n\n#### 扩展正则表达式\n|元字符|作用| \n|:---:|:---|\n|&#124;|管道符，表示或，即匹配其中任何一个，book&#124;desk将匹配book或desk\n|()|小括号，可以将正则字符和元字符或表达式进行组合，(book&#124;desk)s将匹配books或desks\n|?|问号，匹配0个或1个前导表达式，如`a?`匹配其他字符串或a\n|\\<|反斜杠+小于号，词首定位符， `\\< abc`表示所有包含以`abc`开头的单词的行\n|\\\\>|反斜杠+大于号，词尾定位符， `\\>abc`表示所有包含以`abc`结尾的单词的行\n|-|减号，用于指明字符范围， `[a-c]`将匹配包含`a、b和c`中任意一个字符的字符串\n|+|加号，匹配一个或多个前导表达式，相当于`expr{1,}`\n\n","slug":"Linux-regular","published":1,"updated":"2018-02-03T10:01:44.587Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjd8i920m0005tyasolwk5d8m","content":"<h3 id=\"通配符\"><a href=\"#通配符\" class=\"headerlink\" title=\"通配符\"></a>通配符</h3><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">元字符</th>\n<th style=\"text-align:left\">作用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">*</td>\n<td style=\"text-align:left\">匹配0个或任意多个字符，也就是可以匹配任何内容</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">?</td>\n<td style=\"text-align:left\">匹配任意一个字符</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">[]</td>\n<td style=\"text-align:left\">匹配[ ]中任意一个字符</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">[-]</td>\n<td style=\"text-align:left\">匹配括号中任意一个字符，-代表一个范围，例如：[a-z]代表匹配一个小写字母</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">[^]</td>\n<td style=\"text-align:left\">逻辑非，表示匹配不是中括号内的一个字符，例如[^0-9]代表匹配一个不是数字的字符</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"正则表达式\"><a href=\"#正则表达式\" class=\"headerlink\" title=\"正则表达式\"></a>正则表达式</h3><h4 id=\"基础正则表达式\"><a href=\"#基础正则表达式\" class=\"headerlink\" title=\"基础正则表达式\"></a>基础正则表达式</h4><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">元字符</th>\n<th style=\"text-align:left\">作用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">*</td>\n<td style=\"text-align:left\">前一个字符匹配0次或任意多次，匹配0次前一个字符则表示匹配任意字符，包括空白行</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">.</td>\n<td style=\"text-align:left\">匹配除了换行符以外任意一个字符，“.*”匹配所有内容</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">^</td>\n<td style=\"text-align:left\">用于指定匹配字符串的头部，也称行首定位符；匹配行首。例如：^hello会匹配以hello开头的行，grep -n “^$” test.txt匹配空白行并显示行号</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">$</td>\n<td style=\"text-align:left\">用于指定匹配字符串的尾部，也称行尾定位符；匹配行尾。例如：hello$会匹配以hello结尾的行</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">[]</td>\n<td style=\"text-align:left\">匹配中括号中指定的任意一个字符，只匹配一个字符，要匹配[则要转义[</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">[^]</td>\n<td style=\"text-align:left\">匹配除中括号的字符以外的任意一个字符</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">\\</td>\n<td style=\"text-align:left\">转义符用于取消特殊符号的含义，匹配包含以.结尾的行grep “.$” test.txt</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">{n}</td>\n<td style=\"text-align:left\">表示其前面的字符恰好出现n次。例如：[0-9]{4}匹配4位数字，但注意添加两边的定界符，以精确匹配</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">{n,}</td>\n<td style=\"text-align:left\">表示其前面的字符出现不小于n次。例如：[0-9]{2,}匹配2位以上的数字</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">{n,m}</td>\n<td style=\"text-align:left\">表示其前面的字符至少出现n次，最多出现m次。例如：[a-z]{6,8}匹配6到8位的小写字母</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p>注1：<code>?、()</code>是扩展正则中的元字符<br>  注2：正则表达式中使用以上的元字符，如<code>[]、{}、*、.</code>等所以在匹配字符串中包含有这些元字符时必须使用反斜杠<code>\\\\</code>转义，但像<code>&lt;&gt;</code>这个非元字符符号就不需要转义。</p>\n</blockquote>\n<h4 id=\"扩展正则表达式\"><a href=\"#扩展正则表达式\" class=\"headerlink\" title=\"扩展正则表达式\"></a>扩展正则表达式</h4><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">元字符</th>\n<th style=\"text-align:left\">作用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">&#124;</td>\n<td style=\"text-align:left\">管道符，表示或，即匹配其中任何一个，book&#124;desk将匹配book或desk</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">()</td>\n<td style=\"text-align:left\">小括号，可以将正则字符和元字符或表达式进行组合，(book&#124;desk)s将匹配books或desks</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">?</td>\n<td style=\"text-align:left\">问号，匹配0个或1个前导表达式，如<code>a?</code>匹配其他字符串或a</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">\\&lt;</td>\n<td style=\"text-align:left\">反斜杠+小于号，词首定位符， <code>\\&lt; abc</code>表示所有包含以<code>abc</code>开头的单词的行</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">\\&gt;</td>\n<td style=\"text-align:left\">反斜杠+大于号，词尾定位符， <code>\\&gt;abc</code>表示所有包含以<code>abc</code>结尾的单词的行</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">-</td>\n<td style=\"text-align:left\">减号，用于指明字符范围， <code>[a-c]</code>将匹配包含<code>a、b和c</code>中任意一个字符的字符串</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">+</td>\n<td style=\"text-align:left\">加号，匹配一个或多个前导表达式，相当于<code>expr{1,}</code></td>\n</tr>\n</tbody>\n</table>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"通配符\"><a href=\"#通配符\" class=\"headerlink\" title=\"通配符\"></a>通配符</h3><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">元字符</th>\n<th style=\"text-align:left\">作用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">*</td>\n<td style=\"text-align:left\">匹配0个或任意多个字符，也就是可以匹配任何内容</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">?</td>\n<td style=\"text-align:left\">匹配任意一个字符</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">[]</td>\n<td style=\"text-align:left\">匹配[ ]中任意一个字符</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">[-]</td>\n<td style=\"text-align:left\">匹配括号中任意一个字符，-代表一个范围，例如：[a-z]代表匹配一个小写字母</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">[^]</td>\n<td style=\"text-align:left\">逻辑非，表示匹配不是中括号内的一个字符，例如[^0-9]代表匹配一个不是数字的字符</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"正则表达式\"><a href=\"#正则表达式\" class=\"headerlink\" title=\"正则表达式\"></a>正则表达式</h3><h4 id=\"基础正则表达式\"><a href=\"#基础正则表达式\" class=\"headerlink\" title=\"基础正则表达式\"></a>基础正则表达式</h4><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">元字符</th>\n<th style=\"text-align:left\">作用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">*</td>\n<td style=\"text-align:left\">前一个字符匹配0次或任意多次，匹配0次前一个字符则表示匹配任意字符，包括空白行</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">.</td>\n<td style=\"text-align:left\">匹配除了换行符以外任意一个字符，“.*”匹配所有内容</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">^</td>\n<td style=\"text-align:left\">用于指定匹配字符串的头部，也称行首定位符；匹配行首。例如：^hello会匹配以hello开头的行，grep -n “^$” test.txt匹配空白行并显示行号</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">$</td>\n<td style=\"text-align:left\">用于指定匹配字符串的尾部，也称行尾定位符；匹配行尾。例如：hello$会匹配以hello结尾的行</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">[]</td>\n<td style=\"text-align:left\">匹配中括号中指定的任意一个字符，只匹配一个字符，要匹配[则要转义[</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">[^]</td>\n<td style=\"text-align:left\">匹配除中括号的字符以外的任意一个字符</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">\\</td>\n<td style=\"text-align:left\">转义符用于取消特殊符号的含义，匹配包含以.结尾的行grep “.$” test.txt</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">{n}</td>\n<td style=\"text-align:left\">表示其前面的字符恰好出现n次。例如：[0-9]{4}匹配4位数字，但注意添加两边的定界符，以精确匹配</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">{n,}</td>\n<td style=\"text-align:left\">表示其前面的字符出现不小于n次。例如：[0-9]{2,}匹配2位以上的数字</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">{n,m}</td>\n<td style=\"text-align:left\">表示其前面的字符至少出现n次，最多出现m次。例如：[a-z]{6,8}匹配6到8位的小写字母</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p>注1：<code>?、()</code>是扩展正则中的元字符<br>  注2：正则表达式中使用以上的元字符，如<code>[]、{}、*、.</code>等所以在匹配字符串中包含有这些元字符时必须使用反斜杠<code>\\\\</code>转义，但像<code>&lt;&gt;</code>这个非元字符符号就不需要转义。</p>\n</blockquote>\n<h4 id=\"扩展正则表达式\"><a href=\"#扩展正则表达式\" class=\"headerlink\" title=\"扩展正则表达式\"></a>扩展正则表达式</h4><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">元字符</th>\n<th style=\"text-align:left\">作用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">&#124;</td>\n<td style=\"text-align:left\">管道符，表示或，即匹配其中任何一个，book&#124;desk将匹配book或desk</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">()</td>\n<td style=\"text-align:left\">小括号，可以将正则字符和元字符或表达式进行组合，(book&#124;desk)s将匹配books或desks</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">?</td>\n<td style=\"text-align:left\">问号，匹配0个或1个前导表达式，如<code>a?</code>匹配其他字符串或a</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">\\&lt;</td>\n<td style=\"text-align:left\">反斜杠+小于号，词首定位符， <code>\\&lt; abc</code>表示所有包含以<code>abc</code>开头的单词的行</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">\\&gt;</td>\n<td style=\"text-align:left\">反斜杠+大于号，词尾定位符， <code>\\&gt;abc</code>表示所有包含以<code>abc</code>结尾的单词的行</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">-</td>\n<td style=\"text-align:left\">减号，用于指明字符范围， <code>[a-c]</code>将匹配包含<code>a、b和c</code>中任意一个字符的字符串</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">+</td>\n<td style=\"text-align:left\">加号，匹配一个或多个前导表达式，相当于<code>expr{1,}</code></td>\n</tr>\n</tbody>\n</table>\n"},{"title":"Linux之sed详解","date":"2018-02-03T10:01:28.612Z","modified":null,"_content":"\nsed是一种流编辑器，它是文本处理中常营的工具，能够完美的配合正则表达式使用。处理时，把当前处理的行存储在临时缓冲区中，称为“模式空间”（pattern space），接着用sed命令处理缓冲区中的内容，处理完成后，把缓冲区的内容送往屏幕。接着处理下一行，这样不断重复，直到文件末尾。文件内容并没有 改变，除非你使用重定向存储输出。Sed主要用来自动编辑一个或多个文件；简化对文件的反复操作；编写转换程序等。\n\n#### 命令格式\nsed [-nefri] ‘command’ 输入文本\n\n#### 常用选项\n-n∶使用安静(silent)模式。在一般 sed 的用法中，所有来自STDIN的资料一般都会被列出到屏幕上。但如果加上`-n`参数后，则只有经过sed特殊处理的那一行(或者动作)才会被列出来。\n-e∶直接在指令列模式上进行sed的动作编辑；\n-f∶直接将sed的动作写在一个档案内，`-f filename`则可以执行 filename 内的sed 动作；\n-r∶sed的动作支援的是延伸型正规表示法的语法。(预设是基础正规表示法语法)\n-i∶直接修改读取的档案内容，而不是由屏幕输出。 \n\n#### 常用命令\na：新增，a的后面可以接字串，而这些字串会在新的一行出现(目前的下一行)\nc：取代，c的后面可以接字串，这些字串可以取代n1,n2之间的行\nd：删除，由于是删除，所以d后面通常不接任何符号\ni：插入，i的后面可以接字串，而这些字串会在新的一行出现(目前的上一行)\np：打印，即将某个匹配的字符串打印。通常p会与参数 sed -n 一起使用\ns：替换，直接将匹配的字符串进行替换。通常与正则表达式一起使用\n\n#### 实例\n##### 删除行\n\n```\n[root@zyj shell]# sed '1d' filename              #删除第一行 \n[root@zyj shell]# sed '$d' filename              #删除最后一行\n[root@zyj shell]# sed '1,2d' filename            #删除第一行到第二行\n[root@zyj shell]# sed '2,$d' filename            #删除第二行到最后一行\n```\n\n##### 显示行\n\n```\n[root@zyj shell]# sed -n '1p' filename           #显示第一行 \n[root@zyj shell]# sed -n '$p' filename           #显示最后一行\n[root@zyj shell]# sed -n '1,2p' filename         #显示第一行到第二行\n[root@zyj shell]# sed -n '2,$p' filename         #显示第二行到最后一行\n```\n\n##### 查询\n\n```\n[root@zyj shell]# sed -n '/centos/p' filename  #查询包括关键字centos所在所有行\n[root@zyj shell]# sed -n '/\\$/p' filename      #查询包括关键字$所在所有行，使用反斜线\\对特殊字符进行转义\n```\n\n##### 增加一行或多行字符串\n\n```\n[root@zyj shell]# sed '1a drink tea' filename   #第一行后增加字符串\"drink tea\"\n[root@zyj shell]# sed '1,3a drink tea' filename #第一行到第三行后增加字符串\"drink tea\"\n[root@zyj shell]# sed '1a drink\\ncoffee' filename #第一行后增加多行，使用换行符\\n\n```\n\n##### 替换一行或多行\n\n```\n[root@zyj shell]# sed '1c Hi' filename          #第一行代替为Hi\n[root@zyj shell]# sed '1,2c Hi' filename        #第一行到第二行代替为Hi\n```\n\n##### 替换一行中的某部分\n\n> 格式\n  sed 's/要替换的字符串/新的字符串/g'   (要替换的字符串可以用正则表达式)\n\n```\n[root@zyj shell]# sed -n '/centos/p' filename | sed 's/centos/redhat/g'    #替换centos为redhat\n[root@zyj shell]# sed -n '/centos/p' filename | sed 's/centos//g'          #删除centos\n```\n\n##### 插入\n\n```\n[root@zyj shell]# sed -i '$a bye' filename   #在文件filenamede 最后一行直接输入\"bye\"\n[root@localhost ruby] # sed -n '2,$p' ab        #显示第二行到最后一行\n```\n\n#### 习题\n\n1. 从ip addr中找到当前主机的ip\n\n  ```\n  [root@zyj shell]# ip addr|sed -nr 's/.*inet (.*)\\/24.*$/\\1/gp'\n  192.168.17.131\n  ```\n\n2. 将/etc/passwd第一项和最后一项互换\n\n  ```\n  cat /etc/passwd | sed -nr 's/(.*)(:x.*:)(.*$)/\\3\\2\\1/gp'\n  ``` \n\n","source":"_posts/Linux-sed.md","raw":"---\ntitle: Linux之sed详解\ndate:\nmodified:\ncategories:\n- Linux\ntags:\n- sed\n- Linux\n---\n\nsed是一种流编辑器，它是文本处理中常营的工具，能够完美的配合正则表达式使用。处理时，把当前处理的行存储在临时缓冲区中，称为“模式空间”（pattern space），接着用sed命令处理缓冲区中的内容，处理完成后，把缓冲区的内容送往屏幕。接着处理下一行，这样不断重复，直到文件末尾。文件内容并没有 改变，除非你使用重定向存储输出。Sed主要用来自动编辑一个或多个文件；简化对文件的反复操作；编写转换程序等。\n\n#### 命令格式\nsed [-nefri] ‘command’ 输入文本\n\n#### 常用选项\n-n∶使用安静(silent)模式。在一般 sed 的用法中，所有来自STDIN的资料一般都会被列出到屏幕上。但如果加上`-n`参数后，则只有经过sed特殊处理的那一行(或者动作)才会被列出来。\n-e∶直接在指令列模式上进行sed的动作编辑；\n-f∶直接将sed的动作写在一个档案内，`-f filename`则可以执行 filename 内的sed 动作；\n-r∶sed的动作支援的是延伸型正规表示法的语法。(预设是基础正规表示法语法)\n-i∶直接修改读取的档案内容，而不是由屏幕输出。 \n\n#### 常用命令\na：新增，a的后面可以接字串，而这些字串会在新的一行出现(目前的下一行)\nc：取代，c的后面可以接字串，这些字串可以取代n1,n2之间的行\nd：删除，由于是删除，所以d后面通常不接任何符号\ni：插入，i的后面可以接字串，而这些字串会在新的一行出现(目前的上一行)\np：打印，即将某个匹配的字符串打印。通常p会与参数 sed -n 一起使用\ns：替换，直接将匹配的字符串进行替换。通常与正则表达式一起使用\n\n#### 实例\n##### 删除行\n\n```\n[root@zyj shell]# sed '1d' filename              #删除第一行 \n[root@zyj shell]# sed '$d' filename              #删除最后一行\n[root@zyj shell]# sed '1,2d' filename            #删除第一行到第二行\n[root@zyj shell]# sed '2,$d' filename            #删除第二行到最后一行\n```\n\n##### 显示行\n\n```\n[root@zyj shell]# sed -n '1p' filename           #显示第一行 \n[root@zyj shell]# sed -n '$p' filename           #显示最后一行\n[root@zyj shell]# sed -n '1,2p' filename         #显示第一行到第二行\n[root@zyj shell]# sed -n '2,$p' filename         #显示第二行到最后一行\n```\n\n##### 查询\n\n```\n[root@zyj shell]# sed -n '/centos/p' filename  #查询包括关键字centos所在所有行\n[root@zyj shell]# sed -n '/\\$/p' filename      #查询包括关键字$所在所有行，使用反斜线\\对特殊字符进行转义\n```\n\n##### 增加一行或多行字符串\n\n```\n[root@zyj shell]# sed '1a drink tea' filename   #第一行后增加字符串\"drink tea\"\n[root@zyj shell]# sed '1,3a drink tea' filename #第一行到第三行后增加字符串\"drink tea\"\n[root@zyj shell]# sed '1a drink\\ncoffee' filename #第一行后增加多行，使用换行符\\n\n```\n\n##### 替换一行或多行\n\n```\n[root@zyj shell]# sed '1c Hi' filename          #第一行代替为Hi\n[root@zyj shell]# sed '1,2c Hi' filename        #第一行到第二行代替为Hi\n```\n\n##### 替换一行中的某部分\n\n> 格式\n  sed 's/要替换的字符串/新的字符串/g'   (要替换的字符串可以用正则表达式)\n\n```\n[root@zyj shell]# sed -n '/centos/p' filename | sed 's/centos/redhat/g'    #替换centos为redhat\n[root@zyj shell]# sed -n '/centos/p' filename | sed 's/centos//g'          #删除centos\n```\n\n##### 插入\n\n```\n[root@zyj shell]# sed -i '$a bye' filename   #在文件filenamede 最后一行直接输入\"bye\"\n[root@localhost ruby] # sed -n '2,$p' ab        #显示第二行到最后一行\n```\n\n#### 习题\n\n1. 从ip addr中找到当前主机的ip\n\n  ```\n  [root@zyj shell]# ip addr|sed -nr 's/.*inet (.*)\\/24.*$/\\1/gp'\n  192.168.17.131\n  ```\n\n2. 将/etc/passwd第一项和最后一项互换\n\n  ```\n  cat /etc/passwd | sed -nr 's/(.*)(:x.*:)(.*$)/\\3\\2\\1/gp'\n  ``` \n\n","slug":"Linux-sed","published":1,"updated":"2018-02-03T10:01:28.609Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjd8i92100006tyasqicq826p","content":"<p>sed是一种流编辑器，它是文本处理中常营的工具，能够完美的配合正则表达式使用。处理时，把当前处理的行存储在临时缓冲区中，称为“模式空间”（pattern space），接着用sed命令处理缓冲区中的内容，处理完成后，把缓冲区的内容送往屏幕。接着处理下一行，这样不断重复，直到文件末尾。文件内容并没有 改变，除非你使用重定向存储输出。Sed主要用来自动编辑一个或多个文件；简化对文件的反复操作；编写转换程序等。</p>\n<h4 id=\"命令格式\"><a href=\"#命令格式\" class=\"headerlink\" title=\"命令格式\"></a>命令格式</h4><p>sed [-nefri] ‘command’ 输入文本</p>\n<h4 id=\"常用选项\"><a href=\"#常用选项\" class=\"headerlink\" title=\"常用选项\"></a>常用选项</h4><p>-n∶使用安静(silent)模式。在一般 sed 的用法中，所有来自STDIN的资料一般都会被列出到屏幕上。但如果加上<code>-n</code>参数后，则只有经过sed特殊处理的那一行(或者动作)才会被列出来。<br>-e∶直接在指令列模式上进行sed的动作编辑；<br>-f∶直接将sed的动作写在一个档案内，<code>-f filename</code>则可以执行 filename 内的sed 动作；<br>-r∶sed的动作支援的是延伸型正规表示法的语法。(预设是基础正规表示法语法)<br>-i∶直接修改读取的档案内容，而不是由屏幕输出。 </p>\n<h4 id=\"常用命令\"><a href=\"#常用命令\" class=\"headerlink\" title=\"常用命令\"></a>常用命令</h4><p>a：新增，a的后面可以接字串，而这些字串会在新的一行出现(目前的下一行)<br>c：取代，c的后面可以接字串，这些字串可以取代n1,n2之间的行<br>d：删除，由于是删除，所以d后面通常不接任何符号<br>i：插入，i的后面可以接字串，而这些字串会在新的一行出现(目前的上一行)<br>p：打印，即将某个匹配的字符串打印。通常p会与参数 sed -n 一起使用<br>s：替换，直接将匹配的字符串进行替换。通常与正则表达式一起使用</p>\n<h4 id=\"实例\"><a href=\"#实例\" class=\"headerlink\" title=\"实例\"></a>实例</h4><h5 id=\"删除行\"><a href=\"#删除行\" class=\"headerlink\" title=\"删除行\"></a>删除行</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@zyj shell]# sed &apos;1d&apos; filename              #删除第一行 </span><br><span class=\"line\">[root@zyj shell]# sed &apos;$d&apos; filename              #删除最后一行</span><br><span class=\"line\">[root@zyj shell]# sed &apos;1,2d&apos; filename            #删除第一行到第二行</span><br><span class=\"line\">[root@zyj shell]# sed &apos;2,$d&apos; filename            #删除第二行到最后一行</span><br></pre></td></tr></table></figure>\n<h5 id=\"显示行\"><a href=\"#显示行\" class=\"headerlink\" title=\"显示行\"></a>显示行</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@zyj shell]# sed -n &apos;1p&apos; filename           #显示第一行 </span><br><span class=\"line\">[root@zyj shell]# sed -n &apos;$p&apos; filename           #显示最后一行</span><br><span class=\"line\">[root@zyj shell]# sed -n &apos;1,2p&apos; filename         #显示第一行到第二行</span><br><span class=\"line\">[root@zyj shell]# sed -n &apos;2,$p&apos; filename         #显示第二行到最后一行</span><br></pre></td></tr></table></figure>\n<h5 id=\"查询\"><a href=\"#查询\" class=\"headerlink\" title=\"查询\"></a>查询</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@zyj shell]# sed -n &apos;/centos/p&apos; filename  #查询包括关键字centos所在所有行</span><br><span class=\"line\">[root@zyj shell]# sed -n &apos;/\\$/p&apos; filename      #查询包括关键字$所在所有行，使用反斜线\\对特殊字符进行转义</span><br></pre></td></tr></table></figure>\n<h5 id=\"增加一行或多行字符串\"><a href=\"#增加一行或多行字符串\" class=\"headerlink\" title=\"增加一行或多行字符串\"></a>增加一行或多行字符串</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@zyj shell]# sed &apos;1a drink tea&apos; filename   #第一行后增加字符串&quot;drink tea&quot;</span><br><span class=\"line\">[root@zyj shell]# sed &apos;1,3a drink tea&apos; filename #第一行到第三行后增加字符串&quot;drink tea&quot;</span><br><span class=\"line\">[root@zyj shell]# sed &apos;1a drink\\ncoffee&apos; filename #第一行后增加多行，使用换行符\\n</span><br></pre></td></tr></table></figure>\n<h5 id=\"替换一行或多行\"><a href=\"#替换一行或多行\" class=\"headerlink\" title=\"替换一行或多行\"></a>替换一行或多行</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@zyj shell]# sed &apos;1c Hi&apos; filename          #第一行代替为Hi</span><br><span class=\"line\">[root@zyj shell]# sed &apos;1,2c Hi&apos; filename        #第一行到第二行代替为Hi</span><br></pre></td></tr></table></figure>\n<h5 id=\"替换一行中的某部分\"><a href=\"#替换一行中的某部分\" class=\"headerlink\" title=\"替换一行中的某部分\"></a>替换一行中的某部分</h5><blockquote>\n<p>格式<br>  sed ‘s/要替换的字符串/新的字符串/g’   (要替换的字符串可以用正则表达式)</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@zyj shell]# sed -n &apos;/centos/p&apos; filename | sed &apos;s/centos/redhat/g&apos;    #替换centos为redhat</span><br><span class=\"line\">[root@zyj shell]# sed -n &apos;/centos/p&apos; filename | sed &apos;s/centos//g&apos;          #删除centos</span><br></pre></td></tr></table></figure>\n<h5 id=\"插入\"><a href=\"#插入\" class=\"headerlink\" title=\"插入\"></a>插入</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@zyj shell]# sed -i &apos;$a bye&apos; filename   #在文件filenamede 最后一行直接输入&quot;bye&quot;</span><br><span class=\"line\">[root@localhost ruby] # sed -n &apos;2,$p&apos; ab        #显示第二行到最后一行</span><br></pre></td></tr></table></figure>\n<h4 id=\"习题\"><a href=\"#习题\" class=\"headerlink\" title=\"习题\"></a>习题</h4><ol>\n<li><p>从ip addr中找到当前主机的ip</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@zyj shell]# ip addr|sed -nr &apos;s/.*inet (.*)\\/24.*$/\\1/gp&apos;</span><br><span class=\"line\">192.168.17.131</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>将/etc/passwd第一项和最后一项互换</p>\n<pre><code>cat /etc/passwd | sed -nr &apos;s/(.*)(:x.*:)(.*$)/\\3\\2\\1/gp&apos;\n</code></pre></li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<p>sed是一种流编辑器，它是文本处理中常营的工具，能够完美的配合正则表达式使用。处理时，把当前处理的行存储在临时缓冲区中，称为“模式空间”（pattern space），接着用sed命令处理缓冲区中的内容，处理完成后，把缓冲区的内容送往屏幕。接着处理下一行，这样不断重复，直到文件末尾。文件内容并没有 改变，除非你使用重定向存储输出。Sed主要用来自动编辑一个或多个文件；简化对文件的反复操作；编写转换程序等。</p>\n<h4 id=\"命令格式\"><a href=\"#命令格式\" class=\"headerlink\" title=\"命令格式\"></a>命令格式</h4><p>sed [-nefri] ‘command’ 输入文本</p>\n<h4 id=\"常用选项\"><a href=\"#常用选项\" class=\"headerlink\" title=\"常用选项\"></a>常用选项</h4><p>-n∶使用安静(silent)模式。在一般 sed 的用法中，所有来自STDIN的资料一般都会被列出到屏幕上。但如果加上<code>-n</code>参数后，则只有经过sed特殊处理的那一行(或者动作)才会被列出来。<br>-e∶直接在指令列模式上进行sed的动作编辑；<br>-f∶直接将sed的动作写在一个档案内，<code>-f filename</code>则可以执行 filename 内的sed 动作；<br>-r∶sed的动作支援的是延伸型正规表示法的语法。(预设是基础正规表示法语法)<br>-i∶直接修改读取的档案内容，而不是由屏幕输出。 </p>\n<h4 id=\"常用命令\"><a href=\"#常用命令\" class=\"headerlink\" title=\"常用命令\"></a>常用命令</h4><p>a：新增，a的后面可以接字串，而这些字串会在新的一行出现(目前的下一行)<br>c：取代，c的后面可以接字串，这些字串可以取代n1,n2之间的行<br>d：删除，由于是删除，所以d后面通常不接任何符号<br>i：插入，i的后面可以接字串，而这些字串会在新的一行出现(目前的上一行)<br>p：打印，即将某个匹配的字符串打印。通常p会与参数 sed -n 一起使用<br>s：替换，直接将匹配的字符串进行替换。通常与正则表达式一起使用</p>\n<h4 id=\"实例\"><a href=\"#实例\" class=\"headerlink\" title=\"实例\"></a>实例</h4><h5 id=\"删除行\"><a href=\"#删除行\" class=\"headerlink\" title=\"删除行\"></a>删除行</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@zyj shell]# sed &apos;1d&apos; filename              #删除第一行 </span><br><span class=\"line\">[root@zyj shell]# sed &apos;$d&apos; filename              #删除最后一行</span><br><span class=\"line\">[root@zyj shell]# sed &apos;1,2d&apos; filename            #删除第一行到第二行</span><br><span class=\"line\">[root@zyj shell]# sed &apos;2,$d&apos; filename            #删除第二行到最后一行</span><br></pre></td></tr></table></figure>\n<h5 id=\"显示行\"><a href=\"#显示行\" class=\"headerlink\" title=\"显示行\"></a>显示行</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@zyj shell]# sed -n &apos;1p&apos; filename           #显示第一行 </span><br><span class=\"line\">[root@zyj shell]# sed -n &apos;$p&apos; filename           #显示最后一行</span><br><span class=\"line\">[root@zyj shell]# sed -n &apos;1,2p&apos; filename         #显示第一行到第二行</span><br><span class=\"line\">[root@zyj shell]# sed -n &apos;2,$p&apos; filename         #显示第二行到最后一行</span><br></pre></td></tr></table></figure>\n<h5 id=\"查询\"><a href=\"#查询\" class=\"headerlink\" title=\"查询\"></a>查询</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@zyj shell]# sed -n &apos;/centos/p&apos; filename  #查询包括关键字centos所在所有行</span><br><span class=\"line\">[root@zyj shell]# sed -n &apos;/\\$/p&apos; filename      #查询包括关键字$所在所有行，使用反斜线\\对特殊字符进行转义</span><br></pre></td></tr></table></figure>\n<h5 id=\"增加一行或多行字符串\"><a href=\"#增加一行或多行字符串\" class=\"headerlink\" title=\"增加一行或多行字符串\"></a>增加一行或多行字符串</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@zyj shell]# sed &apos;1a drink tea&apos; filename   #第一行后增加字符串&quot;drink tea&quot;</span><br><span class=\"line\">[root@zyj shell]# sed &apos;1,3a drink tea&apos; filename #第一行到第三行后增加字符串&quot;drink tea&quot;</span><br><span class=\"line\">[root@zyj shell]# sed &apos;1a drink\\ncoffee&apos; filename #第一行后增加多行，使用换行符\\n</span><br></pre></td></tr></table></figure>\n<h5 id=\"替换一行或多行\"><a href=\"#替换一行或多行\" class=\"headerlink\" title=\"替换一行或多行\"></a>替换一行或多行</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@zyj shell]# sed &apos;1c Hi&apos; filename          #第一行代替为Hi</span><br><span class=\"line\">[root@zyj shell]# sed &apos;1,2c Hi&apos; filename        #第一行到第二行代替为Hi</span><br></pre></td></tr></table></figure>\n<h5 id=\"替换一行中的某部分\"><a href=\"#替换一行中的某部分\" class=\"headerlink\" title=\"替换一行中的某部分\"></a>替换一行中的某部分</h5><blockquote>\n<p>格式<br>  sed ‘s/要替换的字符串/新的字符串/g’   (要替换的字符串可以用正则表达式)</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@zyj shell]# sed -n &apos;/centos/p&apos; filename | sed &apos;s/centos/redhat/g&apos;    #替换centos为redhat</span><br><span class=\"line\">[root@zyj shell]# sed -n &apos;/centos/p&apos; filename | sed &apos;s/centos//g&apos;          #删除centos</span><br></pre></td></tr></table></figure>\n<h5 id=\"插入\"><a href=\"#插入\" class=\"headerlink\" title=\"插入\"></a>插入</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@zyj shell]# sed -i &apos;$a bye&apos; filename   #在文件filenamede 最后一行直接输入&quot;bye&quot;</span><br><span class=\"line\">[root@localhost ruby] # sed -n &apos;2,$p&apos; ab        #显示第二行到最后一行</span><br></pre></td></tr></table></figure>\n<h4 id=\"习题\"><a href=\"#习题\" class=\"headerlink\" title=\"习题\"></a>习题</h4><ol>\n<li><p>从ip addr中找到当前主机的ip</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@zyj shell]# ip addr|sed -nr &apos;s/.*inet (.*)\\/24.*$/\\1/gp&apos;</span><br><span class=\"line\">192.168.17.131</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>将/etc/passwd第一项和最后一项互换</p>\n<pre><code>cat /etc/passwd | sed -nr &apos;s/(.*)(:x.*:)(.*$)/\\3\\2\\1/gp&apos;\n</code></pre></li>\n</ol>\n"},{"title":"Linux的shell编程","date":"2018-02-04T04:00:56.000Z","modified":null,"_content":"\n### 创建shell脚本文件\n\n在创建shell脚本文件时，必须在文件的第一行指定要使用的shell。其格式为\n\n> #!/bin/bash\n  注意：shell只会去处理第一行注释行，并不会处理其他的注释行。\n\n创建shell脚本文件后，给文件添加执行权限\n\n> chmod u+x filename\n\n如果想把脚本中的文本字符串和命令输出显示在同一行中，可以用echo语句的-n参数\n\n> echo -n \"The time and date are: \"\n  date\n\n使用等号将值赋给用户变量时，在变量、等号和值之间不能出现空格。\n\n> testing=\\`date\\`\n  testing=$(date)\n\n引用一个变量值时需要使用$，而引用变量来对其进行赋值时则不要使用$：\n\n> value1=10\n  value2=$value1\n  \\# 注意：没有使用$，shell会将变量名解释成普通的文本字符串。\n\n#### 命令替换\n\n有两种方法可以将命令输出赋给变量：\n\n1. 反引号字符\\`\\`\n\n2. $\\(\\)格式\n\n  ```\n  testing=`date`\n  testing=$(date)\n  echo \"The date and time are: \" $testing\n\n  today=$(date +%y%m%d)\n  ls /usr/bin -al > log.$today\n  ```\n\n#### 重定向\n\n重定向包括输出重定向`>  >>`以及输入重定向`<  <<`\n\n> 内联输入重定向\n\n#### 执行数学运算\n\n##### expr命令\n\n```\nexpr 1 + 5\n6\n```\n\n##### 使用方括号\n\n如果需要将一个数学运算结果赋给某个变量，可以用美元符和方括号：\n\n```\nvar1=100\nvar2=50\nvar3=30\nvar4=$[$var1 * ($var3 - $var2)]\n```\n\n> 需要注意的是，bash shell数学运算符只支持整数运算。\n\n##### 浮点解决方案\n\n在脚本中使用bc，基本格式如下：\n\n> variable=$(echo \"options; expression\" | bc)\n\n```\nvar1=20\nvar2=3.14159\nvar3=$(echo \"scale=4; $var1 * var2\" | bc)\n```\n\n```\nvar1=10.46\nvar2=43.67\nvar3=33.2\nvar4=71\n\nvar5=$(bc << EOF\nscale = 4\na1 = ($var1 * $var2)\nb1 = ($var3 * $var4)\na1 + b1\nEOF\n)\n\necho $var5\n```\n\n#### 退出脚本\n\n退出状态码的查看`$?`\n\n|状态码|描述|\n|:---:|:---:|\n|0|命令成功结束|\n|1|通用未知错误|\n|2|误用Shell命令|\n|126|命令不可执行|\n|127|没找到命令|\n|128|无效退出参数|\n|128+x|Linux信号x的严重错误|\n|130|命令通过Ctrl+C控制码越界|\n|255|退出码越界|\n\nexit命令\n\n\n### 结构化命令\n\n#### if-then\n\n```\nif command; then\n  commands\nfi\n```\n\n```\nif pwd; then\n  echo \"It worked\"\nfi\n```\n\n#### if-then-else\n\n```\nif command\nthen \n  commands\nelse\n  commands\nfi\n```\n\n#### 嵌套if\n\n```\nif command1\nthen\n  commands\nelse\n  if command2\n  then\n    more commands\n  else\n    more commands\n  fi\nfi\n```\n\n```\nif command1\nthen\n  commands\nelif command2\nthen\n  more commands\nfi\n```\n\n#### test命令\n\n如果test命令中列出的条件成立，test命令就会退出并返回退出状态码0。\n\n> test condition\n\n或者可以用在`if-then`语句中\n\n```\nif test condition\nthen\n  commands\nfi\n```\n\n也可以使用方括号进行测试\n\n```\nif [ condition ]\nthen\n  commands\nfi\n```\n\n##### 数值比较\n\n|比较|描述|\n|:---:|:---:|\n|n1 -eq n2|检查n1是否等于n2|\n|n1 -ge n2|检查n1是否大于等于n2|\n|n1 -gt n2|检查n1是否大于n2|\n|n1 -le n2|检查n1是否小于等于n2|\n|n1 -lt n2|检查n1是否小于n2|\n|n1 -ne n2|检查n1是否不等于n2|\n\n##### 字符串比较\n\n|比较|描述|\n|:---:|:---:|\n|str1 = str2|检查字符串是否相同|\n|str1 != str2|检查字符串是否不同|\n|str1 < str2|检查str1是否比str2大|\n|str1 \\> str2|检查str1是否比str2小|\n|-n str1|检查str1的长度是否非0|\n|-z str1|检查str1的长度是否为0|\n\n> 需要注意的是，大于号和小于号在使用时需要转义\n\n##### 文件比较\n\n|比较|描述|\n|:---:|:---:|\n|-e file|如果file存在，则为真|\n|-d file|如果file存在并为目录，则为真|\n|-f file|如果file为常规文件，则为真|\n|-r file|如果file存在并可读，则为真|\n|-s file|如果file存在并非空，则为真|\n|-w file|如果file存在并可写，则为真|\n|-x file|如果file存在并可执行，则为真|\n|-O file|如果file存在并属于当前用户，则为真|\n|-G file|如果file存在并且默认组与当前用户相同，则为真|\n|file1 -nt file2|如果file1比file2新，则为真|\n|file1 -ot file2|如果file1比file2旧，则为真|\n\n##### 复合条件测试\n\nif-then可以用`&&`和`||`来组合测试\n\n#### if-then的高级特性\n\n##### 使用双括号\n\n双括号命令允许你在比较过程中使用高级数学表达式。其格式如下：\n> ((expression))\n\n双括号命令符号包括以下：\nval++，val--，++val，--val，!，~，**(幂运算)，<<，>>，&，|，&&，||\n\n##### 使用双方括号\n\n双方括号命令提供了针对字符串比较的高级特性。其格式如下：\n> [[expression]]\n\n```\nif [[ $USER == r* ]]\n```\n\n#### case命令\n\n```\ncase variable in\npattern1 | pattern2) commands1;;\npattern3) commands2;;\n*) default commands;;\nesac\n```\n\n#### for命令\n\n```\nfor var in list\ndo\n  commands\ndone\n```\n\nfor循环假定每个值都是用空格分割的。\n可以使用内部字段分隔符`IFS`来自定义分隔符，例如\n\n> IFS=$'\\n'\n  IFS=$'\\n':;\"\n\n##### C语言分隔的for命令\n\n命令格式：\n> for (( variable assignment ; condition ; iteration process ))\n\n#### while命令\n\nwhile命令的基本格式：\n\n```\nwhile test command\ndo\n  other commands\ndone\n```\n\n#### until命令\n\nuntil命令和while命令正好相反，只有测试命令的退出状态码不为0，bash shell才会执行循环中列出的命令。\n\n命令格式：\n\n```\nuntil test commands\ndo\n  other commands\ndone\n```\n\n#### 循环处理文件数据\n\n需要使用嵌套循环以及修改IFS环境变量\n\n```\n#!/bin/bash\n\nIFS.OLD=$IFS\nIFS=$'\\n'\nfor entry in $(cat /etc/passwd)\ndo\n  echo \"Value in $entry\"\n  IFS=:\n  for value in $entry\n  do\n    if [ -n \"$value\" ]\n    then\n      echo \"$value\"\n    fi\n  done\ndone\n```\n\n#### 控制循环\n\n##### break命令\n\n可以用break退出任意的循环，包括while和until循环。\n也可以使用`break -n`跳出外部循环，默认为1。\n\n##### continue命令\n\ncontinue命令可以提前终止某次循环中的命令，但并不会完全终止整个循环。\n也可以使用`continue -n`继续执行哪一层循环。\n\n#### 处理循环的输出\n\n可以对循环的输出使用管道或重定向。通过在done命令之后添加一个处理命令来实现。\n\n> done > output.txt\n\n#### 例子\n\n创建多个用户账户\n\n```\n#!/bin/bash\n\ninput=\"user.csv\"\nwhile IFS=\",\" read -r userid name\ndo\n  echo \"adding $userid\"\n  useradd -c \"$name\" -m \"userid\" \ndone < \"$input\"\n```\n","source":"_posts/Linux-shell.md","raw":"---\ntitle: Linux的shell编程\ndate: 2018-02-04 12:00:56\nmodified:\ncategories:\n- Linux\ntags:\n- Linux\n- Shell\n---\n\n### 创建shell脚本文件\n\n在创建shell脚本文件时，必须在文件的第一行指定要使用的shell。其格式为\n\n> #!/bin/bash\n  注意：shell只会去处理第一行注释行，并不会处理其他的注释行。\n\n创建shell脚本文件后，给文件添加执行权限\n\n> chmod u+x filename\n\n如果想把脚本中的文本字符串和命令输出显示在同一行中，可以用echo语句的-n参数\n\n> echo -n \"The time and date are: \"\n  date\n\n使用等号将值赋给用户变量时，在变量、等号和值之间不能出现空格。\n\n> testing=\\`date\\`\n  testing=$(date)\n\n引用一个变量值时需要使用$，而引用变量来对其进行赋值时则不要使用$：\n\n> value1=10\n  value2=$value1\n  \\# 注意：没有使用$，shell会将变量名解释成普通的文本字符串。\n\n#### 命令替换\n\n有两种方法可以将命令输出赋给变量：\n\n1. 反引号字符\\`\\`\n\n2. $\\(\\)格式\n\n  ```\n  testing=`date`\n  testing=$(date)\n  echo \"The date and time are: \" $testing\n\n  today=$(date +%y%m%d)\n  ls /usr/bin -al > log.$today\n  ```\n\n#### 重定向\n\n重定向包括输出重定向`>  >>`以及输入重定向`<  <<`\n\n> 内联输入重定向\n\n#### 执行数学运算\n\n##### expr命令\n\n```\nexpr 1 + 5\n6\n```\n\n##### 使用方括号\n\n如果需要将一个数学运算结果赋给某个变量，可以用美元符和方括号：\n\n```\nvar1=100\nvar2=50\nvar3=30\nvar4=$[$var1 * ($var3 - $var2)]\n```\n\n> 需要注意的是，bash shell数学运算符只支持整数运算。\n\n##### 浮点解决方案\n\n在脚本中使用bc，基本格式如下：\n\n> variable=$(echo \"options; expression\" | bc)\n\n```\nvar1=20\nvar2=3.14159\nvar3=$(echo \"scale=4; $var1 * var2\" | bc)\n```\n\n```\nvar1=10.46\nvar2=43.67\nvar3=33.2\nvar4=71\n\nvar5=$(bc << EOF\nscale = 4\na1 = ($var1 * $var2)\nb1 = ($var3 * $var4)\na1 + b1\nEOF\n)\n\necho $var5\n```\n\n#### 退出脚本\n\n退出状态码的查看`$?`\n\n|状态码|描述|\n|:---:|:---:|\n|0|命令成功结束|\n|1|通用未知错误|\n|2|误用Shell命令|\n|126|命令不可执行|\n|127|没找到命令|\n|128|无效退出参数|\n|128+x|Linux信号x的严重错误|\n|130|命令通过Ctrl+C控制码越界|\n|255|退出码越界|\n\nexit命令\n\n\n### 结构化命令\n\n#### if-then\n\n```\nif command; then\n  commands\nfi\n```\n\n```\nif pwd; then\n  echo \"It worked\"\nfi\n```\n\n#### if-then-else\n\n```\nif command\nthen \n  commands\nelse\n  commands\nfi\n```\n\n#### 嵌套if\n\n```\nif command1\nthen\n  commands\nelse\n  if command2\n  then\n    more commands\n  else\n    more commands\n  fi\nfi\n```\n\n```\nif command1\nthen\n  commands\nelif command2\nthen\n  more commands\nfi\n```\n\n#### test命令\n\n如果test命令中列出的条件成立，test命令就会退出并返回退出状态码0。\n\n> test condition\n\n或者可以用在`if-then`语句中\n\n```\nif test condition\nthen\n  commands\nfi\n```\n\n也可以使用方括号进行测试\n\n```\nif [ condition ]\nthen\n  commands\nfi\n```\n\n##### 数值比较\n\n|比较|描述|\n|:---:|:---:|\n|n1 -eq n2|检查n1是否等于n2|\n|n1 -ge n2|检查n1是否大于等于n2|\n|n1 -gt n2|检查n1是否大于n2|\n|n1 -le n2|检查n1是否小于等于n2|\n|n1 -lt n2|检查n1是否小于n2|\n|n1 -ne n2|检查n1是否不等于n2|\n\n##### 字符串比较\n\n|比较|描述|\n|:---:|:---:|\n|str1 = str2|检查字符串是否相同|\n|str1 != str2|检查字符串是否不同|\n|str1 < str2|检查str1是否比str2大|\n|str1 \\> str2|检查str1是否比str2小|\n|-n str1|检查str1的长度是否非0|\n|-z str1|检查str1的长度是否为0|\n\n> 需要注意的是，大于号和小于号在使用时需要转义\n\n##### 文件比较\n\n|比较|描述|\n|:---:|:---:|\n|-e file|如果file存在，则为真|\n|-d file|如果file存在并为目录，则为真|\n|-f file|如果file为常规文件，则为真|\n|-r file|如果file存在并可读，则为真|\n|-s file|如果file存在并非空，则为真|\n|-w file|如果file存在并可写，则为真|\n|-x file|如果file存在并可执行，则为真|\n|-O file|如果file存在并属于当前用户，则为真|\n|-G file|如果file存在并且默认组与当前用户相同，则为真|\n|file1 -nt file2|如果file1比file2新，则为真|\n|file1 -ot file2|如果file1比file2旧，则为真|\n\n##### 复合条件测试\n\nif-then可以用`&&`和`||`来组合测试\n\n#### if-then的高级特性\n\n##### 使用双括号\n\n双括号命令允许你在比较过程中使用高级数学表达式。其格式如下：\n> ((expression))\n\n双括号命令符号包括以下：\nval++，val--，++val，--val，!，~，**(幂运算)，<<，>>，&，|，&&，||\n\n##### 使用双方括号\n\n双方括号命令提供了针对字符串比较的高级特性。其格式如下：\n> [[expression]]\n\n```\nif [[ $USER == r* ]]\n```\n\n#### case命令\n\n```\ncase variable in\npattern1 | pattern2) commands1;;\npattern3) commands2;;\n*) default commands;;\nesac\n```\n\n#### for命令\n\n```\nfor var in list\ndo\n  commands\ndone\n```\n\nfor循环假定每个值都是用空格分割的。\n可以使用内部字段分隔符`IFS`来自定义分隔符，例如\n\n> IFS=$'\\n'\n  IFS=$'\\n':;\"\n\n##### C语言分隔的for命令\n\n命令格式：\n> for (( variable assignment ; condition ; iteration process ))\n\n#### while命令\n\nwhile命令的基本格式：\n\n```\nwhile test command\ndo\n  other commands\ndone\n```\n\n#### until命令\n\nuntil命令和while命令正好相反，只有测试命令的退出状态码不为0，bash shell才会执行循环中列出的命令。\n\n命令格式：\n\n```\nuntil test commands\ndo\n  other commands\ndone\n```\n\n#### 循环处理文件数据\n\n需要使用嵌套循环以及修改IFS环境变量\n\n```\n#!/bin/bash\n\nIFS.OLD=$IFS\nIFS=$'\\n'\nfor entry in $(cat /etc/passwd)\ndo\n  echo \"Value in $entry\"\n  IFS=:\n  for value in $entry\n  do\n    if [ -n \"$value\" ]\n    then\n      echo \"$value\"\n    fi\n  done\ndone\n```\n\n#### 控制循环\n\n##### break命令\n\n可以用break退出任意的循环，包括while和until循环。\n也可以使用`break -n`跳出外部循环，默认为1。\n\n##### continue命令\n\ncontinue命令可以提前终止某次循环中的命令，但并不会完全终止整个循环。\n也可以使用`continue -n`继续执行哪一层循环。\n\n#### 处理循环的输出\n\n可以对循环的输出使用管道或重定向。通过在done命令之后添加一个处理命令来实现。\n\n> done > output.txt\n\n#### 例子\n\n创建多个用户账户\n\n```\n#!/bin/bash\n\ninput=\"user.csv\"\nwhile IFS=\",\" read -r userid name\ndo\n  echo \"adding $userid\"\n  useradd -c \"$name\" -m \"userid\" \ndone < \"$input\"\n```\n","slug":"Linux-shell","published":1,"updated":"2018-02-04T08:02:08.867Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjd8i92150009tyasccuvs33q","content":"<h3 id=\"创建shell脚本文件\"><a href=\"#创建shell脚本文件\" class=\"headerlink\" title=\"创建shell脚本文件\"></a>创建shell脚本文件</h3><p>在创建shell脚本文件时，必须在文件的第一行指定要使用的shell。其格式为</p>\n<blockquote>\n<p>#!/bin/bash<br>  注意：shell只会去处理第一行注释行，并不会处理其他的注释行。</p>\n</blockquote>\n<p>创建shell脚本文件后，给文件添加执行权限</p>\n<blockquote>\n<p>chmod u+x filename</p>\n</blockquote>\n<p>如果想把脚本中的文本字符串和命令输出显示在同一行中，可以用echo语句的-n参数</p>\n<blockquote>\n<p>echo -n “The time and date are: “<br>  date</p>\n</blockquote>\n<p>使用等号将值赋给用户变量时，在变量、等号和值之间不能出现空格。</p>\n<blockquote>\n<p>testing=`date`<br>  testing=$(date)</p>\n</blockquote>\n<p>引用一个变量值时需要使用$，而引用变量来对其进行赋值时则不要使用$：</p>\n<blockquote>\n<p>value1=10<br>  value2=$value1<br>  # 注意：没有使用$，shell会将变量名解释成普通的文本字符串。</p>\n</blockquote>\n<h4 id=\"命令替换\"><a href=\"#命令替换\" class=\"headerlink\" title=\"命令替换\"></a>命令替换</h4><p>有两种方法可以将命令输出赋给变量：</p>\n<ol>\n<li><p>反引号字符``</p>\n</li>\n<li><p>$()格式</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">testing=`date`</span><br><span class=\"line\">testing=$(date)</span><br><span class=\"line\">echo &quot;The date and time are: &quot; $testing</span><br><span class=\"line\"></span><br><span class=\"line\">today=$(date +%y%m%d)</span><br><span class=\"line\">ls /usr/bin -al &gt; log.$today</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h4 id=\"重定向\"><a href=\"#重定向\" class=\"headerlink\" title=\"重定向\"></a>重定向</h4><p>重定向包括输出重定向<code>&gt;  &gt;&gt;</code>以及输入重定向<code>&lt;  &lt;&lt;</code></p>\n<blockquote>\n<p>内联输入重定向</p>\n</blockquote>\n<h4 id=\"执行数学运算\"><a href=\"#执行数学运算\" class=\"headerlink\" title=\"执行数学运算\"></a>执行数学运算</h4><h5 id=\"expr命令\"><a href=\"#expr命令\" class=\"headerlink\" title=\"expr命令\"></a>expr命令</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">expr 1 + 5</span><br><span class=\"line\">6</span><br></pre></td></tr></table></figure>\n<h5 id=\"使用方括号\"><a href=\"#使用方括号\" class=\"headerlink\" title=\"使用方括号\"></a>使用方括号</h5><p>如果需要将一个数学运算结果赋给某个变量，可以用美元符和方括号：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var1=100</span><br><span class=\"line\">var2=50</span><br><span class=\"line\">var3=30</span><br><span class=\"line\">var4=$[$var1 * ($var3 - $var2)]</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>需要注意的是，bash shell数学运算符只支持整数运算。</p>\n</blockquote>\n<h5 id=\"浮点解决方案\"><a href=\"#浮点解决方案\" class=\"headerlink\" title=\"浮点解决方案\"></a>浮点解决方案</h5><p>在脚本中使用bc，基本格式如下：</p>\n<blockquote>\n<p>variable=$(echo “options; expression” | bc)</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var1=20</span><br><span class=\"line\">var2=3.14159</span><br><span class=\"line\">var3=$(echo &quot;scale=4; $var1 * var2&quot; | bc)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var1=10.46</span><br><span class=\"line\">var2=43.67</span><br><span class=\"line\">var3=33.2</span><br><span class=\"line\">var4=71</span><br><span class=\"line\"></span><br><span class=\"line\">var5=$(bc &lt;&lt; EOF</span><br><span class=\"line\">scale = 4</span><br><span class=\"line\">a1 = ($var1 * $var2)</span><br><span class=\"line\">b1 = ($var3 * $var4)</span><br><span class=\"line\">a1 + b1</span><br><span class=\"line\">EOF</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\">echo $var5</span><br></pre></td></tr></table></figure>\n<h4 id=\"退出脚本\"><a href=\"#退出脚本\" class=\"headerlink\" title=\"退出脚本\"></a>退出脚本</h4><p>退出状态码的查看<code>$?</code></p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">状态码</th>\n<th style=\"text-align:center\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">0</td>\n<td style=\"text-align:center\">命令成功结束</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\">通用未知错误</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">2</td>\n<td style=\"text-align:center\">误用Shell命令</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">126</td>\n<td style=\"text-align:center\">命令不可执行</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">127</td>\n<td style=\"text-align:center\">没找到命令</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">128</td>\n<td style=\"text-align:center\">无效退出参数</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">128+x</td>\n<td style=\"text-align:center\">Linux信号x的严重错误</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">130</td>\n<td style=\"text-align:center\">命令通过Ctrl+C控制码越界</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">255</td>\n<td style=\"text-align:center\">退出码越界</td>\n</tr>\n</tbody>\n</table>\n<p>exit命令</p>\n<h3 id=\"结构化命令\"><a href=\"#结构化命令\" class=\"headerlink\" title=\"结构化命令\"></a>结构化命令</h3><h4 id=\"if-then\"><a href=\"#if-then\" class=\"headerlink\" title=\"if-then\"></a>if-then</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if command; then</span><br><span class=\"line\">  commands</span><br><span class=\"line\">fi</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if pwd; then</span><br><span class=\"line\">  echo &quot;It worked&quot;</span><br><span class=\"line\">fi</span><br></pre></td></tr></table></figure>\n<h4 id=\"if-then-else\"><a href=\"#if-then-else\" class=\"headerlink\" title=\"if-then-else\"></a>if-then-else</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if command</span><br><span class=\"line\">then </span><br><span class=\"line\">  commands</span><br><span class=\"line\">else</span><br><span class=\"line\">  commands</span><br><span class=\"line\">fi</span><br></pre></td></tr></table></figure>\n<h4 id=\"嵌套if\"><a href=\"#嵌套if\" class=\"headerlink\" title=\"嵌套if\"></a>嵌套if</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if command1</span><br><span class=\"line\">then</span><br><span class=\"line\">  commands</span><br><span class=\"line\">else</span><br><span class=\"line\">  if command2</span><br><span class=\"line\">  then</span><br><span class=\"line\">    more commands</span><br><span class=\"line\">  else</span><br><span class=\"line\">    more commands</span><br><span class=\"line\">  fi</span><br><span class=\"line\">fi</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if command1</span><br><span class=\"line\">then</span><br><span class=\"line\">  commands</span><br><span class=\"line\">elif command2</span><br><span class=\"line\">then</span><br><span class=\"line\">  more commands</span><br><span class=\"line\">fi</span><br></pre></td></tr></table></figure>\n<h4 id=\"test命令\"><a href=\"#test命令\" class=\"headerlink\" title=\"test命令\"></a>test命令</h4><p>如果test命令中列出的条件成立，test命令就会退出并返回退出状态码0。</p>\n<blockquote>\n<p>test condition</p>\n</blockquote>\n<p>或者可以用在<code>if-then</code>语句中</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if test condition</span><br><span class=\"line\">then</span><br><span class=\"line\">  commands</span><br><span class=\"line\">fi</span><br></pre></td></tr></table></figure>\n<p>也可以使用方括号进行测试</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if [ condition ]</span><br><span class=\"line\">then</span><br><span class=\"line\">  commands</span><br><span class=\"line\">fi</span><br></pre></td></tr></table></figure>\n<h5 id=\"数值比较\"><a href=\"#数值比较\" class=\"headerlink\" title=\"数值比较\"></a>数值比较</h5><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">比较</th>\n<th style=\"text-align:center\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">n1 -eq n2</td>\n<td style=\"text-align:center\">检查n1是否等于n2</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">n1 -ge n2</td>\n<td style=\"text-align:center\">检查n1是否大于等于n2</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">n1 -gt n2</td>\n<td style=\"text-align:center\">检查n1是否大于n2</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">n1 -le n2</td>\n<td style=\"text-align:center\">检查n1是否小于等于n2</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">n1 -lt n2</td>\n<td style=\"text-align:center\">检查n1是否小于n2</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">n1 -ne n2</td>\n<td style=\"text-align:center\">检查n1是否不等于n2</td>\n</tr>\n</tbody>\n</table>\n<h5 id=\"字符串比较\"><a href=\"#字符串比较\" class=\"headerlink\" title=\"字符串比较\"></a>字符串比较</h5><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">比较</th>\n<th style=\"text-align:center\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">str1 = str2</td>\n<td style=\"text-align:center\">检查字符串是否相同</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">str1 != str2</td>\n<td style=\"text-align:center\">检查字符串是否不同</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">str1 &lt; str2</td>\n<td style=\"text-align:center\">检查str1是否比str2大</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">str1 > str2</td>\n<td style=\"text-align:center\">检查str1是否比str2小</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">-n str1</td>\n<td style=\"text-align:center\">检查str1的长度是否非0</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">-z str1</td>\n<td style=\"text-align:center\">检查str1的长度是否为0</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p>需要注意的是，大于号和小于号在使用时需要转义</p>\n</blockquote>\n<h5 id=\"文件比较\"><a href=\"#文件比较\" class=\"headerlink\" title=\"文件比较\"></a>文件比较</h5><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">比较</th>\n<th style=\"text-align:center\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">-e file</td>\n<td style=\"text-align:center\">如果file存在，则为真</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">-d file</td>\n<td style=\"text-align:center\">如果file存在并为目录，则为真</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">-f file</td>\n<td style=\"text-align:center\">如果file为常规文件，则为真</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">-r file</td>\n<td style=\"text-align:center\">如果file存在并可读，则为真</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">-s file</td>\n<td style=\"text-align:center\">如果file存在并非空，则为真</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">-w file</td>\n<td style=\"text-align:center\">如果file存在并可写，则为真</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">-x file</td>\n<td style=\"text-align:center\">如果file存在并可执行，则为真</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">-O file</td>\n<td style=\"text-align:center\">如果file存在并属于当前用户，则为真</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">-G file</td>\n<td style=\"text-align:center\">如果file存在并且默认组与当前用户相同，则为真</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">file1 -nt file2</td>\n<td style=\"text-align:center\">如果file1比file2新，则为真</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">file1 -ot file2</td>\n<td style=\"text-align:center\">如果file1比file2旧，则为真</td>\n</tr>\n</tbody>\n</table>\n<h5 id=\"复合条件测试\"><a href=\"#复合条件测试\" class=\"headerlink\" title=\"复合条件测试\"></a>复合条件测试</h5><p>if-then可以用<code>&amp;&amp;</code>和<code>||</code>来组合测试</p>\n<h4 id=\"if-then的高级特性\"><a href=\"#if-then的高级特性\" class=\"headerlink\" title=\"if-then的高级特性\"></a>if-then的高级特性</h4><h5 id=\"使用双括号\"><a href=\"#使用双括号\" class=\"headerlink\" title=\"使用双括号\"></a>使用双括号</h5><p>双括号命令允许你在比较过程中使用高级数学表达式。其格式如下：</p>\n<blockquote>\n<p>((expression))</p>\n</blockquote>\n<p>双括号命令符号包括以下：<br>val++，val–，++val，–val，!，~，**(幂运算)，&lt;&lt;，&gt;&gt;，&amp;，|，&amp;&amp;，||</p>\n<h5 id=\"使用双方括号\"><a href=\"#使用双方括号\" class=\"headerlink\" title=\"使用双方括号\"></a>使用双方括号</h5><p>双方括号命令提供了针对字符串比较的高级特性。其格式如下：</p>\n<blockquote>\n<p>[[expression]]</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if [[ $USER == r* ]]</span><br></pre></td></tr></table></figure>\n<h4 id=\"case命令\"><a href=\"#case命令\" class=\"headerlink\" title=\"case命令\"></a>case命令</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">case variable in</span><br><span class=\"line\">pattern1 | pattern2) commands1;;</span><br><span class=\"line\">pattern3) commands2;;</span><br><span class=\"line\">*) default commands;;</span><br><span class=\"line\">esac</span><br></pre></td></tr></table></figure>\n<h4 id=\"for命令\"><a href=\"#for命令\" class=\"headerlink\" title=\"for命令\"></a>for命令</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">for var in list</span><br><span class=\"line\">do</span><br><span class=\"line\">  commands</span><br><span class=\"line\">done</span><br></pre></td></tr></table></figure>\n<p>for循环假定每个值都是用空格分割的。<br>可以使用内部字段分隔符<code>IFS</code>来自定义分隔符，例如</p>\n<blockquote>\n<p>IFS=$’\\n’<br>  IFS=$’\\n’:;”</p>\n</blockquote>\n<h5 id=\"C语言分隔的for命令\"><a href=\"#C语言分隔的for命令\" class=\"headerlink\" title=\"C语言分隔的for命令\"></a>C语言分隔的for命令</h5><p>命令格式：</p>\n<blockquote>\n<p>for (( variable assignment ; condition ; iteration process ))</p>\n</blockquote>\n<h4 id=\"while命令\"><a href=\"#while命令\" class=\"headerlink\" title=\"while命令\"></a>while命令</h4><p>while命令的基本格式：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">while test command</span><br><span class=\"line\">do</span><br><span class=\"line\">  other commands</span><br><span class=\"line\">done</span><br></pre></td></tr></table></figure>\n<h4 id=\"until命令\"><a href=\"#until命令\" class=\"headerlink\" title=\"until命令\"></a>until命令</h4><p>until命令和while命令正好相反，只有测试命令的退出状态码不为0，bash shell才会执行循环中列出的命令。</p>\n<p>命令格式：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">until test commands</span><br><span class=\"line\">do</span><br><span class=\"line\">  other commands</span><br><span class=\"line\">done</span><br></pre></td></tr></table></figure>\n<h4 id=\"循环处理文件数据\"><a href=\"#循环处理文件数据\" class=\"headerlink\" title=\"循环处理文件数据\"></a>循环处理文件数据</h4><p>需要使用嵌套循环以及修改IFS环境变量</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#!/bin/bash</span><br><span class=\"line\"></span><br><span class=\"line\">IFS.OLD=$IFS</span><br><span class=\"line\">IFS=$&apos;\\n&apos;</span><br><span class=\"line\">for entry in $(cat /etc/passwd)</span><br><span class=\"line\">do</span><br><span class=\"line\">  echo &quot;Value in $entry&quot;</span><br><span class=\"line\">  IFS=:</span><br><span class=\"line\">  for value in $entry</span><br><span class=\"line\">  do</span><br><span class=\"line\">    if [ -n &quot;$value&quot; ]</span><br><span class=\"line\">    then</span><br><span class=\"line\">      echo &quot;$value&quot;</span><br><span class=\"line\">    fi</span><br><span class=\"line\">  done</span><br><span class=\"line\">done</span><br></pre></td></tr></table></figure>\n<h4 id=\"控制循环\"><a href=\"#控制循环\" class=\"headerlink\" title=\"控制循环\"></a>控制循环</h4><h5 id=\"break命令\"><a href=\"#break命令\" class=\"headerlink\" title=\"break命令\"></a>break命令</h5><p>可以用break退出任意的循环，包括while和until循环。<br>也可以使用<code>break -n</code>跳出外部循环，默认为1。</p>\n<h5 id=\"continue命令\"><a href=\"#continue命令\" class=\"headerlink\" title=\"continue命令\"></a>continue命令</h5><p>continue命令可以提前终止某次循环中的命令，但并不会完全终止整个循环。<br>也可以使用<code>continue -n</code>继续执行哪一层循环。</p>\n<h4 id=\"处理循环的输出\"><a href=\"#处理循环的输出\" class=\"headerlink\" title=\"处理循环的输出\"></a>处理循环的输出</h4><p>可以对循环的输出使用管道或重定向。通过在done命令之后添加一个处理命令来实现。</p>\n<blockquote>\n<p>done &gt; output.txt</p>\n</blockquote>\n<h4 id=\"例子\"><a href=\"#例子\" class=\"headerlink\" title=\"例子\"></a>例子</h4><p>创建多个用户账户</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#!/bin/bash</span><br><span class=\"line\"></span><br><span class=\"line\">input=&quot;user.csv&quot;</span><br><span class=\"line\">while IFS=&quot;,&quot; read -r userid name</span><br><span class=\"line\">do</span><br><span class=\"line\">  echo &quot;adding $userid&quot;</span><br><span class=\"line\">  useradd -c &quot;$name&quot; -m &quot;userid&quot; </span><br><span class=\"line\">done &lt; &quot;$input&quot;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"创建shell脚本文件\"><a href=\"#创建shell脚本文件\" class=\"headerlink\" title=\"创建shell脚本文件\"></a>创建shell脚本文件</h3><p>在创建shell脚本文件时，必须在文件的第一行指定要使用的shell。其格式为</p>\n<blockquote>\n<p>#!/bin/bash<br>  注意：shell只会去处理第一行注释行，并不会处理其他的注释行。</p>\n</blockquote>\n<p>创建shell脚本文件后，给文件添加执行权限</p>\n<blockquote>\n<p>chmod u+x filename</p>\n</blockquote>\n<p>如果想把脚本中的文本字符串和命令输出显示在同一行中，可以用echo语句的-n参数</p>\n<blockquote>\n<p>echo -n “The time and date are: “<br>  date</p>\n</blockquote>\n<p>使用等号将值赋给用户变量时，在变量、等号和值之间不能出现空格。</p>\n<blockquote>\n<p>testing=`date`<br>  testing=$(date)</p>\n</blockquote>\n<p>引用一个变量值时需要使用$，而引用变量来对其进行赋值时则不要使用$：</p>\n<blockquote>\n<p>value1=10<br>  value2=$value1<br>  # 注意：没有使用$，shell会将变量名解释成普通的文本字符串。</p>\n</blockquote>\n<h4 id=\"命令替换\"><a href=\"#命令替换\" class=\"headerlink\" title=\"命令替换\"></a>命令替换</h4><p>有两种方法可以将命令输出赋给变量：</p>\n<ol>\n<li><p>反引号字符``</p>\n</li>\n<li><p>$()格式</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">testing=`date`</span><br><span class=\"line\">testing=$(date)</span><br><span class=\"line\">echo &quot;The date and time are: &quot; $testing</span><br><span class=\"line\"></span><br><span class=\"line\">today=$(date +%y%m%d)</span><br><span class=\"line\">ls /usr/bin -al &gt; log.$today</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h4 id=\"重定向\"><a href=\"#重定向\" class=\"headerlink\" title=\"重定向\"></a>重定向</h4><p>重定向包括输出重定向<code>&gt;  &gt;&gt;</code>以及输入重定向<code>&lt;  &lt;&lt;</code></p>\n<blockquote>\n<p>内联输入重定向</p>\n</blockquote>\n<h4 id=\"执行数学运算\"><a href=\"#执行数学运算\" class=\"headerlink\" title=\"执行数学运算\"></a>执行数学运算</h4><h5 id=\"expr命令\"><a href=\"#expr命令\" class=\"headerlink\" title=\"expr命令\"></a>expr命令</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">expr 1 + 5</span><br><span class=\"line\">6</span><br></pre></td></tr></table></figure>\n<h5 id=\"使用方括号\"><a href=\"#使用方括号\" class=\"headerlink\" title=\"使用方括号\"></a>使用方括号</h5><p>如果需要将一个数学运算结果赋给某个变量，可以用美元符和方括号：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var1=100</span><br><span class=\"line\">var2=50</span><br><span class=\"line\">var3=30</span><br><span class=\"line\">var4=$[$var1 * ($var3 - $var2)]</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>需要注意的是，bash shell数学运算符只支持整数运算。</p>\n</blockquote>\n<h5 id=\"浮点解决方案\"><a href=\"#浮点解决方案\" class=\"headerlink\" title=\"浮点解决方案\"></a>浮点解决方案</h5><p>在脚本中使用bc，基本格式如下：</p>\n<blockquote>\n<p>variable=$(echo “options; expression” | bc)</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var1=20</span><br><span class=\"line\">var2=3.14159</span><br><span class=\"line\">var3=$(echo &quot;scale=4; $var1 * var2&quot; | bc)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var1=10.46</span><br><span class=\"line\">var2=43.67</span><br><span class=\"line\">var3=33.2</span><br><span class=\"line\">var4=71</span><br><span class=\"line\"></span><br><span class=\"line\">var5=$(bc &lt;&lt; EOF</span><br><span class=\"line\">scale = 4</span><br><span class=\"line\">a1 = ($var1 * $var2)</span><br><span class=\"line\">b1 = ($var3 * $var4)</span><br><span class=\"line\">a1 + b1</span><br><span class=\"line\">EOF</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\">echo $var5</span><br></pre></td></tr></table></figure>\n<h4 id=\"退出脚本\"><a href=\"#退出脚本\" class=\"headerlink\" title=\"退出脚本\"></a>退出脚本</h4><p>退出状态码的查看<code>$?</code></p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">状态码</th>\n<th style=\"text-align:center\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">0</td>\n<td style=\"text-align:center\">命令成功结束</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\">通用未知错误</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">2</td>\n<td style=\"text-align:center\">误用Shell命令</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">126</td>\n<td style=\"text-align:center\">命令不可执行</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">127</td>\n<td style=\"text-align:center\">没找到命令</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">128</td>\n<td style=\"text-align:center\">无效退出参数</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">128+x</td>\n<td style=\"text-align:center\">Linux信号x的严重错误</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">130</td>\n<td style=\"text-align:center\">命令通过Ctrl+C控制码越界</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">255</td>\n<td style=\"text-align:center\">退出码越界</td>\n</tr>\n</tbody>\n</table>\n<p>exit命令</p>\n<h3 id=\"结构化命令\"><a href=\"#结构化命令\" class=\"headerlink\" title=\"结构化命令\"></a>结构化命令</h3><h4 id=\"if-then\"><a href=\"#if-then\" class=\"headerlink\" title=\"if-then\"></a>if-then</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if command; then</span><br><span class=\"line\">  commands</span><br><span class=\"line\">fi</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if pwd; then</span><br><span class=\"line\">  echo &quot;It worked&quot;</span><br><span class=\"line\">fi</span><br></pre></td></tr></table></figure>\n<h4 id=\"if-then-else\"><a href=\"#if-then-else\" class=\"headerlink\" title=\"if-then-else\"></a>if-then-else</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if command</span><br><span class=\"line\">then </span><br><span class=\"line\">  commands</span><br><span class=\"line\">else</span><br><span class=\"line\">  commands</span><br><span class=\"line\">fi</span><br></pre></td></tr></table></figure>\n<h4 id=\"嵌套if\"><a href=\"#嵌套if\" class=\"headerlink\" title=\"嵌套if\"></a>嵌套if</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if command1</span><br><span class=\"line\">then</span><br><span class=\"line\">  commands</span><br><span class=\"line\">else</span><br><span class=\"line\">  if command2</span><br><span class=\"line\">  then</span><br><span class=\"line\">    more commands</span><br><span class=\"line\">  else</span><br><span class=\"line\">    more commands</span><br><span class=\"line\">  fi</span><br><span class=\"line\">fi</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if command1</span><br><span class=\"line\">then</span><br><span class=\"line\">  commands</span><br><span class=\"line\">elif command2</span><br><span class=\"line\">then</span><br><span class=\"line\">  more commands</span><br><span class=\"line\">fi</span><br></pre></td></tr></table></figure>\n<h4 id=\"test命令\"><a href=\"#test命令\" class=\"headerlink\" title=\"test命令\"></a>test命令</h4><p>如果test命令中列出的条件成立，test命令就会退出并返回退出状态码0。</p>\n<blockquote>\n<p>test condition</p>\n</blockquote>\n<p>或者可以用在<code>if-then</code>语句中</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if test condition</span><br><span class=\"line\">then</span><br><span class=\"line\">  commands</span><br><span class=\"line\">fi</span><br></pre></td></tr></table></figure>\n<p>也可以使用方括号进行测试</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if [ condition ]</span><br><span class=\"line\">then</span><br><span class=\"line\">  commands</span><br><span class=\"line\">fi</span><br></pre></td></tr></table></figure>\n<h5 id=\"数值比较\"><a href=\"#数值比较\" class=\"headerlink\" title=\"数值比较\"></a>数值比较</h5><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">比较</th>\n<th style=\"text-align:center\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">n1 -eq n2</td>\n<td style=\"text-align:center\">检查n1是否等于n2</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">n1 -ge n2</td>\n<td style=\"text-align:center\">检查n1是否大于等于n2</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">n1 -gt n2</td>\n<td style=\"text-align:center\">检查n1是否大于n2</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">n1 -le n2</td>\n<td style=\"text-align:center\">检查n1是否小于等于n2</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">n1 -lt n2</td>\n<td style=\"text-align:center\">检查n1是否小于n2</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">n1 -ne n2</td>\n<td style=\"text-align:center\">检查n1是否不等于n2</td>\n</tr>\n</tbody>\n</table>\n<h5 id=\"字符串比较\"><a href=\"#字符串比较\" class=\"headerlink\" title=\"字符串比较\"></a>字符串比较</h5><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">比较</th>\n<th style=\"text-align:center\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">str1 = str2</td>\n<td style=\"text-align:center\">检查字符串是否相同</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">str1 != str2</td>\n<td style=\"text-align:center\">检查字符串是否不同</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">str1 &lt; str2</td>\n<td style=\"text-align:center\">检查str1是否比str2大</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">str1 > str2</td>\n<td style=\"text-align:center\">检查str1是否比str2小</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">-n str1</td>\n<td style=\"text-align:center\">检查str1的长度是否非0</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">-z str1</td>\n<td style=\"text-align:center\">检查str1的长度是否为0</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p>需要注意的是，大于号和小于号在使用时需要转义</p>\n</blockquote>\n<h5 id=\"文件比较\"><a href=\"#文件比较\" class=\"headerlink\" title=\"文件比较\"></a>文件比较</h5><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">比较</th>\n<th style=\"text-align:center\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">-e file</td>\n<td style=\"text-align:center\">如果file存在，则为真</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">-d file</td>\n<td style=\"text-align:center\">如果file存在并为目录，则为真</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">-f file</td>\n<td style=\"text-align:center\">如果file为常规文件，则为真</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">-r file</td>\n<td style=\"text-align:center\">如果file存在并可读，则为真</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">-s file</td>\n<td style=\"text-align:center\">如果file存在并非空，则为真</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">-w file</td>\n<td style=\"text-align:center\">如果file存在并可写，则为真</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">-x file</td>\n<td style=\"text-align:center\">如果file存在并可执行，则为真</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">-O file</td>\n<td style=\"text-align:center\">如果file存在并属于当前用户，则为真</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">-G file</td>\n<td style=\"text-align:center\">如果file存在并且默认组与当前用户相同，则为真</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">file1 -nt file2</td>\n<td style=\"text-align:center\">如果file1比file2新，则为真</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">file1 -ot file2</td>\n<td style=\"text-align:center\">如果file1比file2旧，则为真</td>\n</tr>\n</tbody>\n</table>\n<h5 id=\"复合条件测试\"><a href=\"#复合条件测试\" class=\"headerlink\" title=\"复合条件测试\"></a>复合条件测试</h5><p>if-then可以用<code>&amp;&amp;</code>和<code>||</code>来组合测试</p>\n<h4 id=\"if-then的高级特性\"><a href=\"#if-then的高级特性\" class=\"headerlink\" title=\"if-then的高级特性\"></a>if-then的高级特性</h4><h5 id=\"使用双括号\"><a href=\"#使用双括号\" class=\"headerlink\" title=\"使用双括号\"></a>使用双括号</h5><p>双括号命令允许你在比较过程中使用高级数学表达式。其格式如下：</p>\n<blockquote>\n<p>((expression))</p>\n</blockquote>\n<p>双括号命令符号包括以下：<br>val++，val–，++val，–val，!，~，**(幂运算)，&lt;&lt;，&gt;&gt;，&amp;，|，&amp;&amp;，||</p>\n<h5 id=\"使用双方括号\"><a href=\"#使用双方括号\" class=\"headerlink\" title=\"使用双方括号\"></a>使用双方括号</h5><p>双方括号命令提供了针对字符串比较的高级特性。其格式如下：</p>\n<blockquote>\n<p>[[expression]]</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if [[ $USER == r* ]]</span><br></pre></td></tr></table></figure>\n<h4 id=\"case命令\"><a href=\"#case命令\" class=\"headerlink\" title=\"case命令\"></a>case命令</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">case variable in</span><br><span class=\"line\">pattern1 | pattern2) commands1;;</span><br><span class=\"line\">pattern3) commands2;;</span><br><span class=\"line\">*) default commands;;</span><br><span class=\"line\">esac</span><br></pre></td></tr></table></figure>\n<h4 id=\"for命令\"><a href=\"#for命令\" class=\"headerlink\" title=\"for命令\"></a>for命令</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">for var in list</span><br><span class=\"line\">do</span><br><span class=\"line\">  commands</span><br><span class=\"line\">done</span><br></pre></td></tr></table></figure>\n<p>for循环假定每个值都是用空格分割的。<br>可以使用内部字段分隔符<code>IFS</code>来自定义分隔符，例如</p>\n<blockquote>\n<p>IFS=$’\\n’<br>  IFS=$’\\n’:;”</p>\n</blockquote>\n<h5 id=\"C语言分隔的for命令\"><a href=\"#C语言分隔的for命令\" class=\"headerlink\" title=\"C语言分隔的for命令\"></a>C语言分隔的for命令</h5><p>命令格式：</p>\n<blockquote>\n<p>for (( variable assignment ; condition ; iteration process ))</p>\n</blockquote>\n<h4 id=\"while命令\"><a href=\"#while命令\" class=\"headerlink\" title=\"while命令\"></a>while命令</h4><p>while命令的基本格式：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">while test command</span><br><span class=\"line\">do</span><br><span class=\"line\">  other commands</span><br><span class=\"line\">done</span><br></pre></td></tr></table></figure>\n<h4 id=\"until命令\"><a href=\"#until命令\" class=\"headerlink\" title=\"until命令\"></a>until命令</h4><p>until命令和while命令正好相反，只有测试命令的退出状态码不为0，bash shell才会执行循环中列出的命令。</p>\n<p>命令格式：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">until test commands</span><br><span class=\"line\">do</span><br><span class=\"line\">  other commands</span><br><span class=\"line\">done</span><br></pre></td></tr></table></figure>\n<h4 id=\"循环处理文件数据\"><a href=\"#循环处理文件数据\" class=\"headerlink\" title=\"循环处理文件数据\"></a>循环处理文件数据</h4><p>需要使用嵌套循环以及修改IFS环境变量</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#!/bin/bash</span><br><span class=\"line\"></span><br><span class=\"line\">IFS.OLD=$IFS</span><br><span class=\"line\">IFS=$&apos;\\n&apos;</span><br><span class=\"line\">for entry in $(cat /etc/passwd)</span><br><span class=\"line\">do</span><br><span class=\"line\">  echo &quot;Value in $entry&quot;</span><br><span class=\"line\">  IFS=:</span><br><span class=\"line\">  for value in $entry</span><br><span class=\"line\">  do</span><br><span class=\"line\">    if [ -n &quot;$value&quot; ]</span><br><span class=\"line\">    then</span><br><span class=\"line\">      echo &quot;$value&quot;</span><br><span class=\"line\">    fi</span><br><span class=\"line\">  done</span><br><span class=\"line\">done</span><br></pre></td></tr></table></figure>\n<h4 id=\"控制循环\"><a href=\"#控制循环\" class=\"headerlink\" title=\"控制循环\"></a>控制循环</h4><h5 id=\"break命令\"><a href=\"#break命令\" class=\"headerlink\" title=\"break命令\"></a>break命令</h5><p>可以用break退出任意的循环，包括while和until循环。<br>也可以使用<code>break -n</code>跳出外部循环，默认为1。</p>\n<h5 id=\"continue命令\"><a href=\"#continue命令\" class=\"headerlink\" title=\"continue命令\"></a>continue命令</h5><p>continue命令可以提前终止某次循环中的命令，但并不会完全终止整个循环。<br>也可以使用<code>continue -n</code>继续执行哪一层循环。</p>\n<h4 id=\"处理循环的输出\"><a href=\"#处理循环的输出\" class=\"headerlink\" title=\"处理循环的输出\"></a>处理循环的输出</h4><p>可以对循环的输出使用管道或重定向。通过在done命令之后添加一个处理命令来实现。</p>\n<blockquote>\n<p>done &gt; output.txt</p>\n</blockquote>\n<h4 id=\"例子\"><a href=\"#例子\" class=\"headerlink\" title=\"例子\"></a>例子</h4><p>创建多个用户账户</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#!/bin/bash</span><br><span class=\"line\"></span><br><span class=\"line\">input=&quot;user.csv&quot;</span><br><span class=\"line\">while IFS=&quot;,&quot; read -r userid name</span><br><span class=\"line\">do</span><br><span class=\"line\">  echo &quot;adding $userid&quot;</span><br><span class=\"line\">  useradd -c &quot;$name&quot; -m &quot;userid&quot; </span><br><span class=\"line\">done &lt; &quot;$input&quot;</span><br></pre></td></tr></table></figure>\n"},{"title":"docker的安装和使用","date":"2018-02-01T09:33:36.979Z","modified":null,"_content":"### docker安装\n在最小化安装的情况下，docker是没有安装的，所以不需要先卸载。\n\n> 安装yum-config-manager工具\n\n```\nyum -y install yum-utils\n```\n\n> 设置Docker仓库\n\n```\nyum-config-manager --add-repo https://docs.docker.com/v1.13/engine/installation/linux/repo_files/centos/docker.repo\n```\n\n> 更新yum源并安装最新的docker\n\n```\nyum makecache fast\nyum -y install docker-engine\n```\n\n> 启动docker\n\n```\nsystemctl start docker\nsystemctl enable docker\n```\n\n> 升级docker\n\n```\nyum makecache fast\nyum list docker-engine.x86_64  --showduplicates |sort -r\nyum -y install docker-engine-<VERSION_STRING>\n```\n","source":"_posts/docker.md","raw":"---\ntitle: docker的安装和使用\ndate:\nmodified: \ncategories:\n- Linux\ntags:\n- docker\n- Linux\n---\n### docker安装\n在最小化安装的情况下，docker是没有安装的，所以不需要先卸载。\n\n> 安装yum-config-manager工具\n\n```\nyum -y install yum-utils\n```\n\n> 设置Docker仓库\n\n```\nyum-config-manager --add-repo https://docs.docker.com/v1.13/engine/installation/linux/repo_files/centos/docker.repo\n```\n\n> 更新yum源并安装最新的docker\n\n```\nyum makecache fast\nyum -y install docker-engine\n```\n\n> 启动docker\n\n```\nsystemctl start docker\nsystemctl enable docker\n```\n\n> 升级docker\n\n```\nyum makecache fast\nyum list docker-engine.x86_64  --showduplicates |sort -r\nyum -y install docker-engine-<VERSION_STRING>\n```\n","slug":"docker","published":1,"updated":"2018-02-01T09:33:36.977Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjd8i9218000atyas0wzm0z1o","content":"<h3 id=\"docker安装\"><a href=\"#docker安装\" class=\"headerlink\" title=\"docker安装\"></a>docker安装</h3><p>在最小化安装的情况下，docker是没有安装的，所以不需要先卸载。</p>\n<blockquote>\n<p>安装yum-config-manager工具</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum -y install yum-utils</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>设置Docker仓库</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum-config-manager --add-repo https://docs.docker.com/v1.13/engine/installation/linux/repo_files/centos/docker.repo</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>更新yum源并安装最新的docker</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum makecache fast</span><br><span class=\"line\">yum -y install docker-engine</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>启动docker</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl start docker</span><br><span class=\"line\">systemctl enable docker</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>升级docker</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum makecache fast</span><br><span class=\"line\">yum list docker-engine.x86_64  --showduplicates |sort -r</span><br><span class=\"line\">yum -y install docker-engine-&lt;VERSION_STRING&gt;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"docker安装\"><a href=\"#docker安装\" class=\"headerlink\" title=\"docker安装\"></a>docker安装</h3><p>在最小化安装的情况下，docker是没有安装的，所以不需要先卸载。</p>\n<blockquote>\n<p>安装yum-config-manager工具</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum -y install yum-utils</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>设置Docker仓库</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum-config-manager --add-repo https://docs.docker.com/v1.13/engine/installation/linux/repo_files/centos/docker.repo</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>更新yum源并安装最新的docker</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum makecache fast</span><br><span class=\"line\">yum -y install docker-engine</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>启动docker</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl start docker</span><br><span class=\"line\">systemctl enable docker</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>升级docker</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum makecache fast</span><br><span class=\"line\">yum list docker-engine.x86_64  --showduplicates |sort -r</span><br><span class=\"line\">yum -y install docker-engine-&lt;VERSION_STRING&gt;</span><br></pre></td></tr></table></figure>\n"},{"title":"HEXO安装与使用","date":"2018-02-04T06:36:48.955Z","modified":null,"_content":"\n### nodejs安装\n\n> 通过EPEL的方式进行安装\n\n```\n# 安装epel\nyum install -y epel-release\nyum repolist\n\n# 安装node\nyum install -y nodejs\nnode --version\nyum install npm\n```\n\n### hexo安装\n\n```\nnpm install hexo-cli -g\n```\n\n> 快速新建一个博客系统\n\n```\nhexo init blog\ncd blog\nnpm install\nhexo server\n```\n\n### hexo常用命令\n\n```\n# 清空缓存\nhexo clean\n# 生成静态网页\nhexo g\n# 启动hexo服务，默认端口为4000\nhexo s\n```\n\n### 安装NEXT主题\n> 资源链接\n\nhttps://github.com/iissnan/hexo-theme-next\n\n> 安装方法\n\n```\n$ cd hexo\n$ ls\n_config.yml  node_modules  package.json  public  scaffolds  source  themes\n$ mkdir themes/next\n$ curl -s https://api.github.com/repos/iissnan/hexo-theme-next/releases/latest | grep tarball_url | cut -d '\"' -f 4 | wget -i - -O- | tar -zx -C themes/next --strip-components=1\n```\n\n### NEXT的相关配置\n\n> 对于整个项目，有一个站点配置文件`_config.yml`，该文件位于根目录下，在本项目中位于`/root/blog`目录下，对于每个主题，都有一个主题的配置文件`_config.yml`，位于每个主题的根目录下，在本项目中位于`/root/blog/themes/next`目录下：\n\n```\n$ ls /root/blog/\n_config.yml  node_modules  public     source\ndb.json      package.json  scaffolds  themes\n\n$ ls /root/blog/themes/next/\nbower.json   gulpfile.coffee  layout   package.json  README.md  source\n_config.yml  languages        LICENSE  README.cn.md  scripts    test\n```\n\n\n\n\n### 添加分类标签\n\n> 如果需要给首页添加分页，首先修改主题配置文件，将menu下的about前的#去除：\n\n```\nmenu:\n  home: /\n  #tags: /tags/ || tags\n  categories: /categories/\n  archives: /archives/\n  about: /about/\n  #schedule: /schedule/ || calendar\n  #sitemap: /sitemap.xml || sitemap\n  #commonweal: /404/ || heartbeat\n```\n\n> 然后在source目录下新建一个categories文件夹，并在该文件夹中添加一个index.md文件\n\n```\n$ cd /root/blog/source\n$ mkdir categories/\n$ vim index.md\n```\n\n> 在文件中添加以下内容\n\n```\n---\ntitle: 文章分类\ndate: 日期\ntype: \"categories\"\ncomments: false\n---\n```\n\n> 然后在文件的头部添加以下内容：\n\n```\n---\ntitle: Hello World\ncategories: \n- test\n---\n```\n\n### 添加动态背景\n\n> 打开  next/layout/_layout.swig\n在`</body>`之前添加代码(注意不要放在`</head>`的后面)：\n\n```\n{% if theme.canvas_nest %}\n<script type=\"text/javascript\" src=\"//cdn.bootcss.com/canvas-nest.js/1.0.0/canvas-nest.min.js\"></script>\n{% endif %}\n```\n\n> 修改主题配置文件，将canvas_nest修改为true\n\n```\ncanvas_nest: true\n```\n\n### 添加更新时间\n\n> 修改语言配置文件`/themes/next/languages/zh_Hans.yml`，在post下添加以下内容：\n\n```\npost:\n  updated: 更新于\n```\n\n> 修改主题配置文件`/themes/next/_config.yml`\n\n```\nupdated_at: true\n```\n\n> 写文章的时候可以直接在文章开头设置更新时间\n\n```\nmodified:\n```\n\n### 添加站内搜索\n#### 安装hexo-generator-search\n\n> 在站点的根目录下执行以下命令：\n\n```\nnpm install hexo-generator-search --save\n```\n\n#### 安装 hexo-generator-searchdb\n\n> 在站点的根目录下执行以下命令：\n\n```\nnpm install hexo-generator-searchdb --save\n```\n\n#### 启用搜索\n\n> 编辑站点配置文件，新增以下内容到最后：\n\n```\nsearch:\n  path: search.xml\n  field: post\n  format: html\n  limit: 10000\n```\n\n> 编辑主题配置文件，将local_search下的enable改为true：\n\n```\nlocal_search:\n  enable: true\n```\n\n### 上传代码到github\n\n#### 注册Github的账号\n\n略\n\n#### 创建Repository\n创建的时候需要注意Repository的名字。例如我的Github账号是pchad321，那么应该创建的Repository的名字为：pchad321.github.io\n\n#### 修改配置文件\n\n1. 进入刚刚创建的Repository，复制Repository的连接，例如https://github.com/pchad321/pchad321.github.io.git\n\n2. 修改站点配置文件\n\n  ```\n  deploy:\n    type: git\n    repo: https://github.com/pchad321/pchad321.github.io.git\n    branch: master\n    message: 'updated at:{{now(\"YYYY-MM-DD HH/mm/ss\")}}'\n\n  ```\n\n#### 设置SSH keys\n\n1. 配置本机全局git环境\n\n  ```\n  git config --global user.email \"you@example.com\"\n  git config --global user.name \"Your Name\"\n  ```\n\n2. 生成SSH密钥\n\n  ```\n  # -C后面是github上的用户邮箱地址\n  ssh-keygen -t rsa -C you@126.com\n\n  # 然后一路回车\n  ```\n\n3. 将SSH密钥添加到github中\n\n  ```\n  less ~/.ssh/id_rsa.pub\n  ```\n\n  > 复制出现的一堆密码，然后在github的SSH and GPG keys中粘贴这一段密码\n\n4. 设置的验证\n\n  在本地输入以下代码：\n\n  ```\n  ssh -T git@github.com\n  ```\n\n  > 如果在最后出现了你配置的用户名，说明配置成功\n\n5. 提交代码到github上\n\n  ```\n  hexo generate\n  hexo deploy\n  ```\n\n  > 在提交代码时可能会出现`ERROR Deployer not found: git`的错误，此时只需要运行以下命令\n\n  ```\n  npm install --save hexo-deployer-git\n  ```\n\n#### 将Hexo的源码备份到Github分支里面\n\n上传到分支里存储，修改本地的时候先上传存储，再发布。更换电脑的时候再下载下来源文件\n\n```\n$ git init\n$ git remote add origin git@github.com:username/username.github.io.git\n$ git add .\n$ git commit -m \"blog\"\n$ git push origin master:Hexo-Blog\n```\n\n在本地写好博文后，可以先执行：\n\n```\n$ git add .\n$ git commit -m \"blog\"\n$ git push origin master:Hexo-Blog\n```\n","source":"_posts/hexo_install_use.md","raw":"---\ntitle: HEXO安装与使用 \ndate: \nmodified:\ncategories:\n- 前端\ntags:\n- HEXO\n- Linux \n---\n\n### nodejs安装\n\n> 通过EPEL的方式进行安装\n\n```\n# 安装epel\nyum install -y epel-release\nyum repolist\n\n# 安装node\nyum install -y nodejs\nnode --version\nyum install npm\n```\n\n### hexo安装\n\n```\nnpm install hexo-cli -g\n```\n\n> 快速新建一个博客系统\n\n```\nhexo init blog\ncd blog\nnpm install\nhexo server\n```\n\n### hexo常用命令\n\n```\n# 清空缓存\nhexo clean\n# 生成静态网页\nhexo g\n# 启动hexo服务，默认端口为4000\nhexo s\n```\n\n### 安装NEXT主题\n> 资源链接\n\nhttps://github.com/iissnan/hexo-theme-next\n\n> 安装方法\n\n```\n$ cd hexo\n$ ls\n_config.yml  node_modules  package.json  public  scaffolds  source  themes\n$ mkdir themes/next\n$ curl -s https://api.github.com/repos/iissnan/hexo-theme-next/releases/latest | grep tarball_url | cut -d '\"' -f 4 | wget -i - -O- | tar -zx -C themes/next --strip-components=1\n```\n\n### NEXT的相关配置\n\n> 对于整个项目，有一个站点配置文件`_config.yml`，该文件位于根目录下，在本项目中位于`/root/blog`目录下，对于每个主题，都有一个主题的配置文件`_config.yml`，位于每个主题的根目录下，在本项目中位于`/root/blog/themes/next`目录下：\n\n```\n$ ls /root/blog/\n_config.yml  node_modules  public     source\ndb.json      package.json  scaffolds  themes\n\n$ ls /root/blog/themes/next/\nbower.json   gulpfile.coffee  layout   package.json  README.md  source\n_config.yml  languages        LICENSE  README.cn.md  scripts    test\n```\n\n\n\n\n### 添加分类标签\n\n> 如果需要给首页添加分页，首先修改主题配置文件，将menu下的about前的#去除：\n\n```\nmenu:\n  home: /\n  #tags: /tags/ || tags\n  categories: /categories/\n  archives: /archives/\n  about: /about/\n  #schedule: /schedule/ || calendar\n  #sitemap: /sitemap.xml || sitemap\n  #commonweal: /404/ || heartbeat\n```\n\n> 然后在source目录下新建一个categories文件夹，并在该文件夹中添加一个index.md文件\n\n```\n$ cd /root/blog/source\n$ mkdir categories/\n$ vim index.md\n```\n\n> 在文件中添加以下内容\n\n```\n---\ntitle: 文章分类\ndate: 日期\ntype: \"categories\"\ncomments: false\n---\n```\n\n> 然后在文件的头部添加以下内容：\n\n```\n---\ntitle: Hello World\ncategories: \n- test\n---\n```\n\n### 添加动态背景\n\n> 打开  next/layout/_layout.swig\n在`</body>`之前添加代码(注意不要放在`</head>`的后面)：\n\n```\n{% if theme.canvas_nest %}\n<script type=\"text/javascript\" src=\"//cdn.bootcss.com/canvas-nest.js/1.0.0/canvas-nest.min.js\"></script>\n{% endif %}\n```\n\n> 修改主题配置文件，将canvas_nest修改为true\n\n```\ncanvas_nest: true\n```\n\n### 添加更新时间\n\n> 修改语言配置文件`/themes/next/languages/zh_Hans.yml`，在post下添加以下内容：\n\n```\npost:\n  updated: 更新于\n```\n\n> 修改主题配置文件`/themes/next/_config.yml`\n\n```\nupdated_at: true\n```\n\n> 写文章的时候可以直接在文章开头设置更新时间\n\n```\nmodified:\n```\n\n### 添加站内搜索\n#### 安装hexo-generator-search\n\n> 在站点的根目录下执行以下命令：\n\n```\nnpm install hexo-generator-search --save\n```\n\n#### 安装 hexo-generator-searchdb\n\n> 在站点的根目录下执行以下命令：\n\n```\nnpm install hexo-generator-searchdb --save\n```\n\n#### 启用搜索\n\n> 编辑站点配置文件，新增以下内容到最后：\n\n```\nsearch:\n  path: search.xml\n  field: post\n  format: html\n  limit: 10000\n```\n\n> 编辑主题配置文件，将local_search下的enable改为true：\n\n```\nlocal_search:\n  enable: true\n```\n\n### 上传代码到github\n\n#### 注册Github的账号\n\n略\n\n#### 创建Repository\n创建的时候需要注意Repository的名字。例如我的Github账号是pchad321，那么应该创建的Repository的名字为：pchad321.github.io\n\n#### 修改配置文件\n\n1. 进入刚刚创建的Repository，复制Repository的连接，例如https://github.com/pchad321/pchad321.github.io.git\n\n2. 修改站点配置文件\n\n  ```\n  deploy:\n    type: git\n    repo: https://github.com/pchad321/pchad321.github.io.git\n    branch: master\n    message: 'updated at:{{now(\"YYYY-MM-DD HH/mm/ss\")}}'\n\n  ```\n\n#### 设置SSH keys\n\n1. 配置本机全局git环境\n\n  ```\n  git config --global user.email \"you@example.com\"\n  git config --global user.name \"Your Name\"\n  ```\n\n2. 生成SSH密钥\n\n  ```\n  # -C后面是github上的用户邮箱地址\n  ssh-keygen -t rsa -C you@126.com\n\n  # 然后一路回车\n  ```\n\n3. 将SSH密钥添加到github中\n\n  ```\n  less ~/.ssh/id_rsa.pub\n  ```\n\n  > 复制出现的一堆密码，然后在github的SSH and GPG keys中粘贴这一段密码\n\n4. 设置的验证\n\n  在本地输入以下代码：\n\n  ```\n  ssh -T git@github.com\n  ```\n\n  > 如果在最后出现了你配置的用户名，说明配置成功\n\n5. 提交代码到github上\n\n  ```\n  hexo generate\n  hexo deploy\n  ```\n\n  > 在提交代码时可能会出现`ERROR Deployer not found: git`的错误，此时只需要运行以下命令\n\n  ```\n  npm install --save hexo-deployer-git\n  ```\n\n#### 将Hexo的源码备份到Github分支里面\n\n上传到分支里存储，修改本地的时候先上传存储，再发布。更换电脑的时候再下载下来源文件\n\n```\n$ git init\n$ git remote add origin git@github.com:username/username.github.io.git\n$ git add .\n$ git commit -m \"blog\"\n$ git push origin master:Hexo-Blog\n```\n\n在本地写好博文后，可以先执行：\n\n```\n$ git add .\n$ git commit -m \"blog\"\n$ git push origin master:Hexo-Blog\n```\n","slug":"hexo_install_use","published":1,"updated":"2018-02-04T06:36:48.929Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjd8i921c000etyas2g66xu8h","content":"<h3 id=\"nodejs安装\"><a href=\"#nodejs安装\" class=\"headerlink\" title=\"nodejs安装\"></a>nodejs安装</h3><blockquote>\n<p>通过EPEL的方式进行安装</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 安装epel</span><br><span class=\"line\">yum install -y epel-release</span><br><span class=\"line\">yum repolist</span><br><span class=\"line\"></span><br><span class=\"line\"># 安装node</span><br><span class=\"line\">yum install -y nodejs</span><br><span class=\"line\">node --version</span><br><span class=\"line\">yum install npm</span><br></pre></td></tr></table></figure>\n<h3 id=\"hexo安装\"><a href=\"#hexo安装\" class=\"headerlink\" title=\"hexo安装\"></a>hexo安装</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-cli -g</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>快速新建一个博客系统</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo init blog</span><br><span class=\"line\">cd blog</span><br><span class=\"line\">npm install</span><br><span class=\"line\">hexo server</span><br></pre></td></tr></table></figure>\n<h3 id=\"hexo常用命令\"><a href=\"#hexo常用命令\" class=\"headerlink\" title=\"hexo常用命令\"></a>hexo常用命令</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 清空缓存</span><br><span class=\"line\">hexo clean</span><br><span class=\"line\"># 生成静态网页</span><br><span class=\"line\">hexo g</span><br><span class=\"line\"># 启动hexo服务，默认端口为4000</span><br><span class=\"line\">hexo s</span><br></pre></td></tr></table></figure>\n<h3 id=\"安装NEXT主题\"><a href=\"#安装NEXT主题\" class=\"headerlink\" title=\"安装NEXT主题\"></a>安装NEXT主题</h3><blockquote>\n<p>资源链接</p>\n</blockquote>\n<p><a href=\"https://github.com/iissnan/hexo-theme-next\" target=\"_blank\" rel=\"noopener\">https://github.com/iissnan/hexo-theme-next</a></p>\n<blockquote>\n<p>安装方法</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ cd hexo</span><br><span class=\"line\">$ ls</span><br><span class=\"line\">_config.yml  node_modules  package.json  public  scaffolds  source  themes</span><br><span class=\"line\">$ mkdir themes/next</span><br><span class=\"line\">$ curl -s https://api.github.com/repos/iissnan/hexo-theme-next/releases/latest | grep tarball_url | cut -d &apos;&quot;&apos; -f 4 | wget -i - -O- | tar -zx -C themes/next --strip-components=1</span><br></pre></td></tr></table></figure>\n<h3 id=\"NEXT的相关配置\"><a href=\"#NEXT的相关配置\" class=\"headerlink\" title=\"NEXT的相关配置\"></a>NEXT的相关配置</h3><blockquote>\n<p>对于整个项目，有一个站点配置文件<code>_config.yml</code>，该文件位于根目录下，在本项目中位于<code>/root/blog</code>目录下，对于每个主题，都有一个主题的配置文件<code>_config.yml</code>，位于每个主题的根目录下，在本项目中位于<code>/root/blog/themes/next</code>目录下：</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ls /root/blog/</span><br><span class=\"line\">_config.yml  node_modules  public     source</span><br><span class=\"line\">db.json      package.json  scaffolds  themes</span><br><span class=\"line\"></span><br><span class=\"line\">$ ls /root/blog/themes/next/</span><br><span class=\"line\">bower.json   gulpfile.coffee  layout   package.json  README.md  source</span><br><span class=\"line\">_config.yml  languages        LICENSE  README.cn.md  scripts    test</span><br></pre></td></tr></table></figure>\n<h3 id=\"添加分类标签\"><a href=\"#添加分类标签\" class=\"headerlink\" title=\"添加分类标签\"></a>添加分类标签</h3><blockquote>\n<p>如果需要给首页添加分页，首先修改主题配置文件，将menu下的about前的#去除：</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">menu:</span><br><span class=\"line\">  home: /</span><br><span class=\"line\">  #tags: /tags/ || tags</span><br><span class=\"line\">  categories: /categories/</span><br><span class=\"line\">  archives: /archives/</span><br><span class=\"line\">  about: /about/</span><br><span class=\"line\">  #schedule: /schedule/ || calendar</span><br><span class=\"line\">  #sitemap: /sitemap.xml || sitemap</span><br><span class=\"line\">  #commonweal: /404/ || heartbeat</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>然后在source目录下新建一个categories文件夹，并在该文件夹中添加一个index.md文件</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ cd /root/blog/source</span><br><span class=\"line\">$ mkdir categories/</span><br><span class=\"line\">$ vim index.md</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>在文件中添加以下内容</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: 文章分类</span><br><span class=\"line\">date: 日期</span><br><span class=\"line\">type: &quot;categories&quot;</span><br><span class=\"line\">comments: false</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>然后在文件的头部添加以下内容：</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: Hello World</span><br><span class=\"line\">categories: </span><br><span class=\"line\">- test</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n<h3 id=\"添加动态背景\"><a href=\"#添加动态背景\" class=\"headerlink\" title=\"添加动态背景\"></a>添加动态背景</h3><blockquote>\n<p>打开  next/layout/_layout.swig<br>在<code>&lt;/body&gt;</code>之前添加代码(注意不要放在<code>&lt;/head&gt;</code>的后面)：</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% if theme.canvas_nest %&#125;</span><br><span class=\"line\">&lt;script type=&quot;text/javascript&quot; src=&quot;//cdn.bootcss.com/canvas-nest.js/1.0.0/canvas-nest.min.js&quot;&gt;&lt;/script&gt;</span><br><span class=\"line\">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>修改主题配置文件，将canvas_nest修改为true</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">canvas_nest: true</span><br></pre></td></tr></table></figure>\n<h3 id=\"添加更新时间\"><a href=\"#添加更新时间\" class=\"headerlink\" title=\"添加更新时间\"></a>添加更新时间</h3><blockquote>\n<p>修改语言配置文件<code>/themes/next/languages/zh_Hans.yml</code>，在post下添加以下内容：</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">post:</span><br><span class=\"line\">  updated: 更新于</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>修改主题配置文件<code>/themes/next/_config.yml</code></p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">updated_at: true</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>写文章的时候可以直接在文章开头设置更新时间</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">modified:</span><br></pre></td></tr></table></figure>\n<h3 id=\"添加站内搜索\"><a href=\"#添加站内搜索\" class=\"headerlink\" title=\"添加站内搜索\"></a>添加站内搜索</h3><h4 id=\"安装hexo-generator-search\"><a href=\"#安装hexo-generator-search\" class=\"headerlink\" title=\"安装hexo-generator-search\"></a>安装hexo-generator-search</h4><blockquote>\n<p>在站点的根目录下执行以下命令：</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-generator-search --save</span><br></pre></td></tr></table></figure>\n<h4 id=\"安装-hexo-generator-searchdb\"><a href=\"#安装-hexo-generator-searchdb\" class=\"headerlink\" title=\"安装 hexo-generator-searchdb\"></a>安装 hexo-generator-searchdb</h4><blockquote>\n<p>在站点的根目录下执行以下命令：</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure>\n<h4 id=\"启用搜索\"><a href=\"#启用搜索\" class=\"headerlink\" title=\"启用搜索\"></a>启用搜索</h4><blockquote>\n<p>编辑站点配置文件，新增以下内容到最后：</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">search:</span><br><span class=\"line\">  path: search.xml</span><br><span class=\"line\">  field: post</span><br><span class=\"line\">  format: html</span><br><span class=\"line\">  limit: 10000</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>编辑主题配置文件，将local_search下的enable改为true：</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">local_search:</span><br><span class=\"line\">  enable: true</span><br></pre></td></tr></table></figure>\n<h3 id=\"上传代码到github\"><a href=\"#上传代码到github\" class=\"headerlink\" title=\"上传代码到github\"></a>上传代码到github</h3><h4 id=\"注册Github的账号\"><a href=\"#注册Github的账号\" class=\"headerlink\" title=\"注册Github的账号\"></a>注册Github的账号</h4><p>略</p>\n<h4 id=\"创建Repository\"><a href=\"#创建Repository\" class=\"headerlink\" title=\"创建Repository\"></a>创建Repository</h4><p>创建的时候需要注意Repository的名字。例如我的Github账号是pchad321，那么应该创建的Repository的名字为：pchad321.github.io</p>\n<h4 id=\"修改配置文件\"><a href=\"#修改配置文件\" class=\"headerlink\" title=\"修改配置文件\"></a>修改配置文件</h4><ol>\n<li><p>进入刚刚创建的Repository，复制Repository的连接，例如<a href=\"https://github.com/pchad321/pchad321.github.io.git\" target=\"_blank\" rel=\"noopener\">https://github.com/pchad321/pchad321.github.io.git</a></p>\n</li>\n<li><p>修改站点配置文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deploy:</span><br><span class=\"line\">  type: git</span><br><span class=\"line\">  repo: https://github.com/pchad321/pchad321.github.io.git</span><br><span class=\"line\">  branch: master</span><br><span class=\"line\">  message: &apos;updated at:&#123;&#123;now(&quot;YYYY-MM-DD HH/mm/ss&quot;)&#125;&#125;&apos;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h4 id=\"设置SSH-keys\"><a href=\"#设置SSH-keys\" class=\"headerlink\" title=\"设置SSH keys\"></a>设置SSH keys</h4><ol>\n<li><p>配置本机全局git环境</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global user.email &quot;you@example.com&quot;</span><br><span class=\"line\">git config --global user.name &quot;Your Name&quot;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>生成SSH密钥</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># -C后面是github上的用户邮箱地址</span><br><span class=\"line\">ssh-keygen -t rsa -C you@126.com</span><br><span class=\"line\"></span><br><span class=\"line\"># 然后一路回车</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>将SSH密钥添加到github中</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">less ~/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>复制出现的一堆密码，然后在github的SSH and GPG keys中粘贴这一段密码</p>\n</blockquote>\n</li>\n<li><p>设置的验证</p>\n<p>在本地输入以下代码：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh -T git@github.com</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>如果在最后出现了你配置的用户名，说明配置成功</p>\n</blockquote>\n</li>\n<li><p>提交代码到github上</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo generate</span><br><span class=\"line\">hexo deploy</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>在提交代码时可能会出现<code>ERROR Deployer not found: git</code>的错误，此时只需要运行以下命令</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install --save hexo-deployer-git</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h4 id=\"将Hexo的源码备份到Github分支里面\"><a href=\"#将Hexo的源码备份到Github分支里面\" class=\"headerlink\" title=\"将Hexo的源码备份到Github分支里面\"></a>将Hexo的源码备份到Github分支里面</h4><p>上传到分支里存储，修改本地的时候先上传存储，再发布。更换电脑的时候再下载下来源文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git init</span><br><span class=\"line\">$ git remote add origin git@github.com:username/username.github.io.git</span><br><span class=\"line\">$ git add .</span><br><span class=\"line\">$ git commit -m &quot;blog&quot;</span><br><span class=\"line\">$ git push origin master:Hexo-Blog</span><br></pre></td></tr></table></figure>\n<p>在本地写好博文后，可以先执行：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git add .</span><br><span class=\"line\">$ git commit -m &quot;blog&quot;</span><br><span class=\"line\">$ git push origin master:Hexo-Blog</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"nodejs安装\"><a href=\"#nodejs安装\" class=\"headerlink\" title=\"nodejs安装\"></a>nodejs安装</h3><blockquote>\n<p>通过EPEL的方式进行安装</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 安装epel</span><br><span class=\"line\">yum install -y epel-release</span><br><span class=\"line\">yum repolist</span><br><span class=\"line\"></span><br><span class=\"line\"># 安装node</span><br><span class=\"line\">yum install -y nodejs</span><br><span class=\"line\">node --version</span><br><span class=\"line\">yum install npm</span><br></pre></td></tr></table></figure>\n<h3 id=\"hexo安装\"><a href=\"#hexo安装\" class=\"headerlink\" title=\"hexo安装\"></a>hexo安装</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-cli -g</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>快速新建一个博客系统</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo init blog</span><br><span class=\"line\">cd blog</span><br><span class=\"line\">npm install</span><br><span class=\"line\">hexo server</span><br></pre></td></tr></table></figure>\n<h3 id=\"hexo常用命令\"><a href=\"#hexo常用命令\" class=\"headerlink\" title=\"hexo常用命令\"></a>hexo常用命令</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 清空缓存</span><br><span class=\"line\">hexo clean</span><br><span class=\"line\"># 生成静态网页</span><br><span class=\"line\">hexo g</span><br><span class=\"line\"># 启动hexo服务，默认端口为4000</span><br><span class=\"line\">hexo s</span><br></pre></td></tr></table></figure>\n<h3 id=\"安装NEXT主题\"><a href=\"#安装NEXT主题\" class=\"headerlink\" title=\"安装NEXT主题\"></a>安装NEXT主题</h3><blockquote>\n<p>资源链接</p>\n</blockquote>\n<p><a href=\"https://github.com/iissnan/hexo-theme-next\" target=\"_blank\" rel=\"noopener\">https://github.com/iissnan/hexo-theme-next</a></p>\n<blockquote>\n<p>安装方法</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ cd hexo</span><br><span class=\"line\">$ ls</span><br><span class=\"line\">_config.yml  node_modules  package.json  public  scaffolds  source  themes</span><br><span class=\"line\">$ mkdir themes/next</span><br><span class=\"line\">$ curl -s https://api.github.com/repos/iissnan/hexo-theme-next/releases/latest | grep tarball_url | cut -d &apos;&quot;&apos; -f 4 | wget -i - -O- | tar -zx -C themes/next --strip-components=1</span><br></pre></td></tr></table></figure>\n<h3 id=\"NEXT的相关配置\"><a href=\"#NEXT的相关配置\" class=\"headerlink\" title=\"NEXT的相关配置\"></a>NEXT的相关配置</h3><blockquote>\n<p>对于整个项目，有一个站点配置文件<code>_config.yml</code>，该文件位于根目录下，在本项目中位于<code>/root/blog</code>目录下，对于每个主题，都有一个主题的配置文件<code>_config.yml</code>，位于每个主题的根目录下，在本项目中位于<code>/root/blog/themes/next</code>目录下：</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ls /root/blog/</span><br><span class=\"line\">_config.yml  node_modules  public     source</span><br><span class=\"line\">db.json      package.json  scaffolds  themes</span><br><span class=\"line\"></span><br><span class=\"line\">$ ls /root/blog/themes/next/</span><br><span class=\"line\">bower.json   gulpfile.coffee  layout   package.json  README.md  source</span><br><span class=\"line\">_config.yml  languages        LICENSE  README.cn.md  scripts    test</span><br></pre></td></tr></table></figure>\n<h3 id=\"添加分类标签\"><a href=\"#添加分类标签\" class=\"headerlink\" title=\"添加分类标签\"></a>添加分类标签</h3><blockquote>\n<p>如果需要给首页添加分页，首先修改主题配置文件，将menu下的about前的#去除：</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">menu:</span><br><span class=\"line\">  home: /</span><br><span class=\"line\">  #tags: /tags/ || tags</span><br><span class=\"line\">  categories: /categories/</span><br><span class=\"line\">  archives: /archives/</span><br><span class=\"line\">  about: /about/</span><br><span class=\"line\">  #schedule: /schedule/ || calendar</span><br><span class=\"line\">  #sitemap: /sitemap.xml || sitemap</span><br><span class=\"line\">  #commonweal: /404/ || heartbeat</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>然后在source目录下新建一个categories文件夹，并在该文件夹中添加一个index.md文件</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ cd /root/blog/source</span><br><span class=\"line\">$ mkdir categories/</span><br><span class=\"line\">$ vim index.md</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>在文件中添加以下内容</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: 文章分类</span><br><span class=\"line\">date: 日期</span><br><span class=\"line\">type: &quot;categories&quot;</span><br><span class=\"line\">comments: false</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>然后在文件的头部添加以下内容：</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: Hello World</span><br><span class=\"line\">categories: </span><br><span class=\"line\">- test</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n<h3 id=\"添加动态背景\"><a href=\"#添加动态背景\" class=\"headerlink\" title=\"添加动态背景\"></a>添加动态背景</h3><blockquote>\n<p>打开  next/layout/_layout.swig<br>在<code>&lt;/body&gt;</code>之前添加代码(注意不要放在<code>&lt;/head&gt;</code>的后面)：</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% if theme.canvas_nest %&#125;</span><br><span class=\"line\">&lt;script type=&quot;text/javascript&quot; src=&quot;//cdn.bootcss.com/canvas-nest.js/1.0.0/canvas-nest.min.js&quot;&gt;&lt;/script&gt;</span><br><span class=\"line\">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>修改主题配置文件，将canvas_nest修改为true</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">canvas_nest: true</span><br></pre></td></tr></table></figure>\n<h3 id=\"添加更新时间\"><a href=\"#添加更新时间\" class=\"headerlink\" title=\"添加更新时间\"></a>添加更新时间</h3><blockquote>\n<p>修改语言配置文件<code>/themes/next/languages/zh_Hans.yml</code>，在post下添加以下内容：</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">post:</span><br><span class=\"line\">  updated: 更新于</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>修改主题配置文件<code>/themes/next/_config.yml</code></p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">updated_at: true</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>写文章的时候可以直接在文章开头设置更新时间</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">modified:</span><br></pre></td></tr></table></figure>\n<h3 id=\"添加站内搜索\"><a href=\"#添加站内搜索\" class=\"headerlink\" title=\"添加站内搜索\"></a>添加站内搜索</h3><h4 id=\"安装hexo-generator-search\"><a href=\"#安装hexo-generator-search\" class=\"headerlink\" title=\"安装hexo-generator-search\"></a>安装hexo-generator-search</h4><blockquote>\n<p>在站点的根目录下执行以下命令：</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-generator-search --save</span><br></pre></td></tr></table></figure>\n<h4 id=\"安装-hexo-generator-searchdb\"><a href=\"#安装-hexo-generator-searchdb\" class=\"headerlink\" title=\"安装 hexo-generator-searchdb\"></a>安装 hexo-generator-searchdb</h4><blockquote>\n<p>在站点的根目录下执行以下命令：</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure>\n<h4 id=\"启用搜索\"><a href=\"#启用搜索\" class=\"headerlink\" title=\"启用搜索\"></a>启用搜索</h4><blockquote>\n<p>编辑站点配置文件，新增以下内容到最后：</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">search:</span><br><span class=\"line\">  path: search.xml</span><br><span class=\"line\">  field: post</span><br><span class=\"line\">  format: html</span><br><span class=\"line\">  limit: 10000</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>编辑主题配置文件，将local_search下的enable改为true：</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">local_search:</span><br><span class=\"line\">  enable: true</span><br></pre></td></tr></table></figure>\n<h3 id=\"上传代码到github\"><a href=\"#上传代码到github\" class=\"headerlink\" title=\"上传代码到github\"></a>上传代码到github</h3><h4 id=\"注册Github的账号\"><a href=\"#注册Github的账号\" class=\"headerlink\" title=\"注册Github的账号\"></a>注册Github的账号</h4><p>略</p>\n<h4 id=\"创建Repository\"><a href=\"#创建Repository\" class=\"headerlink\" title=\"创建Repository\"></a>创建Repository</h4><p>创建的时候需要注意Repository的名字。例如我的Github账号是pchad321，那么应该创建的Repository的名字为：pchad321.github.io</p>\n<h4 id=\"修改配置文件\"><a href=\"#修改配置文件\" class=\"headerlink\" title=\"修改配置文件\"></a>修改配置文件</h4><ol>\n<li><p>进入刚刚创建的Repository，复制Repository的连接，例如<a href=\"https://github.com/pchad321/pchad321.github.io.git\" target=\"_blank\" rel=\"noopener\">https://github.com/pchad321/pchad321.github.io.git</a></p>\n</li>\n<li><p>修改站点配置文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deploy:</span><br><span class=\"line\">  type: git</span><br><span class=\"line\">  repo: https://github.com/pchad321/pchad321.github.io.git</span><br><span class=\"line\">  branch: master</span><br><span class=\"line\">  message: &apos;updated at:&#123;&#123;now(&quot;YYYY-MM-DD HH/mm/ss&quot;)&#125;&#125;&apos;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h4 id=\"设置SSH-keys\"><a href=\"#设置SSH-keys\" class=\"headerlink\" title=\"设置SSH keys\"></a>设置SSH keys</h4><ol>\n<li><p>配置本机全局git环境</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global user.email &quot;you@example.com&quot;</span><br><span class=\"line\">git config --global user.name &quot;Your Name&quot;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>生成SSH密钥</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># -C后面是github上的用户邮箱地址</span><br><span class=\"line\">ssh-keygen -t rsa -C you@126.com</span><br><span class=\"line\"></span><br><span class=\"line\"># 然后一路回车</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>将SSH密钥添加到github中</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">less ~/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>复制出现的一堆密码，然后在github的SSH and GPG keys中粘贴这一段密码</p>\n</blockquote>\n</li>\n<li><p>设置的验证</p>\n<p>在本地输入以下代码：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh -T git@github.com</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>如果在最后出现了你配置的用户名，说明配置成功</p>\n</blockquote>\n</li>\n<li><p>提交代码到github上</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo generate</span><br><span class=\"line\">hexo deploy</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>在提交代码时可能会出现<code>ERROR Deployer not found: git</code>的错误，此时只需要运行以下命令</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install --save hexo-deployer-git</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h4 id=\"将Hexo的源码备份到Github分支里面\"><a href=\"#将Hexo的源码备份到Github分支里面\" class=\"headerlink\" title=\"将Hexo的源码备份到Github分支里面\"></a>将Hexo的源码备份到Github分支里面</h4><p>上传到分支里存储，修改本地的时候先上传存储，再发布。更换电脑的时候再下载下来源文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git init</span><br><span class=\"line\">$ git remote add origin git@github.com:username/username.github.io.git</span><br><span class=\"line\">$ git add .</span><br><span class=\"line\">$ git commit -m &quot;blog&quot;</span><br><span class=\"line\">$ git push origin master:Hexo-Blog</span><br></pre></td></tr></table></figure>\n<p>在本地写好博文后，可以先执行：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git add .</span><br><span class=\"line\">$ git commit -m &quot;blog&quot;</span><br><span class=\"line\">$ git push origin master:Hexo-Blog</span><br></pre></td></tr></table></figure>\n"},{"title":"Nginx+Keepalived的安装和使用","date":"2018-01-30T16:00:00.000Z","modified":null,"_content":"\n## vim安装\n\n```\nyum install vim -y\n```\n\n## 修改ip\n修改`/etc/sysconfig/network-scripts/ifcfg-eth0`的内容(如果该文件不存在，先新建)\n\n```\nDEVICE=eth0 #网卡对应的设备别名\nBOOTPROTO=static #设置为静态IP，static\nONBOOT=yes\nDNS1=114.114.114.114\nHWADDR=00:07:E9:05:E8:B4 #对应的网卡物理地址，可以不用配置\nIPADDR=192.168.17.133 #ip地址静态指定\nNETMASK=255.255.255.0 \nGATEWAY=192.168.17.2\n```\n然后在虚拟机->设置->网络适配器中选择自定义VMnet8\n\n> 可以将原有的`ifcfg-enoxxxxxxx`文件删除，然后修改`grub`文件\nvim /etc/default/grub\n然后在`GRUB_CMDLINE_LINUX`原有的参数后面加上`\"net.ifnames=0 biosdevname=0\"`，保存退出后，执行\n`grub2-mkconfig -o /boot/grub2/grub.cfg`\n然后重启计算机\n\n## 添加用户和权限\n\n```\n$ useradd apache\n\n$ passwd apache\n\n$ visudo \n\n$ /root\n\n$ yyp\n```\n\n## 安装apache\n```\nyum install httpd httpd-devel\n\n#开启apache服务\nsystemctl start httpd.service\n\n#关闭apache服务\nsystemctl stop httpd.service\n\n#设置为开机启动\nsystemctl enable httpd.service\n\n#关闭防火墙\nsystemctl stop firewalld.service\n\n#开机不启动防火墙\nsystemctl disable firewalld.service\n\n#apache默认使用/var/www/html文件夹里的资源，故可以创建一个index.html文件\necho apache133 > index.html\n```\n\n## 安装Nginx\n\n### 使用压缩包安装nginx\n\n1. 切换为root用户\n\n2. 进入/usr/local/src目录下\n\n3. 下载Nginx、openssl、pcre以及zlib\n\n  ```\n  wget http://nginx.org/download/nginx-1.12.2.tar.gz\n  wget https://www.openssl.org/source/openssl-fips-2.0.16.tar.gz\n  wget ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/pcre-8.40.tar.gz\n  wget http://www.zlib.net/zlib-1.2.11.tar.gz\n  ```\n\n4. 可能需要先安装c++编译环境\n\n  ```\n  yum install gcc-c++\n  ```\n\n5. 安装openssl\n\n  ```\n  tar zxvf openssl-fips-2.0.16.tar.gz \n  cd openssl-fips-2.0.16/\n  ./config\n  make && make install\n  ```\n\n6. 安装pcre\n\n  ```\n  tar zxvf pcre-8.40.tar.gz \n  cd pcre-8.40/\n  ./configure\n  make && make install\n  ```\n\n7. 安装zlib\n\n  ```\n  tar zxvf zlib-1.2.11.tar.gz \n  cd zlib-1.2.11/\n  ./configure\n  make && make install\n  ```\n\n8. 安装Nginx\n\n  ```\n  tar zxvf nginx-1.12.2.tar.gz \n  cd nginx-1.12.2/\n  ./configure\n  make && make install\n  ```\n\n9. 启动Nginx\n\n  ```\n  /usr/local/nginx/sbin/nginx\n  ```\n\n10. Nginx基本操作\n\n  ```\n  #启动\n  [root@localhost ~]# /usr/local/nginx/sbin/nginx\n  #停止/重启\n  [root@localhost ~]# /usr/local/nginx/sbin/nginx -s stop(quit、reload)\n  #命令帮助\n  [root@localhost ~]# /usr/local/nginx/sbin/nginx -h\n  #验证配置文件\n  [root@localhost ~]# /usr/local/nginx/sbin/nginx -t\n  #配置文件\n  [root@localhost ~]# vim /usr/local/nginx/conf/nginx.conf\n  ```\n\n11. 获取Nginx的安装位置\n\n  ```\n  whereis nginx\n  ```\n\n12. 修改Nginx的配置文件\n\n  ```\n  [root@localhost conf]# cd /usr/local/nginx/conf/\n  [root@localhost conf]# vim nginx.conf\n  ```\n\n13. 在http内添加\n\n  ```\n  upstream test.com{\n    server 192.168.17.133:80 weight=5;\n    server 192.168.17.134:80 weight=1;\n  }\n  ```\n\n14. 在http->server中的location中添加\n\n  ```\n  location / {\n    proxy_pass  http://test.com;\n    proxy_set_header Host       $host;\n    proxy_set_header X-Real-IP  $remote_addr;\n    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n    root   html;\n    index  index.html index.htm;\n  }\n  ```\n\n15. 安装rz和sz\n\n  ```\n  yum install lrzsz\n  ```\n\n### 使用yum安装nginx(推荐)\n\n> 本地yum源中没有我们想要的nginx，那么就需要创建一个`/etc/yum.repos.d/nginx.repo`的文件，新增一个yum源。\n\n```\nvim /etc/yum.repos.d/nginx.repo\n```\n\n> 然后加入如下内容\n\n```\n[nginx]\nname=nginx repo\nbaseurl=http://nginx.org/packages/centos/$releasever/$basearch/\ngpgcheck=0\nenabled=1\n```\n\n> 查询nginx的相关信息并安装\n\n```\nyum list | grep nginx\nyum install -y nginx\n```\n\n\n## 安装Keepalived\n### 安装Keepalived\n```\nwget http://www.keepalived.org/software/keepalived-1.2.24.tar.gz\ntar -zxvf keepalived-1.2.24.tar.gz\ncd keepalived-1.2.24\n./configure --prefix=/usr/local/keepalived\nmake && make install\n```\n\n> 在安装时可能会出现如下错误\\\n!!! OpenSSL is not properly installed on your system. !!!\\\n!!! Can not include OpenSSL headers files.\\\n解决办法：yum -y install openssl-devel\n\n> 也可以直接使用yum安装\n\n```\nyum install keepalived\n```\n\n### 配置Keepalived\nkeepalived启动时会从/etc/keepalived目录下查找keepalived.conf配置文件，如果没有找到则使用默认的配置。/etc/keepalived目录安装时默认是没有安装的，需要手动创建。\n\n> 先备份配置文件\n\n```\ncp keepalived.conf keepalived.conf.bak\n```\n\n> `在启动keepalived前先关闭防火墙和selinux`\n\n```\nsystemctl stop firewalld.service\nsystemctl disable firewalld.service\n\ngetenforce\n/usr/sbin/sestatus -v\n#临时关闭\nsetenforce 0\n#永久关闭\nvim /etc/selinux/config\n#将SELINUX=enforcing改为SELINUX=disabled，必须重启才能生效\n```\n","source":"_posts/keepalived_nginx.md","raw":"---\ntitle: Nginx+Keepalived的安装和使用\ndate: 2018-01-31\nmodified: \ncategories:\n- Linux\ntags:\n- Nginx\n- Keepalived\n- Linux\n---\n\n## vim安装\n\n```\nyum install vim -y\n```\n\n## 修改ip\n修改`/etc/sysconfig/network-scripts/ifcfg-eth0`的内容(如果该文件不存在，先新建)\n\n```\nDEVICE=eth0 #网卡对应的设备别名\nBOOTPROTO=static #设置为静态IP，static\nONBOOT=yes\nDNS1=114.114.114.114\nHWADDR=00:07:E9:05:E8:B4 #对应的网卡物理地址，可以不用配置\nIPADDR=192.168.17.133 #ip地址静态指定\nNETMASK=255.255.255.0 \nGATEWAY=192.168.17.2\n```\n然后在虚拟机->设置->网络适配器中选择自定义VMnet8\n\n> 可以将原有的`ifcfg-enoxxxxxxx`文件删除，然后修改`grub`文件\nvim /etc/default/grub\n然后在`GRUB_CMDLINE_LINUX`原有的参数后面加上`\"net.ifnames=0 biosdevname=0\"`，保存退出后，执行\n`grub2-mkconfig -o /boot/grub2/grub.cfg`\n然后重启计算机\n\n## 添加用户和权限\n\n```\n$ useradd apache\n\n$ passwd apache\n\n$ visudo \n\n$ /root\n\n$ yyp\n```\n\n## 安装apache\n```\nyum install httpd httpd-devel\n\n#开启apache服务\nsystemctl start httpd.service\n\n#关闭apache服务\nsystemctl stop httpd.service\n\n#设置为开机启动\nsystemctl enable httpd.service\n\n#关闭防火墙\nsystemctl stop firewalld.service\n\n#开机不启动防火墙\nsystemctl disable firewalld.service\n\n#apache默认使用/var/www/html文件夹里的资源，故可以创建一个index.html文件\necho apache133 > index.html\n```\n\n## 安装Nginx\n\n### 使用压缩包安装nginx\n\n1. 切换为root用户\n\n2. 进入/usr/local/src目录下\n\n3. 下载Nginx、openssl、pcre以及zlib\n\n  ```\n  wget http://nginx.org/download/nginx-1.12.2.tar.gz\n  wget https://www.openssl.org/source/openssl-fips-2.0.16.tar.gz\n  wget ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/pcre-8.40.tar.gz\n  wget http://www.zlib.net/zlib-1.2.11.tar.gz\n  ```\n\n4. 可能需要先安装c++编译环境\n\n  ```\n  yum install gcc-c++\n  ```\n\n5. 安装openssl\n\n  ```\n  tar zxvf openssl-fips-2.0.16.tar.gz \n  cd openssl-fips-2.0.16/\n  ./config\n  make && make install\n  ```\n\n6. 安装pcre\n\n  ```\n  tar zxvf pcre-8.40.tar.gz \n  cd pcre-8.40/\n  ./configure\n  make && make install\n  ```\n\n7. 安装zlib\n\n  ```\n  tar zxvf zlib-1.2.11.tar.gz \n  cd zlib-1.2.11/\n  ./configure\n  make && make install\n  ```\n\n8. 安装Nginx\n\n  ```\n  tar zxvf nginx-1.12.2.tar.gz \n  cd nginx-1.12.2/\n  ./configure\n  make && make install\n  ```\n\n9. 启动Nginx\n\n  ```\n  /usr/local/nginx/sbin/nginx\n  ```\n\n10. Nginx基本操作\n\n  ```\n  #启动\n  [root@localhost ~]# /usr/local/nginx/sbin/nginx\n  #停止/重启\n  [root@localhost ~]# /usr/local/nginx/sbin/nginx -s stop(quit、reload)\n  #命令帮助\n  [root@localhost ~]# /usr/local/nginx/sbin/nginx -h\n  #验证配置文件\n  [root@localhost ~]# /usr/local/nginx/sbin/nginx -t\n  #配置文件\n  [root@localhost ~]# vim /usr/local/nginx/conf/nginx.conf\n  ```\n\n11. 获取Nginx的安装位置\n\n  ```\n  whereis nginx\n  ```\n\n12. 修改Nginx的配置文件\n\n  ```\n  [root@localhost conf]# cd /usr/local/nginx/conf/\n  [root@localhost conf]# vim nginx.conf\n  ```\n\n13. 在http内添加\n\n  ```\n  upstream test.com{\n    server 192.168.17.133:80 weight=5;\n    server 192.168.17.134:80 weight=1;\n  }\n  ```\n\n14. 在http->server中的location中添加\n\n  ```\n  location / {\n    proxy_pass  http://test.com;\n    proxy_set_header Host       $host;\n    proxy_set_header X-Real-IP  $remote_addr;\n    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n    root   html;\n    index  index.html index.htm;\n  }\n  ```\n\n15. 安装rz和sz\n\n  ```\n  yum install lrzsz\n  ```\n\n### 使用yum安装nginx(推荐)\n\n> 本地yum源中没有我们想要的nginx，那么就需要创建一个`/etc/yum.repos.d/nginx.repo`的文件，新增一个yum源。\n\n```\nvim /etc/yum.repos.d/nginx.repo\n```\n\n> 然后加入如下内容\n\n```\n[nginx]\nname=nginx repo\nbaseurl=http://nginx.org/packages/centos/$releasever/$basearch/\ngpgcheck=0\nenabled=1\n```\n\n> 查询nginx的相关信息并安装\n\n```\nyum list | grep nginx\nyum install -y nginx\n```\n\n\n## 安装Keepalived\n### 安装Keepalived\n```\nwget http://www.keepalived.org/software/keepalived-1.2.24.tar.gz\ntar -zxvf keepalived-1.2.24.tar.gz\ncd keepalived-1.2.24\n./configure --prefix=/usr/local/keepalived\nmake && make install\n```\n\n> 在安装时可能会出现如下错误\\\n!!! OpenSSL is not properly installed on your system. !!!\\\n!!! Can not include OpenSSL headers files.\\\n解决办法：yum -y install openssl-devel\n\n> 也可以直接使用yum安装\n\n```\nyum install keepalived\n```\n\n### 配置Keepalived\nkeepalived启动时会从/etc/keepalived目录下查找keepalived.conf配置文件，如果没有找到则使用默认的配置。/etc/keepalived目录安装时默认是没有安装的，需要手动创建。\n\n> 先备份配置文件\n\n```\ncp keepalived.conf keepalived.conf.bak\n```\n\n> `在启动keepalived前先关闭防火墙和selinux`\n\n```\nsystemctl stop firewalld.service\nsystemctl disable firewalld.service\n\ngetenforce\n/usr/sbin/sestatus -v\n#临时关闭\nsetenforce 0\n#永久关闭\nvim /etc/selinux/config\n#将SELINUX=enforcing改为SELINUX=disabled，必须重启才能生效\n```\n","slug":"keepalived_nginx","published":1,"updated":"2018-01-31T14:23:12.441Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjd8i921o000htyasmaj5n5a4","content":"<h2 id=\"vim安装\"><a href=\"#vim安装\" class=\"headerlink\" title=\"vim安装\"></a>vim安装</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install vim -y</span><br></pre></td></tr></table></figure>\n<h2 id=\"修改ip\"><a href=\"#修改ip\" class=\"headerlink\" title=\"修改ip\"></a>修改ip</h2><p>修改<code>/etc/sysconfig/network-scripts/ifcfg-eth0</code>的内容(如果该文件不存在，先新建)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">DEVICE=eth0 #网卡对应的设备别名</span><br><span class=\"line\">BOOTPROTO=static #设置为静态IP，static</span><br><span class=\"line\">ONBOOT=yes</span><br><span class=\"line\">DNS1=114.114.114.114</span><br><span class=\"line\">HWADDR=00:07:E9:05:E8:B4 #对应的网卡物理地址，可以不用配置</span><br><span class=\"line\">IPADDR=192.168.17.133 #ip地址静态指定</span><br><span class=\"line\">NETMASK=255.255.255.0 </span><br><span class=\"line\">GATEWAY=192.168.17.2</span><br></pre></td></tr></table></figure>\n<p>然后在虚拟机-&gt;设置-&gt;网络适配器中选择自定义VMnet8</p>\n<blockquote>\n<p>可以将原有的<code>ifcfg-enoxxxxxxx</code>文件删除，然后修改<code>grub</code>文件<br>vim /etc/default/grub<br>然后在<code>GRUB_CMDLINE_LINUX</code>原有的参数后面加上<code>&quot;net.ifnames=0 biosdevname=0&quot;</code>，保存退出后，执行<br><code>grub2-mkconfig -o /boot/grub2/grub.cfg</code><br>然后重启计算机</p>\n</blockquote>\n<h2 id=\"添加用户和权限\"><a href=\"#添加用户和权限\" class=\"headerlink\" title=\"添加用户和权限\"></a>添加用户和权限</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ useradd apache</span><br><span class=\"line\"></span><br><span class=\"line\">$ passwd apache</span><br><span class=\"line\"></span><br><span class=\"line\">$ visudo </span><br><span class=\"line\"></span><br><span class=\"line\">$ /root</span><br><span class=\"line\"></span><br><span class=\"line\">$ yyp</span><br></pre></td></tr></table></figure>\n<h2 id=\"安装apache\"><a href=\"#安装apache\" class=\"headerlink\" title=\"安装apache\"></a>安装apache</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install httpd httpd-devel</span><br><span class=\"line\"></span><br><span class=\"line\">#开启apache服务</span><br><span class=\"line\">systemctl start httpd.service</span><br><span class=\"line\"></span><br><span class=\"line\">#关闭apache服务</span><br><span class=\"line\">systemctl stop httpd.service</span><br><span class=\"line\"></span><br><span class=\"line\">#设置为开机启动</span><br><span class=\"line\">systemctl enable httpd.service</span><br><span class=\"line\"></span><br><span class=\"line\">#关闭防火墙</span><br><span class=\"line\">systemctl stop firewalld.service</span><br><span class=\"line\"></span><br><span class=\"line\">#开机不启动防火墙</span><br><span class=\"line\">systemctl disable firewalld.service</span><br><span class=\"line\"></span><br><span class=\"line\">#apache默认使用/var/www/html文件夹里的资源，故可以创建一个index.html文件</span><br><span class=\"line\">echo apache133 &gt; index.html</span><br></pre></td></tr></table></figure>\n<h2 id=\"安装Nginx\"><a href=\"#安装Nginx\" class=\"headerlink\" title=\"安装Nginx\"></a>安装Nginx</h2><h3 id=\"使用压缩包安装nginx\"><a href=\"#使用压缩包安装nginx\" class=\"headerlink\" title=\"使用压缩包安装nginx\"></a>使用压缩包安装nginx</h3><ol>\n<li><p>切换为root用户</p>\n</li>\n<li><p>进入/usr/local/src目录下</p>\n</li>\n<li><p>下载Nginx、openssl、pcre以及zlib</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget http://nginx.org/download/nginx-1.12.2.tar.gz</span><br><span class=\"line\">wget https://www.openssl.org/source/openssl-fips-2.0.16.tar.gz</span><br><span class=\"line\">wget ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/pcre-8.40.tar.gz</span><br><span class=\"line\">wget http://www.zlib.net/zlib-1.2.11.tar.gz</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>可能需要先安装c++编译环境</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install gcc-c++</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>安装openssl</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar zxvf openssl-fips-2.0.16.tar.gz </span><br><span class=\"line\">cd openssl-fips-2.0.16/</span><br><span class=\"line\">./config</span><br><span class=\"line\">make &amp;&amp; make install</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>安装pcre</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar zxvf pcre-8.40.tar.gz </span><br><span class=\"line\">cd pcre-8.40/</span><br><span class=\"line\">./configure</span><br><span class=\"line\">make &amp;&amp; make install</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>安装zlib</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar zxvf zlib-1.2.11.tar.gz </span><br><span class=\"line\">cd zlib-1.2.11/</span><br><span class=\"line\">./configure</span><br><span class=\"line\">make &amp;&amp; make install</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>安装Nginx</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar zxvf nginx-1.12.2.tar.gz </span><br><span class=\"line\">cd nginx-1.12.2/</span><br><span class=\"line\">./configure</span><br><span class=\"line\">make &amp;&amp; make install</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>启动Nginx</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/usr/local/nginx/sbin/nginx</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Nginx基本操作</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#启动</span><br><span class=\"line\">[root@localhost ~]# /usr/local/nginx/sbin/nginx</span><br><span class=\"line\">#停止/重启</span><br><span class=\"line\">[root@localhost ~]# /usr/local/nginx/sbin/nginx -s stop(quit、reload)</span><br><span class=\"line\">#命令帮助</span><br><span class=\"line\">[root@localhost ~]# /usr/local/nginx/sbin/nginx -h</span><br><span class=\"line\">#验证配置文件</span><br><span class=\"line\">[root@localhost ~]# /usr/local/nginx/sbin/nginx -t</span><br><span class=\"line\">#配置文件</span><br><span class=\"line\">[root@localhost ~]# vim /usr/local/nginx/conf/nginx.conf</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>获取Nginx的安装位置</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">whereis nginx</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>修改Nginx的配置文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost conf]# cd /usr/local/nginx/conf/</span><br><span class=\"line\">[root@localhost conf]# vim nginx.conf</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在http内添加</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">upstream test.com&#123;</span><br><span class=\"line\">  server 192.168.17.133:80 weight=5;</span><br><span class=\"line\">  server 192.168.17.134:80 weight=1;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在http-&gt;server中的location中添加</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">location / &#123;</span><br><span class=\"line\">  proxy_pass  http://test.com;</span><br><span class=\"line\">  proxy_set_header Host       $host;</span><br><span class=\"line\">  proxy_set_header X-Real-IP  $remote_addr;</span><br><span class=\"line\">  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class=\"line\">  root   html;</span><br><span class=\"line\">  index  index.html index.htm;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>安装rz和sz</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install lrzsz</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h3 id=\"使用yum安装nginx-推荐\"><a href=\"#使用yum安装nginx-推荐\" class=\"headerlink\" title=\"使用yum安装nginx(推荐)\"></a>使用yum安装nginx(推荐)</h3><blockquote>\n<p>本地yum源中没有我们想要的nginx，那么就需要创建一个<code>/etc/yum.repos.d/nginx.repo</code>的文件，新增一个yum源。</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim /etc/yum.repos.d/nginx.repo</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>然后加入如下内容</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[nginx]</span><br><span class=\"line\">name=nginx repo</span><br><span class=\"line\">baseurl=http://nginx.org/packages/centos/$releasever/$basearch/</span><br><span class=\"line\">gpgcheck=0</span><br><span class=\"line\">enabled=1</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>查询nginx的相关信息并安装</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum list | grep nginx</span><br><span class=\"line\">yum install -y nginx</span><br></pre></td></tr></table></figure>\n<h2 id=\"安装Keepalived\"><a href=\"#安装Keepalived\" class=\"headerlink\" title=\"安装Keepalived\"></a>安装Keepalived</h2><h3 id=\"安装Keepalived-1\"><a href=\"#安装Keepalived-1\" class=\"headerlink\" title=\"安装Keepalived\"></a>安装Keepalived</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget http://www.keepalived.org/software/keepalived-1.2.24.tar.gz</span><br><span class=\"line\">tar -zxvf keepalived-1.2.24.tar.gz</span><br><span class=\"line\">cd keepalived-1.2.24</span><br><span class=\"line\">./configure --prefix=/usr/local/keepalived</span><br><span class=\"line\">make &amp;&amp; make install</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>在安装时可能会出现如下错误\\<br>!!! OpenSSL is not properly installed on your system. !!!\\<br>!!! Can not include OpenSSL headers files.\\<br>解决办法：yum -y install openssl-devel</p>\n<p>也可以直接使用yum安装</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install keepalived</span><br></pre></td></tr></table></figure>\n<h3 id=\"配置Keepalived\"><a href=\"#配置Keepalived\" class=\"headerlink\" title=\"配置Keepalived\"></a>配置Keepalived</h3><p>keepalived启动时会从/etc/keepalived目录下查找keepalived.conf配置文件，如果没有找到则使用默认的配置。/etc/keepalived目录安装时默认是没有安装的，需要手动创建。</p>\n<blockquote>\n<p>先备份配置文件</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cp keepalived.conf keepalived.conf.bak</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p><code>在启动keepalived前先关闭防火墙和selinux</code></p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl stop firewalld.service</span><br><span class=\"line\">systemctl disable firewalld.service</span><br><span class=\"line\"></span><br><span class=\"line\">getenforce</span><br><span class=\"line\">/usr/sbin/sestatus -v</span><br><span class=\"line\">#临时关闭</span><br><span class=\"line\">setenforce 0</span><br><span class=\"line\">#永久关闭</span><br><span class=\"line\">vim /etc/selinux/config</span><br><span class=\"line\">#将SELINUX=enforcing改为SELINUX=disabled，必须重启才能生效</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"vim安装\"><a href=\"#vim安装\" class=\"headerlink\" title=\"vim安装\"></a>vim安装</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install vim -y</span><br></pre></td></tr></table></figure>\n<h2 id=\"修改ip\"><a href=\"#修改ip\" class=\"headerlink\" title=\"修改ip\"></a>修改ip</h2><p>修改<code>/etc/sysconfig/network-scripts/ifcfg-eth0</code>的内容(如果该文件不存在，先新建)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">DEVICE=eth0 #网卡对应的设备别名</span><br><span class=\"line\">BOOTPROTO=static #设置为静态IP，static</span><br><span class=\"line\">ONBOOT=yes</span><br><span class=\"line\">DNS1=114.114.114.114</span><br><span class=\"line\">HWADDR=00:07:E9:05:E8:B4 #对应的网卡物理地址，可以不用配置</span><br><span class=\"line\">IPADDR=192.168.17.133 #ip地址静态指定</span><br><span class=\"line\">NETMASK=255.255.255.0 </span><br><span class=\"line\">GATEWAY=192.168.17.2</span><br></pre></td></tr></table></figure>\n<p>然后在虚拟机-&gt;设置-&gt;网络适配器中选择自定义VMnet8</p>\n<blockquote>\n<p>可以将原有的<code>ifcfg-enoxxxxxxx</code>文件删除，然后修改<code>grub</code>文件<br>vim /etc/default/grub<br>然后在<code>GRUB_CMDLINE_LINUX</code>原有的参数后面加上<code>&quot;net.ifnames=0 biosdevname=0&quot;</code>，保存退出后，执行<br><code>grub2-mkconfig -o /boot/grub2/grub.cfg</code><br>然后重启计算机</p>\n</blockquote>\n<h2 id=\"添加用户和权限\"><a href=\"#添加用户和权限\" class=\"headerlink\" title=\"添加用户和权限\"></a>添加用户和权限</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ useradd apache</span><br><span class=\"line\"></span><br><span class=\"line\">$ passwd apache</span><br><span class=\"line\"></span><br><span class=\"line\">$ visudo </span><br><span class=\"line\"></span><br><span class=\"line\">$ /root</span><br><span class=\"line\"></span><br><span class=\"line\">$ yyp</span><br></pre></td></tr></table></figure>\n<h2 id=\"安装apache\"><a href=\"#安装apache\" class=\"headerlink\" title=\"安装apache\"></a>安装apache</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install httpd httpd-devel</span><br><span class=\"line\"></span><br><span class=\"line\">#开启apache服务</span><br><span class=\"line\">systemctl start httpd.service</span><br><span class=\"line\"></span><br><span class=\"line\">#关闭apache服务</span><br><span class=\"line\">systemctl stop httpd.service</span><br><span class=\"line\"></span><br><span class=\"line\">#设置为开机启动</span><br><span class=\"line\">systemctl enable httpd.service</span><br><span class=\"line\"></span><br><span class=\"line\">#关闭防火墙</span><br><span class=\"line\">systemctl stop firewalld.service</span><br><span class=\"line\"></span><br><span class=\"line\">#开机不启动防火墙</span><br><span class=\"line\">systemctl disable firewalld.service</span><br><span class=\"line\"></span><br><span class=\"line\">#apache默认使用/var/www/html文件夹里的资源，故可以创建一个index.html文件</span><br><span class=\"line\">echo apache133 &gt; index.html</span><br></pre></td></tr></table></figure>\n<h2 id=\"安装Nginx\"><a href=\"#安装Nginx\" class=\"headerlink\" title=\"安装Nginx\"></a>安装Nginx</h2><h3 id=\"使用压缩包安装nginx\"><a href=\"#使用压缩包安装nginx\" class=\"headerlink\" title=\"使用压缩包安装nginx\"></a>使用压缩包安装nginx</h3><ol>\n<li><p>切换为root用户</p>\n</li>\n<li><p>进入/usr/local/src目录下</p>\n</li>\n<li><p>下载Nginx、openssl、pcre以及zlib</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget http://nginx.org/download/nginx-1.12.2.tar.gz</span><br><span class=\"line\">wget https://www.openssl.org/source/openssl-fips-2.0.16.tar.gz</span><br><span class=\"line\">wget ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/pcre-8.40.tar.gz</span><br><span class=\"line\">wget http://www.zlib.net/zlib-1.2.11.tar.gz</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>可能需要先安装c++编译环境</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install gcc-c++</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>安装openssl</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar zxvf openssl-fips-2.0.16.tar.gz </span><br><span class=\"line\">cd openssl-fips-2.0.16/</span><br><span class=\"line\">./config</span><br><span class=\"line\">make &amp;&amp; make install</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>安装pcre</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar zxvf pcre-8.40.tar.gz </span><br><span class=\"line\">cd pcre-8.40/</span><br><span class=\"line\">./configure</span><br><span class=\"line\">make &amp;&amp; make install</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>安装zlib</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar zxvf zlib-1.2.11.tar.gz </span><br><span class=\"line\">cd zlib-1.2.11/</span><br><span class=\"line\">./configure</span><br><span class=\"line\">make &amp;&amp; make install</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>安装Nginx</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar zxvf nginx-1.12.2.tar.gz </span><br><span class=\"line\">cd nginx-1.12.2/</span><br><span class=\"line\">./configure</span><br><span class=\"line\">make &amp;&amp; make install</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>启动Nginx</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/usr/local/nginx/sbin/nginx</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Nginx基本操作</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#启动</span><br><span class=\"line\">[root@localhost ~]# /usr/local/nginx/sbin/nginx</span><br><span class=\"line\">#停止/重启</span><br><span class=\"line\">[root@localhost ~]# /usr/local/nginx/sbin/nginx -s stop(quit、reload)</span><br><span class=\"line\">#命令帮助</span><br><span class=\"line\">[root@localhost ~]# /usr/local/nginx/sbin/nginx -h</span><br><span class=\"line\">#验证配置文件</span><br><span class=\"line\">[root@localhost ~]# /usr/local/nginx/sbin/nginx -t</span><br><span class=\"line\">#配置文件</span><br><span class=\"line\">[root@localhost ~]# vim /usr/local/nginx/conf/nginx.conf</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>获取Nginx的安装位置</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">whereis nginx</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>修改Nginx的配置文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost conf]# cd /usr/local/nginx/conf/</span><br><span class=\"line\">[root@localhost conf]# vim nginx.conf</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在http内添加</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">upstream test.com&#123;</span><br><span class=\"line\">  server 192.168.17.133:80 weight=5;</span><br><span class=\"line\">  server 192.168.17.134:80 weight=1;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在http-&gt;server中的location中添加</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">location / &#123;</span><br><span class=\"line\">  proxy_pass  http://test.com;</span><br><span class=\"line\">  proxy_set_header Host       $host;</span><br><span class=\"line\">  proxy_set_header X-Real-IP  $remote_addr;</span><br><span class=\"line\">  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class=\"line\">  root   html;</span><br><span class=\"line\">  index  index.html index.htm;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>安装rz和sz</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install lrzsz</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h3 id=\"使用yum安装nginx-推荐\"><a href=\"#使用yum安装nginx-推荐\" class=\"headerlink\" title=\"使用yum安装nginx(推荐)\"></a>使用yum安装nginx(推荐)</h3><blockquote>\n<p>本地yum源中没有我们想要的nginx，那么就需要创建一个<code>/etc/yum.repos.d/nginx.repo</code>的文件，新增一个yum源。</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim /etc/yum.repos.d/nginx.repo</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>然后加入如下内容</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[nginx]</span><br><span class=\"line\">name=nginx repo</span><br><span class=\"line\">baseurl=http://nginx.org/packages/centos/$releasever/$basearch/</span><br><span class=\"line\">gpgcheck=0</span><br><span class=\"line\">enabled=1</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>查询nginx的相关信息并安装</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum list | grep nginx</span><br><span class=\"line\">yum install -y nginx</span><br></pre></td></tr></table></figure>\n<h2 id=\"安装Keepalived\"><a href=\"#安装Keepalived\" class=\"headerlink\" title=\"安装Keepalived\"></a>安装Keepalived</h2><h3 id=\"安装Keepalived-1\"><a href=\"#安装Keepalived-1\" class=\"headerlink\" title=\"安装Keepalived\"></a>安装Keepalived</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget http://www.keepalived.org/software/keepalived-1.2.24.tar.gz</span><br><span class=\"line\">tar -zxvf keepalived-1.2.24.tar.gz</span><br><span class=\"line\">cd keepalived-1.2.24</span><br><span class=\"line\">./configure --prefix=/usr/local/keepalived</span><br><span class=\"line\">make &amp;&amp; make install</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>在安装时可能会出现如下错误\\<br>!!! OpenSSL is not properly installed on your system. !!!\\<br>!!! Can not include OpenSSL headers files.\\<br>解决办法：yum -y install openssl-devel</p>\n<p>也可以直接使用yum安装</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install keepalived</span><br></pre></td></tr></table></figure>\n<h3 id=\"配置Keepalived\"><a href=\"#配置Keepalived\" class=\"headerlink\" title=\"配置Keepalived\"></a>配置Keepalived</h3><p>keepalived启动时会从/etc/keepalived目录下查找keepalived.conf配置文件，如果没有找到则使用默认的配置。/etc/keepalived目录安装时默认是没有安装的，需要手动创建。</p>\n<blockquote>\n<p>先备份配置文件</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cp keepalived.conf keepalived.conf.bak</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p><code>在启动keepalived前先关闭防火墙和selinux</code></p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl stop firewalld.service</span><br><span class=\"line\">systemctl disable firewalld.service</span><br><span class=\"line\"></span><br><span class=\"line\">getenforce</span><br><span class=\"line\">/usr/sbin/sestatus -v</span><br><span class=\"line\">#临时关闭</span><br><span class=\"line\">setenforce 0</span><br><span class=\"line\">#永久关闭</span><br><span class=\"line\">vim /etc/selinux/config</span><br><span class=\"line\">#将SELINUX=enforcing改为SELINUX=disabled，必须重启才能生效</span><br></pre></td></tr></table></figure>\n"},{"title":"Nginx中proxy_pass和rewrite详解","_content":"\n## proxy_pass和rewrite\n\n### proxy_pass\n\n```\nSyntax:     proxy_pass URL;\nDefault:    —\nContext:    location, if in location, limit_except\n```\n\n1. 不影响浏览器地址栏的url\n\n2. 设置被代理server的协议和地址，URI可选(可以有，也可以没有)\n\n3. 协议可以为http或https\n\n4. 地址可以为域名或者IP，端口可选；eg：\n  \n  ```\n  proxy_pass http://localhost:8000/uri/;\n  ```\n\n5. 如果一个域名可以解析到多个地址，那么这些地址会被轮流使用，此外，还可以把一个地址指定为 server group（如：nginx的upstream）, eg:\n  \n  ```\n  upstream backend {\n    server backend1.example.com       weight=5;\n    server backend2.example.com:8080;\n    server unix:/tmp/backend3;\n \n    server backup1.example.com:8080   backup;\n    server backup2.example.com:8080   backup;\n  }\n \n  server {\n    location / {\n        proxy_pass http://backend;\n    }\n  }\n  ```\n\n6. server name，port，  URI支持变量的形式，eg：\n\n  ```\n  proxy_pass http://$host$uri;\n  ```\n\n  这种情况下，nginx会在server groups（upstream后端server）里搜索server name，如果没有找到，会用dns解析请求的URI按照下面的规则传给后端server\n    \n  6.1. 如果proxy_pass的URL定向里包括URI，那么请求中匹配到location中URI的部分会被proxy_pass后面URL中的URI替换，eg：\n\n    ```\n    location /name/ {\n        proxy_pass http://127.0.0.1/remote/;\n    }\n    # 请求http://127.0.0.1/name/test.html 会被代理到http://127.0.0.1/remote/test.html\n    ```\n\n  6.2. 如果proxy_pass的URL定向里不包括URI，那么请求中的URI会保持原样传送给后端server，eg：\n\n    ```\n    location /name/ {\n        proxy_pass http://127.0.0.1;\n    }\n    #请求http://127.0.0.1/name/test.html 会被代理到http://127.0.0.1/name/test.html\n    ```\n\n  6.3. 一些情况下，不能确定替换的URI：\n    1. location里是正则表达式，这种情况下，proxy_pass里最好不要有URI；\n    2. 在proxy_pass前面用了rewrite，如下，这种情况下，proxy_pass是无效的，eg:\n      ```\n      location /name/ {\n        rewrite    /name/([^/]+) /users?name=$1 break;\n        proxy_pass http://127.0.0.1;\n      }\n      ```\n    \n### rewrite\n\n```\nsyntax:     rewrite regex replacement [flag]\nDefault:    —\nContext:    server, location, if\n```\n\n- 如果正则表达式（regex）匹配到了请求的URI（request URI），这个URI会被后面的replacement替换\n- rewrite的定向会根据他们在配置文件中出现的顺序依次执行\n- 通过使用flag可以终止定向后进一步的处理\n- 如果replacement以“http://”, “https://”, or “$scheme”开头，处理将会终止，请求结果会以重定向的形式返回给客户端（client）\n- 如果replacement字符串里有新的request参数，那么之前的参数会附加到其后面，如果要避免这种情况，那就在replacement字符串后面加上“？”，eg：\n\n  ```\n  rewrite ^/users/(.*)$ /show?user=$1? last;=\n  ```\n\n- 如果正则表达式（regex）里包含“}” or “;”字符，需要用单引号或者双引号把正则表达式引起来\n\n可选的flag参数如下：\n- last\n    1. 结束当前的请求处理，用替换后的URI重新匹配location；\n    2. 可理解为重写（rewrite）后，发起了一个新请求，进入server模块，匹配location；\n    3. 如果重新匹配循环的次数超过10次，nginx会返回500错误；\n    4. 返回302 http状态码 ；\n    5. 浏览器地址栏显示重地向后的url\n- break\n    1. 结束当前的请求处理，使用当前资源，不在执行location里余下的语句；\n    2. 返回302 http状态码 ；\n    3. 浏览器地址栏显示重定向后的url\n- redirect\n    1. 临时跳转，返回302 http状态码；\n    2. 浏览器地址栏显示重定向后的url\n- permanent\n    1. 永久跳转，返回301 http状态码；\n    2. 浏览器地址栏显示重定向后的url\n","source":"_posts/nginx_proxypass_rewrite.md","raw":"---\ntitle: Nginx中proxy_pass和rewrite详解\ncategories:\n- Linux\ntags:\n- Nginx\n---\n\n## proxy_pass和rewrite\n\n### proxy_pass\n\n```\nSyntax:     proxy_pass URL;\nDefault:    —\nContext:    location, if in location, limit_except\n```\n\n1. 不影响浏览器地址栏的url\n\n2. 设置被代理server的协议和地址，URI可选(可以有，也可以没有)\n\n3. 协议可以为http或https\n\n4. 地址可以为域名或者IP，端口可选；eg：\n  \n  ```\n  proxy_pass http://localhost:8000/uri/;\n  ```\n\n5. 如果一个域名可以解析到多个地址，那么这些地址会被轮流使用，此外，还可以把一个地址指定为 server group（如：nginx的upstream）, eg:\n  \n  ```\n  upstream backend {\n    server backend1.example.com       weight=5;\n    server backend2.example.com:8080;\n    server unix:/tmp/backend3;\n \n    server backup1.example.com:8080   backup;\n    server backup2.example.com:8080   backup;\n  }\n \n  server {\n    location / {\n        proxy_pass http://backend;\n    }\n  }\n  ```\n\n6. server name，port，  URI支持变量的形式，eg：\n\n  ```\n  proxy_pass http://$host$uri;\n  ```\n\n  这种情况下，nginx会在server groups（upstream后端server）里搜索server name，如果没有找到，会用dns解析请求的URI按照下面的规则传给后端server\n    \n  6.1. 如果proxy_pass的URL定向里包括URI，那么请求中匹配到location中URI的部分会被proxy_pass后面URL中的URI替换，eg：\n\n    ```\n    location /name/ {\n        proxy_pass http://127.0.0.1/remote/;\n    }\n    # 请求http://127.0.0.1/name/test.html 会被代理到http://127.0.0.1/remote/test.html\n    ```\n\n  6.2. 如果proxy_pass的URL定向里不包括URI，那么请求中的URI会保持原样传送给后端server，eg：\n\n    ```\n    location /name/ {\n        proxy_pass http://127.0.0.1;\n    }\n    #请求http://127.0.0.1/name/test.html 会被代理到http://127.0.0.1/name/test.html\n    ```\n\n  6.3. 一些情况下，不能确定替换的URI：\n    1. location里是正则表达式，这种情况下，proxy_pass里最好不要有URI；\n    2. 在proxy_pass前面用了rewrite，如下，这种情况下，proxy_pass是无效的，eg:\n      ```\n      location /name/ {\n        rewrite    /name/([^/]+) /users?name=$1 break;\n        proxy_pass http://127.0.0.1;\n      }\n      ```\n    \n### rewrite\n\n```\nsyntax:     rewrite regex replacement [flag]\nDefault:    —\nContext:    server, location, if\n```\n\n- 如果正则表达式（regex）匹配到了请求的URI（request URI），这个URI会被后面的replacement替换\n- rewrite的定向会根据他们在配置文件中出现的顺序依次执行\n- 通过使用flag可以终止定向后进一步的处理\n- 如果replacement以“http://”, “https://”, or “$scheme”开头，处理将会终止，请求结果会以重定向的形式返回给客户端（client）\n- 如果replacement字符串里有新的request参数，那么之前的参数会附加到其后面，如果要避免这种情况，那就在replacement字符串后面加上“？”，eg：\n\n  ```\n  rewrite ^/users/(.*)$ /show?user=$1? last;=\n  ```\n\n- 如果正则表达式（regex）里包含“}” or “;”字符，需要用单引号或者双引号把正则表达式引起来\n\n可选的flag参数如下：\n- last\n    1. 结束当前的请求处理，用替换后的URI重新匹配location；\n    2. 可理解为重写（rewrite）后，发起了一个新请求，进入server模块，匹配location；\n    3. 如果重新匹配循环的次数超过10次，nginx会返回500错误；\n    4. 返回302 http状态码 ；\n    5. 浏览器地址栏显示重地向后的url\n- break\n    1. 结束当前的请求处理，使用当前资源，不在执行location里余下的语句；\n    2. 返回302 http状态码 ；\n    3. 浏览器地址栏显示重定向后的url\n- redirect\n    1. 临时跳转，返回302 http状态码；\n    2. 浏览器地址栏显示重定向后的url\n- permanent\n    1. 永久跳转，返回301 http状态码；\n    2. 浏览器地址栏显示重定向后的url\n","slug":"nginx_proxypass_rewrite","published":1,"date":"2018-01-31T14:52:29.674Z","updated":"2018-01-31T14:52:29.673Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjd8i921v000mtyasj6wnwaee","content":"<h2 id=\"proxy-pass和rewrite\"><a href=\"#proxy-pass和rewrite\" class=\"headerlink\" title=\"proxy_pass和rewrite\"></a>proxy_pass和rewrite</h2><h3 id=\"proxy-pass\"><a href=\"#proxy-pass\" class=\"headerlink\" title=\"proxy_pass\"></a>proxy_pass</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Syntax:     proxy_pass URL;</span><br><span class=\"line\">Default:    —</span><br><span class=\"line\">Context:    location, if in location, limit_except</span><br></pre></td></tr></table></figure>\n<ol>\n<li><p>不影响浏览器地址栏的url</p>\n</li>\n<li><p>设置被代理server的协议和地址，URI可选(可以有，也可以没有)</p>\n</li>\n<li><p>协议可以为http或https</p>\n</li>\n<li><p>地址可以为域名或者IP，端口可选；eg：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">proxy_pass http://localhost:8000/uri/;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>如果一个域名可以解析到多个地址，那么这些地址会被轮流使用，此外，还可以把一个地址指定为 server group（如：nginx的upstream）, eg:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">upstream backend &#123;</span><br><span class=\"line\">  server backend1.example.com       weight=5;</span><br><span class=\"line\">  server backend2.example.com:8080;</span><br><span class=\"line\">  server unix:/tmp/backend3;</span><br><span class=\"line\"> </span><br><span class=\"line\">  server backup1.example.com:8080   backup;</span><br><span class=\"line\">  server backup2.example.com:8080   backup;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">server &#123;</span><br><span class=\"line\">  location / &#123;</span><br><span class=\"line\">      proxy_pass http://backend;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>server name，port，  URI支持变量的形式，eg：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">proxy_pass http://$host$uri;</span><br></pre></td></tr></table></figure>\n<p>这种情况下，nginx会在server groups（upstream后端server）里搜索server name，如果没有找到，会用dns解析请求的URI按照下面的规则传给后端server</p>\n<p>6.1. 如果proxy_pass的URL定向里包括URI，那么请求中匹配到location中URI的部分会被proxy_pass后面URL中的URI替换，eg：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">location /name/ &#123;</span><br><span class=\"line\">    proxy_pass http://127.0.0.1/remote/;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"># 请求http://127.0.0.1/name/test.html 会被代理到http://127.0.0.1/remote/test.html</span><br></pre></td></tr></table></figure>\n<p>6.2. 如果proxy_pass的URL定向里不包括URI，那么请求中的URI会保持原样传送给后端server，eg：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">location /name/ &#123;</span><br><span class=\"line\">    proxy_pass http://127.0.0.1;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#请求http://127.0.0.1/name/test.html 会被代理到http://127.0.0.1/name/test.html</span><br></pre></td></tr></table></figure>\n<p>6.3. 一些情况下，不能确定替换的URI：</p>\n<ol>\n<li>location里是正则表达式，这种情况下，proxy_pass里最好不要有URI；</li>\n<li>在proxy_pass前面用了rewrite，如下，这种情况下，proxy_pass是无效的，eg:<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">location /name/ &#123;</span><br><span class=\"line\">  rewrite    /name/([^/]+) /users?name=$1 break;</span><br><span class=\"line\">  proxy_pass http://127.0.0.1;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"rewrite\"><a href=\"#rewrite\" class=\"headerlink\" title=\"rewrite\"></a>rewrite</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">syntax:     rewrite regex replacement [flag]</span><br><span class=\"line\">Default:    —</span><br><span class=\"line\">Context:    server, location, if</span><br></pre></td></tr></table></figure>\n<ul>\n<li>如果正则表达式（regex）匹配到了请求的URI（request URI），这个URI会被后面的replacement替换</li>\n<li>rewrite的定向会根据他们在配置文件中出现的顺序依次执行</li>\n<li>通过使用flag可以终止定向后进一步的处理</li>\n<li>如果replacement以“http://”, “https://”, or “$scheme”开头，处理将会终止，请求结果会以重定向的形式返回给客户端（client）</li>\n<li><p>如果replacement字符串里有新的request参数，那么之前的参数会附加到其后面，如果要避免这种情况，那就在replacement字符串后面加上“？”，eg：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rewrite ^/users/(.*)$ /show?user=$1? last;=</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>如果正则表达式（regex）里包含“}” or “;”字符，需要用单引号或者双引号把正则表达式引起来</p>\n</li>\n</ul>\n<p>可选的flag参数如下：</p>\n<ul>\n<li>last<ol>\n<li>结束当前的请求处理，用替换后的URI重新匹配location；</li>\n<li>可理解为重写（rewrite）后，发起了一个新请求，进入server模块，匹配location；</li>\n<li>如果重新匹配循环的次数超过10次，nginx会返回500错误；</li>\n<li>返回302 http状态码 ；</li>\n<li>浏览器地址栏显示重地向后的url</li>\n</ol>\n</li>\n<li>break<ol>\n<li>结束当前的请求处理，使用当前资源，不在执行location里余下的语句；</li>\n<li>返回302 http状态码 ；</li>\n<li>浏览器地址栏显示重定向后的url</li>\n</ol>\n</li>\n<li>redirect<ol>\n<li>临时跳转，返回302 http状态码；</li>\n<li>浏览器地址栏显示重定向后的url</li>\n</ol>\n</li>\n<li>permanent<ol>\n<li>永久跳转，返回301 http状态码；</li>\n<li>浏览器地址栏显示重定向后的url</li>\n</ol>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"proxy-pass和rewrite\"><a href=\"#proxy-pass和rewrite\" class=\"headerlink\" title=\"proxy_pass和rewrite\"></a>proxy_pass和rewrite</h2><h3 id=\"proxy-pass\"><a href=\"#proxy-pass\" class=\"headerlink\" title=\"proxy_pass\"></a>proxy_pass</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Syntax:     proxy_pass URL;</span><br><span class=\"line\">Default:    —</span><br><span class=\"line\">Context:    location, if in location, limit_except</span><br></pre></td></tr></table></figure>\n<ol>\n<li><p>不影响浏览器地址栏的url</p>\n</li>\n<li><p>设置被代理server的协议和地址，URI可选(可以有，也可以没有)</p>\n</li>\n<li><p>协议可以为http或https</p>\n</li>\n<li><p>地址可以为域名或者IP，端口可选；eg：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">proxy_pass http://localhost:8000/uri/;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>如果一个域名可以解析到多个地址，那么这些地址会被轮流使用，此外，还可以把一个地址指定为 server group（如：nginx的upstream）, eg:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">upstream backend &#123;</span><br><span class=\"line\">  server backend1.example.com       weight=5;</span><br><span class=\"line\">  server backend2.example.com:8080;</span><br><span class=\"line\">  server unix:/tmp/backend3;</span><br><span class=\"line\"> </span><br><span class=\"line\">  server backup1.example.com:8080   backup;</span><br><span class=\"line\">  server backup2.example.com:8080   backup;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">server &#123;</span><br><span class=\"line\">  location / &#123;</span><br><span class=\"line\">      proxy_pass http://backend;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>server name，port，  URI支持变量的形式，eg：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">proxy_pass http://$host$uri;</span><br></pre></td></tr></table></figure>\n<p>这种情况下，nginx会在server groups（upstream后端server）里搜索server name，如果没有找到，会用dns解析请求的URI按照下面的规则传给后端server</p>\n<p>6.1. 如果proxy_pass的URL定向里包括URI，那么请求中匹配到location中URI的部分会被proxy_pass后面URL中的URI替换，eg：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">location /name/ &#123;</span><br><span class=\"line\">    proxy_pass http://127.0.0.1/remote/;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"># 请求http://127.0.0.1/name/test.html 会被代理到http://127.0.0.1/remote/test.html</span><br></pre></td></tr></table></figure>\n<p>6.2. 如果proxy_pass的URL定向里不包括URI，那么请求中的URI会保持原样传送给后端server，eg：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">location /name/ &#123;</span><br><span class=\"line\">    proxy_pass http://127.0.0.1;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#请求http://127.0.0.1/name/test.html 会被代理到http://127.0.0.1/name/test.html</span><br></pre></td></tr></table></figure>\n<p>6.3. 一些情况下，不能确定替换的URI：</p>\n<ol>\n<li>location里是正则表达式，这种情况下，proxy_pass里最好不要有URI；</li>\n<li>在proxy_pass前面用了rewrite，如下，这种情况下，proxy_pass是无效的，eg:<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">location /name/ &#123;</span><br><span class=\"line\">  rewrite    /name/([^/]+) /users?name=$1 break;</span><br><span class=\"line\">  proxy_pass http://127.0.0.1;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"rewrite\"><a href=\"#rewrite\" class=\"headerlink\" title=\"rewrite\"></a>rewrite</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">syntax:     rewrite regex replacement [flag]</span><br><span class=\"line\">Default:    —</span><br><span class=\"line\">Context:    server, location, if</span><br></pre></td></tr></table></figure>\n<ul>\n<li>如果正则表达式（regex）匹配到了请求的URI（request URI），这个URI会被后面的replacement替换</li>\n<li>rewrite的定向会根据他们在配置文件中出现的顺序依次执行</li>\n<li>通过使用flag可以终止定向后进一步的处理</li>\n<li>如果replacement以“http://”, “https://”, or “$scheme”开头，处理将会终止，请求结果会以重定向的形式返回给客户端（client）</li>\n<li><p>如果replacement字符串里有新的request参数，那么之前的参数会附加到其后面，如果要避免这种情况，那就在replacement字符串后面加上“？”，eg：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rewrite ^/users/(.*)$ /show?user=$1? last;=</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>如果正则表达式（regex）里包含“}” or “;”字符，需要用单引号或者双引号把正则表达式引起来</p>\n</li>\n</ul>\n<p>可选的flag参数如下：</p>\n<ul>\n<li>last<ol>\n<li>结束当前的请求处理，用替换后的URI重新匹配location；</li>\n<li>可理解为重写（rewrite）后，发起了一个新请求，进入server模块，匹配location；</li>\n<li>如果重新匹配循环的次数超过10次，nginx会返回500错误；</li>\n<li>返回302 http状态码 ；</li>\n<li>浏览器地址栏显示重地向后的url</li>\n</ol>\n</li>\n<li>break<ol>\n<li>结束当前的请求处理，使用当前资源，不在执行location里余下的语句；</li>\n<li>返回302 http状态码 ；</li>\n<li>浏览器地址栏显示重定向后的url</li>\n</ol>\n</li>\n<li>redirect<ol>\n<li>临时跳转，返回302 http状态码；</li>\n<li>浏览器地址栏显示重定向后的url</li>\n</ol>\n</li>\n<li>permanent<ol>\n<li>永久跳转，返回301 http状态码；</li>\n<li>浏览器地址栏显示重定向后的url</li>\n</ol>\n</li>\n</ul>\n"},{"title":"vim基础","date":"2018-02-01T07:20:41.600Z","modified":null,"_content":"\n1. vim编辑器在内存缓冲区中处理数据。\n2. vim编辑器有两种操作模式：普通模式和插入模式。\n3. vim移动光标的命令：h-左  j-下  k-上  l-右\n4. 快速移动命令：PageDown、PageUp、G(最后一行)、num G(移动到第num行)、gg(移动到第一行)\n\n### 编辑数据\nx\t\t删除当前光标所在位置的字符\ndd\t\t删除当前光标所在行\ndw\t\t删除当前光标所在位置的单词\nd$\t\t删除当前光标所在位置至行尾的内容\nJ\t\t删除当前光标所在行尾的换行符\nu\t\t撤销前一编辑命令\na\t\t在当前光标后追加数据\n\n### 复制和粘贴\n先使用dd删除，然后使用p粘贴\nyw\t\t复制一个单词\ny$\t\t复制到行尾\n\n### 查找和替换\n/content\tn\n:s/old/new/\t\t替换\n:s/old/new/g\n:n,ms/old/new/g\t替换行号n和m之间所有old\n:%s/old/new/g\t替换整个文件中所有old\n:%s/old/new/gc\t替换整个文件中的所有old，但在每次出现时提示\n","source":"_posts/vim_base.md","raw":"---\ntitle: vim基础\ndate:\nmodified:\ncategories:\n- Linux\ntags:\n- vim\n- Linux\n---\n\n1. vim编辑器在内存缓冲区中处理数据。\n2. vim编辑器有两种操作模式：普通模式和插入模式。\n3. vim移动光标的命令：h-左  j-下  k-上  l-右\n4. 快速移动命令：PageDown、PageUp、G(最后一行)、num G(移动到第num行)、gg(移动到第一行)\n\n### 编辑数据\nx\t\t删除当前光标所在位置的字符\ndd\t\t删除当前光标所在行\ndw\t\t删除当前光标所在位置的单词\nd$\t\t删除当前光标所在位置至行尾的内容\nJ\t\t删除当前光标所在行尾的换行符\nu\t\t撤销前一编辑命令\na\t\t在当前光标后追加数据\n\n### 复制和粘贴\n先使用dd删除，然后使用p粘贴\nyw\t\t复制一个单词\ny$\t\t复制到行尾\n\n### 查找和替换\n/content\tn\n:s/old/new/\t\t替换\n:s/old/new/g\n:n,ms/old/new/g\t替换行号n和m之间所有old\n:%s/old/new/g\t替换整个文件中所有old\n:%s/old/new/gc\t替换整个文件中的所有old，但在每次出现时提示\n","slug":"vim_base","published":1,"updated":"2018-02-01T07:20:41.600Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjd8i9220000ptyasm96yz0xw","content":"<ol>\n<li>vim编辑器在内存缓冲区中处理数据。</li>\n<li>vim编辑器有两种操作模式：普通模式和插入模式。</li>\n<li>vim移动光标的命令：h-左  j-下  k-上  l-右</li>\n<li>快速移动命令：PageDown、PageUp、G(最后一行)、num G(移动到第num行)、gg(移动到第一行)</li>\n</ol>\n<h3 id=\"编辑数据\"><a href=\"#编辑数据\" class=\"headerlink\" title=\"编辑数据\"></a>编辑数据</h3><p>x        删除当前光标所在位置的字符<br>dd        删除当前光标所在行<br>dw        删除当前光标所在位置的单词<br>d$        删除当前光标所在位置至行尾的内容<br>J        删除当前光标所在行尾的换行符<br>u        撤销前一编辑命令<br>a        在当前光标后追加数据</p>\n<h3 id=\"复制和粘贴\"><a href=\"#复制和粘贴\" class=\"headerlink\" title=\"复制和粘贴\"></a>复制和粘贴</h3><p>先使用dd删除，然后使用p粘贴<br>yw        复制一个单词<br>y$        复制到行尾</p>\n<h3 id=\"查找和替换\"><a href=\"#查找和替换\" class=\"headerlink\" title=\"查找和替换\"></a>查找和替换</h3><p>/content    n<br>:s/old/new/        替换<br>:s/old/new/g<br>:n,ms/old/new/g    替换行号n和m之间所有old<br>:%s/old/new/g    替换整个文件中所有old<br>:%s/old/new/gc    替换整个文件中的所有old，但在每次出现时提示</p>\n","site":{"data":{}},"excerpt":"","more":"<ol>\n<li>vim编辑器在内存缓冲区中处理数据。</li>\n<li>vim编辑器有两种操作模式：普通模式和插入模式。</li>\n<li>vim移动光标的命令：h-左  j-下  k-上  l-右</li>\n<li>快速移动命令：PageDown、PageUp、G(最后一行)、num G(移动到第num行)、gg(移动到第一行)</li>\n</ol>\n<h3 id=\"编辑数据\"><a href=\"#编辑数据\" class=\"headerlink\" title=\"编辑数据\"></a>编辑数据</h3><p>x        删除当前光标所在位置的字符<br>dd        删除当前光标所在行<br>dw        删除当前光标所在位置的单词<br>d$        删除当前光标所在位置至行尾的内容<br>J        删除当前光标所在行尾的换行符<br>u        撤销前一编辑命令<br>a        在当前光标后追加数据</p>\n<h3 id=\"复制和粘贴\"><a href=\"#复制和粘贴\" class=\"headerlink\" title=\"复制和粘贴\"></a>复制和粘贴</h3><p>先使用dd删除，然后使用p粘贴<br>yw        复制一个单词<br>y$        复制到行尾</p>\n<h3 id=\"查找和替换\"><a href=\"#查找和替换\" class=\"headerlink\" title=\"查找和替换\"></a>查找和替换</h3><p>/content    n<br>:s/old/new/        替换<br>:s/old/new/g<br>:n,ms/old/new/g    替换行号n和m之间所有old<br>:%s/old/new/g    替换整个文件中所有old<br>:%s/old/new/gc    替换整个文件中的所有old，但在每次出现时提示</p>\n"},{"title":"Zookeeper的安装和使用","date":"2018-02-01T03:17:05.846Z","modified":null,"_content":"\n## jdk1.8的安装\n> 由于采用最小化安装，所以centOS中并没有预安装的jdk，故不需要先卸载\n\n```\nrpm -qa|grep java\nmkdir /usr/java/\nmv jdk-8u161-linux-x64.tar.gz /usr/java/\ntar zxvf jdk-8u161-linux-x64.tar.gz\nmv jdk1.8.0_161/ jdk1.8\n```\n\n> 编辑配置文件，配置环境变量\n\n```\nvim /etc/profile\n\nJAVA_HOME=/usr/java/jdk1.8\nCLASSPATH=$JAVA_HOME/lib/\nPATH=$PATH:$JAVA_HOME/bin\nexport PATH JAVA_HOME CLASSPATH\n\nsource /etc/profile\n```\n\n## zookeeper安装\n\n```\nmkdir /usr/zookeeper/\nmv zookeeper-3.4.11.tar.gz /usr/zookeeper/\ntar zxvf zookeeper-3.4.11.tar.gz\ncd zookeeper-3.4.11\ncd conf\ncp zoo_sample.cfg zoo.cfg\n```\n\n> 新增zookeeper用户以及zookeeper组\n\n```\ngroupadd zookeeper\nuseradd -g zookeeper zookeeper\n```\n\n> 修改文件夹用户和组\n\n```\nchown -R zookeeper zookeeper-3.4.11\nchgrp -R zookeeper zookeeper-3.4.11\n```\n\n> 新增data和logs文件夹\n\n```\ncd /usr/zookeeper/zookeeper-3.4.11\nmkdir data\nmkdir logs\n```\n\n> 修改/usr/zookeeper/zookeeper-3.4.11/conf目录下的zoo.cfg文件\n\n```\n# The number of milliseconds of each tick\n# zookeeper 定义的基准时间间隔，单位：毫秒\ntickTime=2000\n# The number of ticks that the initial\n# synchronization phase can take\ninitLimit=10\n# The number of ticks that can pass between\n# sending a request and getting an acknowledgement\nsyncLimit=5\n# the directory where the snapshot is stored.\n# do not use /tmp for storage, /tmp here is just\n# example sakes.\n# dataDir=/tmp/zookeeper\n \n# 数据文件夹\ndataDir=/usr/zookeeper/zookeeper-3.4.11/data\n \n# 日志文件夹\ndataLogDir=/usr/zookeeper/zookeeper-3.4.11/logs\n \n# the port at which the clients will connect\n# 客户端访问 zookeeper 的端口号\nclientPort=2181\n \n# the maximum number of client connections.\n# increase this if you need to handle more clients\n#maxClientCnxns=60\n#\n# Be sure to read the maintenance section of the\n# administrator guide before turning on autopurge.\n#\n# http://zookeeper.apache.org/doc/current/zookeeperAdmin.html#sc_maintenance\n#\n# The number of snapshots to retain in dataDir\n#autopurge.snapRetainCount=3\n# Purge task interval in hours\n# Set to \"0\" to disable auto purge feature\n#autopurge.purgeInterval=1\n```\n\n> 修改系统配置文件，添加环境变量\n\n```\nvim /etc/profile\n\nJAVA_HOME=/usr/java/jdk1.8\nZOOKEEPER_HOME=/usr/zookeeper/zookeeper-3.4.11\nCLASSPATH=$JAVA_HOME/lib/\nPATH=$PATH:$JAVA_HOME/bin:$ZOOKEEPER_HOME/bin\nexport PATH JAVA_HOME CLASSPATH\n\nsource /etc/profile\n```\n\n### zookeeper常用命令\n\n```\nzkServer.sh start\nzkServer.sh stop\nzkServer.sh status\nzkServer.sh restart\n```\n\n### 以集群方式启动zookeeper\n\n> 先备份配置文件，然后将配置文件中的注释行去除\n\n```\nmv zoo.cfg zoo.cfg.standalone\ngrep -v \"^$\" zoo.cfg.standalone | grep -v \"^#\" > zoo.cfg\n```\n\n> 修改配置文件，如下\n\n```\ntickTime=2000\ninitLimit=10\nsyncLimit=5\ndataDir=/usr/zookeeper/zookeeper-3.4.11/data\ndataLogDir=/usr/zookeeper/zookeeper-3.4.11/logs\nclientPort=2181\nserver.1=192.168.17.133:2888:3888\nserver.2=192.168.17.134:2888:3888\nserver.3=192.168.17.135:2888:3888\n```\n\n> 然后在配置的datadir目录下，创建一个名为myid的文件，在该文件的第一行写上一个数字，与配置文件中server.后的数字一直\n\n```\necho 1 > data/myid\necho 2 > data/myid\necho 3 > data/myid\n```\n\n> 在启动zookeeper集群前，需要先关闭防火墙\n\n```\nsystemctl stop firewalld.service\nsystemctl disable firewalld.service\nfirewall-cmd --state\n```\n\n### zookeeper的可执行脚本\n\n脚本 | 说明\n---|---\nzkCleanup | 清理Zookeeper的历史数据，包括事务日志和快照数据文件\nzkCli | ZooKeeper的一个建议客户端\nzkEvn | 设置ZooKeeper的环境变量\nzkServer | ZooKeeper服务器的启动、停止和重启脚本\n","source":"_posts/zookeeper_install.md","raw":"---\ntitle: Zookeeper的安装和使用\ndate:\nmodified:\ncategories:\n- Zookeeper\ntags:\n- Zookeeper\n- Linux\n---\n\n## jdk1.8的安装\n> 由于采用最小化安装，所以centOS中并没有预安装的jdk，故不需要先卸载\n\n```\nrpm -qa|grep java\nmkdir /usr/java/\nmv jdk-8u161-linux-x64.tar.gz /usr/java/\ntar zxvf jdk-8u161-linux-x64.tar.gz\nmv jdk1.8.0_161/ jdk1.8\n```\n\n> 编辑配置文件，配置环境变量\n\n```\nvim /etc/profile\n\nJAVA_HOME=/usr/java/jdk1.8\nCLASSPATH=$JAVA_HOME/lib/\nPATH=$PATH:$JAVA_HOME/bin\nexport PATH JAVA_HOME CLASSPATH\n\nsource /etc/profile\n```\n\n## zookeeper安装\n\n```\nmkdir /usr/zookeeper/\nmv zookeeper-3.4.11.tar.gz /usr/zookeeper/\ntar zxvf zookeeper-3.4.11.tar.gz\ncd zookeeper-3.4.11\ncd conf\ncp zoo_sample.cfg zoo.cfg\n```\n\n> 新增zookeeper用户以及zookeeper组\n\n```\ngroupadd zookeeper\nuseradd -g zookeeper zookeeper\n```\n\n> 修改文件夹用户和组\n\n```\nchown -R zookeeper zookeeper-3.4.11\nchgrp -R zookeeper zookeeper-3.4.11\n```\n\n> 新增data和logs文件夹\n\n```\ncd /usr/zookeeper/zookeeper-3.4.11\nmkdir data\nmkdir logs\n```\n\n> 修改/usr/zookeeper/zookeeper-3.4.11/conf目录下的zoo.cfg文件\n\n```\n# The number of milliseconds of each tick\n# zookeeper 定义的基准时间间隔，单位：毫秒\ntickTime=2000\n# The number of ticks that the initial\n# synchronization phase can take\ninitLimit=10\n# The number of ticks that can pass between\n# sending a request and getting an acknowledgement\nsyncLimit=5\n# the directory where the snapshot is stored.\n# do not use /tmp for storage, /tmp here is just\n# example sakes.\n# dataDir=/tmp/zookeeper\n \n# 数据文件夹\ndataDir=/usr/zookeeper/zookeeper-3.4.11/data\n \n# 日志文件夹\ndataLogDir=/usr/zookeeper/zookeeper-3.4.11/logs\n \n# the port at which the clients will connect\n# 客户端访问 zookeeper 的端口号\nclientPort=2181\n \n# the maximum number of client connections.\n# increase this if you need to handle more clients\n#maxClientCnxns=60\n#\n# Be sure to read the maintenance section of the\n# administrator guide before turning on autopurge.\n#\n# http://zookeeper.apache.org/doc/current/zookeeperAdmin.html#sc_maintenance\n#\n# The number of snapshots to retain in dataDir\n#autopurge.snapRetainCount=3\n# Purge task interval in hours\n# Set to \"0\" to disable auto purge feature\n#autopurge.purgeInterval=1\n```\n\n> 修改系统配置文件，添加环境变量\n\n```\nvim /etc/profile\n\nJAVA_HOME=/usr/java/jdk1.8\nZOOKEEPER_HOME=/usr/zookeeper/zookeeper-3.4.11\nCLASSPATH=$JAVA_HOME/lib/\nPATH=$PATH:$JAVA_HOME/bin:$ZOOKEEPER_HOME/bin\nexport PATH JAVA_HOME CLASSPATH\n\nsource /etc/profile\n```\n\n### zookeeper常用命令\n\n```\nzkServer.sh start\nzkServer.sh stop\nzkServer.sh status\nzkServer.sh restart\n```\n\n### 以集群方式启动zookeeper\n\n> 先备份配置文件，然后将配置文件中的注释行去除\n\n```\nmv zoo.cfg zoo.cfg.standalone\ngrep -v \"^$\" zoo.cfg.standalone | grep -v \"^#\" > zoo.cfg\n```\n\n> 修改配置文件，如下\n\n```\ntickTime=2000\ninitLimit=10\nsyncLimit=5\ndataDir=/usr/zookeeper/zookeeper-3.4.11/data\ndataLogDir=/usr/zookeeper/zookeeper-3.4.11/logs\nclientPort=2181\nserver.1=192.168.17.133:2888:3888\nserver.2=192.168.17.134:2888:3888\nserver.3=192.168.17.135:2888:3888\n```\n\n> 然后在配置的datadir目录下，创建一个名为myid的文件，在该文件的第一行写上一个数字，与配置文件中server.后的数字一直\n\n```\necho 1 > data/myid\necho 2 > data/myid\necho 3 > data/myid\n```\n\n> 在启动zookeeper集群前，需要先关闭防火墙\n\n```\nsystemctl stop firewalld.service\nsystemctl disable firewalld.service\nfirewall-cmd --state\n```\n\n### zookeeper的可执行脚本\n\n脚本 | 说明\n---|---\nzkCleanup | 清理Zookeeper的历史数据，包括事务日志和快照数据文件\nzkCli | ZooKeeper的一个建议客户端\nzkEvn | 设置ZooKeeper的环境变量\nzkServer | ZooKeeper服务器的启动、停止和重启脚本\n","slug":"zookeeper_install","published":1,"updated":"2018-02-01T03:17:05.843Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjd8i92bo001ptyasj4xl0ysg","content":"<h2 id=\"jdk1-8的安装\"><a href=\"#jdk1-8的安装\" class=\"headerlink\" title=\"jdk1.8的安装\"></a>jdk1.8的安装</h2><blockquote>\n<p>由于采用最小化安装，所以centOS中并没有预安装的jdk，故不需要先卸载</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rpm -qa|grep java</span><br><span class=\"line\">mkdir /usr/java/</span><br><span class=\"line\">mv jdk-8u161-linux-x64.tar.gz /usr/java/</span><br><span class=\"line\">tar zxvf jdk-8u161-linux-x64.tar.gz</span><br><span class=\"line\">mv jdk1.8.0_161/ jdk1.8</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>编辑配置文件，配置环境变量</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim /etc/profile</span><br><span class=\"line\"></span><br><span class=\"line\">JAVA_HOME=/usr/java/jdk1.8</span><br><span class=\"line\">CLASSPATH=$JAVA_HOME/lib/</span><br><span class=\"line\">PATH=$PATH:$JAVA_HOME/bin</span><br><span class=\"line\">export PATH JAVA_HOME CLASSPATH</span><br><span class=\"line\"></span><br><span class=\"line\">source /etc/profile</span><br></pre></td></tr></table></figure>\n<h2 id=\"zookeeper安装\"><a href=\"#zookeeper安装\" class=\"headerlink\" title=\"zookeeper安装\"></a>zookeeper安装</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir /usr/zookeeper/</span><br><span class=\"line\">mv zookeeper-3.4.11.tar.gz /usr/zookeeper/</span><br><span class=\"line\">tar zxvf zookeeper-3.4.11.tar.gz</span><br><span class=\"line\">cd zookeeper-3.4.11</span><br><span class=\"line\">cd conf</span><br><span class=\"line\">cp zoo_sample.cfg zoo.cfg</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>新增zookeeper用户以及zookeeper组</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">groupadd zookeeper</span><br><span class=\"line\">useradd -g zookeeper zookeeper</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>修改文件夹用户和组</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chown -R zookeeper zookeeper-3.4.11</span><br><span class=\"line\">chgrp -R zookeeper zookeeper-3.4.11</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>新增data和logs文件夹</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /usr/zookeeper/zookeeper-3.4.11</span><br><span class=\"line\">mkdir data</span><br><span class=\"line\">mkdir logs</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>修改/usr/zookeeper/zookeeper-3.4.11/conf目录下的zoo.cfg文件</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># The number of milliseconds of each tick</span><br><span class=\"line\"># zookeeper 定义的基准时间间隔，单位：毫秒</span><br><span class=\"line\">tickTime=2000</span><br><span class=\"line\"># The number of ticks that the initial</span><br><span class=\"line\"># synchronization phase can take</span><br><span class=\"line\">initLimit=10</span><br><span class=\"line\"># The number of ticks that can pass between</span><br><span class=\"line\"># sending a request and getting an acknowledgement</span><br><span class=\"line\">syncLimit=5</span><br><span class=\"line\"># the directory where the snapshot is stored.</span><br><span class=\"line\"># do not use /tmp for storage, /tmp here is just</span><br><span class=\"line\"># example sakes.</span><br><span class=\"line\"># dataDir=/tmp/zookeeper</span><br><span class=\"line\"> </span><br><span class=\"line\"># 数据文件夹</span><br><span class=\"line\">dataDir=/usr/zookeeper/zookeeper-3.4.11/data</span><br><span class=\"line\"> </span><br><span class=\"line\"># 日志文件夹</span><br><span class=\"line\">dataLogDir=/usr/zookeeper/zookeeper-3.4.11/logs</span><br><span class=\"line\"> </span><br><span class=\"line\"># the port at which the clients will connect</span><br><span class=\"line\"># 客户端访问 zookeeper 的端口号</span><br><span class=\"line\">clientPort=2181</span><br><span class=\"line\"> </span><br><span class=\"line\"># the maximum number of client connections.</span><br><span class=\"line\"># increase this if you need to handle more clients</span><br><span class=\"line\">#maxClientCnxns=60</span><br><span class=\"line\">#</span><br><span class=\"line\"># Be sure to read the maintenance section of the</span><br><span class=\"line\"># administrator guide before turning on autopurge.</span><br><span class=\"line\">#</span><br><span class=\"line\"># http://zookeeper.apache.org/doc/current/zookeeperAdmin.html#sc_maintenance</span><br><span class=\"line\">#</span><br><span class=\"line\"># The number of snapshots to retain in dataDir</span><br><span class=\"line\">#autopurge.snapRetainCount=3</span><br><span class=\"line\"># Purge task interval in hours</span><br><span class=\"line\"># Set to &quot;0&quot; to disable auto purge feature</span><br><span class=\"line\">#autopurge.purgeInterval=1</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>修改系统配置文件，添加环境变量</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim /etc/profile</span><br><span class=\"line\"></span><br><span class=\"line\">JAVA_HOME=/usr/java/jdk1.8</span><br><span class=\"line\">ZOOKEEPER_HOME=/usr/zookeeper/zookeeper-3.4.11</span><br><span class=\"line\">CLASSPATH=$JAVA_HOME/lib/</span><br><span class=\"line\">PATH=$PATH:$JAVA_HOME/bin:$ZOOKEEPER_HOME/bin</span><br><span class=\"line\">export PATH JAVA_HOME CLASSPATH</span><br><span class=\"line\"></span><br><span class=\"line\">source /etc/profile</span><br></pre></td></tr></table></figure>\n<h3 id=\"zookeeper常用命令\"><a href=\"#zookeeper常用命令\" class=\"headerlink\" title=\"zookeeper常用命令\"></a>zookeeper常用命令</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">zkServer.sh start</span><br><span class=\"line\">zkServer.sh stop</span><br><span class=\"line\">zkServer.sh status</span><br><span class=\"line\">zkServer.sh restart</span><br></pre></td></tr></table></figure>\n<h3 id=\"以集群方式启动zookeeper\"><a href=\"#以集群方式启动zookeeper\" class=\"headerlink\" title=\"以集群方式启动zookeeper\"></a>以集群方式启动zookeeper</h3><blockquote>\n<p>先备份配置文件，然后将配置文件中的注释行去除</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mv zoo.cfg zoo.cfg.standalone</span><br><span class=\"line\">grep -v &quot;^$&quot; zoo.cfg.standalone | grep -v &quot;^#&quot; &gt; zoo.cfg</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>修改配置文件，如下</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tickTime=2000</span><br><span class=\"line\">initLimit=10</span><br><span class=\"line\">syncLimit=5</span><br><span class=\"line\">dataDir=/usr/zookeeper/zookeeper-3.4.11/data</span><br><span class=\"line\">dataLogDir=/usr/zookeeper/zookeeper-3.4.11/logs</span><br><span class=\"line\">clientPort=2181</span><br><span class=\"line\">server.1=192.168.17.133:2888:3888</span><br><span class=\"line\">server.2=192.168.17.134:2888:3888</span><br><span class=\"line\">server.3=192.168.17.135:2888:3888</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>然后在配置的datadir目录下，创建一个名为myid的文件，在该文件的第一行写上一个数字，与配置文件中server.后的数字一直</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">echo 1 &gt; data/myid</span><br><span class=\"line\">echo 2 &gt; data/myid</span><br><span class=\"line\">echo 3 &gt; data/myid</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>在启动zookeeper集群前，需要先关闭防火墙</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl stop firewalld.service</span><br><span class=\"line\">systemctl disable firewalld.service</span><br><span class=\"line\">firewall-cmd --state</span><br></pre></td></tr></table></figure>\n<h3 id=\"zookeeper的可执行脚本\"><a href=\"#zookeeper的可执行脚本\" class=\"headerlink\" title=\"zookeeper的可执行脚本\"></a>zookeeper的可执行脚本</h3><table>\n<thead>\n<tr>\n<th>脚本</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>zkCleanup</td>\n<td>清理Zookeeper的历史数据，包括事务日志和快照数据文件</td>\n</tr>\n<tr>\n<td>zkCli</td>\n<td>ZooKeeper的一个建议客户端</td>\n</tr>\n<tr>\n<td>zkEvn</td>\n<td>设置ZooKeeper的环境变量</td>\n</tr>\n<tr>\n<td>zkServer</td>\n<td>ZooKeeper服务器的启动、停止和重启脚本</td>\n</tr>\n</tbody>\n</table>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"jdk1-8的安装\"><a href=\"#jdk1-8的安装\" class=\"headerlink\" title=\"jdk1.8的安装\"></a>jdk1.8的安装</h2><blockquote>\n<p>由于采用最小化安装，所以centOS中并没有预安装的jdk，故不需要先卸载</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rpm -qa|grep java</span><br><span class=\"line\">mkdir /usr/java/</span><br><span class=\"line\">mv jdk-8u161-linux-x64.tar.gz /usr/java/</span><br><span class=\"line\">tar zxvf jdk-8u161-linux-x64.tar.gz</span><br><span class=\"line\">mv jdk1.8.0_161/ jdk1.8</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>编辑配置文件，配置环境变量</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim /etc/profile</span><br><span class=\"line\"></span><br><span class=\"line\">JAVA_HOME=/usr/java/jdk1.8</span><br><span class=\"line\">CLASSPATH=$JAVA_HOME/lib/</span><br><span class=\"line\">PATH=$PATH:$JAVA_HOME/bin</span><br><span class=\"line\">export PATH JAVA_HOME CLASSPATH</span><br><span class=\"line\"></span><br><span class=\"line\">source /etc/profile</span><br></pre></td></tr></table></figure>\n<h2 id=\"zookeeper安装\"><a href=\"#zookeeper安装\" class=\"headerlink\" title=\"zookeeper安装\"></a>zookeeper安装</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir /usr/zookeeper/</span><br><span class=\"line\">mv zookeeper-3.4.11.tar.gz /usr/zookeeper/</span><br><span class=\"line\">tar zxvf zookeeper-3.4.11.tar.gz</span><br><span class=\"line\">cd zookeeper-3.4.11</span><br><span class=\"line\">cd conf</span><br><span class=\"line\">cp zoo_sample.cfg zoo.cfg</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>新增zookeeper用户以及zookeeper组</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">groupadd zookeeper</span><br><span class=\"line\">useradd -g zookeeper zookeeper</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>修改文件夹用户和组</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chown -R zookeeper zookeeper-3.4.11</span><br><span class=\"line\">chgrp -R zookeeper zookeeper-3.4.11</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>新增data和logs文件夹</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /usr/zookeeper/zookeeper-3.4.11</span><br><span class=\"line\">mkdir data</span><br><span class=\"line\">mkdir logs</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>修改/usr/zookeeper/zookeeper-3.4.11/conf目录下的zoo.cfg文件</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># The number of milliseconds of each tick</span><br><span class=\"line\"># zookeeper 定义的基准时间间隔，单位：毫秒</span><br><span class=\"line\">tickTime=2000</span><br><span class=\"line\"># The number of ticks that the initial</span><br><span class=\"line\"># synchronization phase can take</span><br><span class=\"line\">initLimit=10</span><br><span class=\"line\"># The number of ticks that can pass between</span><br><span class=\"line\"># sending a request and getting an acknowledgement</span><br><span class=\"line\">syncLimit=5</span><br><span class=\"line\"># the directory where the snapshot is stored.</span><br><span class=\"line\"># do not use /tmp for storage, /tmp here is just</span><br><span class=\"line\"># example sakes.</span><br><span class=\"line\"># dataDir=/tmp/zookeeper</span><br><span class=\"line\"> </span><br><span class=\"line\"># 数据文件夹</span><br><span class=\"line\">dataDir=/usr/zookeeper/zookeeper-3.4.11/data</span><br><span class=\"line\"> </span><br><span class=\"line\"># 日志文件夹</span><br><span class=\"line\">dataLogDir=/usr/zookeeper/zookeeper-3.4.11/logs</span><br><span class=\"line\"> </span><br><span class=\"line\"># the port at which the clients will connect</span><br><span class=\"line\"># 客户端访问 zookeeper 的端口号</span><br><span class=\"line\">clientPort=2181</span><br><span class=\"line\"> </span><br><span class=\"line\"># the maximum number of client connections.</span><br><span class=\"line\"># increase this if you need to handle more clients</span><br><span class=\"line\">#maxClientCnxns=60</span><br><span class=\"line\">#</span><br><span class=\"line\"># Be sure to read the maintenance section of the</span><br><span class=\"line\"># administrator guide before turning on autopurge.</span><br><span class=\"line\">#</span><br><span class=\"line\"># http://zookeeper.apache.org/doc/current/zookeeperAdmin.html#sc_maintenance</span><br><span class=\"line\">#</span><br><span class=\"line\"># The number of snapshots to retain in dataDir</span><br><span class=\"line\">#autopurge.snapRetainCount=3</span><br><span class=\"line\"># Purge task interval in hours</span><br><span class=\"line\"># Set to &quot;0&quot; to disable auto purge feature</span><br><span class=\"line\">#autopurge.purgeInterval=1</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>修改系统配置文件，添加环境变量</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim /etc/profile</span><br><span class=\"line\"></span><br><span class=\"line\">JAVA_HOME=/usr/java/jdk1.8</span><br><span class=\"line\">ZOOKEEPER_HOME=/usr/zookeeper/zookeeper-3.4.11</span><br><span class=\"line\">CLASSPATH=$JAVA_HOME/lib/</span><br><span class=\"line\">PATH=$PATH:$JAVA_HOME/bin:$ZOOKEEPER_HOME/bin</span><br><span class=\"line\">export PATH JAVA_HOME CLASSPATH</span><br><span class=\"line\"></span><br><span class=\"line\">source /etc/profile</span><br></pre></td></tr></table></figure>\n<h3 id=\"zookeeper常用命令\"><a href=\"#zookeeper常用命令\" class=\"headerlink\" title=\"zookeeper常用命令\"></a>zookeeper常用命令</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">zkServer.sh start</span><br><span class=\"line\">zkServer.sh stop</span><br><span class=\"line\">zkServer.sh status</span><br><span class=\"line\">zkServer.sh restart</span><br></pre></td></tr></table></figure>\n<h3 id=\"以集群方式启动zookeeper\"><a href=\"#以集群方式启动zookeeper\" class=\"headerlink\" title=\"以集群方式启动zookeeper\"></a>以集群方式启动zookeeper</h3><blockquote>\n<p>先备份配置文件，然后将配置文件中的注释行去除</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mv zoo.cfg zoo.cfg.standalone</span><br><span class=\"line\">grep -v &quot;^$&quot; zoo.cfg.standalone | grep -v &quot;^#&quot; &gt; zoo.cfg</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>修改配置文件，如下</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tickTime=2000</span><br><span class=\"line\">initLimit=10</span><br><span class=\"line\">syncLimit=5</span><br><span class=\"line\">dataDir=/usr/zookeeper/zookeeper-3.4.11/data</span><br><span class=\"line\">dataLogDir=/usr/zookeeper/zookeeper-3.4.11/logs</span><br><span class=\"line\">clientPort=2181</span><br><span class=\"line\">server.1=192.168.17.133:2888:3888</span><br><span class=\"line\">server.2=192.168.17.134:2888:3888</span><br><span class=\"line\">server.3=192.168.17.135:2888:3888</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>然后在配置的datadir目录下，创建一个名为myid的文件，在该文件的第一行写上一个数字，与配置文件中server.后的数字一直</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">echo 1 &gt; data/myid</span><br><span class=\"line\">echo 2 &gt; data/myid</span><br><span class=\"line\">echo 3 &gt; data/myid</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>在启动zookeeper集群前，需要先关闭防火墙</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl stop firewalld.service</span><br><span class=\"line\">systemctl disable firewalld.service</span><br><span class=\"line\">firewall-cmd --state</span><br></pre></td></tr></table></figure>\n<h3 id=\"zookeeper的可执行脚本\"><a href=\"#zookeeper的可执行脚本\" class=\"headerlink\" title=\"zookeeper的可执行脚本\"></a>zookeeper的可执行脚本</h3><table>\n<thead>\n<tr>\n<th>脚本</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>zkCleanup</td>\n<td>清理Zookeeper的历史数据，包括事务日志和快照数据文件</td>\n</tr>\n<tr>\n<td>zkCli</td>\n<td>ZooKeeper的一个建议客户端</td>\n</tr>\n<tr>\n<td>zkEvn</td>\n<td>设置ZooKeeper的环境变量</td>\n</tr>\n<tr>\n<td>zkServer</td>\n<td>ZooKeeper服务器的启动、停止和重启脚本</td>\n</tr>\n</tbody>\n</table>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cjd8i920m0005tyasolwk5d8m","category_id":"cjd8i92070002tyasqf1ycjqz","_id":"cjd8i921a000btyasv6zxgdiu"},{"post_id":"cjd8i91zj0000tyasvtbnvkdj","category_id":"cjd8i92070002tyasqf1ycjqz","_id":"cjd8i921k000ftyasxusfnzrz"},{"post_id":"cjd8i92100006tyasqicq826p","category_id":"cjd8i92070002tyasqf1ycjqz","_id":"cjd8i921s000ityas3nkp0vp9"},{"post_id":"cjd8i92150009tyasccuvs33q","category_id":"cjd8i92070002tyasqf1ycjqz","_id":"cjd8i921y000ntyasim3zzcls"},{"post_id":"cjd8i91zz0001tyasb3o58eaw","category_id":"cjd8i92070002tyasqf1ycjqz","_id":"cjd8i9223000qtyasxk4m4840"},{"post_id":"cjd8i9218000atyas0wzm0z1o","category_id":"cjd8i92070002tyasqf1ycjqz","_id":"cjd8i9227000styaso9jwvcdw"},{"post_id":"cjd8i920g0004tyasxqmemz3f","category_id":"cjd8i92070002tyasqf1ycjqz","_id":"cjd8i9228000ttyas4i3llqw4"},{"post_id":"cjd8i921o000htyasmaj5n5a4","category_id":"cjd8i92070002tyasqf1ycjqz","_id":"cjd8i922b000vtyasz4dnk5kg"},{"post_id":"cjd8i921v000mtyasj6wnwaee","category_id":"cjd8i92070002tyasqf1ycjqz","_id":"cjd8i922b000xtyashnluend5"},{"post_id":"cjd8i9220000ptyasm96yz0xw","category_id":"cjd8i92070002tyasqf1ycjqz","_id":"cjd8i922b0010tyasg92u0gj4"},{"post_id":"cjd8i921c000etyas2g66xu8h","category_id":"cjd8i921u000ltyasbr75o03o","_id":"cjd8i922c0012tyas1zwzv0iu"},{"post_id":"cjd8i92bo001ptyasj4xl0ysg","category_id":"cjd8i92c4001styasyf0sd62m","_id":"cjd8i92ce001xtyas31vcymte"}],"PostTag":[{"post_id":"cjd8i91zj0000tyasvtbnvkdj","tag_id":"cjd8i920e0003tyas26y02697","_id":"cjd8i921m000gtyasoqoq91gx"},{"post_id":"cjd8i91zj0000tyasvtbnvkdj","tag_id":"cjd8i92120008tyasnq9zmz9r","_id":"cjd8i921s000jtyaszstud377"},{"post_id":"cjd8i91zz0001tyasb3o58eaw","tag_id":"cjd8i920e0003tyas26y02697","_id":"cjd8i921y000otyas90ichils"},{"post_id":"cjd8i920g0004tyasxqmemz3f","tag_id":"cjd8i920e0003tyas26y02697","_id":"cjd8i922b000wtyaso41554r2"},{"post_id":"cjd8i920g0004tyasxqmemz3f","tag_id":"cjd8i9225000rtyasvpo51bl8","_id":"cjd8i922b000ytyasexx51bh3"},{"post_id":"cjd8i920m0005tyasolwk5d8m","tag_id":"cjd8i920e0003tyas26y02697","_id":"cjd8i922c0011tyasarpgdu0o"},{"post_id":"cjd8i920m0005tyasolwk5d8m","tag_id":"cjd8i922a000utyas67i3zzfl","_id":"cjd8i922c0013tyasynz95g5q"},{"post_id":"cjd8i92100006tyasqicq826p","tag_id":"cjd8i922b000ztyasnlho215w","_id":"cjd8i922d0015tyasaur1kz9x"},{"post_id":"cjd8i92100006tyasqicq826p","tag_id":"cjd8i920e0003tyas26y02697","_id":"cjd8i922d0016tyasnaczicko"},{"post_id":"cjd8i92150009tyasccuvs33q","tag_id":"cjd8i920e0003tyas26y02697","_id":"cjd8i922f0018tyastl124hs7"},{"post_id":"cjd8i92150009tyasccuvs33q","tag_id":"cjd8i922a000utyas67i3zzfl","_id":"cjd8i922f0019tyaslajgkns6"},{"post_id":"cjd8i9218000atyas0wzm0z1o","tag_id":"cjd8i922e0017tyas6ozzik1m","_id":"cjd8i922f001btyascspzz5j2"},{"post_id":"cjd8i9218000atyas0wzm0z1o","tag_id":"cjd8i920e0003tyas26y02697","_id":"cjd8i922g001ctyasz9ygbwji"},{"post_id":"cjd8i921c000etyas2g66xu8h","tag_id":"cjd8i922f001atyascb773bpn","_id":"cjd8i922g001etyase59grn17"},{"post_id":"cjd8i921c000etyas2g66xu8h","tag_id":"cjd8i920e0003tyas26y02697","_id":"cjd8i922h001ftyasm7j7hwo2"},{"post_id":"cjd8i921o000htyasmaj5n5a4","tag_id":"cjd8i922g001dtyaspy9ufr5b","_id":"cjd8i922j001ityas0s6bd7ag"},{"post_id":"cjd8i921o000htyasmaj5n5a4","tag_id":"cjd8i922h001gtyasrf7x5mdh","_id":"cjd8i922j001jtyaszt65jdm6"},{"post_id":"cjd8i921o000htyasmaj5n5a4","tag_id":"cjd8i920e0003tyas26y02697","_id":"cjd8i922j001ltyas75sd6820"},{"post_id":"cjd8i921v000mtyasj6wnwaee","tag_id":"cjd8i922g001dtyaspy9ufr5b","_id":"cjd8i922k001mtyasjb5nc39l"},{"post_id":"cjd8i9220000ptyasm96yz0xw","tag_id":"cjd8i922j001ktyasbp8ofsdr","_id":"cjd8i922l001ntyassaocxrxw"},{"post_id":"cjd8i9220000ptyasm96yz0xw","tag_id":"cjd8i920e0003tyas26y02697","_id":"cjd8i922m001otyaspkka0kba"},{"post_id":"cjd8i92bo001ptyasj4xl0ysg","tag_id":"cjd8i92c5001ttyas469xu5zx","_id":"cjd8i92c9001vtyas5lfymogt"},{"post_id":"cjd8i92bo001ptyasj4xl0ysg","tag_id":"cjd8i920e0003tyas26y02697","_id":"cjd8i92cd001wtyassnqddwjf"}],"Tag":[{"name":"Linux","_id":"cjd8i920e0003tyas26y02697"},{"name":"awk","_id":"cjd8i92120008tyasnq9zmz9r"},{"name":"grep","_id":"cjd8i9225000rtyasvpo51bl8"},{"name":"Shell","_id":"cjd8i922a000utyas67i3zzfl"},{"name":"sed","_id":"cjd8i922b000ztyasnlho215w"},{"name":"docker","_id":"cjd8i922e0017tyas6ozzik1m"},{"name":"HEXO","_id":"cjd8i922f001atyascb773bpn"},{"name":"Nginx","_id":"cjd8i922g001dtyaspy9ufr5b"},{"name":"Keepalived","_id":"cjd8i922h001gtyasrf7x5mdh"},{"name":"vim","_id":"cjd8i922j001ktyasbp8ofsdr"},{"name":"Zookeeper","_id":"cjd8i92c5001ttyas469xu5zx"}]}}