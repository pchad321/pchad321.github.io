{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/images/spider/client_request_format.png","path":"images/spider/client_request_format.png","modified":1,"renderable":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/canvas-nest.min.js","path":"js/src/canvas-nest.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","path":"lib/canvas-ribbon/canvas-ribbon.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","path":"lib/needsharebutton/font-embedded.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","path":"lib/needsharebutton/needsharebutton.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","path":"lib/needsharebutton/needsharebutton.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","path":"lib/pace/pace-theme-barber-shop.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","path":"lib/pace/pace-theme-big-counter.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","path":"lib/pace/pace-theme-bounce.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","path":"lib/pace/pace-theme-center-atom.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","path":"lib/pace/pace-theme-center-circle.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","path":"lib/pace/pace-theme-center-radar.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","path":"lib/pace/pace-theme-center-simple.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","path":"lib/pace/pace-theme-corner-indicator.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","path":"lib/pace/pace-theme-fill-left.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","path":"lib/pace/pace-theme-flash.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","path":"lib/pace/pace-theme-loading-bar.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","path":"lib/pace/pace-theme-mac-osx.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","path":"lib/pace/pace-theme-minimal.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace.min.js","path":"lib/pace/pace.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","path":"lib/three/canvas_lines.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","path":"lib/three/canvas_sphere.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.css","path":"lib/Han/dist/han.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.css","path":"lib/Han/dist/han.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.js","path":"lib/Han/dist/han.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.js","path":"lib/Han/dist/han.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","path":"lib/Han/dist/font/han-space.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","path":"lib/Han/dist/font/han-space.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","path":"lib/Han/dist/font/han.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","path":"lib/Han/dist/font/han.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","path":"lib/Han/dist/font/han.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":1,"renderable":1}],"Cache":[{"_id":"themes/next/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1514806389000},{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1514806389000},{"_id":"themes/next/.gitattributes","hash":"44bd4729c74ccb88110804f41746fec07bf487d4","modified":1514806389000},{"_id":"themes/next/.gitignore","hash":"0b5c2ffd41f66eb1849d6426ba8cf9649eeed329","modified":1514806389000},{"_id":"themes/next/.hound.yml","hash":"b76daa84c9ca3ad292c78412603370a367cc2bc3","modified":1514806389000},{"_id":"themes/next/.javascript_ignore","hash":"8a224b381155f10e6eb132a4d815c5b52962a9d1","modified":1514806389000},{"_id":"themes/next/.jshintrc","hash":"9928f81bd822f6a8d67fdbc909b517178533bca9","modified":1514806389000},{"_id":"themes/next/.stylintrc","hash":"b28e24704a5d8de08346c45286574c8e76cc109f","modified":1514806389000},{"_id":"themes/next/.travis.yml","hash":"d60d4a5375fea23d53b2156b764a99b2e56fa660","modified":1514806389000},{"_id":"themes/next/LICENSE","hash":"f293bcfcdc06c0b77ba13570bb8af55eb5c059fd","modified":1514806389000},{"_id":"themes/next/README.cn.md","hash":"58ffe752bc4b7f0069fcd6304bbc2d5ff7b80f89","modified":1514806389000},{"_id":"themes/next/README.md","hash":"898213e66d34a46c3cf8446bf693bd50db0d3269","modified":1514806389000},{"_id":"themes/next/_config.yml","hash":"ae2022859ca9d3130c29a44bcd689718e6b1d798","modified":1529737827927},{"_id":"themes/next/bower.json","hash":"0674f11d3d514e087a176da0e1d85c2286aa5fba","modified":1514806389000},{"_id":"themes/next/gulpfile.coffee","hash":"031bffc483e417b20e90eceb6cf358e7596d2e69","modified":1514806389000},{"_id":"themes/next/package.json","hash":"036d3a1346203d2f1a3958024df7f74e7ac07bfe","modified":1514806389000},{"_id":"source/_posts/Linux-awk.md","hash":"236c894626acc3713aab3382969d4cf21e8ddf38","modified":1518400540425},{"_id":"source/_posts/Linux-commands.md","hash":"fbd2a6b2230bc4dc38d5883bf464902f09b8b7e2","modified":1517551716971},{"_id":"source/_posts/Linux-grep.md","hash":"93c82c2dffbeeddd2bb4137ad67c93f754b6c0f2","modified":1517716595636},{"_id":"source/_posts/Linux-regular.md","hash":"c06ad8695f796728dccf15572e9a5a9636599f90","modified":1517989177387},{"_id":"source/_posts/Linux-sed.md","hash":"3d18335455d87e4aeef02054c5f5a25e31994873","modified":1518082321042},{"_id":"source/_posts/Linux-shell-script.md","hash":"6ae92eb9dfa7870bb320996868973aa4afdfe225","modified":1518401467936},{"_id":"source/_posts/Linux-shell.md","hash":"0a1164643848a0838c8138593076ad93d97127f3","modified":1518071758545},{"_id":"source/_posts/docker.md","hash":"4eff070d356b34ef1bf43fbc13cd1e3d860a6c71","modified":1517477616977},{"_id":"source/_posts/hadoop-configure-file.md","hash":"7753ce868c9746042b80debb132b700f15f1d946","modified":1518334830956},{"_id":"source/_posts/hadoop-install-use.md","hash":"6dd680dd3e9443f21e3adbe9cde5ceb29a54d519","modified":1518428996643},{"_id":"source/_posts/hexo-install-use.md","hash":"07d0360db30b4a93f3f8f01140ff200b37b97172","modified":1518415721532},{"_id":"source/_posts/keepalived-nginx.md","hash":"df8f6e5d7622cb52f86cd44644794d935d560684","modified":1517408592441},{"_id":"source/_posts/nginx-proxypass-rewrite.md","hash":"2ebb18f2b6d4c6611f2a65e35f583ab5d6c4d607","modified":1518415909654},{"_id":"source/_posts/python3-base-datatype.md","hash":"6bcf66a3f33fe2b298003fde2910ea9b15b8dddc","modified":1518422693910},{"_id":"source/_posts/spider_principle_and_wireshark.md","hash":"cf0fe5bfee7db698829cac296ab14705751ee275","modified":1529738815000},{"_id":"source/_posts/vim-base.md","hash":"2781d62df0bbc8dc34284dea508278091e591cf1","modified":1518415817005},{"_id":"source/_posts/zookeeper-install.md","hash":"a7a29f1f58662da2db7a2473bf8cff82116a26d2","modified":1518415837481},{"_id":"source/about/index.md","hash":"7d61ac05d7e4ecc703e54176c3c4e06cd9976f63","modified":1517367613674},{"_id":"source/categories/index.md","hash":"b59376be8c02b52bf3b7cbeb6a12f827bd4e9d58","modified":1517369666645},{"_id":"source/tags/index.md","hash":"a450f2bbfb3fb6116a4faeb5e353e326b82bac2e","modified":1517377694580},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"3b5eafd32abb718e56ccf8d1cee0607ad8ce611d","modified":1514806389000},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"352093a1b210c72136687fd2eee649244cee402c","modified":1514806389000},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"902f627155a65099e0a37842ff396a58d0dc306f","modified":1514806389000},{"_id":"themes/next/.github/browserstack_logo.png","hash":"a6c43887f64a7f48a2814e3714eaa1215e542037","modified":1514806389000},{"_id":"themes/next/languages/de.yml","hash":"057e7df11ddeb1c8c15a5d7c5ff29430d725ec6b","modified":1514806389000},{"_id":"themes/next/languages/default.yml","hash":"44ef3f26917f467459326c2c8be2f73e4d947f35","modified":1514806389000},{"_id":"themes/next/languages/en.yml","hash":"7e680d9bb8f3a3a9d1ba1c9d312b3d257183dded","modified":1514806389000},{"_id":"themes/next/languages/fr-FR.yml","hash":"7e4eb7011b8feee641cfb11c6e73180b0ded1c0f","modified":1514806389000},{"_id":"themes/next/languages/id.yml","hash":"b5de1ea66dd9ef54cac9a1440eaa4e3f5fc011f5","modified":1514806389000},{"_id":"themes/next/languages/it.yml","hash":"aa595f2bda029f73ef7bfa104b4c55c3f4e9fb4c","modified":1514806389000},{"_id":"themes/next/languages/ja.yml","hash":"3c76e16fd19b262864475faa6854b718bc08c4d8","modified":1514806389000},{"_id":"themes/next/languages/ko.yml","hash":"ea5b46056e73ebcee121d5551627af35cbffc900","modified":1514806389000},{"_id":"themes/next/languages/nl-NL.yml","hash":"edca4f3598857dbc3cbf19ed412213329b6edd47","modified":1514806389000},{"_id":"themes/next/languages/pt-BR.yml","hash":"b1694ae766ed90277bcc4daca4b1cfa19cdcb72b","modified":1514806389000},{"_id":"themes/next/languages/pt.yml","hash":"44b61f2d085b827b507909a0b8f8ce31c6ef5d04","modified":1514806389000},{"_id":"themes/next/languages/ru.yml","hash":"98ec6f0b7183282e11cffc7ff586ceb82400dd75","modified":1514806389000},{"_id":"themes/next/languages/vi.yml","hash":"fd08d3c8d2c62965a98ac420fdaf95e54c25d97c","modified":1514806389000},{"_id":"themes/next/languages/zh-Hans.yml","hash":"83c6d260dc477d3f4034b466e3b588d2e6af2f7d","modified":1517552213657},{"_id":"themes/next/languages/zh-hk.yml","hash":"9396f41ae76e4fef99b257c93c7354e661f6e0fa","modified":1514806389000},{"_id":"themes/next/languages/zh-tw.yml","hash":"50b71abb3ecc0686f9739e179e2f829cd074ecd9","modified":1514806389000},{"_id":"themes/next/layout/_layout.swig","hash":"383b98f390f37f43991180ca7bbf21695b3eb332","modified":1529737645157},{"_id":"themes/next/layout/archive.swig","hash":"f0a8225feafd971419837cdb4bcfec98a4a59b2f","modified":1514806389000},{"_id":"themes/next/layout/category.swig","hash":"4472255f4a3e3dd6d79201523a9526dcabdfbf18","modified":1514806389000},{"_id":"themes/next/layout/index.swig","hash":"783611349c941848a0e26ee2f1dc44dd14879bd1","modified":1514806389000},{"_id":"themes/next/layout/page.swig","hash":"969caaee05bdea725e99016eb63d810893a73e99","modified":1514806389000},{"_id":"themes/next/layout/post.swig","hash":"b3589a8e46288a10d20e41c7a5985d2493725aec","modified":1514806389000},{"_id":"themes/next/layout/schedule.swig","hash":"d86f8de4e118f8c4d778b285c140474084a271db","modified":1514806389000},{"_id":"themes/next/layout/tag.swig","hash":"7e0a7d7d832883eddb1297483ad22c184e4368de","modified":1514806389000},{"_id":"themes/next/scripts/merge-configs.js","hash":"81e86717ecfb775986b945d17f0a4ba27532ef07","modified":1514806389000},{"_id":"themes/next/scripts/merge.js","hash":"9130dabe6a674c54b535f322b17d75fe6081472f","modified":1514806389000},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1514806389000},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1514806389000},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1514806389000},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1514806389000},{"_id":"source/images/spider/client_request_format.png","hash":"b85df2dc3dc9264bf6c66168c2a9d67196bd5c65","modified":1529719679000},{"_id":"themes/next/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1514806389000},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1514806389000},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"31322a7f57936cf2dc62e824af5490da5354cf02","modified":1514806389000},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"665a928604f99d2ba7dc4a4a9150178229568cc6","modified":1514806389000},{"_id":"themes/next/layout/_macro/post.swig","hash":"446a35a2cd389f8cfc3aa38973a9b44ad0740134","modified":1517375845299},{"_id":"themes/next/layout/_macro/reward.swig","hash":"56e8d8556cf474c56ae1bef9cb7bbd26554adb07","modified":1514806389000},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"6a54c3c85ff6b19d275827a327abbf4bd99b2ebf","modified":1514806389000},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"39852700e4084ecccffa6d4669168e5cc0514c9e","modified":1514806389000},{"_id":"themes/next/layout/_partials/comments.swig","hash":"4a6f5b1792b2e5262b7fdab9a716b3108e2f09c7","modified":1514806389000},{"_id":"themes/next/layout/_partials/footer.swig","hash":"c4d6181f5d3db5365e622f78714af8cc58d7a45e","modified":1514806389000},{"_id":"themes/next/layout/_partials/head.swig","hash":"6b94fe8f3279daea5623c49ef4bb35917ba57510","modified":1514806389000},{"_id":"themes/next/layout/_partials/header.swig","hash":"ed042be6252848058c90109236ec988e392d91d4","modified":1514806389000},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"1efd925d34a5d4ba2dc0838d9c86ba911e705fc9","modified":1514806389000},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9e8e21d194ef44d271b1cca0bc1448c14d7edf4f","modified":1514806389000},{"_id":"themes/next/layout/_partials/search.swig","hash":"9dbd378e94abfcb3f864a5b8dbbf18d212ca2ee0","modified":1514806389000},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1514806389000},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"766b2bdda29523ed6cd8d7aa197f996022f8fd94","modified":1514806389000},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"a266f96ad06ee87bdeae6e105a4b53cd587bbd04","modified":1514806389000},{"_id":"themes/next/layout/_third-party/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1514806389000},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"7c04a42319d728be356746363aff8ea247791d24","modified":1514806389000},{"_id":"themes/next/layout/_third-party/mathjax.swig","hash":"6d25596d6a7c57700d37b607f8d9a62d89708683","modified":1514806389000},{"_id":"themes/next/layout/_third-party/needsharebutton.swig","hash":"5fe0447cc88a5a63b530cf0426f93c4634811876","modified":1514806389000},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"fc93b1a7e6aed0dddb1f3910142b48d8ab61174e","modified":1514806389000},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"22369026c87fc23893c35a7f250b42f3bb1b60f1","modified":1514806389000},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"1ddb2336a1a19b47af3017047012c01ec5f54529","modified":1514806389000},{"_id":"themes/next/scripts/tags/button.js","hash":"d023f10a00077f47082b0517e2ad666e6e994f60","modified":1514806389000},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"535fc542781021c4326dec24d8495cbb1387634a","modified":1514806389000},{"_id":"themes/next/scripts/tags/exturl.js","hash":"8d7e60f60779bde050d20fd76f6fdc36fc85e06d","modified":1514806389000},{"_id":"themes/next/scripts/tags/full-image.js","hash":"8eeb3fb89540299bdbb799edfdfdac3743b50596","modified":1514806389000},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1514806389000},{"_id":"themes/next/scripts/tags/label.js","hash":"2f8f41a7316372f0d1ed6b51190dc4acd3e16fff","modified":1514806389000},{"_id":"themes/next/scripts/tags/lazy-image.js","hash":"eeeabede68cf263de9e6593ecf682f620da16f0a","modified":1514806389000},{"_id":"themes/next/scripts/tags/note.js","hash":"64de4e9d01cf3b491ffc7d53afdf148ee5ad9779","modified":1514806389000},{"_id":"themes/next/scripts/tags/tabs.js","hash":"5786545d51c38e8ca38d1bfc7dd9e946fc70a316","modified":1514806389000},{"_id":"themes/next/source/css/main.styl","hash":"20702c48d6053c92c5bcdbc68e8d0ef1369848a0","modified":1514806389000},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1514806389000},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1514806389000},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1514806389000},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1514806389000},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1514806389000},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1514806389000},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1514806389000},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1514806389000},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1514806389000},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1514806389000},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1514806389000},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1514806389000},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1514806389000},{"_id":"themes/next/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1514806389000},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1514806389000},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1514806389000},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1514806389000},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1514806389000},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1514806389000},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1514806389000},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1514806389000},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1514806389000},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1514806389000},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1514806389000},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1514806389000},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1514806389000},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1514806389000},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"957701729b85fb0c5bfcf2fb99c19d54582f91ed","modified":1514806389000},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1514806389000},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1514806389000},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"23e23dc0f76ef3c631f24c65277adf7ea517b383","modified":1514806389000},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"1f1107468aaf03f7d0dcd7eb2b653e2813a675b4","modified":1514806389000},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1514806389000},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"048fd5e98149469f8c28c21ba3561a7a67952c9b","modified":1514806389000},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"069d1357c717572256e5cdee09574ebce529cbae","modified":1514806389000},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1514806389000},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1514806389000},{"_id":"themes/next/layout/_third-party/analytics/analytics-with-widget.swig","hash":"98df9d72e37dd071e882f2d5623c9d817815b139","modified":1514806389000},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"60426bf73f8a89ba61fb1be2df3ad5398e32c4ef","modified":1514806389000},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"deda6a814ed48debc694c4e0c466f06c127163d0","modified":1514806389000},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"18e7bef8923d83ea42df6c97405e515a876cede4","modified":1514806389000},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"8160b27bee0aa372c7dc7c8476c05bae57f58d0f","modified":1514806389000},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"a234c5cd1f75ca5731e814d0dbb92fdcf9240d1b","modified":1514806389000},{"_id":"themes/next/layout/_third-party/analytics/firestore.swig","hash":"1cd01c6e92ab1913d48e556a92bb4f28b6dc4996","modified":1514806389000},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"5d9943d74cc2e0a91badcf4f755c6de77eab193a","modified":1514806389000},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"5e9bb24c750b49513d9a65799e832f07410002ac","modified":1514806389000},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"fc65b9c98a0a8ab43a5e7aabff6c5f03838e09c8","modified":1514806389000},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1514806389000},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"0ddc94ed4ba0c19627765fdf1abc4d8efbe53d5a","modified":1514806389000},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"c3971fd154d781088e1cc665035f8561a4098f4c","modified":1514806389000},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"0e3378f7c39b2b0f69638290873ede6b6b6825c0","modified":1514806389000},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"c316758546dc9ba6c60cb4d852c17ca6bb6d6724","modified":1514806389000},{"_id":"themes/next/layout/_third-party/comments/duoshuo.swig","hash":"a356b2185d40914447fde817eb3d358ab6b3e4c3","modified":1514806389000},{"_id":"themes/next/layout/_third-party/comments/gitment.swig","hash":"10160daceaa6f1ecf632323d422ebe2caae49ddf","modified":1514806389000},{"_id":"themes/next/layout/_third-party/comments/hypercomments.swig","hash":"3e8dc5c6c912628a37e3b5f886bec7b2e5ed14ea","modified":1514806389000},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"aa0629277d751c55c6d973e7691bf84af9b17a60","modified":1514806389000},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"8a2e393d2e49f7bf560766d8a07cd461bf3fce4f","modified":1514806389000},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"fcabbb241f894c9a6309c44e126cf3e8fea81fd4","modified":1514806389000},{"_id":"themes/next/layout/_third-party/comments/youyan.swig","hash":"8b6650f77fe0a824c8075b2659e0403e0c78a705","modified":1514806389000},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"c747fb5c6b1f500e8f0c583e44195878b66e4e29","modified":1514806389000},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"385c066af96bee30be2459dbec8aae1f15d382f5","modified":1514806389000},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1514806389000},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"c057b17f79e8261680fbae8dc4e81317a127c799","modified":1514806389000},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1514806389000},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"2aa5b7166a85a8aa34b17792ae4f58a5a96df6cc","modified":1514806389000},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"9ab65361ba0a12a986edd103e56492644c2db0b8","modified":1514806389000},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"82f9055955920ed88a2ab6a20ab02169abb2c634","modified":1514806389000},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"99fbb4686ea9a3e03a4726ed7cf4d8f529034452","modified":1514806389000},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"be087dcc060e8179f7e7f60ab4feb65817bd3d9f","modified":1514806389000},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"f29165e36489a87ba32d17dddfd2720d84e3f3ec","modified":1514806389000},{"_id":"themes/next/source/css/_variables/base.styl","hash":"29c261fa6b4046322559074d75239c6b272fb8a3","modified":1514806389000},{"_id":"themes/next/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1514806389000},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1514806389000},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"034bc8113e0966fe2096ba5b56061bbf10ef0512","modified":1514806389000},{"_id":"themes/next/source/js/src/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1517557944000},{"_id":"themes/next/source/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1514806389000},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1514806389000},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1514806389000},{"_id":"themes/next/source/js/src/motion.js","hash":"754b294394f102c8fd9423a1789ddb1201677898","modified":1514806389000},{"_id":"themes/next/source/js/src/post-details.js","hash":"a13f45f7aa8291cf7244ec5ba93907d119c5dbdd","modified":1514806389000},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1514806389000},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1514806389000},{"_id":"themes/next/source/js/src/utils.js","hash":"9b1325801d27213083d1487a12b1a62b539ab6f8","modified":1514806389000},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1514806389000},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1514806389000},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","hash":"ff5915eb2596e890a2fc6697c864f861a1995ec0","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/.bower.json","hash":"cc40a9b11e52348e554c84e4a5c058056f6b7aeb","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/.gitattributes","hash":"2db21acfbd457452462f71cc4048a943ee61b8e0","modified":1514806389000},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"93ebd5b35e632f714dcf1753e1f6db77ec74449b","modified":1514806389000},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1514806389000},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1514806389000},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1514806389000},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"a2aaaf12378db56bd10596ba3daae30950eac051","modified":1514806389000},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1514806389000},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1514806389000},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1514806389000},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1514806389000},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"91745c2cc6c946c7275f952b2b0760b880cea69e","modified":1514806389000},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"b7638afc93e9cd350d0783565ee9a7da6805ad8e","modified":1514806389000},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1514806389000},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"895d50fa29759af7835256522e9dd7dac597765c","modified":1514806389000},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1514806389000},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1514806389000},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1514806389000},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","hash":"c39d37278c1e178838732af21bd26cd0baeddfe0","modified":1514806389000},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","hash":"3ef0020a1815ca6151ea4886cd0d37421ae3695c","modified":1514806389000},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","hash":"9885fd9bea5e7ebafc5b1de9d17be5e106248d96","modified":1514806389000},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1514806389000},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1514806389000},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1514806389000},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1514806389000},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1514806389000},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1514806389000},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1514806389000},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1514806389000},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1514806389000},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1514806389000},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1514806389000},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1514806389000},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1514806389000},{"_id":"themes/next/source/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1514806389000},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1514806389000},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1514806389000},{"_id":"themes/next/source/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1514806389000},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"05f960846f1c7a93dab1d3f9a1121e86812e8c88","modified":1514806389000},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1514806389000},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1514806389000},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1514806389000},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1514806389000},{"_id":"themes/next/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1514806389000},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"28ff4ed6714c59124569ffcbd10f1173d53ca923","modified":1514806389000},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"ba698f49dd3a868c95b240d802f5b1b24ff287e4","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"4719ce717962663c5c33ef97b1119a0b3a4ecdc3","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"31050fc7a25784805b4843550151c93bfa55c9c8","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"7e509c7c28c59f905b847304dd3d14d94b6f3b8e","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"a6bb5256be6195e76addbda12f4ed7c662d65e7a","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"c5d48863f332ff8ce7c88dec2c893f709d7331d3","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1514806389000},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1514806389000},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"f7c44b0ee46cf2cf82a4c9455ba8d8b55299976f","modified":1514806389000},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"9c25c75311e1bd4d68df031d3f2ae6d141a90766","modified":1514806389000},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"47a46583a1f3731157a3f53f80ed1ed5e2753e8e","modified":1514806389000},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1514806389000},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a280a583b7615e939aaddbf778f5c108ef8a2a6c","modified":1514806389000},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"64f5d56c08d74a338813df1265580ca0cbf0190b","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"18c3336ee3d09bd2da6a876e1336539f03d5a973","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"c2d079788d6fc2e9a191ccdae94e50d55bf849dc","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"b0dcca862cd0cc6e732e33d975b476d744911742","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"3b25edfa187d1bbbd0d38b50dd013cef54758abf","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9a5581a770af8964064fef7afd3e16963e45547f","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"02fb8fa6b6c252b6bed469539cd057716606a787","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"c4ed249798296f60bda02351fe6404fb3ef2126f","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"5b93958239d3d2bf9aeaede44eced2434d784462","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"215de948be49bcf14f06d500cef9f7035e406a43","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"9d16fa3c14ed76b71229f022b63a02fd0f580958","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"69ecd6c97e7cdfd822ac8102b45ad0ede85050db","modified":1514806389000},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"8050a5b2683d1d77238c5762b6bd89c543daed6e","modified":1514806389000},{"_id":"themes/next/source/lib/Han/dist/han.css","hash":"bd40da3fba8735df5850956814e312bd7b3193d7","modified":1514806389000},{"_id":"themes/next/source/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1514806389000},{"_id":"themes/next/source/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1514806389000},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1514806389000},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1514806389000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1514806389000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1514806389000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1514806389000},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1514806389000},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1514806389000},{"_id":"themes/next/source/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1514806389000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1514806389000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1514806389000},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"7905a7f625702b45645d8be1268cb8af3f698c70","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"ae1ca14e51de67b07dba8f61ec79ee0e2e344574","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"8a2421cb9005352905fae9d41a847ae56957247e","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"96f32ea6c3265a3889e6abe57587f6e2a2a40dfb","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"25dc25f61a232f03ca72472b7852f882448ec185","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"f5aa2ba3bfffc15475e7e72a55b5c9d18609fdf5","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"2039590632bba3943c39319d80ef630af7928185","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"a82afbb72d83ee394aedc7b37ac0008a9823b4f4","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"e72a89e0f421444453e149ba32c77a64bd8e44e8","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"0f7f522cc6bfb3401d5afd62b0fcdf48bb2d604b","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"f54367c0feda6986c030cc4d15a0ca6ceea14bcb","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"535b3b4f8cb1eec2558e094320e7dfb01f94c0e7","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"aea21141015ca8c409d8b33e3e34ec505f464e93","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"a5d8617a24d7cb6c5ad91ea621183ca2c0917331","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"36332c8a91f089f545f3c3e8ea90d08aa4d6e60c","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"017074ef58166e2d69c53bb7590a0e7a8947a1ed","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"d5a4e4fc17f1f7e7c3a61b52d8e2e9677e139de7","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"e4055a0d2cd2b0ad9dc55928e2f3e7bd4e499da3","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"262debfd4442fa03d9919ceb88b948339df03fb0","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"0a6c0efffdf18bddbc1d1238feaed282b09cd0fe","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"920343e41c124221a17f050bbb989494d44f7a24","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"89dd4f8b1f1cce3ad46cf2256038472712387d02","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"efa5e5022e205b52786ce495d4879f5e7b8f84b2","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"12937cae17c96c74d5c58db6cb29de3b2dfa14a2","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"f7784aba0c1cd20d824c918c120012d57a5eaa2a","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"50305b6ad7d09d2ffa4854e39f41ec1f4fe984fd","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"1b3cc9f4e5a7f6e05b4100e9990b37b20d4a2005","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"37e951e734a252fe8a81f452b963df2ba90bfe90","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"4a457d265d62f287c63d48764ce45d9bcfc9ec5a","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/tags/note-modern.styl","hash":"ee7528900578ef4753effe05b346381c40de5499","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"32c9156bea5bac9e9ad0b4c08ffbca8b3d9aac4b","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"4ab5deed8c3b0c338212380f678f8382672e1bcb","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"ead0d0f2321dc71505788c7f689f92257cf14947","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"fd42777b9125fd8969dc39d4f15473e2b91b4142","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"d4e6d8d7b34dc69994593c208f875ae8f7e8a3ae","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"2340dd9b3202c61d73cc708b790fac5adddbfc7f","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/third-party/gitment.styl","hash":"34935b40237c074be5f5e8818c14ccfd802b7439","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"cce6772e2cdb4db85d35486ae4c6c59367fbdd40","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"d89c4b562b528e4746696b2ad8935764d133bdae","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/third-party/needsharebutton.styl","hash":"a5e3e6b4b4b814a9fe40b34d784fed67d6d977fa","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"1ccfbd4d0f5754b2dc2719a91245c95f547a7652","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1514806389000},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1514806389000},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1514806389000},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1514806389000},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1514806389000},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1514806389000},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1514806389000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1514806389000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1514806389000},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1514806389000},{"_id":"themes/next/source/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1514806389000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1514806389000},{"_id":"public/search.xml","hash":"75fa545e9783490e4fca8d6ba9d1b222e1706690","modified":1529738261934},{"_id":"public/about/index.html","hash":"58d2e924bd57837e1280548778be87c892f8b1d1","modified":1529738262299},{"_id":"public/categories/index.html","hash":"e3cc25f72f478c5b744f05241e7ab4037015937c","modified":1529738262299},{"_id":"public/tags/index.html","hash":"25d9f597592be150ef74204a0dfb564f8cb320bd","modified":1529738262300},{"_id":"public/2018/06/23/spider_principle_and_wireshark/index.html","hash":"56bf2a83677eb96f084c41edd7ee4527f8625379","modified":1529738262300},{"_id":"public/2018/02/12/python3-base-datatype/index.html","hash":"c16d27458219f3c215682b2e81c745b01c7b152f","modified":1529738262301},{"_id":"public/2018/02/12/Linux-shell-script/index.html","hash":"c8463905e00a6ef05802c2c1a72ced4d765f1937","modified":1529738262301},{"_id":"public/2018/02/11/hadoop-configure-file/index.html","hash":"a0514d41c34a6b65593319585fe8eef033709847","modified":1529738262301},{"_id":"public/2018/02/07/hadoop-install-use/index.html","hash":"1e2f0ee764476796cd51ac902c0f9b5394c6f376","modified":1529738262301},{"_id":"public/2018/02/05/zookeeper-install/index.html","hash":"ebee74fc4b402aef97bfe4818fc0f939312e0e4a","modified":1529738262301},{"_id":"public/2018/02/04/Linux-shell/index.html","hash":"92225ee581f172c4d1aca342675f268fa3d2717d","modified":1529738262301},{"_id":"public/2018/02/04/nginx-proxypass-rewrite/index.html","hash":"e2ed21a27d1932437e83d312ccc62af4da364854","modified":1529738262301},{"_id":"public/2018/02/03/Linux-grep/index.html","hash":"8ef8ee2a86475870ffc8edcea308c4f8b97d17ec","modified":1529738262301},{"_id":"public/2018/02/03/Linux-regular/index.html","hash":"0b7e08bfd8e8b4028cd6495c9b8c461c6fdf3266","modified":1529738262302},{"_id":"public/2018/02/03/Linux-awk/index.html","hash":"db553616f09337761a99d1bbebdefe94f836933b","modified":1529738262302},{"_id":"public/2018/02/03/Linux-sed/index.html","hash":"e76a8311cc64a6272f01bf56cf4d953376e74816","modified":1529738262302},{"_id":"public/2018/02/01/Linux-commands/index.html","hash":"a08fb6447532faf2e514c06ebe591b5ff5eb5544","modified":1529738262302},{"_id":"public/2018/02/01/docker/index.html","hash":"db55818a9cb0aa6b43541839005e189e2acddda9","modified":1529738262302},{"_id":"public/2018/02/01/vim-base/index.html","hash":"61296796d84e6ec3cba0a38adfe14bfead889090","modified":1529738262302},{"_id":"public/2018/01/31/keepalived-nginx/index.html","hash":"b88ade037c5752b6c4366ccc0aaa5ea774082d89","modified":1529738262302},{"_id":"public/2018/01/30/hexo-install-use/index.html","hash":"2fbfbecb15399f53d77536809ab5f97bf84ea9a6","modified":1529738262302},{"_id":"public/archives/index.html","hash":"e9571c43bcd757de2ae126ee09cc71b6ac90c1d8","modified":1529738262302},{"_id":"public/archives/page/2/index.html","hash":"d502779913daa7ab00f15b8d05cfa79c6f06cf6f","modified":1529738262303},{"_id":"public/archives/2018/index.html","hash":"de2b00fe1162338994c129613d85596420e9f85a","modified":1529738262303},{"_id":"public/archives/2018/page/2/index.html","hash":"f24c083e88e795a7ef8d483021add5bfbf3b7bc8","modified":1529738262303},{"_id":"public/archives/2018/01/index.html","hash":"86e08cb74a386d19aef22390b99ed6275dcfd583","modified":1529738262303},{"_id":"public/archives/2018/02/index.html","hash":"f33edf2e01d03da69e0fffc0e101aa3d12018b72","modified":1529738262303},{"_id":"public/archives/2018/02/page/2/index.html","hash":"e760d4261e526cc17d438513a07ef064a3af83b2","modified":1529738262303},{"_id":"public/archives/2018/06/index.html","hash":"7bedcc0e8f27a6e41d84711c43b6ded6ecb27d92","modified":1529738262303},{"_id":"public/categories/Linux/index.html","hash":"d3ffecddaab5806d0ed30783e9bfbcf95b9d0916","modified":1529738262303},{"_id":"public/categories/Linux/page/2/index.html","hash":"197e4a0a9999af03f98165813f6dd5ce9dac22c6","modified":1529738262303},{"_id":"public/categories/大数据/index.html","hash":"2c8a36f98a9143d06aafe2dc7ae04f60ccfffd98","modified":1529738262304},{"_id":"public/categories/前端/index.html","hash":"6ced9756732afc026a558f72426eca5a5ec52e9e","modified":1529738262304},{"_id":"public/categories/python/index.html","hash":"f43cbad6529675b4619cc9800eaf6b284d5a30b6","modified":1529738262304},{"_id":"public/categories/Spider/index.html","hash":"3a5c930a892d1b7cb00e805f189b89c31e9aaa7e","modified":1529738262304},{"_id":"public/categories/Zookeeper/index.html","hash":"724b24baf92ef05a8cb27bb4ad5b1f617e01738b","modified":1529738262304},{"_id":"public/index.html","hash":"4b1aaa8b98c8921d4b9d8b87343c3b955b719759","modified":1529738262304},{"_id":"public/page/2/index.html","hash":"ea0fd604e27750e1268c39c6e2e6cc1e7decc1fd","modified":1529738262304},{"_id":"public/tags/Linux/index.html","hash":"0525b00a765336e7b36ddd6cf241debc8202238f","modified":1529738262304},{"_id":"public/tags/Linux/page/2/index.html","hash":"6e76249a94db790c9c1fed500e1a3d3175313f02","modified":1529738262304},{"_id":"public/tags/awk/index.html","hash":"65e8edd4417fa9906ed12ef2f01c49444466b684","modified":1529738262304},{"_id":"public/tags/grep/index.html","hash":"a1f95fceb2b259bad9b316cd21b5492360a238b8","modified":1529738262304},{"_id":"public/tags/Shell/index.html","hash":"749b595ee7a0a7b67d1af738e2c02307a3b825ba","modified":1529738262305},{"_id":"public/tags/sed/index.html","hash":"bd2152e4c986f96b6d7f1755170fab348db3a37b","modified":1529738262305},{"_id":"public/tags/docker/index.html","hash":"4b85eff560c52f6831fb30c458b9b7e4786325cf","modified":1529738262305},{"_id":"public/tags/Hadoop/index.html","hash":"e1239db80ded18ed4ba4ddfef2c23aa8320a876c","modified":1529738262305},{"_id":"public/tags/大数据/index.html","hash":"a9bad551da868699ff570bd1a90fb1bd720ac7b2","modified":1529738262305},{"_id":"public/tags/hadoop/index.html","hash":"15e96d530c360add5dcd987336da7b6f8e136ec1","modified":1529738262305},{"_id":"public/tags/HEXO/index.html","hash":"8dbe762a1b20150e74c2ec42e528ae6e068fa384","modified":1529738262305},{"_id":"public/tags/Nginx/index.html","hash":"6d432ebf79a22f759db56474479d0367ea091fd6","modified":1529738262305},{"_id":"public/tags/Keepalived/index.html","hash":"9caef55d33d466c52484e291e94ea346ce81426c","modified":1529738262305},{"_id":"public/tags/python/index.html","hash":"49d44fd67a266ace8208e2c0668e2ac9cbc76e60","modified":1529738262305},{"_id":"public/tags/Spider/index.html","hash":"2f81be54fb715e3c143015c44a28b1bc07eeeba9","modified":1529738262306},{"_id":"public/tags/vim/index.html","hash":"b96d9323ae86aa7a4e98487e5089fee8a6341ab3","modified":1529738262306},{"_id":"public/tags/Zookeeper/index.html","hash":"cdc0aa0c0839b7bc1323856ab43a8fa10afa4962","modified":1529738262308},{"_id":"public/images/spider/client_request_format.png","hash":"b85df2dc3dc9264bf6c66168c2a9d67196bd5c65","modified":1529738262308},{"_id":"public/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1529738262309},{"_id":"public/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1529738262309},{"_id":"public/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1529738262309},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1529738262310},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1529738262310},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1529738262310},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1529738262311},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1529738262311},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1529738262311},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1529738262312},{"_id":"public/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1529738262312},{"_id":"public/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1529738262312},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1529738262312},{"_id":"public/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1529738262312},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1529738262313},{"_id":"public/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1529738262313},{"_id":"public/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1529738262313},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1529738262313},{"_id":"public/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1529738262313},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1529738262313},{"_id":"public/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1529738263592},{"_id":"public/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1529738263593},{"_id":"public/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1529738263620},{"_id":"public/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1529738263620},{"_id":"public/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1529738263621},{"_id":"public/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1529738263621},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1529738263621},{"_id":"public/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1529738263621},{"_id":"public/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1529738263621},{"_id":"public/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1529738263621},{"_id":"public/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1529738263621},{"_id":"public/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1529738263621},{"_id":"public/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1529738263621},{"_id":"public/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1529738263642},{"_id":"public/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1529738263642},{"_id":"public/js/src/bootstrap.js","hash":"034bc8113e0966fe2096ba5b56061bbf10ef0512","modified":1529738263662},{"_id":"public/js/src/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1529738263662},{"_id":"public/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1529738263662},{"_id":"public/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1529738263662},{"_id":"public/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1529738263662},{"_id":"public/js/src/motion.js","hash":"754b294394f102c8fd9423a1789ddb1201677898","modified":1529738263663},{"_id":"public/js/src/post-details.js","hash":"a13f45f7aa8291cf7244ec5ba93907d119c5dbdd","modified":1529738263663},{"_id":"public/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1529738263663},{"_id":"public/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1529738263663},{"_id":"public/js/src/utils.js","hash":"9b1325801d27213083d1487a12b1a62b539ab6f8","modified":1529738263663},{"_id":"public/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1529738263663},{"_id":"public/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1529738263663},{"_id":"public/lib/canvas-ribbon/canvas-ribbon.js","hash":"ff5915eb2596e890a2fc6697c864f861a1995ec0","modified":1529738263663},{"_id":"public/lib/fastclick/README.html","hash":"da3c74d484c73cc7df565e8abbfa4d6a5a18d4da","modified":1529738263663},{"_id":"public/lib/fastclick/bower.json","hash":"4dcecf83afddba148464d5339c93f6d0aa9f42e9","modified":1529738263664},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1529738263664},{"_id":"public/lib/jquery_lazyload/CONTRIBUTING.html","hash":"a6358170d346af13b1452ac157b60505bec7015c","modified":1529738263664},{"_id":"public/lib/jquery_lazyload/README.html","hash":"bde24335f6bc09d8801c0dcd7274f71b466552bd","modified":1529738263664},{"_id":"public/lib/jquery_lazyload/bower.json","hash":"ae3c3b61e6e7f9e1d7e3585ad854380ecc04cf53","modified":1529738263664},{"_id":"public/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1529738263664},{"_id":"public/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1529738263664},{"_id":"public/lib/needsharebutton/needsharebutton.css","hash":"3ef0020a1815ca6151ea4886cd0d37421ae3695c","modified":1529738263664},{"_id":"public/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1529738263664},{"_id":"public/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1529738263664},{"_id":"public/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1529738263664},{"_id":"public/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1529738263664},{"_id":"public/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1529738263664},{"_id":"public/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1529738263664},{"_id":"public/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1529738263665},{"_id":"public/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1529738263665},{"_id":"public/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1529738263665},{"_id":"public/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1529738263665},{"_id":"public/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1529738263665},{"_id":"public/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1529738263665},{"_id":"public/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1529738263665},{"_id":"public/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1529738263665},{"_id":"public/css/main.css","hash":"7428096d7c10294492c67916b443b9d3909aa281","modified":1529738263665},{"_id":"public/lib/needsharebutton/font-embedded.css","hash":"c39d37278c1e178838732af21bd26cd0baeddfe0","modified":1529738263665},{"_id":"public/lib/needsharebutton/needsharebutton.js","hash":"9885fd9bea5e7ebafc5b1de9d17be5e106248d96","modified":1529738263665},{"_id":"public/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1529738263665},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1529738263665},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1529738263666},{"_id":"public/lib/velocity/bower.json","hash":"0ef14e7ccdfba5db6eb3f8fc6aa3b47282c36409","modified":1529738263687},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1529738263687},{"_id":"public/js/src/schemes/pisces.js","hash":"8050a5b2683d1d77238c5762b6bd89c543daed6e","modified":1529738263687},{"_id":"public/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1529738263687},{"_id":"public/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1529738263687},{"_id":"public/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1529738263687},{"_id":"public/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1529738263688},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1529738263688},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1529738263688},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1529738263688},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1529738263688},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1529738263688},{"_id":"public/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1529738263688},{"_id":"public/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1529738263688},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1529738263688},{"_id":"public/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1529738263688},{"_id":"public/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1529738263689},{"_id":"public/lib/Han/dist/han.css","hash":"bd40da3fba8735df5850956814e312bd7b3193d7","modified":1529738263689},{"_id":"public/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1529738263689},{"_id":"public/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1529738263689},{"_id":"public/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1529738263689},{"_id":"public/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1529738263689},{"_id":"public/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1529738263689},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1529738263689},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1529738263689},{"_id":"public/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1529738263689},{"_id":"public/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1529738263689},{"_id":"public/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1529738263690},{"_id":"public/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1529738263690},{"_id":"public/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1529738263690},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1529738263690},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1529738263690},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1529738263732}],"Category":[{"name":"Linux","_id":"cjir2nrl500049xasqnrzxyt6"},{"name":"大数据","_id":"cjir2nrn3000r9xasq6s2k37g"},{"name":"前端","_id":"cjir2nro300159xaslulzef1v"},{"name":"python","_id":"cjir2nroh001e9xas9lzuhziw"},{"name":"Spider","_id":"cjir2nrok001k9xasv745961d"},{"name":"Zookeeper","_id":"cjir2nroo001q9xassf8juris"}],"Data":[],"Page":[{"title":"关于我","date":"2018-01-31T03:00:00.000Z","_content":"","source":"about/index.md","raw":"---\ntitle: 关于我\ndate: 2018-01-31 11:00:00\n---\n","updated":"2018-01-31T03:00:13.674Z","path":"about/index.html","comments":1,"layout":"page","_id":"cjir2nrkn00019xas4pfx3y8q","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"文章分类","date":"2018-01-31T11:42:16.781Z","type":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: 文章分类\ndate: 日期 \ntype: \"categories\"\ncomments: false\n---\n","updated":"2018-01-31T03:34:26.645Z","path":"categories/index.html","layout":"page","_id":"cjir2nrl100039xasz4741stt","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"文章标签","date":"2018-01-31T11:42:16.781Z","type":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: 文章标签\ndate: 日期\ntype: \"tags\"\ncomments: false\n---\n","updated":"2018-01-31T05:48:14.580Z","path":"tags/index.html","layout":"page","_id":"cjir2nrln00079xas7sou7nu3","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"Linux之awk详解","date":"2018-02-02T16:00:00.000Z","modified":null,"_content":"\nawk是一个强大的文本分析工具，相对于grep的查找，sed的编辑，awk在其对数据分析并生成报告时，显得尤为强大。简单来说awk就是把文件逐行的读入，以空格为默认分隔符将每行切片，切开的部分再进行各种分析处理。在awk中可以定义变量来保存数据，使用算术和字符串操作符来处理数据，使用结构化编程概念来为数据处理增加处理逻辑，以及提取文件的数据并做处理生成报告。\nawk有3个不同版本: awk、nawk和gawk，未作特别说明，一般指gawk，gawk是AWK的GNU版本。\n\n#### 命令格式\n\n> awk '{pattern + action}' {filenames}\n\n其中pattern表示AWK在数据中查找的内容，而action是在找到匹配内容时所执行的一系列命令。花括号({})不需要在程序中始终出现，但它们用于根据特定的模式对一系列指令进行分组。pattern就是要表示的正则表达式，用斜杠括起来。\n\n#### 调用方式\n\nawk的调用方式通常分为以下三种：\n\n##### 命令行方式\n\n> awk [-F  field-separator]  'commands'  input-file(s)\n\n其中，commands 是真正awk命令，[-F域分隔符]是可选的。 input-file(s) 是待处理的文件。\n在awk中，文件的每一行中，由域分隔符分开的每一项称为一个域。通常，在不指名-F域分隔符的情况下，默认的域分隔符是空格。\n\n##### shell脚本方式\n\n将所有的awk命令插入一个文件，并使awk程序可执行，然后awk命令解释器作为脚本的首行，一遍通过键入脚本名称来调用。\n\n> 相当于shell脚本首行的：#!/bin/sh\n  可以换成：#!/bin/awk\n\n##### 将所有的awk命令插入一个单独文件，然后调用\n\n> awk -f awk-script-file input-file(s)\n\n其中，-f选项加载awk-script-file中的awk脚本，input-file(s)跟上面的是一样的。\n\n#### 入门实例\n\n1. 显示最近登录的5个账号名\n\n  ```\n  last -n 5 | awk '{print $1}'\n  ```\n  > awk工作流程是这样的：读入有'\\n'换行符分割的一条记录，然后将记录按指定的域分隔符划分域，填充域，$0则表示所有域,$1表示第一个域,$n表示第n个域。默认域分隔符是\"空白键\" 或 \"[tab]键\",所以$1表示登录用户，$3表示登录用户ip,以此类推。\n\n2. 只显示/etc/passwd的账户名\n\n  ```\n  cat /etc/passwd | awk -F':' '{print $1}'\n  ```\n\n  > 这种是awk+action的示例，每行都会执行`action{print $1}`。\n    -F指定域分隔符为`:`。\n\n3. 只显示/etc/passwd的账户和账户对应的shell,并且账户与shell之间以tab键分割\n\n  ```\n  cat /etc/passwd | awk -F':' '{print $1\"\\t\"$7}'\n  ```\n\n4. 只显示/etc/passwd的账户和账户对应的shell,账户与shell之间以逗号分割,并且在所有行前添加列名name,shell,在最后一行添加\"blue,/bin/nosh\"。\n\n  ```\n  cat /etc/passwd | awk -F':' 'BEGIN{print \"name,shell\"} {print $1\",\"$7} END{print \"blue,/bin/nosh\"}' \n  ```\n\n  > awk工作流程是这样的：先执行BEGIN，然后读取文件，读入有/n换行符分割的一条记录，然后将记录按指定的域分隔符划分域，填充域，$0则表示所有域,$1表示第一个域,$n表示第n个域,随后开始执行模式所对应的动作action。接着开始读入第二条记录······直到所有的记录都读完，最后执行END操作。\n\n5. 搜索/etc/passwd有root关键字的所有行\n\n  ```\n  cat /etc/passwd | awk -F':' '/root/'\n  ```\n\n  > 这种是pattern的使用示例，匹配了pattern(这里是root)的行才会执行action(没有指定action，默认输出每行的内容)。\n    搜索支持正则，例如找root开头的: `awk -F: '/^root/' /etc/passwd`\n\n6. 获取/etc/passwd有root关键字的所有行，并显示对应的shell\n\n  ```\n  cat /etc/passwd | awk -F: '/root/{print $7}'\n  ```\n\n#### awk内置变量\n\nawk有许多内置变量用来设置环境信息，这些变量可以被改变，下面给出了最常用的一些变量。\n\n|变量名|说明|\n|:---:|:---|\n|ARGC|命令行参数个数|\n|ARGV|命令行参数排列|\n|ARGIND|当前文件在ARGV中的位置|\n|ENVIRON|支持队列中系统环境变量的使用|\n|ERRNO|当读取或关闭输入文件发生错误时的系统错误号|\n|FILENAME|awk浏览的文件名|\n|FNR|当前数据文件中的数据行数|\n|FS|设置输入域分隔符，等价于命令行 -F选项|\n|NF|数据文件中的字段总数|\n|NR|已处理的输入记录数|\n|OFS|输出域分隔符|\n|ORS|输出记录分隔符|\n|RS|控制记录分隔符|\n|FIELDWIDTHS|由空格分隔的一列数字，定义了每个数据字段确切宽度；一旦设置，会忽略FS变量|\n\n##### 练习\n\n1. 统计/etc/passwd:文件名，每行的行号，每行的列数，对应的完整行内容\n\n  ```\n  awk -F':' '{print \"filename: \" FILENAME \", linenumber: \" NR \", columns: \" NF \", linecontent: \" $0}' /etc/passwd\n  ```\n\n#### print和printf\nawk中同时提供了print和printf两种打印输出的函数。\n其中print函数的参数可以是变量、数值或者字符串。字符串必须用双引号引用，参数用逗号分隔。如果没有逗号，参数就串联在一起而无法区分。这里，逗号的作用与输出文件的分隔符的作用是一样的，只是后者是空格而已。\nprintf函数，其用法和c语言中printf基本相似,可以格式化字符串,输出复杂时，printf更加好用，代码更易懂。\n\n|控制字母|描述|\n|:---:|:---:|\n|c|将一个数作为ASCII字符显示|\n|d|显示一个整数值|\n|i|显示一个整数值(跟d一样)|\n|e|用科学计数法显示一个数|\n|f|显示一个浮点数|\n|g|用科学计数法或浮点数显示(选择较短的格式)|\n|o|显示一个八进制值|\n|s|显示一个文本字符串|\n|x|显示一个十六进制值|\n|X|显示一个十六进制值，单用大写字母|\n\n> 可以将上面的例子1改写为以下形式：\n\n```\n  awk -F':' '{printf(\"filename: %10s, linenumber: %s, columns: %s, linecon\ntent: %s\\n\", FILENAME, NR, NF, $0)}' /etc/passwd\n```\n\n#### awk编程\n\n##### 变量和赋值\n\n除了awk的内置变量，awk还可以自定义变量。\n\n1. 统计/etc/passwd的账户人数\n\n  ```\n  awk 'BEGIN{count=0} {count++} END{print \"the number of users is \",count}' /etc/passwd\n  ```\n\n2. 统计某个文件夹下的文件占用的字节数\n\n  ```\n  ls -l | awk 'BEGIN{size=0} {size+=$5;} END{print \"[end]size is \",size}'\n  ```\n\n##### 条件语句\n\nawk中的条件语句是从C语言中借鉴来的，声明方式如下：\n\n> if (expression) {\n    statement;\n    statement;\n    ... ...\n  }\n\n或\n\n> if (expression) {\n    statement;\n  } else {\n    statement2;\n  }\n\n或\n\n> if (expression) {\n    statement1;\n  } else if (expression1) {\n    statement2;\n  } else {\n    statement3;\n  }\n\n1. 统计某个文件夹下的文件占用的字节数,过滤4096大小的文件\n\n  ```\n  ls -l | awk 'BEGIN{size=0} {if($5==4096){size+=$5}} END{print \"the size of file is \",size}'\n  ```\n\n##### 循环语句\n\nawk中的循环语句同样借鉴于C语言，支持while、do/while、for、break、continue，这些关键字的语义和C语言中的语义完全相同。\n\n##### 数组\n\n因为awk中数组的下标可以是数字和字母，数组的下标通常被称为关键字(key)。值和关键字都存储在内部的一张针对key/value应用hash的表格里。由于hash不是顺序存储，因此在显示数组内容时会发现，它们并不是按照你预料的顺序显示出来的。数组和变量一样，都是在使用时自动创建的，awk也同样会自动判断其存储的是数字还是字符串。一般而言，awk中的数组用来从记录中收集信息，可以用于计算总和、统计单词以及跟踪模板被匹配的次数等等。\n\n1. 显示/etc/passwd的账户\n\n  ```\n  awk -F':' 'BEGIN{count=0;} {name[count]=$1;count++} END{for(i=0;i<NR;i++){print i, name[i]}}' /etc/passwd\n  ```\n\n2. 删除数组变量\n\n  > delete array[index]\n\n\n#### 练习\n\n1. 取出/etc/passwd中的账户名以a或b开头的行并排序\n\n  ```\n  awk '$1~/^(a|b)/{print $0}' /etc/passwd | sort\n  ```\n\n  > 这里需要注意`~`是进行对`$1`的模糊匹配的意思。\n\n2. 取出常用服务及其端口号\n\n  ```\n  cat /etc/services | awk -F'[ /]+' '$1~/^(ssh|ftp|https)/{print $1,$2}'| uniq\n  ```\n\n3. 获取文件中空行的数量\n\n  ```\n  awk 'BEGIN{count=0} {if($0==\"\"){count++}} END{print count}' filename\n  或\n  awk 'BEGIN{count=0} /^$/{count++} END{print count}' filename\n  ```\n\n4. 从链接中获取域名\n\n  ```\n  awk -F'/' '{array[$3]++}END{for(key in array){print key,array[key]}}' filename\n  ```\n\n5. 获取非root用户的信息\n\n  ```\n  awk -F\":\" '$1 !~ /root/{print $1, $NF}' /etc/passwd\n  ```\n","source":"_posts/Linux-awk.md","raw":"---\ntitle: Linux之awk详解\ndate: 2018-02-03\nmodified:\ncategories:\n- Linux\ntags:\n- Linux\n- awk\n---\n\nawk是一个强大的文本分析工具，相对于grep的查找，sed的编辑，awk在其对数据分析并生成报告时，显得尤为强大。简单来说awk就是把文件逐行的读入，以空格为默认分隔符将每行切片，切开的部分再进行各种分析处理。在awk中可以定义变量来保存数据，使用算术和字符串操作符来处理数据，使用结构化编程概念来为数据处理增加处理逻辑，以及提取文件的数据并做处理生成报告。\nawk有3个不同版本: awk、nawk和gawk，未作特别说明，一般指gawk，gawk是AWK的GNU版本。\n\n#### 命令格式\n\n> awk '{pattern + action}' {filenames}\n\n其中pattern表示AWK在数据中查找的内容，而action是在找到匹配内容时所执行的一系列命令。花括号({})不需要在程序中始终出现，但它们用于根据特定的模式对一系列指令进行分组。pattern就是要表示的正则表达式，用斜杠括起来。\n\n#### 调用方式\n\nawk的调用方式通常分为以下三种：\n\n##### 命令行方式\n\n> awk [-F  field-separator]  'commands'  input-file(s)\n\n其中，commands 是真正awk命令，[-F域分隔符]是可选的。 input-file(s) 是待处理的文件。\n在awk中，文件的每一行中，由域分隔符分开的每一项称为一个域。通常，在不指名-F域分隔符的情况下，默认的域分隔符是空格。\n\n##### shell脚本方式\n\n将所有的awk命令插入一个文件，并使awk程序可执行，然后awk命令解释器作为脚本的首行，一遍通过键入脚本名称来调用。\n\n> 相当于shell脚本首行的：#!/bin/sh\n  可以换成：#!/bin/awk\n\n##### 将所有的awk命令插入一个单独文件，然后调用\n\n> awk -f awk-script-file input-file(s)\n\n其中，-f选项加载awk-script-file中的awk脚本，input-file(s)跟上面的是一样的。\n\n#### 入门实例\n\n1. 显示最近登录的5个账号名\n\n  ```\n  last -n 5 | awk '{print $1}'\n  ```\n  > awk工作流程是这样的：读入有'\\n'换行符分割的一条记录，然后将记录按指定的域分隔符划分域，填充域，$0则表示所有域,$1表示第一个域,$n表示第n个域。默认域分隔符是\"空白键\" 或 \"[tab]键\",所以$1表示登录用户，$3表示登录用户ip,以此类推。\n\n2. 只显示/etc/passwd的账户名\n\n  ```\n  cat /etc/passwd | awk -F':' '{print $1}'\n  ```\n\n  > 这种是awk+action的示例，每行都会执行`action{print $1}`。\n    -F指定域分隔符为`:`。\n\n3. 只显示/etc/passwd的账户和账户对应的shell,并且账户与shell之间以tab键分割\n\n  ```\n  cat /etc/passwd | awk -F':' '{print $1\"\\t\"$7}'\n  ```\n\n4. 只显示/etc/passwd的账户和账户对应的shell,账户与shell之间以逗号分割,并且在所有行前添加列名name,shell,在最后一行添加\"blue,/bin/nosh\"。\n\n  ```\n  cat /etc/passwd | awk -F':' 'BEGIN{print \"name,shell\"} {print $1\",\"$7} END{print \"blue,/bin/nosh\"}' \n  ```\n\n  > awk工作流程是这样的：先执行BEGIN，然后读取文件，读入有/n换行符分割的一条记录，然后将记录按指定的域分隔符划分域，填充域，$0则表示所有域,$1表示第一个域,$n表示第n个域,随后开始执行模式所对应的动作action。接着开始读入第二条记录······直到所有的记录都读完，最后执行END操作。\n\n5. 搜索/etc/passwd有root关键字的所有行\n\n  ```\n  cat /etc/passwd | awk -F':' '/root/'\n  ```\n\n  > 这种是pattern的使用示例，匹配了pattern(这里是root)的行才会执行action(没有指定action，默认输出每行的内容)。\n    搜索支持正则，例如找root开头的: `awk -F: '/^root/' /etc/passwd`\n\n6. 获取/etc/passwd有root关键字的所有行，并显示对应的shell\n\n  ```\n  cat /etc/passwd | awk -F: '/root/{print $7}'\n  ```\n\n#### awk内置变量\n\nawk有许多内置变量用来设置环境信息，这些变量可以被改变，下面给出了最常用的一些变量。\n\n|变量名|说明|\n|:---:|:---|\n|ARGC|命令行参数个数|\n|ARGV|命令行参数排列|\n|ARGIND|当前文件在ARGV中的位置|\n|ENVIRON|支持队列中系统环境变量的使用|\n|ERRNO|当读取或关闭输入文件发生错误时的系统错误号|\n|FILENAME|awk浏览的文件名|\n|FNR|当前数据文件中的数据行数|\n|FS|设置输入域分隔符，等价于命令行 -F选项|\n|NF|数据文件中的字段总数|\n|NR|已处理的输入记录数|\n|OFS|输出域分隔符|\n|ORS|输出记录分隔符|\n|RS|控制记录分隔符|\n|FIELDWIDTHS|由空格分隔的一列数字，定义了每个数据字段确切宽度；一旦设置，会忽略FS变量|\n\n##### 练习\n\n1. 统计/etc/passwd:文件名，每行的行号，每行的列数，对应的完整行内容\n\n  ```\n  awk -F':' '{print \"filename: \" FILENAME \", linenumber: \" NR \", columns: \" NF \", linecontent: \" $0}' /etc/passwd\n  ```\n\n#### print和printf\nawk中同时提供了print和printf两种打印输出的函数。\n其中print函数的参数可以是变量、数值或者字符串。字符串必须用双引号引用，参数用逗号分隔。如果没有逗号，参数就串联在一起而无法区分。这里，逗号的作用与输出文件的分隔符的作用是一样的，只是后者是空格而已。\nprintf函数，其用法和c语言中printf基本相似,可以格式化字符串,输出复杂时，printf更加好用，代码更易懂。\n\n|控制字母|描述|\n|:---:|:---:|\n|c|将一个数作为ASCII字符显示|\n|d|显示一个整数值|\n|i|显示一个整数值(跟d一样)|\n|e|用科学计数法显示一个数|\n|f|显示一个浮点数|\n|g|用科学计数法或浮点数显示(选择较短的格式)|\n|o|显示一个八进制值|\n|s|显示一个文本字符串|\n|x|显示一个十六进制值|\n|X|显示一个十六进制值，单用大写字母|\n\n> 可以将上面的例子1改写为以下形式：\n\n```\n  awk -F':' '{printf(\"filename: %10s, linenumber: %s, columns: %s, linecon\ntent: %s\\n\", FILENAME, NR, NF, $0)}' /etc/passwd\n```\n\n#### awk编程\n\n##### 变量和赋值\n\n除了awk的内置变量，awk还可以自定义变量。\n\n1. 统计/etc/passwd的账户人数\n\n  ```\n  awk 'BEGIN{count=0} {count++} END{print \"the number of users is \",count}' /etc/passwd\n  ```\n\n2. 统计某个文件夹下的文件占用的字节数\n\n  ```\n  ls -l | awk 'BEGIN{size=0} {size+=$5;} END{print \"[end]size is \",size}'\n  ```\n\n##### 条件语句\n\nawk中的条件语句是从C语言中借鉴来的，声明方式如下：\n\n> if (expression) {\n    statement;\n    statement;\n    ... ...\n  }\n\n或\n\n> if (expression) {\n    statement;\n  } else {\n    statement2;\n  }\n\n或\n\n> if (expression) {\n    statement1;\n  } else if (expression1) {\n    statement2;\n  } else {\n    statement3;\n  }\n\n1. 统计某个文件夹下的文件占用的字节数,过滤4096大小的文件\n\n  ```\n  ls -l | awk 'BEGIN{size=0} {if($5==4096){size+=$5}} END{print \"the size of file is \",size}'\n  ```\n\n##### 循环语句\n\nawk中的循环语句同样借鉴于C语言，支持while、do/while、for、break、continue，这些关键字的语义和C语言中的语义完全相同。\n\n##### 数组\n\n因为awk中数组的下标可以是数字和字母，数组的下标通常被称为关键字(key)。值和关键字都存储在内部的一张针对key/value应用hash的表格里。由于hash不是顺序存储，因此在显示数组内容时会发现，它们并不是按照你预料的顺序显示出来的。数组和变量一样，都是在使用时自动创建的，awk也同样会自动判断其存储的是数字还是字符串。一般而言，awk中的数组用来从记录中收集信息，可以用于计算总和、统计单词以及跟踪模板被匹配的次数等等。\n\n1. 显示/etc/passwd的账户\n\n  ```\n  awk -F':' 'BEGIN{count=0;} {name[count]=$1;count++} END{for(i=0;i<NR;i++){print i, name[i]}}' /etc/passwd\n  ```\n\n2. 删除数组变量\n\n  > delete array[index]\n\n\n#### 练习\n\n1. 取出/etc/passwd中的账户名以a或b开头的行并排序\n\n  ```\n  awk '$1~/^(a|b)/{print $0}' /etc/passwd | sort\n  ```\n\n  > 这里需要注意`~`是进行对`$1`的模糊匹配的意思。\n\n2. 取出常用服务及其端口号\n\n  ```\n  cat /etc/services | awk -F'[ /]+' '$1~/^(ssh|ftp|https)/{print $1,$2}'| uniq\n  ```\n\n3. 获取文件中空行的数量\n\n  ```\n  awk 'BEGIN{count=0} {if($0==\"\"){count++}} END{print count}' filename\n  或\n  awk 'BEGIN{count=0} /^$/{count++} END{print count}' filename\n  ```\n\n4. 从链接中获取域名\n\n  ```\n  awk -F'/' '{array[$3]++}END{for(key in array){print key,array[key]}}' filename\n  ```\n\n5. 获取非root用户的信息\n\n  ```\n  awk -F\":\" '$1 !~ /root/{print $1, $NF}' /etc/passwd\n  ```\n","slug":"Linux-awk","published":1,"updated":"2018-02-12T01:55:40.425Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjir2nrkc00009xas518qrt7l","content":"<p>awk是一个强大的文本分析工具，相对于grep的查找，sed的编辑，awk在其对数据分析并生成报告时，显得尤为强大。简单来说awk就是把文件逐行的读入，以空格为默认分隔符将每行切片，切开的部分再进行各种分析处理。在awk中可以定义变量来保存数据，使用算术和字符串操作符来处理数据，使用结构化编程概念来为数据处理增加处理逻辑，以及提取文件的数据并做处理生成报告。<br>awk有3个不同版本: awk、nawk和gawk，未作特别说明，一般指gawk，gawk是AWK的GNU版本。</p>\n<h4 id=\"命令格式\"><a href=\"#命令格式\" class=\"headerlink\" title=\"命令格式\"></a>命令格式</h4><blockquote>\n<p>awk ‘{pattern + action}’ {filenames}</p>\n</blockquote>\n<p>其中pattern表示AWK在数据中查找的内容，而action是在找到匹配内容时所执行的一系列命令。花括号({})不需要在程序中始终出现，但它们用于根据特定的模式对一系列指令进行分组。pattern就是要表示的正则表达式，用斜杠括起来。</p>\n<h4 id=\"调用方式\"><a href=\"#调用方式\" class=\"headerlink\" title=\"调用方式\"></a>调用方式</h4><p>awk的调用方式通常分为以下三种：</p>\n<h5 id=\"命令行方式\"><a href=\"#命令行方式\" class=\"headerlink\" title=\"命令行方式\"></a>命令行方式</h5><blockquote>\n<p>awk [-F  field-separator]  ‘commands’  input-file(s)</p>\n</blockquote>\n<p>其中，commands 是真正awk命令，[-F域分隔符]是可选的。 input-file(s) 是待处理的文件。<br>在awk中，文件的每一行中，由域分隔符分开的每一项称为一个域。通常，在不指名-F域分隔符的情况下，默认的域分隔符是空格。</p>\n<h5 id=\"shell脚本方式\"><a href=\"#shell脚本方式\" class=\"headerlink\" title=\"shell脚本方式\"></a>shell脚本方式</h5><p>将所有的awk命令插入一个文件，并使awk程序可执行，然后awk命令解释器作为脚本的首行，一遍通过键入脚本名称来调用。</p>\n<blockquote>\n<p>相当于shell脚本首行的：#!/bin/sh<br>  可以换成：#!/bin/awk</p>\n</blockquote>\n<h5 id=\"将所有的awk命令插入一个单独文件，然后调用\"><a href=\"#将所有的awk命令插入一个单独文件，然后调用\" class=\"headerlink\" title=\"将所有的awk命令插入一个单独文件，然后调用\"></a>将所有的awk命令插入一个单独文件，然后调用</h5><blockquote>\n<p>awk -f awk-script-file input-file(s)</p>\n</blockquote>\n<p>其中，-f选项加载awk-script-file中的awk脚本，input-file(s)跟上面的是一样的。</p>\n<h4 id=\"入门实例\"><a href=\"#入门实例\" class=\"headerlink\" title=\"入门实例\"></a>入门实例</h4><ol>\n<li><p>显示最近登录的5个账号名</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">last -n 5 | awk &apos;&#123;print $1&#125;&apos;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>awk工作流程是这样的：读入有’\\n’换行符分割的一条记录，然后将记录按指定的域分隔符划分域，填充域，$0则表示所有域,$1表示第一个域,$n表示第n个域。默认域分隔符是”空白键” 或 “[tab]键”,所以$1表示登录用户，$3表示登录用户ip,以此类推。</p>\n</blockquote>\n</li>\n<li><p>只显示/etc/passwd的账户名</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat /etc/passwd | awk -F&apos;:&apos; &apos;&#123;print $1&#125;&apos;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>这种是awk+action的示例，每行都会执行<code>action{print $1}</code>。<br> -F指定域分隔符为<code>:</code>。</p>\n</blockquote>\n</li>\n<li><p>只显示/etc/passwd的账户和账户对应的shell,并且账户与shell之间以tab键分割</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat /etc/passwd | awk -F&apos;:&apos; &apos;&#123;print $1&quot;\\t&quot;$7&#125;&apos;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>只显示/etc/passwd的账户和账户对应的shell,账户与shell之间以逗号分割,并且在所有行前添加列名name,shell,在最后一行添加”blue,/bin/nosh”。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat /etc/passwd | awk -F&apos;:&apos; &apos;BEGIN&#123;print &quot;name,shell&quot;&#125; &#123;print $1&quot;,&quot;$7&#125; END&#123;print &quot;blue,/bin/nosh&quot;&#125;&apos;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>awk工作流程是这样的：先执行BEGIN，然后读取文件，读入有/n换行符分割的一条记录，然后将记录按指定的域分隔符划分域，填充域，$0则表示所有域,$1表示第一个域,$n表示第n个域,随后开始执行模式所对应的动作action。接着开始读入第二条记录······直到所有的记录都读完，最后执行END操作。</p>\n</blockquote>\n</li>\n<li><p>搜索/etc/passwd有root关键字的所有行</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat /etc/passwd | awk -F&apos;:&apos; &apos;/root/&apos;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>这种是pattern的使用示例，匹配了pattern(这里是root)的行才会执行action(没有指定action，默认输出每行的内容)。<br> 搜索支持正则，例如找root开头的: <code>awk -F: &#39;/^root/&#39; /etc/passwd</code></p>\n</blockquote>\n</li>\n<li><p>获取/etc/passwd有root关键字的所有行，并显示对应的shell</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat /etc/passwd | awk -F: &apos;/root/&#123;print $7&#125;&apos;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h4 id=\"awk内置变量\"><a href=\"#awk内置变量\" class=\"headerlink\" title=\"awk内置变量\"></a>awk内置变量</h4><p>awk有许多内置变量用来设置环境信息，这些变量可以被改变，下面给出了最常用的一些变量。</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">变量名</th>\n<th style=\"text-align:left\">说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">ARGC</td>\n<td style=\"text-align:left\">命令行参数个数</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ARGV</td>\n<td style=\"text-align:left\">命令行参数排列</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ARGIND</td>\n<td style=\"text-align:left\">当前文件在ARGV中的位置</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ENVIRON</td>\n<td style=\"text-align:left\">支持队列中系统环境变量的使用</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ERRNO</td>\n<td style=\"text-align:left\">当读取或关闭输入文件发生错误时的系统错误号</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">FILENAME</td>\n<td style=\"text-align:left\">awk浏览的文件名</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">FNR</td>\n<td style=\"text-align:left\">当前数据文件中的数据行数</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">FS</td>\n<td style=\"text-align:left\">设置输入域分隔符，等价于命令行 -F选项</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">NF</td>\n<td style=\"text-align:left\">数据文件中的字段总数</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">NR</td>\n<td style=\"text-align:left\">已处理的输入记录数</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">OFS</td>\n<td style=\"text-align:left\">输出域分隔符</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ORS</td>\n<td style=\"text-align:left\">输出记录分隔符</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">RS</td>\n<td style=\"text-align:left\">控制记录分隔符</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">FIELDWIDTHS</td>\n<td style=\"text-align:left\">由空格分隔的一列数字，定义了每个数据字段确切宽度；一旦设置，会忽略FS变量</td>\n</tr>\n</tbody>\n</table>\n<h5 id=\"练习\"><a href=\"#练习\" class=\"headerlink\" title=\"练习\"></a>练习</h5><ol>\n<li><p>统计/etc/passwd:文件名，每行的行号，每行的列数，对应的完整行内容</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">awk -F&apos;:&apos; &apos;&#123;print &quot;filename: &quot; FILENAME &quot;, linenumber: &quot; NR &quot;, columns: &quot; NF &quot;, linecontent: &quot; $0&#125;&apos; /etc/passwd</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h4 id=\"print和printf\"><a href=\"#print和printf\" class=\"headerlink\" title=\"print和printf\"></a>print和printf</h4><p>awk中同时提供了print和printf两种打印输出的函数。<br>其中print函数的参数可以是变量、数值或者字符串。字符串必须用双引号引用，参数用逗号分隔。如果没有逗号，参数就串联在一起而无法区分。这里，逗号的作用与输出文件的分隔符的作用是一样的，只是后者是空格而已。<br>printf函数，其用法和c语言中printf基本相似,可以格式化字符串,输出复杂时，printf更加好用，代码更易懂。</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">控制字母</th>\n<th style=\"text-align:center\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">c</td>\n<td style=\"text-align:center\">将一个数作为ASCII字符显示</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">d</td>\n<td style=\"text-align:center\">显示一个整数值</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">i</td>\n<td style=\"text-align:center\">显示一个整数值(跟d一样)</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">e</td>\n<td style=\"text-align:center\">用科学计数法显示一个数</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">f</td>\n<td style=\"text-align:center\">显示一个浮点数</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">g</td>\n<td style=\"text-align:center\">用科学计数法或浮点数显示(选择较短的格式)</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">o</td>\n<td style=\"text-align:center\">显示一个八进制值</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">s</td>\n<td style=\"text-align:center\">显示一个文本字符串</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">x</td>\n<td style=\"text-align:center\">显示一个十六进制值</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">X</td>\n<td style=\"text-align:center\">显示一个十六进制值，单用大写字母</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p>可以将上面的例子1改写为以下形式：</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  awk -F&apos;:&apos; &apos;&#123;printf(&quot;filename: %10s, linenumber: %s, columns: %s, linecon</span><br><span class=\"line\">tent: %s\\n&quot;, FILENAME, NR, NF, $0)&#125;&apos; /etc/passwd</span><br></pre></td></tr></table></figure>\n<h4 id=\"awk编程\"><a href=\"#awk编程\" class=\"headerlink\" title=\"awk编程\"></a>awk编程</h4><h5 id=\"变量和赋值\"><a href=\"#变量和赋值\" class=\"headerlink\" title=\"变量和赋值\"></a>变量和赋值</h5><p>除了awk的内置变量，awk还可以自定义变量。</p>\n<ol>\n<li><p>统计/etc/passwd的账户人数</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">awk &apos;BEGIN&#123;count=0&#125; &#123;count++&#125; END&#123;print &quot;the number of users is &quot;,count&#125;&apos; /etc/passwd</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>统计某个文件夹下的文件占用的字节数</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ls -l | awk &apos;BEGIN&#123;size=0&#125; &#123;size+=$5;&#125; END&#123;print &quot;[end]size is &quot;,size&#125;&apos;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h5 id=\"条件语句\"><a href=\"#条件语句\" class=\"headerlink\" title=\"条件语句\"></a>条件语句</h5><p>awk中的条件语句是从C语言中借鉴来的，声明方式如下：</p>\n<blockquote>\n<p>if (expression) {<br>    statement;<br>    statement;<br>    … …<br>  }</p>\n</blockquote>\n<p>或</p>\n<blockquote>\n<p>if (expression) {<br>    statement;<br>  } else {<br>    statement2;<br>  }</p>\n</blockquote>\n<p>或</p>\n<blockquote>\n<p>if (expression) {<br>    statement1;<br>  } else if (expression1) {<br>    statement2;<br>  } else {<br>    statement3;<br>  }</p>\n</blockquote>\n<ol>\n<li><p>统计某个文件夹下的文件占用的字节数,过滤4096大小的文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ls -l | awk &apos;BEGIN&#123;size=0&#125; &#123;if($5==4096)&#123;size+=$5&#125;&#125; END&#123;print &quot;the size of file is &quot;,size&#125;&apos;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h5 id=\"循环语句\"><a href=\"#循环语句\" class=\"headerlink\" title=\"循环语句\"></a>循环语句</h5><p>awk中的循环语句同样借鉴于C语言，支持while、do/while、for、break、continue，这些关键字的语义和C语言中的语义完全相同。</p>\n<h5 id=\"数组\"><a href=\"#数组\" class=\"headerlink\" title=\"数组\"></a>数组</h5><p>因为awk中数组的下标可以是数字和字母，数组的下标通常被称为关键字(key)。值和关键字都存储在内部的一张针对key/value应用hash的表格里。由于hash不是顺序存储，因此在显示数组内容时会发现，它们并不是按照你预料的顺序显示出来的。数组和变量一样，都是在使用时自动创建的，awk也同样会自动判断其存储的是数字还是字符串。一般而言，awk中的数组用来从记录中收集信息，可以用于计算总和、统计单词以及跟踪模板被匹配的次数等等。</p>\n<ol>\n<li><p>显示/etc/passwd的账户</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">awk -F&apos;:&apos; &apos;BEGIN&#123;count=0;&#125; &#123;name[count]=$1;count++&#125; END&#123;for(i=0;i&lt;NR;i++)&#123;print i, name[i]&#125;&#125;&apos; /etc/passwd</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>删除数组变量</p>\n<blockquote>\n<p>delete array[index]</p>\n</blockquote>\n</li>\n</ol>\n<h4 id=\"练习-1\"><a href=\"#练习-1\" class=\"headerlink\" title=\"练习\"></a>练习</h4><ol>\n<li><p>取出/etc/passwd中的账户名以a或b开头的行并排序</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">awk &apos;$1~/^(a|b)/&#123;print $0&#125;&apos; /etc/passwd | sort</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>这里需要注意<code>~</code>是进行对<code>$1</code>的模糊匹配的意思。</p>\n</blockquote>\n</li>\n<li><p>取出常用服务及其端口号</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat /etc/services | awk -F&apos;[ /]+&apos; &apos;$1~/^(ssh|ftp|https)/&#123;print $1,$2&#125;&apos;| uniq</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>获取文件中空行的数量</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">awk &apos;BEGIN&#123;count=0&#125; &#123;if($0==&quot;&quot;)&#123;count++&#125;&#125; END&#123;print count&#125;&apos; filename</span><br><span class=\"line\">或</span><br><span class=\"line\">awk &apos;BEGIN&#123;count=0&#125; /^$/&#123;count++&#125; END&#123;print count&#125;&apos; filename</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>从链接中获取域名</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">awk -F&apos;/&apos; &apos;&#123;array[$3]++&#125;END&#123;for(key in array)&#123;print key,array[key]&#125;&#125;&apos; filename</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>获取非root用户的信息</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">awk -F&quot;:&quot; &apos;$1 !~ /root/&#123;print $1, $NF&#125;&apos; /etc/passwd</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<p>awk是一个强大的文本分析工具，相对于grep的查找，sed的编辑，awk在其对数据分析并生成报告时，显得尤为强大。简单来说awk就是把文件逐行的读入，以空格为默认分隔符将每行切片，切开的部分再进行各种分析处理。在awk中可以定义变量来保存数据，使用算术和字符串操作符来处理数据，使用结构化编程概念来为数据处理增加处理逻辑，以及提取文件的数据并做处理生成报告。<br>awk有3个不同版本: awk、nawk和gawk，未作特别说明，一般指gawk，gawk是AWK的GNU版本。</p>\n<h4 id=\"命令格式\"><a href=\"#命令格式\" class=\"headerlink\" title=\"命令格式\"></a>命令格式</h4><blockquote>\n<p>awk ‘{pattern + action}’ {filenames}</p>\n</blockquote>\n<p>其中pattern表示AWK在数据中查找的内容，而action是在找到匹配内容时所执行的一系列命令。花括号({})不需要在程序中始终出现，但它们用于根据特定的模式对一系列指令进行分组。pattern就是要表示的正则表达式，用斜杠括起来。</p>\n<h4 id=\"调用方式\"><a href=\"#调用方式\" class=\"headerlink\" title=\"调用方式\"></a>调用方式</h4><p>awk的调用方式通常分为以下三种：</p>\n<h5 id=\"命令行方式\"><a href=\"#命令行方式\" class=\"headerlink\" title=\"命令行方式\"></a>命令行方式</h5><blockquote>\n<p>awk [-F  field-separator]  ‘commands’  input-file(s)</p>\n</blockquote>\n<p>其中，commands 是真正awk命令，[-F域分隔符]是可选的。 input-file(s) 是待处理的文件。<br>在awk中，文件的每一行中，由域分隔符分开的每一项称为一个域。通常，在不指名-F域分隔符的情况下，默认的域分隔符是空格。</p>\n<h5 id=\"shell脚本方式\"><a href=\"#shell脚本方式\" class=\"headerlink\" title=\"shell脚本方式\"></a>shell脚本方式</h5><p>将所有的awk命令插入一个文件，并使awk程序可执行，然后awk命令解释器作为脚本的首行，一遍通过键入脚本名称来调用。</p>\n<blockquote>\n<p>相当于shell脚本首行的：#!/bin/sh<br>  可以换成：#!/bin/awk</p>\n</blockquote>\n<h5 id=\"将所有的awk命令插入一个单独文件，然后调用\"><a href=\"#将所有的awk命令插入一个单独文件，然后调用\" class=\"headerlink\" title=\"将所有的awk命令插入一个单独文件，然后调用\"></a>将所有的awk命令插入一个单独文件，然后调用</h5><blockquote>\n<p>awk -f awk-script-file input-file(s)</p>\n</blockquote>\n<p>其中，-f选项加载awk-script-file中的awk脚本，input-file(s)跟上面的是一样的。</p>\n<h4 id=\"入门实例\"><a href=\"#入门实例\" class=\"headerlink\" title=\"入门实例\"></a>入门实例</h4><ol>\n<li><p>显示最近登录的5个账号名</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">last -n 5 | awk &apos;&#123;print $1&#125;&apos;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>awk工作流程是这样的：读入有’\\n’换行符分割的一条记录，然后将记录按指定的域分隔符划分域，填充域，$0则表示所有域,$1表示第一个域,$n表示第n个域。默认域分隔符是”空白键” 或 “[tab]键”,所以$1表示登录用户，$3表示登录用户ip,以此类推。</p>\n</blockquote>\n</li>\n<li><p>只显示/etc/passwd的账户名</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat /etc/passwd | awk -F&apos;:&apos; &apos;&#123;print $1&#125;&apos;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>这种是awk+action的示例，每行都会执行<code>action{print $1}</code>。<br> -F指定域分隔符为<code>:</code>。</p>\n</blockquote>\n</li>\n<li><p>只显示/etc/passwd的账户和账户对应的shell,并且账户与shell之间以tab键分割</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat /etc/passwd | awk -F&apos;:&apos; &apos;&#123;print $1&quot;\\t&quot;$7&#125;&apos;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>只显示/etc/passwd的账户和账户对应的shell,账户与shell之间以逗号分割,并且在所有行前添加列名name,shell,在最后一行添加”blue,/bin/nosh”。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat /etc/passwd | awk -F&apos;:&apos; &apos;BEGIN&#123;print &quot;name,shell&quot;&#125; &#123;print $1&quot;,&quot;$7&#125; END&#123;print &quot;blue,/bin/nosh&quot;&#125;&apos;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>awk工作流程是这样的：先执行BEGIN，然后读取文件，读入有/n换行符分割的一条记录，然后将记录按指定的域分隔符划分域，填充域，$0则表示所有域,$1表示第一个域,$n表示第n个域,随后开始执行模式所对应的动作action。接着开始读入第二条记录······直到所有的记录都读完，最后执行END操作。</p>\n</blockquote>\n</li>\n<li><p>搜索/etc/passwd有root关键字的所有行</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat /etc/passwd | awk -F&apos;:&apos; &apos;/root/&apos;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>这种是pattern的使用示例，匹配了pattern(这里是root)的行才会执行action(没有指定action，默认输出每行的内容)。<br> 搜索支持正则，例如找root开头的: <code>awk -F: &#39;/^root/&#39; /etc/passwd</code></p>\n</blockquote>\n</li>\n<li><p>获取/etc/passwd有root关键字的所有行，并显示对应的shell</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat /etc/passwd | awk -F: &apos;/root/&#123;print $7&#125;&apos;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h4 id=\"awk内置变量\"><a href=\"#awk内置变量\" class=\"headerlink\" title=\"awk内置变量\"></a>awk内置变量</h4><p>awk有许多内置变量用来设置环境信息，这些变量可以被改变，下面给出了最常用的一些变量。</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">变量名</th>\n<th style=\"text-align:left\">说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">ARGC</td>\n<td style=\"text-align:left\">命令行参数个数</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ARGV</td>\n<td style=\"text-align:left\">命令行参数排列</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ARGIND</td>\n<td style=\"text-align:left\">当前文件在ARGV中的位置</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ENVIRON</td>\n<td style=\"text-align:left\">支持队列中系统环境变量的使用</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ERRNO</td>\n<td style=\"text-align:left\">当读取或关闭输入文件发生错误时的系统错误号</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">FILENAME</td>\n<td style=\"text-align:left\">awk浏览的文件名</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">FNR</td>\n<td style=\"text-align:left\">当前数据文件中的数据行数</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">FS</td>\n<td style=\"text-align:left\">设置输入域分隔符，等价于命令行 -F选项</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">NF</td>\n<td style=\"text-align:left\">数据文件中的字段总数</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">NR</td>\n<td style=\"text-align:left\">已处理的输入记录数</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">OFS</td>\n<td style=\"text-align:left\">输出域分隔符</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ORS</td>\n<td style=\"text-align:left\">输出记录分隔符</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">RS</td>\n<td style=\"text-align:left\">控制记录分隔符</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">FIELDWIDTHS</td>\n<td style=\"text-align:left\">由空格分隔的一列数字，定义了每个数据字段确切宽度；一旦设置，会忽略FS变量</td>\n</tr>\n</tbody>\n</table>\n<h5 id=\"练习\"><a href=\"#练习\" class=\"headerlink\" title=\"练习\"></a>练习</h5><ol>\n<li><p>统计/etc/passwd:文件名，每行的行号，每行的列数，对应的完整行内容</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">awk -F&apos;:&apos; &apos;&#123;print &quot;filename: &quot; FILENAME &quot;, linenumber: &quot; NR &quot;, columns: &quot; NF &quot;, linecontent: &quot; $0&#125;&apos; /etc/passwd</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h4 id=\"print和printf\"><a href=\"#print和printf\" class=\"headerlink\" title=\"print和printf\"></a>print和printf</h4><p>awk中同时提供了print和printf两种打印输出的函数。<br>其中print函数的参数可以是变量、数值或者字符串。字符串必须用双引号引用，参数用逗号分隔。如果没有逗号，参数就串联在一起而无法区分。这里，逗号的作用与输出文件的分隔符的作用是一样的，只是后者是空格而已。<br>printf函数，其用法和c语言中printf基本相似,可以格式化字符串,输出复杂时，printf更加好用，代码更易懂。</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">控制字母</th>\n<th style=\"text-align:center\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">c</td>\n<td style=\"text-align:center\">将一个数作为ASCII字符显示</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">d</td>\n<td style=\"text-align:center\">显示一个整数值</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">i</td>\n<td style=\"text-align:center\">显示一个整数值(跟d一样)</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">e</td>\n<td style=\"text-align:center\">用科学计数法显示一个数</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">f</td>\n<td style=\"text-align:center\">显示一个浮点数</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">g</td>\n<td style=\"text-align:center\">用科学计数法或浮点数显示(选择较短的格式)</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">o</td>\n<td style=\"text-align:center\">显示一个八进制值</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">s</td>\n<td style=\"text-align:center\">显示一个文本字符串</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">x</td>\n<td style=\"text-align:center\">显示一个十六进制值</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">X</td>\n<td style=\"text-align:center\">显示一个十六进制值，单用大写字母</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p>可以将上面的例子1改写为以下形式：</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  awk -F&apos;:&apos; &apos;&#123;printf(&quot;filename: %10s, linenumber: %s, columns: %s, linecon</span><br><span class=\"line\">tent: %s\\n&quot;, FILENAME, NR, NF, $0)&#125;&apos; /etc/passwd</span><br></pre></td></tr></table></figure>\n<h4 id=\"awk编程\"><a href=\"#awk编程\" class=\"headerlink\" title=\"awk编程\"></a>awk编程</h4><h5 id=\"变量和赋值\"><a href=\"#变量和赋值\" class=\"headerlink\" title=\"变量和赋值\"></a>变量和赋值</h5><p>除了awk的内置变量，awk还可以自定义变量。</p>\n<ol>\n<li><p>统计/etc/passwd的账户人数</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">awk &apos;BEGIN&#123;count=0&#125; &#123;count++&#125; END&#123;print &quot;the number of users is &quot;,count&#125;&apos; /etc/passwd</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>统计某个文件夹下的文件占用的字节数</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ls -l | awk &apos;BEGIN&#123;size=0&#125; &#123;size+=$5;&#125; END&#123;print &quot;[end]size is &quot;,size&#125;&apos;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h5 id=\"条件语句\"><a href=\"#条件语句\" class=\"headerlink\" title=\"条件语句\"></a>条件语句</h5><p>awk中的条件语句是从C语言中借鉴来的，声明方式如下：</p>\n<blockquote>\n<p>if (expression) {<br>    statement;<br>    statement;<br>    … …<br>  }</p>\n</blockquote>\n<p>或</p>\n<blockquote>\n<p>if (expression) {<br>    statement;<br>  } else {<br>    statement2;<br>  }</p>\n</blockquote>\n<p>或</p>\n<blockquote>\n<p>if (expression) {<br>    statement1;<br>  } else if (expression1) {<br>    statement2;<br>  } else {<br>    statement3;<br>  }</p>\n</blockquote>\n<ol>\n<li><p>统计某个文件夹下的文件占用的字节数,过滤4096大小的文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ls -l | awk &apos;BEGIN&#123;size=0&#125; &#123;if($5==4096)&#123;size+=$5&#125;&#125; END&#123;print &quot;the size of file is &quot;,size&#125;&apos;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h5 id=\"循环语句\"><a href=\"#循环语句\" class=\"headerlink\" title=\"循环语句\"></a>循环语句</h5><p>awk中的循环语句同样借鉴于C语言，支持while、do/while、for、break、continue，这些关键字的语义和C语言中的语义完全相同。</p>\n<h5 id=\"数组\"><a href=\"#数组\" class=\"headerlink\" title=\"数组\"></a>数组</h5><p>因为awk中数组的下标可以是数字和字母，数组的下标通常被称为关键字(key)。值和关键字都存储在内部的一张针对key/value应用hash的表格里。由于hash不是顺序存储，因此在显示数组内容时会发现，它们并不是按照你预料的顺序显示出来的。数组和变量一样，都是在使用时自动创建的，awk也同样会自动判断其存储的是数字还是字符串。一般而言，awk中的数组用来从记录中收集信息，可以用于计算总和、统计单词以及跟踪模板被匹配的次数等等。</p>\n<ol>\n<li><p>显示/etc/passwd的账户</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">awk -F&apos;:&apos; &apos;BEGIN&#123;count=0;&#125; &#123;name[count]=$1;count++&#125; END&#123;for(i=0;i&lt;NR;i++)&#123;print i, name[i]&#125;&#125;&apos; /etc/passwd</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>删除数组变量</p>\n<blockquote>\n<p>delete array[index]</p>\n</blockquote>\n</li>\n</ol>\n<h4 id=\"练习-1\"><a href=\"#练习-1\" class=\"headerlink\" title=\"练习\"></a>练习</h4><ol>\n<li><p>取出/etc/passwd中的账户名以a或b开头的行并排序</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">awk &apos;$1~/^(a|b)/&#123;print $0&#125;&apos; /etc/passwd | sort</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>这里需要注意<code>~</code>是进行对<code>$1</code>的模糊匹配的意思。</p>\n</blockquote>\n</li>\n<li><p>取出常用服务及其端口号</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat /etc/services | awk -F&apos;[ /]+&apos; &apos;$1~/^(ssh|ftp|https)/&#123;print $1,$2&#125;&apos;| uniq</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>获取文件中空行的数量</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">awk &apos;BEGIN&#123;count=0&#125; &#123;if($0==&quot;&quot;)&#123;count++&#125;&#125; END&#123;print count&#125;&apos; filename</span><br><span class=\"line\">或</span><br><span class=\"line\">awk &apos;BEGIN&#123;count=0&#125; /^$/&#123;count++&#125; END&#123;print count&#125;&apos; filename</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>从链接中获取域名</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">awk -F&apos;/&apos; &apos;&#123;array[$3]++&#125;END&#123;for(key in array)&#123;print key,array[key]&#125;&#125;&apos; filename</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>获取非root用户的信息</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">awk -F&quot;:&quot; &apos;$1 !~ /root/&#123;print $1, $NF&#125;&apos; /etc/passwd</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n"},{"title":"Linux常用命令","date":"2018-02-01T12:17:26.000Z","modified":null,"_content":"\n### 系统信息\n\n#### 显示机器的处理器架构\n> arch\n  uname -m\n\n#### 显示正在使用的内核版本\n> uname -r\n\n#### 显示CPU的信息\n> cat /proc/cpuinfo\n\n#### 显示内存使用\n> cat /proc/meminfo\n\n#### 显示内核的版本\n> cat /proc/version\n\n#### 显示系统日期\n> date\n\n#### 同步时间\n> ntpdate time.ntp.org \n\n### 关机\n#### 关闭系统\n> shutdown -h now\n  init 0\n\n#### 重启\n> shutdown -r now\n  reboot\n\n#### 注销\n> logout\n\n### 文件和目录\n#### cd\n> /home 进入/home目录\n  .. 返回上一级目录\n  \\- 返回上次所在的目录\n\n#### pwd\n显示工作路径\n\n#### ls\n> -F 查看目录中的文件 \n  -l 显示文件和目录的详细资料\n  -a 显示隐藏文件\n\n#### mkdir\n创建目录\n> -Z：设置安全上下文，当使用SELinux时有效；\n  -m<目标属性>或--mode<目标属性>建立目录的同时设置目录的权限；\n  -p或--parents 若所要建立目录的上层目录目前尚未建立，则会一并建立上层目录；\n  --version 显示版本信息。 \n\n#### rm\n> rm -f file1 删除一个叫做 'file1' 的文件' \n  rm dir dir1 删除一个叫做 'dir1' 的目录' \n  rm -rf dir1 删除一个叫做 'dir1' 的目录并同时删除其内容 \n  rm -rf dir1 dir2 同时删除两个目录及它们的内容\n\n#### mv\n> mv dir1 new_dir 重命名/移动 一个目录 \n\n#### cp\n> cp file1 file2 复制一个文件 \n  cp dir/* . 复制一个目录下的所有文件到当前工作目录 \n  cp -a /tmp/dir1 . 复制一个目录到当前工作目录 \n  cp -a dir1 dir2 复制一个目录\n\n#### ln\n\n### 文件搜索\n#### find\n> find / -name file1 从 '/' 开始进入根文件系统搜索文件和目录 \n  find / -user user1 搜索属于用户 'user1' 的文件和目录 \n  find /home/user1 -name \\*.bin 在目录 '/ home/user1' 中搜索带有'.bin' 结尾的文件 \n  find /usr/bin -type f -atime +100 搜索在过去100天内未被使用过的执行文件 \n  find /usr/bin -type f -mtime -10 搜索在10天内被创建或者修改过的文件 \n  find / -name \\*.rpm -exec chmod 755 '{}' \\; 搜索以 '.rpm' 结尾的文件并定义其权限 \n  find / -xdev -name \\*.rpm 搜索以 '.rpm' 结尾的文件，忽略光驱、捷盘等可移动设备\n\n#### locate\n> locate \\*.ps 寻找以 '.ps' 结尾的文件 - 先运行 'updatedb' 命令 \n\n#### whereis\n> whereis halt 显示一个二进制文件、源码或man的位置\n\n#### which\n> which halt 显示一个二进制文件或可执行文件的完整路径\n\n### 挂载文件系统\n#### mount\n\n#### unmount\n\n\n### 磁盘空间\n#### df\n> -a或--all：包含全部的文件系统；\n  --block-size=<区块大小>：以指定的区块大小来显示区块数目；\n  -h或--human-readable：以可读性较高的方式来显示信息；\n  -H或--si：与-h参数相同，但在计算时是以1000 Bytes为换算单位而非1024 Bytes；\n  -i或--inodes：显示inode的信息；\n  -k或--kilobytes：指定区块大小为1024字节；\n  -l或--local：仅显示本地端的文件系统；\n  -m或--megabytes：指定区块大小为1048576字节；\n  --no-sync：在取得磁盘使用信息前，不要执行sync指令，此为预设值；\n  -P或--portability：使用POSIX的输出格式；\n  --sync：在取得磁盘使用信息前，先执行sync指令；\n  -t<文件系统类型>或--type=<文件系统类型>：仅显示指定文件系统类型的磁盘信息；\n  -T或--print-type：显示文件系统的类型；\n  -x<文件系统类型>或--exclude-type=<文件系统类型>：不要显示指定文件系统类型的磁盘信息；\n  --help：显示帮助；\n  --version：显示版本信息。\n\n#### du\n> -a或-all 显示目录中个别文件的大小。\n  -b或-bytes 显示目录或文件大小时，以byte为单位。\n  -c或--total 除了显示个别目录或文件的大小外，同时也显示所有目录或文件的总和。\n  -k或--kilobytes 以KB(1024bytes)为单位输出。\n  -m或--megabytes 以MB为单位输出。\n  -s或--summarize 仅显示总计，只列出最后加总的值。\n  -h或--human-readable 以K，M，G为单位，提高信息的可读性。\n  -x或--one-file-xystem 以一开始处理时的文件系统为准，若遇上其它不同的文件系统目录则略过。\n  -L<符号链接>或--dereference<符号链接> 显示选项中所指定符号链接的源文件大小。\n  -S或--separate-dirs 显示个别目录的大小时，并不含其子目录的大小。\n  -X<文件>或--exclude-from=<文件> 在<文件>指定目录或文件。\n  --exclude=<目录或文件> 略过指定的目录或文件。\n  -D或--dereference-args 显示指定符号链接的源文件大小。\n  -H或--si 与-h参数相同，但是K，M，G是以1000为换算单位。\n  -l或--count-links 重复计算硬件链接的文件。\n\n### 用户和组\n#### useradd\n创建的新的系统用户。使用useradd指令所建立的帐号，实际上是保存在`/etc/passwd`文本文件中。\n> -c<备注>：加上备注文字。备注文字会保存在passwd的备注栏位中；\n  -d<登入目录>：指定用户登入时的启始目录；\n  -D：变更预设值；\n  -e<有效期限>：指定帐号的有效期限；\n  -f<缓冲天数>：指定在密码过期后多少天即关闭该帐号；\n  -g<群组>：指定用户所属的群组；\n  -G<群组>：指定用户所属的附加群组；\n  -m：自动建立用户的登入目录；\n  -M：不要自动建立用户的登入目录；\n  -n：取消建立以用户名称为名的群组；\n  -r：建立系统帐号；\n  -s<shell>：指定用户登入后所使用的shell；\n  -u<uid>：指定用户id。\n  \n#### userdel\n删除给定的用户，以及与用户相关的文件。若不加选项，则仅删除用户帐号，而不删除相关文件。\n> -f：强制删除用户，即使用户当前已登录；\n  -r：删除用户的同时，删除与用户相关的所有文件。\n\n#### passwd\n设置用户的认证信息，包括用户密码、密码过期时间等。\n系统管理者则能用它管理系统用户的密码。只有管理者可以指定用户名称，一般用户只能变更自己的密码。\n> -d：删除密码，仅有系统管理者才能使用；\n  -f：强制执行；\n  -k：设置只有在密码过期失效后，方能更新；\n  -l：锁住密码；\n  -s：列出密码的相关信息，仅有系统管理者才能使用；\n  -u：解开已上锁的帐号。\n\n#### groupadd\n创建一个新的工作组，新工作组的信息将被添加到系统文件中。\n> -g：指定新建工作组的id；\n  -r：创建系统工作组，系统工作组的组ID小于500；\n  -K：覆盖配置文件“/ect/login.defs”；\n  -o：允许添加组ID号不唯一的工作组。\n\n#### groupdel\n删除指定的工作组，本命令要修改的系统文件包括/ect/group和/ect/gshadow。若该群组中仍包括某些用户，则必须先删除这些用户后，方能删除群组。\n\n### 文件权限\n#### chmod\n用来变更文件或目录的权限。在UNIX系统家族里，文件或目录权限的控制分别以读取、写入、执行3种一般权限来区分，另有3种特殊权限可供运用。用户可以使用chmod指令去变更文件与目录的权限，设置方式采用文字或数字代号皆可。符号连接的权限无法变更，如果用户对符号连接修改权限，其改变会作用在被连接的原始文件。\n\n权限范围表示法如下：\n`u` User，即文件或目录的拥有者；\n`g` Group，即文件或目录的所属群组；\n`o` Other，除了文件或目录拥有者或所属群组之外，其他用户皆属于这个范围；\n`a` All，即全部的用户，包含拥有者，所属群组以及其他用户；\n`r` 读取权限，数字代号为“4”;\n`w` 写入权限，数字代号为“2”；\n`x` 执行或切换权限，数字代号为“1”；\n`-` 不具任何权限，数字代号为“0”；\n`s` 特殊功能说明：变更文件或目录的权限。\n\n> -c或——changes：效果类似“-v”参数，但仅回报更改的部分；\n  -f或--quiet或——silent：不显示错误信息；\n  -R或——recursive：递归处理，将指令目录下的所有文件及子目录一并处理；\n  -v或——verbose：显示指令执行过程；\n  --reference=<参考文件或目录>：把指定文件或目录的所属群组全部设成和参考文件或目录的所属群组相同；\n  <权限范围>+<权限设置>：开启权限范围的文件或目录的该选项权限设置；\n  <权限范围>-<权限设置>：关闭权限范围的文件或目录的该选项权限设置；\n  <权限范围>=<权限设置>：指定权限范围的文件或目录的该选项权限设置；\n\n#### chown\n\n#### chgrp\n\n\n### 打包和压缩\n#### gzip\n\n#### tar\n\n#### zip\n\n### yum软件包管理\n> yum install package_name 下载并安装一个rpm包 \n  yum localinstall package_name.rpm 将安装一个rpm包，使用你自己的软件仓库为你解决所有依赖关系 \n  yum update package_name.rpm 更新当前系统中所有安装的rpm包 \n  yum update package_name 更新一个rpm包 \n  yum remove package_name 删除一个rpm包 \n  yum list 列出当前系统中安装的所有包 \n  yum search package_name 在rpm仓库中搜寻软件包 \n  yum clean packages 清理rpm缓存删除下载的包 \n  yum clean headers 删除所有头文件 \n  yum clean all 删除所有缓存的包和头文件 \n","source":"_posts/Linux-commands.md","raw":"---\ntitle: Linux常用命令\ndate: 2018-02-01 20:17:26\nmodified:\ncategories:\n- Linux\ntags:\n- Linux\n---\n\n### 系统信息\n\n#### 显示机器的处理器架构\n> arch\n  uname -m\n\n#### 显示正在使用的内核版本\n> uname -r\n\n#### 显示CPU的信息\n> cat /proc/cpuinfo\n\n#### 显示内存使用\n> cat /proc/meminfo\n\n#### 显示内核的版本\n> cat /proc/version\n\n#### 显示系统日期\n> date\n\n#### 同步时间\n> ntpdate time.ntp.org \n\n### 关机\n#### 关闭系统\n> shutdown -h now\n  init 0\n\n#### 重启\n> shutdown -r now\n  reboot\n\n#### 注销\n> logout\n\n### 文件和目录\n#### cd\n> /home 进入/home目录\n  .. 返回上一级目录\n  \\- 返回上次所在的目录\n\n#### pwd\n显示工作路径\n\n#### ls\n> -F 查看目录中的文件 \n  -l 显示文件和目录的详细资料\n  -a 显示隐藏文件\n\n#### mkdir\n创建目录\n> -Z：设置安全上下文，当使用SELinux时有效；\n  -m<目标属性>或--mode<目标属性>建立目录的同时设置目录的权限；\n  -p或--parents 若所要建立目录的上层目录目前尚未建立，则会一并建立上层目录；\n  --version 显示版本信息。 \n\n#### rm\n> rm -f file1 删除一个叫做 'file1' 的文件' \n  rm dir dir1 删除一个叫做 'dir1' 的目录' \n  rm -rf dir1 删除一个叫做 'dir1' 的目录并同时删除其内容 \n  rm -rf dir1 dir2 同时删除两个目录及它们的内容\n\n#### mv\n> mv dir1 new_dir 重命名/移动 一个目录 \n\n#### cp\n> cp file1 file2 复制一个文件 \n  cp dir/* . 复制一个目录下的所有文件到当前工作目录 \n  cp -a /tmp/dir1 . 复制一个目录到当前工作目录 \n  cp -a dir1 dir2 复制一个目录\n\n#### ln\n\n### 文件搜索\n#### find\n> find / -name file1 从 '/' 开始进入根文件系统搜索文件和目录 \n  find / -user user1 搜索属于用户 'user1' 的文件和目录 \n  find /home/user1 -name \\*.bin 在目录 '/ home/user1' 中搜索带有'.bin' 结尾的文件 \n  find /usr/bin -type f -atime +100 搜索在过去100天内未被使用过的执行文件 \n  find /usr/bin -type f -mtime -10 搜索在10天内被创建或者修改过的文件 \n  find / -name \\*.rpm -exec chmod 755 '{}' \\; 搜索以 '.rpm' 结尾的文件并定义其权限 \n  find / -xdev -name \\*.rpm 搜索以 '.rpm' 结尾的文件，忽略光驱、捷盘等可移动设备\n\n#### locate\n> locate \\*.ps 寻找以 '.ps' 结尾的文件 - 先运行 'updatedb' 命令 \n\n#### whereis\n> whereis halt 显示一个二进制文件、源码或man的位置\n\n#### which\n> which halt 显示一个二进制文件或可执行文件的完整路径\n\n### 挂载文件系统\n#### mount\n\n#### unmount\n\n\n### 磁盘空间\n#### df\n> -a或--all：包含全部的文件系统；\n  --block-size=<区块大小>：以指定的区块大小来显示区块数目；\n  -h或--human-readable：以可读性较高的方式来显示信息；\n  -H或--si：与-h参数相同，但在计算时是以1000 Bytes为换算单位而非1024 Bytes；\n  -i或--inodes：显示inode的信息；\n  -k或--kilobytes：指定区块大小为1024字节；\n  -l或--local：仅显示本地端的文件系统；\n  -m或--megabytes：指定区块大小为1048576字节；\n  --no-sync：在取得磁盘使用信息前，不要执行sync指令，此为预设值；\n  -P或--portability：使用POSIX的输出格式；\n  --sync：在取得磁盘使用信息前，先执行sync指令；\n  -t<文件系统类型>或--type=<文件系统类型>：仅显示指定文件系统类型的磁盘信息；\n  -T或--print-type：显示文件系统的类型；\n  -x<文件系统类型>或--exclude-type=<文件系统类型>：不要显示指定文件系统类型的磁盘信息；\n  --help：显示帮助；\n  --version：显示版本信息。\n\n#### du\n> -a或-all 显示目录中个别文件的大小。\n  -b或-bytes 显示目录或文件大小时，以byte为单位。\n  -c或--total 除了显示个别目录或文件的大小外，同时也显示所有目录或文件的总和。\n  -k或--kilobytes 以KB(1024bytes)为单位输出。\n  -m或--megabytes 以MB为单位输出。\n  -s或--summarize 仅显示总计，只列出最后加总的值。\n  -h或--human-readable 以K，M，G为单位，提高信息的可读性。\n  -x或--one-file-xystem 以一开始处理时的文件系统为准，若遇上其它不同的文件系统目录则略过。\n  -L<符号链接>或--dereference<符号链接> 显示选项中所指定符号链接的源文件大小。\n  -S或--separate-dirs 显示个别目录的大小时，并不含其子目录的大小。\n  -X<文件>或--exclude-from=<文件> 在<文件>指定目录或文件。\n  --exclude=<目录或文件> 略过指定的目录或文件。\n  -D或--dereference-args 显示指定符号链接的源文件大小。\n  -H或--si 与-h参数相同，但是K，M，G是以1000为换算单位。\n  -l或--count-links 重复计算硬件链接的文件。\n\n### 用户和组\n#### useradd\n创建的新的系统用户。使用useradd指令所建立的帐号，实际上是保存在`/etc/passwd`文本文件中。\n> -c<备注>：加上备注文字。备注文字会保存在passwd的备注栏位中；\n  -d<登入目录>：指定用户登入时的启始目录；\n  -D：变更预设值；\n  -e<有效期限>：指定帐号的有效期限；\n  -f<缓冲天数>：指定在密码过期后多少天即关闭该帐号；\n  -g<群组>：指定用户所属的群组；\n  -G<群组>：指定用户所属的附加群组；\n  -m：自动建立用户的登入目录；\n  -M：不要自动建立用户的登入目录；\n  -n：取消建立以用户名称为名的群组；\n  -r：建立系统帐号；\n  -s<shell>：指定用户登入后所使用的shell；\n  -u<uid>：指定用户id。\n  \n#### userdel\n删除给定的用户，以及与用户相关的文件。若不加选项，则仅删除用户帐号，而不删除相关文件。\n> -f：强制删除用户，即使用户当前已登录；\n  -r：删除用户的同时，删除与用户相关的所有文件。\n\n#### passwd\n设置用户的认证信息，包括用户密码、密码过期时间等。\n系统管理者则能用它管理系统用户的密码。只有管理者可以指定用户名称，一般用户只能变更自己的密码。\n> -d：删除密码，仅有系统管理者才能使用；\n  -f：强制执行；\n  -k：设置只有在密码过期失效后，方能更新；\n  -l：锁住密码；\n  -s：列出密码的相关信息，仅有系统管理者才能使用；\n  -u：解开已上锁的帐号。\n\n#### groupadd\n创建一个新的工作组，新工作组的信息将被添加到系统文件中。\n> -g：指定新建工作组的id；\n  -r：创建系统工作组，系统工作组的组ID小于500；\n  -K：覆盖配置文件“/ect/login.defs”；\n  -o：允许添加组ID号不唯一的工作组。\n\n#### groupdel\n删除指定的工作组，本命令要修改的系统文件包括/ect/group和/ect/gshadow。若该群组中仍包括某些用户，则必须先删除这些用户后，方能删除群组。\n\n### 文件权限\n#### chmod\n用来变更文件或目录的权限。在UNIX系统家族里，文件或目录权限的控制分别以读取、写入、执行3种一般权限来区分，另有3种特殊权限可供运用。用户可以使用chmod指令去变更文件与目录的权限，设置方式采用文字或数字代号皆可。符号连接的权限无法变更，如果用户对符号连接修改权限，其改变会作用在被连接的原始文件。\n\n权限范围表示法如下：\n`u` User，即文件或目录的拥有者；\n`g` Group，即文件或目录的所属群组；\n`o` Other，除了文件或目录拥有者或所属群组之外，其他用户皆属于这个范围；\n`a` All，即全部的用户，包含拥有者，所属群组以及其他用户；\n`r` 读取权限，数字代号为“4”;\n`w` 写入权限，数字代号为“2”；\n`x` 执行或切换权限，数字代号为“1”；\n`-` 不具任何权限，数字代号为“0”；\n`s` 特殊功能说明：变更文件或目录的权限。\n\n> -c或——changes：效果类似“-v”参数，但仅回报更改的部分；\n  -f或--quiet或——silent：不显示错误信息；\n  -R或——recursive：递归处理，将指令目录下的所有文件及子目录一并处理；\n  -v或——verbose：显示指令执行过程；\n  --reference=<参考文件或目录>：把指定文件或目录的所属群组全部设成和参考文件或目录的所属群组相同；\n  <权限范围>+<权限设置>：开启权限范围的文件或目录的该选项权限设置；\n  <权限范围>-<权限设置>：关闭权限范围的文件或目录的该选项权限设置；\n  <权限范围>=<权限设置>：指定权限范围的文件或目录的该选项权限设置；\n\n#### chown\n\n#### chgrp\n\n\n### 打包和压缩\n#### gzip\n\n#### tar\n\n#### zip\n\n### yum软件包管理\n> yum install package_name 下载并安装一个rpm包 \n  yum localinstall package_name.rpm 将安装一个rpm包，使用你自己的软件仓库为你解决所有依赖关系 \n  yum update package_name.rpm 更新当前系统中所有安装的rpm包 \n  yum update package_name 更新一个rpm包 \n  yum remove package_name 删除一个rpm包 \n  yum list 列出当前系统中安装的所有包 \n  yum search package_name 在rpm仓库中搜寻软件包 \n  yum clean packages 清理rpm缓存删除下载的包 \n  yum clean headers 删除所有头文件 \n  yum clean all 删除所有缓存的包和头文件 \n","slug":"Linux-commands","published":1,"updated":"2018-02-02T06:08:36.971Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjir2nrkx00029xasxdimtfnc","content":"<h3 id=\"系统信息\"><a href=\"#系统信息\" class=\"headerlink\" title=\"系统信息\"></a>系统信息</h3><h4 id=\"显示机器的处理器架构\"><a href=\"#显示机器的处理器架构\" class=\"headerlink\" title=\"显示机器的处理器架构\"></a>显示机器的处理器架构</h4><blockquote>\n<p>arch<br>  uname -m</p>\n</blockquote>\n<h4 id=\"显示正在使用的内核版本\"><a href=\"#显示正在使用的内核版本\" class=\"headerlink\" title=\"显示正在使用的内核版本\"></a>显示正在使用的内核版本</h4><blockquote>\n<p>uname -r</p>\n</blockquote>\n<h4 id=\"显示CPU的信息\"><a href=\"#显示CPU的信息\" class=\"headerlink\" title=\"显示CPU的信息\"></a>显示CPU的信息</h4><blockquote>\n<p>cat /proc/cpuinfo</p>\n</blockquote>\n<h4 id=\"显示内存使用\"><a href=\"#显示内存使用\" class=\"headerlink\" title=\"显示内存使用\"></a>显示内存使用</h4><blockquote>\n<p>cat /proc/meminfo</p>\n</blockquote>\n<h4 id=\"显示内核的版本\"><a href=\"#显示内核的版本\" class=\"headerlink\" title=\"显示内核的版本\"></a>显示内核的版本</h4><blockquote>\n<p>cat /proc/version</p>\n</blockquote>\n<h4 id=\"显示系统日期\"><a href=\"#显示系统日期\" class=\"headerlink\" title=\"显示系统日期\"></a>显示系统日期</h4><blockquote>\n<p>date</p>\n</blockquote>\n<h4 id=\"同步时间\"><a href=\"#同步时间\" class=\"headerlink\" title=\"同步时间\"></a>同步时间</h4><blockquote>\n<p>ntpdate time.ntp.org </p>\n</blockquote>\n<h3 id=\"关机\"><a href=\"#关机\" class=\"headerlink\" title=\"关机\"></a>关机</h3><h4 id=\"关闭系统\"><a href=\"#关闭系统\" class=\"headerlink\" title=\"关闭系统\"></a>关闭系统</h4><blockquote>\n<p>shutdown -h now<br>  init 0</p>\n</blockquote>\n<h4 id=\"重启\"><a href=\"#重启\" class=\"headerlink\" title=\"重启\"></a>重启</h4><blockquote>\n<p>shutdown -r now<br>  reboot</p>\n</blockquote>\n<h4 id=\"注销\"><a href=\"#注销\" class=\"headerlink\" title=\"注销\"></a>注销</h4><blockquote>\n<p>logout</p>\n</blockquote>\n<h3 id=\"文件和目录\"><a href=\"#文件和目录\" class=\"headerlink\" title=\"文件和目录\"></a>文件和目录</h3><h4 id=\"cd\"><a href=\"#cd\" class=\"headerlink\" title=\"cd\"></a>cd</h4><blockquote>\n<p>/home 进入/home目录<br>  .. 返回上一级目录<br>  - 返回上次所在的目录</p>\n</blockquote>\n<h4 id=\"pwd\"><a href=\"#pwd\" class=\"headerlink\" title=\"pwd\"></a>pwd</h4><p>显示工作路径</p>\n<h4 id=\"ls\"><a href=\"#ls\" class=\"headerlink\" title=\"ls\"></a>ls</h4><blockquote>\n<p>-F 查看目录中的文件<br>  -l 显示文件和目录的详细资料<br>  -a 显示隐藏文件</p>\n</blockquote>\n<h4 id=\"mkdir\"><a href=\"#mkdir\" class=\"headerlink\" title=\"mkdir\"></a>mkdir</h4><p>创建目录</p>\n<blockquote>\n<p>-Z：设置安全上下文，当使用SELinux时有效；<br>  -m&lt;目标属性&gt;或–mode&lt;目标属性&gt;建立目录的同时设置目录的权限；<br>  -p或–parents 若所要建立目录的上层目录目前尚未建立，则会一并建立上层目录；<br>  –version 显示版本信息。 </p>\n</blockquote>\n<h4 id=\"rm\"><a href=\"#rm\" class=\"headerlink\" title=\"rm\"></a>rm</h4><blockquote>\n<p>rm -f file1 删除一个叫做 ‘file1’ 的文件’<br>  rm dir dir1 删除一个叫做 ‘dir1’ 的目录’<br>  rm -rf dir1 删除一个叫做 ‘dir1’ 的目录并同时删除其内容<br>  rm -rf dir1 dir2 同时删除两个目录及它们的内容</p>\n</blockquote>\n<h4 id=\"mv\"><a href=\"#mv\" class=\"headerlink\" title=\"mv\"></a>mv</h4><blockquote>\n<p>mv dir1 new_dir 重命名/移动 一个目录 </p>\n</blockquote>\n<h4 id=\"cp\"><a href=\"#cp\" class=\"headerlink\" title=\"cp\"></a>cp</h4><blockquote>\n<p>cp file1 file2 复制一个文件<br>  cp dir/* . 复制一个目录下的所有文件到当前工作目录<br>  cp -a /tmp/dir1 . 复制一个目录到当前工作目录<br>  cp -a dir1 dir2 复制一个目录</p>\n</blockquote>\n<h4 id=\"ln\"><a href=\"#ln\" class=\"headerlink\" title=\"ln\"></a>ln</h4><h3 id=\"文件搜索\"><a href=\"#文件搜索\" class=\"headerlink\" title=\"文件搜索\"></a>文件搜索</h3><h4 id=\"find\"><a href=\"#find\" class=\"headerlink\" title=\"find\"></a>find</h4><blockquote>\n<p>find / -name file1 从 ‘/‘ 开始进入根文件系统搜索文件和目录<br>  find / -user user1 搜索属于用户 ‘user1’ 的文件和目录<br>  find /home/user1 -name *.bin 在目录 ‘/ home/user1’ 中搜索带有’.bin’ 结尾的文件<br>  find /usr/bin -type f -atime +100 搜索在过去100天内未被使用过的执行文件<br>  find /usr/bin -type f -mtime -10 搜索在10天内被创建或者修改过的文件<br>  find / -name *.rpm -exec chmod 755 ‘{}’ \\; 搜索以 ‘.rpm’ 结尾的文件并定义其权限<br>  find / -xdev -name *.rpm 搜索以 ‘.rpm’ 结尾的文件，忽略光驱、捷盘等可移动设备</p>\n</blockquote>\n<h4 id=\"locate\"><a href=\"#locate\" class=\"headerlink\" title=\"locate\"></a>locate</h4><blockquote>\n<p>locate *.ps 寻找以 ‘.ps’ 结尾的文件 - 先运行 ‘updatedb’ 命令 </p>\n</blockquote>\n<h4 id=\"whereis\"><a href=\"#whereis\" class=\"headerlink\" title=\"whereis\"></a>whereis</h4><blockquote>\n<p>whereis halt 显示一个二进制文件、源码或man的位置</p>\n</blockquote>\n<h4 id=\"which\"><a href=\"#which\" class=\"headerlink\" title=\"which\"></a>which</h4><blockquote>\n<p>which halt 显示一个二进制文件或可执行文件的完整路径</p>\n</blockquote>\n<h3 id=\"挂载文件系统\"><a href=\"#挂载文件系统\" class=\"headerlink\" title=\"挂载文件系统\"></a>挂载文件系统</h3><h4 id=\"mount\"><a href=\"#mount\" class=\"headerlink\" title=\"mount\"></a>mount</h4><h4 id=\"unmount\"><a href=\"#unmount\" class=\"headerlink\" title=\"unmount\"></a>unmount</h4><h3 id=\"磁盘空间\"><a href=\"#磁盘空间\" class=\"headerlink\" title=\"磁盘空间\"></a>磁盘空间</h3><h4 id=\"df\"><a href=\"#df\" class=\"headerlink\" title=\"df\"></a>df</h4><blockquote>\n<p>-a或–all：包含全部的文件系统；<br>  –block-size=&lt;区块大小&gt;：以指定的区块大小来显示区块数目；<br>  -h或–human-readable：以可读性较高的方式来显示信息；<br>  -H或–si：与-h参数相同，但在计算时是以1000 Bytes为换算单位而非1024 Bytes；<br>  -i或–inodes：显示inode的信息；<br>  -k或–kilobytes：指定区块大小为1024字节；<br>  -l或–local：仅显示本地端的文件系统；<br>  -m或–megabytes：指定区块大小为1048576字节；<br>  –no-sync：在取得磁盘使用信息前，不要执行sync指令，此为预设值；<br>  -P或–portability：使用POSIX的输出格式；<br>  –sync：在取得磁盘使用信息前，先执行sync指令；<br>  -t&lt;文件系统类型&gt;或–type=&lt;文件系统类型&gt;：仅显示指定文件系统类型的磁盘信息；<br>  -T或–print-type：显示文件系统的类型；<br>  -x&lt;文件系统类型&gt;或–exclude-type=&lt;文件系统类型&gt;：不要显示指定文件系统类型的磁盘信息；<br>  –help：显示帮助；<br>  –version：显示版本信息。</p>\n</blockquote>\n<h4 id=\"du\"><a href=\"#du\" class=\"headerlink\" title=\"du\"></a>du</h4><blockquote>\n<p>-a或-all 显示目录中个别文件的大小。<br>  -b或-bytes 显示目录或文件大小时，以byte为单位。<br>  -c或–total 除了显示个别目录或文件的大小外，同时也显示所有目录或文件的总和。<br>  -k或–kilobytes 以KB(1024bytes)为单位输出。<br>  -m或–megabytes 以MB为单位输出。<br>  -s或–summarize 仅显示总计，只列出最后加总的值。<br>  -h或–human-readable 以K，M，G为单位，提高信息的可读性。<br>  -x或–one-file-xystem 以一开始处理时的文件系统为准，若遇上其它不同的文件系统目录则略过。<br>  -L&lt;符号链接&gt;或–dereference&lt;符号链接&gt; 显示选项中所指定符号链接的源文件大小。<br>  -S或–separate-dirs 显示个别目录的大小时，并不含其子目录的大小。<br>  -X&lt;文件&gt;或–exclude-from=&lt;文件&gt; 在&lt;文件&gt;指定目录或文件。<br>  –exclude=&lt;目录或文件&gt; 略过指定的目录或文件。<br>  -D或–dereference-args 显示指定符号链接的源文件大小。<br>  -H或–si 与-h参数相同，但是K，M，G是以1000为换算单位。<br>  -l或–count-links 重复计算硬件链接的文件。</p>\n</blockquote>\n<h3 id=\"用户和组\"><a href=\"#用户和组\" class=\"headerlink\" title=\"用户和组\"></a>用户和组</h3><h4 id=\"useradd\"><a href=\"#useradd\" class=\"headerlink\" title=\"useradd\"></a>useradd</h4><p>创建的新的系统用户。使用useradd指令所建立的帐号，实际上是保存在<code>/etc/passwd</code>文本文件中。</p>\n<blockquote>\n<p>-c&lt;备注&gt;：加上备注文字。备注文字会保存在passwd的备注栏位中；<br>  -d&lt;登入目录&gt;：指定用户登入时的启始目录；<br>  -D：变更预设值；<br>  -e&lt;有效期限&gt;：指定帐号的有效期限；<br>  -f&lt;缓冲天数&gt;：指定在密码过期后多少天即关闭该帐号；<br>  -g&lt;群组&gt;：指定用户所属的群组；<br>  -G&lt;群组&gt;：指定用户所属的附加群组；<br>  -m：自动建立用户的登入目录；<br>  -M：不要自动建立用户的登入目录；<br>  -n：取消建立以用户名称为名的群组；<br>  -r：建立系统帐号；<br>  -s<shell>：指定用户登入后所使用的shell；<br>  -u<uid>：指定用户id。</uid></shell></p>\n</blockquote>\n<h4 id=\"userdel\"><a href=\"#userdel\" class=\"headerlink\" title=\"userdel\"></a>userdel</h4><p>删除给定的用户，以及与用户相关的文件。若不加选项，则仅删除用户帐号，而不删除相关文件。</p>\n<blockquote>\n<p>-f：强制删除用户，即使用户当前已登录；<br>  -r：删除用户的同时，删除与用户相关的所有文件。</p>\n</blockquote>\n<h4 id=\"passwd\"><a href=\"#passwd\" class=\"headerlink\" title=\"passwd\"></a>passwd</h4><p>设置用户的认证信息，包括用户密码、密码过期时间等。<br>系统管理者则能用它管理系统用户的密码。只有管理者可以指定用户名称，一般用户只能变更自己的密码。</p>\n<blockquote>\n<p>-d：删除密码，仅有系统管理者才能使用；<br>  -f：强制执行；<br>  -k：设置只有在密码过期失效后，方能更新；<br>  -l：锁住密码；<br>  -s：列出密码的相关信息，仅有系统管理者才能使用；<br>  -u：解开已上锁的帐号。</p>\n</blockquote>\n<h4 id=\"groupadd\"><a href=\"#groupadd\" class=\"headerlink\" title=\"groupadd\"></a>groupadd</h4><p>创建一个新的工作组，新工作组的信息将被添加到系统文件中。</p>\n<blockquote>\n<p>-g：指定新建工作组的id；<br>  -r：创建系统工作组，系统工作组的组ID小于500；<br>  -K：覆盖配置文件“/ect/login.defs”；<br>  -o：允许添加组ID号不唯一的工作组。</p>\n</blockquote>\n<h4 id=\"groupdel\"><a href=\"#groupdel\" class=\"headerlink\" title=\"groupdel\"></a>groupdel</h4><p>删除指定的工作组，本命令要修改的系统文件包括/ect/group和/ect/gshadow。若该群组中仍包括某些用户，则必须先删除这些用户后，方能删除群组。</p>\n<h3 id=\"文件权限\"><a href=\"#文件权限\" class=\"headerlink\" title=\"文件权限\"></a>文件权限</h3><h4 id=\"chmod\"><a href=\"#chmod\" class=\"headerlink\" title=\"chmod\"></a>chmod</h4><p>用来变更文件或目录的权限。在UNIX系统家族里，文件或目录权限的控制分别以读取、写入、执行3种一般权限来区分，另有3种特殊权限可供运用。用户可以使用chmod指令去变更文件与目录的权限，设置方式采用文字或数字代号皆可。符号连接的权限无法变更，如果用户对符号连接修改权限，其改变会作用在被连接的原始文件。</p>\n<p>权限范围表示法如下：<br><code>u</code> User，即文件或目录的拥有者；<br><code>g</code> Group，即文件或目录的所属群组；<br><code>o</code> Other，除了文件或目录拥有者或所属群组之外，其他用户皆属于这个范围；<br><code>a</code> All，即全部的用户，包含拥有者，所属群组以及其他用户；<br><code>r</code> 读取权限，数字代号为“4”;<br><code>w</code> 写入权限，数字代号为“2”；<br><code>x</code> 执行或切换权限，数字代号为“1”；<br><code>-</code> 不具任何权限，数字代号为“0”；<br><code>s</code> 特殊功能说明：变更文件或目录的权限。</p>\n<blockquote>\n<p>-c或——changes：效果类似“-v”参数，但仅回报更改的部分；<br>  -f或–quiet或——silent：不显示错误信息；<br>  -R或——recursive：递归处理，将指令目录下的所有文件及子目录一并处理；<br>  -v或——verbose：显示指令执行过程；<br>  –reference=&lt;参考文件或目录&gt;：把指定文件或目录的所属群组全部设成和参考文件或目录的所属群组相同；<br>  &lt;权限范围&gt;+&lt;权限设置&gt;：开启权限范围的文件或目录的该选项权限设置；<br>  &lt;权限范围&gt;-&lt;权限设置&gt;：关闭权限范围的文件或目录的该选项权限设置；<br>  &lt;权限范围&gt;=&lt;权限设置&gt;：指定权限范围的文件或目录的该选项权限设置；</p>\n</blockquote>\n<h4 id=\"chown\"><a href=\"#chown\" class=\"headerlink\" title=\"chown\"></a>chown</h4><h4 id=\"chgrp\"><a href=\"#chgrp\" class=\"headerlink\" title=\"chgrp\"></a>chgrp</h4><h3 id=\"打包和压缩\"><a href=\"#打包和压缩\" class=\"headerlink\" title=\"打包和压缩\"></a>打包和压缩</h3><h4 id=\"gzip\"><a href=\"#gzip\" class=\"headerlink\" title=\"gzip\"></a>gzip</h4><h4 id=\"tar\"><a href=\"#tar\" class=\"headerlink\" title=\"tar\"></a>tar</h4><h4 id=\"zip\"><a href=\"#zip\" class=\"headerlink\" title=\"zip\"></a>zip</h4><h3 id=\"yum软件包管理\"><a href=\"#yum软件包管理\" class=\"headerlink\" title=\"yum软件包管理\"></a>yum软件包管理</h3><blockquote>\n<p>yum install package_name 下载并安装一个rpm包<br>  yum localinstall package_name.rpm 将安装一个rpm包，使用你自己的软件仓库为你解决所有依赖关系<br>  yum update package_name.rpm 更新当前系统中所有安装的rpm包<br>  yum update package_name 更新一个rpm包<br>  yum remove package_name 删除一个rpm包<br>  yum list 列出当前系统中安装的所有包<br>  yum search package_name 在rpm仓库中搜寻软件包<br>  yum clean packages 清理rpm缓存删除下载的包<br>  yum clean headers 删除所有头文件<br>  yum clean all 删除所有缓存的包和头文件 </p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"系统信息\"><a href=\"#系统信息\" class=\"headerlink\" title=\"系统信息\"></a>系统信息</h3><h4 id=\"显示机器的处理器架构\"><a href=\"#显示机器的处理器架构\" class=\"headerlink\" title=\"显示机器的处理器架构\"></a>显示机器的处理器架构</h4><blockquote>\n<p>arch<br>  uname -m</p>\n</blockquote>\n<h4 id=\"显示正在使用的内核版本\"><a href=\"#显示正在使用的内核版本\" class=\"headerlink\" title=\"显示正在使用的内核版本\"></a>显示正在使用的内核版本</h4><blockquote>\n<p>uname -r</p>\n</blockquote>\n<h4 id=\"显示CPU的信息\"><a href=\"#显示CPU的信息\" class=\"headerlink\" title=\"显示CPU的信息\"></a>显示CPU的信息</h4><blockquote>\n<p>cat /proc/cpuinfo</p>\n</blockquote>\n<h4 id=\"显示内存使用\"><a href=\"#显示内存使用\" class=\"headerlink\" title=\"显示内存使用\"></a>显示内存使用</h4><blockquote>\n<p>cat /proc/meminfo</p>\n</blockquote>\n<h4 id=\"显示内核的版本\"><a href=\"#显示内核的版本\" class=\"headerlink\" title=\"显示内核的版本\"></a>显示内核的版本</h4><blockquote>\n<p>cat /proc/version</p>\n</blockquote>\n<h4 id=\"显示系统日期\"><a href=\"#显示系统日期\" class=\"headerlink\" title=\"显示系统日期\"></a>显示系统日期</h4><blockquote>\n<p>date</p>\n</blockquote>\n<h4 id=\"同步时间\"><a href=\"#同步时间\" class=\"headerlink\" title=\"同步时间\"></a>同步时间</h4><blockquote>\n<p>ntpdate time.ntp.org </p>\n</blockquote>\n<h3 id=\"关机\"><a href=\"#关机\" class=\"headerlink\" title=\"关机\"></a>关机</h3><h4 id=\"关闭系统\"><a href=\"#关闭系统\" class=\"headerlink\" title=\"关闭系统\"></a>关闭系统</h4><blockquote>\n<p>shutdown -h now<br>  init 0</p>\n</blockquote>\n<h4 id=\"重启\"><a href=\"#重启\" class=\"headerlink\" title=\"重启\"></a>重启</h4><blockquote>\n<p>shutdown -r now<br>  reboot</p>\n</blockquote>\n<h4 id=\"注销\"><a href=\"#注销\" class=\"headerlink\" title=\"注销\"></a>注销</h4><blockquote>\n<p>logout</p>\n</blockquote>\n<h3 id=\"文件和目录\"><a href=\"#文件和目录\" class=\"headerlink\" title=\"文件和目录\"></a>文件和目录</h3><h4 id=\"cd\"><a href=\"#cd\" class=\"headerlink\" title=\"cd\"></a>cd</h4><blockquote>\n<p>/home 进入/home目录<br>  .. 返回上一级目录<br>  - 返回上次所在的目录</p>\n</blockquote>\n<h4 id=\"pwd\"><a href=\"#pwd\" class=\"headerlink\" title=\"pwd\"></a>pwd</h4><p>显示工作路径</p>\n<h4 id=\"ls\"><a href=\"#ls\" class=\"headerlink\" title=\"ls\"></a>ls</h4><blockquote>\n<p>-F 查看目录中的文件<br>  -l 显示文件和目录的详细资料<br>  -a 显示隐藏文件</p>\n</blockquote>\n<h4 id=\"mkdir\"><a href=\"#mkdir\" class=\"headerlink\" title=\"mkdir\"></a>mkdir</h4><p>创建目录</p>\n<blockquote>\n<p>-Z：设置安全上下文，当使用SELinux时有效；<br>  -m&lt;目标属性&gt;或–mode&lt;目标属性&gt;建立目录的同时设置目录的权限；<br>  -p或–parents 若所要建立目录的上层目录目前尚未建立，则会一并建立上层目录；<br>  –version 显示版本信息。 </p>\n</blockquote>\n<h4 id=\"rm\"><a href=\"#rm\" class=\"headerlink\" title=\"rm\"></a>rm</h4><blockquote>\n<p>rm -f file1 删除一个叫做 ‘file1’ 的文件’<br>  rm dir dir1 删除一个叫做 ‘dir1’ 的目录’<br>  rm -rf dir1 删除一个叫做 ‘dir1’ 的目录并同时删除其内容<br>  rm -rf dir1 dir2 同时删除两个目录及它们的内容</p>\n</blockquote>\n<h4 id=\"mv\"><a href=\"#mv\" class=\"headerlink\" title=\"mv\"></a>mv</h4><blockquote>\n<p>mv dir1 new_dir 重命名/移动 一个目录 </p>\n</blockquote>\n<h4 id=\"cp\"><a href=\"#cp\" class=\"headerlink\" title=\"cp\"></a>cp</h4><blockquote>\n<p>cp file1 file2 复制一个文件<br>  cp dir/* . 复制一个目录下的所有文件到当前工作目录<br>  cp -a /tmp/dir1 . 复制一个目录到当前工作目录<br>  cp -a dir1 dir2 复制一个目录</p>\n</blockquote>\n<h4 id=\"ln\"><a href=\"#ln\" class=\"headerlink\" title=\"ln\"></a>ln</h4><h3 id=\"文件搜索\"><a href=\"#文件搜索\" class=\"headerlink\" title=\"文件搜索\"></a>文件搜索</h3><h4 id=\"find\"><a href=\"#find\" class=\"headerlink\" title=\"find\"></a>find</h4><blockquote>\n<p>find / -name file1 从 ‘/‘ 开始进入根文件系统搜索文件和目录<br>  find / -user user1 搜索属于用户 ‘user1’ 的文件和目录<br>  find /home/user1 -name *.bin 在目录 ‘/ home/user1’ 中搜索带有’.bin’ 结尾的文件<br>  find /usr/bin -type f -atime +100 搜索在过去100天内未被使用过的执行文件<br>  find /usr/bin -type f -mtime -10 搜索在10天内被创建或者修改过的文件<br>  find / -name *.rpm -exec chmod 755 ‘{}’ \\; 搜索以 ‘.rpm’ 结尾的文件并定义其权限<br>  find / -xdev -name *.rpm 搜索以 ‘.rpm’ 结尾的文件，忽略光驱、捷盘等可移动设备</p>\n</blockquote>\n<h4 id=\"locate\"><a href=\"#locate\" class=\"headerlink\" title=\"locate\"></a>locate</h4><blockquote>\n<p>locate *.ps 寻找以 ‘.ps’ 结尾的文件 - 先运行 ‘updatedb’ 命令 </p>\n</blockquote>\n<h4 id=\"whereis\"><a href=\"#whereis\" class=\"headerlink\" title=\"whereis\"></a>whereis</h4><blockquote>\n<p>whereis halt 显示一个二进制文件、源码或man的位置</p>\n</blockquote>\n<h4 id=\"which\"><a href=\"#which\" class=\"headerlink\" title=\"which\"></a>which</h4><blockquote>\n<p>which halt 显示一个二进制文件或可执行文件的完整路径</p>\n</blockquote>\n<h3 id=\"挂载文件系统\"><a href=\"#挂载文件系统\" class=\"headerlink\" title=\"挂载文件系统\"></a>挂载文件系统</h3><h4 id=\"mount\"><a href=\"#mount\" class=\"headerlink\" title=\"mount\"></a>mount</h4><h4 id=\"unmount\"><a href=\"#unmount\" class=\"headerlink\" title=\"unmount\"></a>unmount</h4><h3 id=\"磁盘空间\"><a href=\"#磁盘空间\" class=\"headerlink\" title=\"磁盘空间\"></a>磁盘空间</h3><h4 id=\"df\"><a href=\"#df\" class=\"headerlink\" title=\"df\"></a>df</h4><blockquote>\n<p>-a或–all：包含全部的文件系统；<br>  –block-size=&lt;区块大小&gt;：以指定的区块大小来显示区块数目；<br>  -h或–human-readable：以可读性较高的方式来显示信息；<br>  -H或–si：与-h参数相同，但在计算时是以1000 Bytes为换算单位而非1024 Bytes；<br>  -i或–inodes：显示inode的信息；<br>  -k或–kilobytes：指定区块大小为1024字节；<br>  -l或–local：仅显示本地端的文件系统；<br>  -m或–megabytes：指定区块大小为1048576字节；<br>  –no-sync：在取得磁盘使用信息前，不要执行sync指令，此为预设值；<br>  -P或–portability：使用POSIX的输出格式；<br>  –sync：在取得磁盘使用信息前，先执行sync指令；<br>  -t&lt;文件系统类型&gt;或–type=&lt;文件系统类型&gt;：仅显示指定文件系统类型的磁盘信息；<br>  -T或–print-type：显示文件系统的类型；<br>  -x&lt;文件系统类型&gt;或–exclude-type=&lt;文件系统类型&gt;：不要显示指定文件系统类型的磁盘信息；<br>  –help：显示帮助；<br>  –version：显示版本信息。</p>\n</blockquote>\n<h4 id=\"du\"><a href=\"#du\" class=\"headerlink\" title=\"du\"></a>du</h4><blockquote>\n<p>-a或-all 显示目录中个别文件的大小。<br>  -b或-bytes 显示目录或文件大小时，以byte为单位。<br>  -c或–total 除了显示个别目录或文件的大小外，同时也显示所有目录或文件的总和。<br>  -k或–kilobytes 以KB(1024bytes)为单位输出。<br>  -m或–megabytes 以MB为单位输出。<br>  -s或–summarize 仅显示总计，只列出最后加总的值。<br>  -h或–human-readable 以K，M，G为单位，提高信息的可读性。<br>  -x或–one-file-xystem 以一开始处理时的文件系统为准，若遇上其它不同的文件系统目录则略过。<br>  -L&lt;符号链接&gt;或–dereference&lt;符号链接&gt; 显示选项中所指定符号链接的源文件大小。<br>  -S或–separate-dirs 显示个别目录的大小时，并不含其子目录的大小。<br>  -X&lt;文件&gt;或–exclude-from=&lt;文件&gt; 在&lt;文件&gt;指定目录或文件。<br>  –exclude=&lt;目录或文件&gt; 略过指定的目录或文件。<br>  -D或–dereference-args 显示指定符号链接的源文件大小。<br>  -H或–si 与-h参数相同，但是K，M，G是以1000为换算单位。<br>  -l或–count-links 重复计算硬件链接的文件。</p>\n</blockquote>\n<h3 id=\"用户和组\"><a href=\"#用户和组\" class=\"headerlink\" title=\"用户和组\"></a>用户和组</h3><h4 id=\"useradd\"><a href=\"#useradd\" class=\"headerlink\" title=\"useradd\"></a>useradd</h4><p>创建的新的系统用户。使用useradd指令所建立的帐号，实际上是保存在<code>/etc/passwd</code>文本文件中。</p>\n<blockquote>\n<p>-c&lt;备注&gt;：加上备注文字。备注文字会保存在passwd的备注栏位中；<br>  -d&lt;登入目录&gt;：指定用户登入时的启始目录；<br>  -D：变更预设值；<br>  -e&lt;有效期限&gt;：指定帐号的有效期限；<br>  -f&lt;缓冲天数&gt;：指定在密码过期后多少天即关闭该帐号；<br>  -g&lt;群组&gt;：指定用户所属的群组；<br>  -G&lt;群组&gt;：指定用户所属的附加群组；<br>  -m：自动建立用户的登入目录；<br>  -M：不要自动建立用户的登入目录；<br>  -n：取消建立以用户名称为名的群组；<br>  -r：建立系统帐号；<br>  -s<shell>：指定用户登入后所使用的shell；<br>  -u<uid>：指定用户id。</uid></shell></p>\n</blockquote>\n<h4 id=\"userdel\"><a href=\"#userdel\" class=\"headerlink\" title=\"userdel\"></a>userdel</h4><p>删除给定的用户，以及与用户相关的文件。若不加选项，则仅删除用户帐号，而不删除相关文件。</p>\n<blockquote>\n<p>-f：强制删除用户，即使用户当前已登录；<br>  -r：删除用户的同时，删除与用户相关的所有文件。</p>\n</blockquote>\n<h4 id=\"passwd\"><a href=\"#passwd\" class=\"headerlink\" title=\"passwd\"></a>passwd</h4><p>设置用户的认证信息，包括用户密码、密码过期时间等。<br>系统管理者则能用它管理系统用户的密码。只有管理者可以指定用户名称，一般用户只能变更自己的密码。</p>\n<blockquote>\n<p>-d：删除密码，仅有系统管理者才能使用；<br>  -f：强制执行；<br>  -k：设置只有在密码过期失效后，方能更新；<br>  -l：锁住密码；<br>  -s：列出密码的相关信息，仅有系统管理者才能使用；<br>  -u：解开已上锁的帐号。</p>\n</blockquote>\n<h4 id=\"groupadd\"><a href=\"#groupadd\" class=\"headerlink\" title=\"groupadd\"></a>groupadd</h4><p>创建一个新的工作组，新工作组的信息将被添加到系统文件中。</p>\n<blockquote>\n<p>-g：指定新建工作组的id；<br>  -r：创建系统工作组，系统工作组的组ID小于500；<br>  -K：覆盖配置文件“/ect/login.defs”；<br>  -o：允许添加组ID号不唯一的工作组。</p>\n</blockquote>\n<h4 id=\"groupdel\"><a href=\"#groupdel\" class=\"headerlink\" title=\"groupdel\"></a>groupdel</h4><p>删除指定的工作组，本命令要修改的系统文件包括/ect/group和/ect/gshadow。若该群组中仍包括某些用户，则必须先删除这些用户后，方能删除群组。</p>\n<h3 id=\"文件权限\"><a href=\"#文件权限\" class=\"headerlink\" title=\"文件权限\"></a>文件权限</h3><h4 id=\"chmod\"><a href=\"#chmod\" class=\"headerlink\" title=\"chmod\"></a>chmod</h4><p>用来变更文件或目录的权限。在UNIX系统家族里，文件或目录权限的控制分别以读取、写入、执行3种一般权限来区分，另有3种特殊权限可供运用。用户可以使用chmod指令去变更文件与目录的权限，设置方式采用文字或数字代号皆可。符号连接的权限无法变更，如果用户对符号连接修改权限，其改变会作用在被连接的原始文件。</p>\n<p>权限范围表示法如下：<br><code>u</code> User，即文件或目录的拥有者；<br><code>g</code> Group，即文件或目录的所属群组；<br><code>o</code> Other，除了文件或目录拥有者或所属群组之外，其他用户皆属于这个范围；<br><code>a</code> All，即全部的用户，包含拥有者，所属群组以及其他用户；<br><code>r</code> 读取权限，数字代号为“4”;<br><code>w</code> 写入权限，数字代号为“2”；<br><code>x</code> 执行或切换权限，数字代号为“1”；<br><code>-</code> 不具任何权限，数字代号为“0”；<br><code>s</code> 特殊功能说明：变更文件或目录的权限。</p>\n<blockquote>\n<p>-c或——changes：效果类似“-v”参数，但仅回报更改的部分；<br>  -f或–quiet或——silent：不显示错误信息；<br>  -R或——recursive：递归处理，将指令目录下的所有文件及子目录一并处理；<br>  -v或——verbose：显示指令执行过程；<br>  –reference=&lt;参考文件或目录&gt;：把指定文件或目录的所属群组全部设成和参考文件或目录的所属群组相同；<br>  &lt;权限范围&gt;+&lt;权限设置&gt;：开启权限范围的文件或目录的该选项权限设置；<br>  &lt;权限范围&gt;-&lt;权限设置&gt;：关闭权限范围的文件或目录的该选项权限设置；<br>  &lt;权限范围&gt;=&lt;权限设置&gt;：指定权限范围的文件或目录的该选项权限设置；</p>\n</blockquote>\n<h4 id=\"chown\"><a href=\"#chown\" class=\"headerlink\" title=\"chown\"></a>chown</h4><h4 id=\"chgrp\"><a href=\"#chgrp\" class=\"headerlink\" title=\"chgrp\"></a>chgrp</h4><h3 id=\"打包和压缩\"><a href=\"#打包和压缩\" class=\"headerlink\" title=\"打包和压缩\"></a>打包和压缩</h3><h4 id=\"gzip\"><a href=\"#gzip\" class=\"headerlink\" title=\"gzip\"></a>gzip</h4><h4 id=\"tar\"><a href=\"#tar\" class=\"headerlink\" title=\"tar\"></a>tar</h4><h4 id=\"zip\"><a href=\"#zip\" class=\"headerlink\" title=\"zip\"></a>zip</h4><h3 id=\"yum软件包管理\"><a href=\"#yum软件包管理\" class=\"headerlink\" title=\"yum软件包管理\"></a>yum软件包管理</h3><blockquote>\n<p>yum install package_name 下载并安装一个rpm包<br>  yum localinstall package_name.rpm 将安装一个rpm包，使用你自己的软件仓库为你解决所有依赖关系<br>  yum update package_name.rpm 更新当前系统中所有安装的rpm包<br>  yum update package_name 更新一个rpm包<br>  yum remove package_name 删除一个rpm包<br>  yum list 列出当前系统中安装的所有包<br>  yum search package_name 在rpm仓库中搜寻软件包<br>  yum clean packages 清理rpm缓存删除下载的包<br>  yum clean headers 删除所有头文件<br>  yum clean all 删除所有缓存的包和头文件 </p>\n</blockquote>\n"},{"title":"Linux之grep详解","date":"2018-02-03T09:41:42.000Z","modified":null,"_content":"\ngrep（global search regular expression(RE) and print out the line）是一种强大的文本搜索工具，它能使用正则表达式搜索文本，并把匹配的行打印出来。\n\n#### 选项\n\n> -a 不要忽略二进制数据。\n  -A<显示列数> 除了显示符合范本样式的那一行之外，并显示该行之后的内容。\n  -b 在显示符合范本样式的那一行之外，并显示该行之前的内容。\n  -c 计算符合范本样式的列数。\n  -C<显示列数>或-<显示列数>  除了显示符合范本样式的那一列之外，并显示该列之前后的内容。\n  -d<进行动作> 当指定要查找的是目录而非文件时，必须使用这项参数，否则grep命令将回报信息并停止动作。\n  -e<范本样式> 指定字符串作为查找文件内容的范本样式。\n  -E 将范本样式为延伸的普通表示法来使用，意味着使用能使用扩展正则表达式。\n  -f<范本文件> 指定范本文件，其内容有一个或多个范本样式，让grep查找符合范本条件的文件内容，格式为每一列的范本样式。\n  -F 将范本样式视为固定字符串的列表。\n  -G 将范本样式视为普通的表示法来使用。\n  -h 在显示符合范本样式的那一列之前，不标示该列所属的文件名称。\n  -H 在显示符合范本样式的那一列之前，标示该列的文件名称。\n  -i 忽略字符大小写的差别。\n  -l 列出文件内容符合指定的范本样式的文件名称。\n  -L 列出文件内容不符合指定的范本样式的文件名称。\n  -n 在显示符合范本样式的那一列之前，标示出该列的编号。\n  -q 不显示任何信息。\n  -R/-r 此参数的效果和指定“-d recurse”参数相同。\n  -s 不显示错误信息。\n  -v 反转查找。\n  -w 只显示全字符合的列。\n  -x 只显示全列符合的列。\n  -y 此参数效果跟“-i”相同。\n  -o 只输出文件中匹配到的部分。\n\n#### 常见用法\n\n在文件中搜索一个单词，命令会返回一个包含“match_pattern”的文本行：\n\n> grep match_pattern file_name\n  grep \"match_pattern\" file_name\n\n在多个文件中查找：\n\n> grep \"match_pattern\" file_1 file_2 file_3 ...\n\n输出除之外的所有行 -v 选项：\n\n> grep -v \"match_pattern\" file_name\n\n使用正则表达式 -E 选项：\n\n> grep -E \"[1-9]+\"\n  或\n  egrep \"[1-9]+\"\n\n只输出文件中匹配到的部分 -o 选项：\n\n> echo this is a test line. | grep -o -E \"[a-z]+\\.\"\n  line.\n  echo this is a test line. | egrep -o \"[a-z]+\\.\"\n  line.\n\n统计文件或者文本中包含匹配字符串的行数 -c 选项：\n\n> grep -c \"text\" file_name\n\n输出包含匹配字符串的行数 -n 选项：\n\n> grep \"text\" -n file_name\n  或\n  cat file_name | grep \"text\" -n\n  #多个文件\n  grep \"text\" -n file_1 file_2\n\n搜索多个文件并查找匹配文本在哪些文件中：\n\n> grep -l \"text\" file1 file2 file3...\n\n\n#### 练习\n\n1. 获取root用户的shell程序\n\n  ```\n  cat /etc/passwd|grep ^root.*\"/root:\" | cut -d : -f 7\n  ```\n\n2. 显示CentOS7的/etc/grub2.cfg文件中，至少以一个空白 字符开头的且后面存非空白字符的行\n \n  ```\n  cat /etc/grub2.cfg | egrep \"^[[:space:]] [^[:space:]]\"\n  ```\n\n3. 找出`netstat -tan`命令的结果中以`LISTEN`后跟任意多个空白字符结尾的行\n\n  ```\n  netstat -tan | grep \".*LISTEN.*$\"\n  ```\n","source":"_posts/Linux-grep.md","raw":"---\ntitle: Linux之grep详解\ndate: 2018-02-03 17:41:42\nmodified:\ncategories:\n- Linux\ntags:\n- Linux\n- grep\n---\n\ngrep（global search regular expression(RE) and print out the line）是一种强大的文本搜索工具，它能使用正则表达式搜索文本，并把匹配的行打印出来。\n\n#### 选项\n\n> -a 不要忽略二进制数据。\n  -A<显示列数> 除了显示符合范本样式的那一行之外，并显示该行之后的内容。\n  -b 在显示符合范本样式的那一行之外，并显示该行之前的内容。\n  -c 计算符合范本样式的列数。\n  -C<显示列数>或-<显示列数>  除了显示符合范本样式的那一列之外，并显示该列之前后的内容。\n  -d<进行动作> 当指定要查找的是目录而非文件时，必须使用这项参数，否则grep命令将回报信息并停止动作。\n  -e<范本样式> 指定字符串作为查找文件内容的范本样式。\n  -E 将范本样式为延伸的普通表示法来使用，意味着使用能使用扩展正则表达式。\n  -f<范本文件> 指定范本文件，其内容有一个或多个范本样式，让grep查找符合范本条件的文件内容，格式为每一列的范本样式。\n  -F 将范本样式视为固定字符串的列表。\n  -G 将范本样式视为普通的表示法来使用。\n  -h 在显示符合范本样式的那一列之前，不标示该列所属的文件名称。\n  -H 在显示符合范本样式的那一列之前，标示该列的文件名称。\n  -i 忽略字符大小写的差别。\n  -l 列出文件内容符合指定的范本样式的文件名称。\n  -L 列出文件内容不符合指定的范本样式的文件名称。\n  -n 在显示符合范本样式的那一列之前，标示出该列的编号。\n  -q 不显示任何信息。\n  -R/-r 此参数的效果和指定“-d recurse”参数相同。\n  -s 不显示错误信息。\n  -v 反转查找。\n  -w 只显示全字符合的列。\n  -x 只显示全列符合的列。\n  -y 此参数效果跟“-i”相同。\n  -o 只输出文件中匹配到的部分。\n\n#### 常见用法\n\n在文件中搜索一个单词，命令会返回一个包含“match_pattern”的文本行：\n\n> grep match_pattern file_name\n  grep \"match_pattern\" file_name\n\n在多个文件中查找：\n\n> grep \"match_pattern\" file_1 file_2 file_3 ...\n\n输出除之外的所有行 -v 选项：\n\n> grep -v \"match_pattern\" file_name\n\n使用正则表达式 -E 选项：\n\n> grep -E \"[1-9]+\"\n  或\n  egrep \"[1-9]+\"\n\n只输出文件中匹配到的部分 -o 选项：\n\n> echo this is a test line. | grep -o -E \"[a-z]+\\.\"\n  line.\n  echo this is a test line. | egrep -o \"[a-z]+\\.\"\n  line.\n\n统计文件或者文本中包含匹配字符串的行数 -c 选项：\n\n> grep -c \"text\" file_name\n\n输出包含匹配字符串的行数 -n 选项：\n\n> grep \"text\" -n file_name\n  或\n  cat file_name | grep \"text\" -n\n  #多个文件\n  grep \"text\" -n file_1 file_2\n\n搜索多个文件并查找匹配文本在哪些文件中：\n\n> grep -l \"text\" file1 file2 file3...\n\n\n#### 练习\n\n1. 获取root用户的shell程序\n\n  ```\n  cat /etc/passwd|grep ^root.*\"/root:\" | cut -d : -f 7\n  ```\n\n2. 显示CentOS7的/etc/grub2.cfg文件中，至少以一个空白 字符开头的且后面存非空白字符的行\n \n  ```\n  cat /etc/grub2.cfg | egrep \"^[[:space:]] [^[:space:]]\"\n  ```\n\n3. 找出`netstat -tan`命令的结果中以`LISTEN`后跟任意多个空白字符结尾的行\n\n  ```\n  netstat -tan | grep \".*LISTEN.*$\"\n  ```\n","slug":"Linux-grep","published":1,"updated":"2018-02-04T03:56:35.636Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjir2nrlj00069xas2rnwago8","content":"<p>grep（global search regular expression(RE) and print out the line）是一种强大的文本搜索工具，它能使用正则表达式搜索文本，并把匹配的行打印出来。</p>\n<h4 id=\"选项\"><a href=\"#选项\" class=\"headerlink\" title=\"选项\"></a>选项</h4><blockquote>\n<p>-a 不要忽略二进制数据。<br>  -A&lt;显示列数&gt; 除了显示符合范本样式的那一行之外，并显示该行之后的内容。<br>  -b 在显示符合范本样式的那一行之外，并显示该行之前的内容。<br>  -c 计算符合范本样式的列数。<br>  -C&lt;显示列数&gt;或-&lt;显示列数&gt;  除了显示符合范本样式的那一列之外，并显示该列之前后的内容。<br>  -d&lt;进行动作&gt; 当指定要查找的是目录而非文件时，必须使用这项参数，否则grep命令将回报信息并停止动作。<br>  -e&lt;范本样式&gt; 指定字符串作为查找文件内容的范本样式。<br>  -E 将范本样式为延伸的普通表示法来使用，意味着使用能使用扩展正则表达式。<br>  -f&lt;范本文件&gt; 指定范本文件，其内容有一个或多个范本样式，让grep查找符合范本条件的文件内容，格式为每一列的范本样式。<br>  -F 将范本样式视为固定字符串的列表。<br>  -G 将范本样式视为普通的表示法来使用。<br>  -h 在显示符合范本样式的那一列之前，不标示该列所属的文件名称。<br>  -H 在显示符合范本样式的那一列之前，标示该列的文件名称。<br>  -i 忽略字符大小写的差别。<br>  -l 列出文件内容符合指定的范本样式的文件名称。<br>  -L 列出文件内容不符合指定的范本样式的文件名称。<br>  -n 在显示符合范本样式的那一列之前，标示出该列的编号。<br>  -q 不显示任何信息。<br>  -R/-r 此参数的效果和指定“-d recurse”参数相同。<br>  -s 不显示错误信息。<br>  -v 反转查找。<br>  -w 只显示全字符合的列。<br>  -x 只显示全列符合的列。<br>  -y 此参数效果跟“-i”相同。<br>  -o 只输出文件中匹配到的部分。</p>\n</blockquote>\n<h4 id=\"常见用法\"><a href=\"#常见用法\" class=\"headerlink\" title=\"常见用法\"></a>常见用法</h4><p>在文件中搜索一个单词，命令会返回一个包含“match_pattern”的文本行：</p>\n<blockquote>\n<p>grep match_pattern file_name<br>  grep “match_pattern” file_name</p>\n</blockquote>\n<p>在多个文件中查找：</p>\n<blockquote>\n<p>grep “match_pattern” file_1 file_2 file_3 …</p>\n</blockquote>\n<p>输出除之外的所有行 -v 选项：</p>\n<blockquote>\n<p>grep -v “match_pattern” file_name</p>\n</blockquote>\n<p>使用正则表达式 -E 选项：</p>\n<blockquote>\n<p>grep -E “[1-9]+”<br>  或<br>  egrep “[1-9]+”</p>\n</blockquote>\n<p>只输出文件中匹配到的部分 -o 选项：</p>\n<blockquote>\n<p>echo this is a test line. | grep -o -E “[a-z]+.“<br>  line.<br>  echo this is a test line. | egrep -o “[a-z]+.“<br>  line.</p>\n</blockquote>\n<p>统计文件或者文本中包含匹配字符串的行数 -c 选项：</p>\n<blockquote>\n<p>grep -c “text” file_name</p>\n</blockquote>\n<p>输出包含匹配字符串的行数 -n 选项：</p>\n<blockquote>\n<p>grep “text” -n file_name<br>  或<br>  cat file_name | grep “text” -n</p>\n<p>  #多个文件<br>  grep “text” -n file_1 file_2</p>\n</blockquote>\n<p>搜索多个文件并查找匹配文本在哪些文件中：</p>\n<blockquote>\n<p>grep -l “text” file1 file2 file3…</p>\n</blockquote>\n<h4 id=\"练习\"><a href=\"#练习\" class=\"headerlink\" title=\"练习\"></a>练习</h4><ol>\n<li><p>获取root用户的shell程序</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat /etc/passwd|grep ^root.*&quot;/root:&quot; | cut -d : -f 7</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>显示CentOS7的/etc/grub2.cfg文件中，至少以一个空白 字符开头的且后面存非空白字符的行</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat /etc/grub2.cfg | egrep &quot;^[[:space:]] [^[:space:]]&quot;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>找出<code>netstat -tan</code>命令的结果中以<code>LISTEN</code>后跟任意多个空白字符结尾的行</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">netstat -tan | grep &quot;.*LISTEN.*$&quot;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<p>grep（global search regular expression(RE) and print out the line）是一种强大的文本搜索工具，它能使用正则表达式搜索文本，并把匹配的行打印出来。</p>\n<h4 id=\"选项\"><a href=\"#选项\" class=\"headerlink\" title=\"选项\"></a>选项</h4><blockquote>\n<p>-a 不要忽略二进制数据。<br>  -A&lt;显示列数&gt; 除了显示符合范本样式的那一行之外，并显示该行之后的内容。<br>  -b 在显示符合范本样式的那一行之外，并显示该行之前的内容。<br>  -c 计算符合范本样式的列数。<br>  -C&lt;显示列数&gt;或-&lt;显示列数&gt;  除了显示符合范本样式的那一列之外，并显示该列之前后的内容。<br>  -d&lt;进行动作&gt; 当指定要查找的是目录而非文件时，必须使用这项参数，否则grep命令将回报信息并停止动作。<br>  -e&lt;范本样式&gt; 指定字符串作为查找文件内容的范本样式。<br>  -E 将范本样式为延伸的普通表示法来使用，意味着使用能使用扩展正则表达式。<br>  -f&lt;范本文件&gt; 指定范本文件，其内容有一个或多个范本样式，让grep查找符合范本条件的文件内容，格式为每一列的范本样式。<br>  -F 将范本样式视为固定字符串的列表。<br>  -G 将范本样式视为普通的表示法来使用。<br>  -h 在显示符合范本样式的那一列之前，不标示该列所属的文件名称。<br>  -H 在显示符合范本样式的那一列之前，标示该列的文件名称。<br>  -i 忽略字符大小写的差别。<br>  -l 列出文件内容符合指定的范本样式的文件名称。<br>  -L 列出文件内容不符合指定的范本样式的文件名称。<br>  -n 在显示符合范本样式的那一列之前，标示出该列的编号。<br>  -q 不显示任何信息。<br>  -R/-r 此参数的效果和指定“-d recurse”参数相同。<br>  -s 不显示错误信息。<br>  -v 反转查找。<br>  -w 只显示全字符合的列。<br>  -x 只显示全列符合的列。<br>  -y 此参数效果跟“-i”相同。<br>  -o 只输出文件中匹配到的部分。</p>\n</blockquote>\n<h4 id=\"常见用法\"><a href=\"#常见用法\" class=\"headerlink\" title=\"常见用法\"></a>常见用法</h4><p>在文件中搜索一个单词，命令会返回一个包含“match_pattern”的文本行：</p>\n<blockquote>\n<p>grep match_pattern file_name<br>  grep “match_pattern” file_name</p>\n</blockquote>\n<p>在多个文件中查找：</p>\n<blockquote>\n<p>grep “match_pattern” file_1 file_2 file_3 …</p>\n</blockquote>\n<p>输出除之外的所有行 -v 选项：</p>\n<blockquote>\n<p>grep -v “match_pattern” file_name</p>\n</blockquote>\n<p>使用正则表达式 -E 选项：</p>\n<blockquote>\n<p>grep -E “[1-9]+”<br>  或<br>  egrep “[1-9]+”</p>\n</blockquote>\n<p>只输出文件中匹配到的部分 -o 选项：</p>\n<blockquote>\n<p>echo this is a test line. | grep -o -E “[a-z]+.“<br>  line.<br>  echo this is a test line. | egrep -o “[a-z]+.“<br>  line.</p>\n</blockquote>\n<p>统计文件或者文本中包含匹配字符串的行数 -c 选项：</p>\n<blockquote>\n<p>grep -c “text” file_name</p>\n</blockquote>\n<p>输出包含匹配字符串的行数 -n 选项：</p>\n<blockquote>\n<p>grep “text” -n file_name<br>  或<br>  cat file_name | grep “text” -n</p>\n<p>  #多个文件<br>  grep “text” -n file_1 file_2</p>\n</blockquote>\n<p>搜索多个文件并查找匹配文本在哪些文件中：</p>\n<blockquote>\n<p>grep -l “text” file1 file2 file3…</p>\n</blockquote>\n<h4 id=\"练习\"><a href=\"#练习\" class=\"headerlink\" title=\"练习\"></a>练习</h4><ol>\n<li><p>获取root用户的shell程序</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat /etc/passwd|grep ^root.*&quot;/root:&quot; | cut -d : -f 7</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>显示CentOS7的/etc/grub2.cfg文件中，至少以一个空白 字符开头的且后面存非空白字符的行</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat /etc/grub2.cfg | egrep &quot;^[[:space:]] [^[:space:]]&quot;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>找出<code>netstat -tan</code>命令的结果中以<code>LISTEN</code>后跟任意多个空白字符结尾的行</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">netstat -tan | grep &quot;.*LISTEN.*$&quot;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n"},{"title":"Linux的正则表达式","date":"2018-02-03T01:17:37.000Z","modified":null,"_content":"\n### 通配符\n|元字符|作用|\n|:---:|:---|\n|*|匹配0个或任意多个字符，也就是可以匹配任何内容|\n|?|匹配任意一个字符|\n|[]|匹配[ ]中任意一个字符|\n|[-]|匹配括号中任意一个字符，-代表一个范围，例如：[a-z]代表匹配一个小写字母|\n|[^]|逻辑非，表示匹配不是中括号内的一个字符，例如[^0-9]代表匹配一个不是数字的字符|\n\n\n### 正则表达式\n#### 基础正则表达式\n|元字符|作用|\n|:---:|:---|\n|*|前一个字符匹配0次或任意多次，匹配0次前一个字符则表示匹配任意字符，包括空白行|\n|.|匹配除了换行符以外任意一个字符，“.*”匹配所有内容|\n|^|用于指定匹配字符串的头部，也称行首定位符；匹配行首。例如：^hello会匹配以hello开头的行，grep -n “^$” test.txt匹配空白行并显示行号|\n|$|用于指定匹配字符串的尾部，也称行尾定位符；匹配行尾。例如：hello$会匹配以hello结尾的行|\n|[]|匹配中括号中指定的任意一个字符，只匹配一个字符，要匹配[则要转义\\[|\n|[^]|匹配除中括号的字符以外的任意一个字符|\n|\\|转义符用于取消特殊符号的含义，匹配包含以.结尾的行grep “\\.$” test.txt|\n|\\{n\\}|表示其前面的字符恰好出现n次。例如：[0-9]\\{4\\}匹配4位数字，但注意添加两边的定界符，以精确匹配|\n|\\{n,\\}|表示其前面的字符出现不小于n次。例如：[0-9]\\{2,\\}匹配2位以上的数字|\n|\\{n,m\\}|表示其前面的字符至少出现n次，最多出现m次。例如：[a-z]\\{6,8}匹配6到8位的小写字母|\n\n> 注1：`?、()`是扩展正则中的元字符 \n  注2：正则表达式中使用以上的元字符，如`[]、{}、*、. `等所以在匹配字符串中包含有这些元字符时必须使用反斜杠`\\\\`转义，但像`<>`这个非元字符符号就不需要转义。\n\n#### 特殊字符\n\n正则表达式识别的特殊字符包括：\n> .*[]^$&#123;&#125;\\\\+?()\n\n如果需要将特殊字符当作普通字符来使用，必须对特殊字符进行转义。\n\n#### 特殊字符组\n\n|组|描述|\n|:---:|:---:|\n|[[:alpha:]]|匹配任意的字母字符，不管是大写还是小写|\n|[[:alnum:]]|匹配任意的字母数字字符0~9，A~Z或a~z|\n|[[:blank:]]|匹配空格或制表符|\n|[[:digit:]]|匹配0~9之间的数字|\n|[[:lower:]]|匹配小写字母字符a~z|\n|[[:print:]]|匹配任意可打印字符|\n|[[:punct:]]|匹配标点符号|\n|[[:space:]]|匹配任意空白字符：空格、制表符、NF、FF、VT和CR|\n|[[:upper:]]|匹配任意大写字母字符A~Z|\n\n#### 扩展正则表达式\n\n> 需要注意的是，gawk程序可以识别扩展正则表达式，而sed编辑器不能。\n\n|元字符|作用| \n|:---:|:---|\n|&#124;|管道符，表示或，即匹配其中任何一个，book&#124;desk将匹配book或desk|\n|()|小括号，可以将正则字符和元字符或表达式进行组合，(book&#124;desk)s将匹配books或desks|\n|?|问号，匹配0个或1个前导表达式，如`a?`匹配其他字符串或a|\n|\\<|反斜杠+小于号，词首定位符， `\\< abc`表示所有包含以`abc`开头的单词的行|\n|\\\\>|反斜杠+大于号，词尾定位符， `\\>abc`表示所有包含以`abc`结尾的单词的行|\n|-|减号，用于指明字符范围， `[a-c]`将匹配包含`a、b和c`中任意一个字符的字符串|\n|+|加号，匹配一个或多个前导表达式，相当于`expr{1,}`|\n|&#123;&#125;|为重复的正则表达式设定一个范围|\n\n### 练习\n\n#### 目录文件计数\n\n```\n#!/bin/bash\n\nmypath=$(echo $PATH | sed 's/:/ /g')\ncount=0\n\nfor dir in $mypath\ndo\n  subdir=$(ls $dir)\n  for item in $subdir\n  do\n    count=$[ $count + 1]\n  done\n  echo \"$dir ---- $count\" \n  count=0\ndone\n```\n\n#### 解析邮件地址\n\n```\n^([a-zA-Z0-9_\\-\\.\\+]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$\n```\n","source":"_posts/Linux-regular.md","raw":"---\ntitle: Linux的正则表达式\ndate: 2018-02-03 09:17:37\nmodified:\ncategories:\n- Linux\ntags:\n- Linux\n- Shell\n---\n\n### 通配符\n|元字符|作用|\n|:---:|:---|\n|*|匹配0个或任意多个字符，也就是可以匹配任何内容|\n|?|匹配任意一个字符|\n|[]|匹配[ ]中任意一个字符|\n|[-]|匹配括号中任意一个字符，-代表一个范围，例如：[a-z]代表匹配一个小写字母|\n|[^]|逻辑非，表示匹配不是中括号内的一个字符，例如[^0-9]代表匹配一个不是数字的字符|\n\n\n### 正则表达式\n#### 基础正则表达式\n|元字符|作用|\n|:---:|:---|\n|*|前一个字符匹配0次或任意多次，匹配0次前一个字符则表示匹配任意字符，包括空白行|\n|.|匹配除了换行符以外任意一个字符，“.*”匹配所有内容|\n|^|用于指定匹配字符串的头部，也称行首定位符；匹配行首。例如：^hello会匹配以hello开头的行，grep -n “^$” test.txt匹配空白行并显示行号|\n|$|用于指定匹配字符串的尾部，也称行尾定位符；匹配行尾。例如：hello$会匹配以hello结尾的行|\n|[]|匹配中括号中指定的任意一个字符，只匹配一个字符，要匹配[则要转义\\[|\n|[^]|匹配除中括号的字符以外的任意一个字符|\n|\\|转义符用于取消特殊符号的含义，匹配包含以.结尾的行grep “\\.$” test.txt|\n|\\{n\\}|表示其前面的字符恰好出现n次。例如：[0-9]\\{4\\}匹配4位数字，但注意添加两边的定界符，以精确匹配|\n|\\{n,\\}|表示其前面的字符出现不小于n次。例如：[0-9]\\{2,\\}匹配2位以上的数字|\n|\\{n,m\\}|表示其前面的字符至少出现n次，最多出现m次。例如：[a-z]\\{6,8}匹配6到8位的小写字母|\n\n> 注1：`?、()`是扩展正则中的元字符 \n  注2：正则表达式中使用以上的元字符，如`[]、{}、*、. `等所以在匹配字符串中包含有这些元字符时必须使用反斜杠`\\\\`转义，但像`<>`这个非元字符符号就不需要转义。\n\n#### 特殊字符\n\n正则表达式识别的特殊字符包括：\n> .*[]^$&#123;&#125;\\\\+?()\n\n如果需要将特殊字符当作普通字符来使用，必须对特殊字符进行转义。\n\n#### 特殊字符组\n\n|组|描述|\n|:---:|:---:|\n|[[:alpha:]]|匹配任意的字母字符，不管是大写还是小写|\n|[[:alnum:]]|匹配任意的字母数字字符0~9，A~Z或a~z|\n|[[:blank:]]|匹配空格或制表符|\n|[[:digit:]]|匹配0~9之间的数字|\n|[[:lower:]]|匹配小写字母字符a~z|\n|[[:print:]]|匹配任意可打印字符|\n|[[:punct:]]|匹配标点符号|\n|[[:space:]]|匹配任意空白字符：空格、制表符、NF、FF、VT和CR|\n|[[:upper:]]|匹配任意大写字母字符A~Z|\n\n#### 扩展正则表达式\n\n> 需要注意的是，gawk程序可以识别扩展正则表达式，而sed编辑器不能。\n\n|元字符|作用| \n|:---:|:---|\n|&#124;|管道符，表示或，即匹配其中任何一个，book&#124;desk将匹配book或desk|\n|()|小括号，可以将正则字符和元字符或表达式进行组合，(book&#124;desk)s将匹配books或desks|\n|?|问号，匹配0个或1个前导表达式，如`a?`匹配其他字符串或a|\n|\\<|反斜杠+小于号，词首定位符， `\\< abc`表示所有包含以`abc`开头的单词的行|\n|\\\\>|反斜杠+大于号，词尾定位符， `\\>abc`表示所有包含以`abc`结尾的单词的行|\n|-|减号，用于指明字符范围， `[a-c]`将匹配包含`a、b和c`中任意一个字符的字符串|\n|+|加号，匹配一个或多个前导表达式，相当于`expr{1,}`|\n|&#123;&#125;|为重复的正则表达式设定一个范围|\n\n### 练习\n\n#### 目录文件计数\n\n```\n#!/bin/bash\n\nmypath=$(echo $PATH | sed 's/:/ /g')\ncount=0\n\nfor dir in $mypath\ndo\n  subdir=$(ls $dir)\n  for item in $subdir\n  do\n    count=$[ $count + 1]\n  done\n  echo \"$dir ---- $count\" \n  count=0\ndone\n```\n\n#### 解析邮件地址\n\n```\n^([a-zA-Z0-9_\\-\\.\\+]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$\n```\n","slug":"Linux-regular","published":1,"updated":"2018-02-07T07:39:37.387Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjir2nrls00089xask2vnaws8","content":"<h3 id=\"通配符\"><a href=\"#通配符\" class=\"headerlink\" title=\"通配符\"></a>通配符</h3><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">元字符</th>\n<th style=\"text-align:left\">作用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">*</td>\n<td style=\"text-align:left\">匹配0个或任意多个字符，也就是可以匹配任何内容</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">?</td>\n<td style=\"text-align:left\">匹配任意一个字符</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">[]</td>\n<td style=\"text-align:left\">匹配[ ]中任意一个字符</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">[-]</td>\n<td style=\"text-align:left\">匹配括号中任意一个字符，-代表一个范围，例如：[a-z]代表匹配一个小写字母</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">[^]</td>\n<td style=\"text-align:left\">逻辑非，表示匹配不是中括号内的一个字符，例如[^0-9]代表匹配一个不是数字的字符</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"正则表达式\"><a href=\"#正则表达式\" class=\"headerlink\" title=\"正则表达式\"></a>正则表达式</h3><h4 id=\"基础正则表达式\"><a href=\"#基础正则表达式\" class=\"headerlink\" title=\"基础正则表达式\"></a>基础正则表达式</h4><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">元字符</th>\n<th style=\"text-align:left\">作用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">*</td>\n<td style=\"text-align:left\">前一个字符匹配0次或任意多次，匹配0次前一个字符则表示匹配任意字符，包括空白行</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">.</td>\n<td style=\"text-align:left\">匹配除了换行符以外任意一个字符，“.*”匹配所有内容</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">^</td>\n<td style=\"text-align:left\">用于指定匹配字符串的头部，也称行首定位符；匹配行首。例如：^hello会匹配以hello开头的行，grep -n “^$” test.txt匹配空白行并显示行号</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">$</td>\n<td style=\"text-align:left\">用于指定匹配字符串的尾部，也称行尾定位符；匹配行尾。例如：hello$会匹配以hello结尾的行</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">[]</td>\n<td style=\"text-align:left\">匹配中括号中指定的任意一个字符，只匹配一个字符，要匹配[则要转义[</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">[^]</td>\n<td style=\"text-align:left\">匹配除中括号的字符以外的任意一个字符</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">\\</td>\n<td style=\"text-align:left\">转义符用于取消特殊符号的含义，匹配包含以.结尾的行grep “.$” test.txt</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">{n}</td>\n<td style=\"text-align:left\">表示其前面的字符恰好出现n次。例如：[0-9]{4}匹配4位数字，但注意添加两边的定界符，以精确匹配</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">{n,}</td>\n<td style=\"text-align:left\">表示其前面的字符出现不小于n次。例如：[0-9]{2,}匹配2位以上的数字</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">{n,m}</td>\n<td style=\"text-align:left\">表示其前面的字符至少出现n次，最多出现m次。例如：[a-z]{6,8}匹配6到8位的小写字母</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p>注1：<code>?、()</code>是扩展正则中的元字符<br>  注2：正则表达式中使用以上的元字符，如<code>[]、{}、*、.</code>等所以在匹配字符串中包含有这些元字符时必须使用反斜杠<code>\\\\</code>转义，但像<code>&lt;&gt;</code>这个非元字符符号就不需要转义。</p>\n</blockquote>\n<h4 id=\"特殊字符\"><a href=\"#特殊字符\" class=\"headerlink\" title=\"特殊字符\"></a>特殊字符</h4><p>正则表达式识别的特殊字符包括：</p>\n<blockquote>\n<p>.*[]^$&#123;&#125;\\+?()</p>\n</blockquote>\n<p>如果需要将特殊字符当作普通字符来使用，必须对特殊字符进行转义。</p>\n<h4 id=\"特殊字符组\"><a href=\"#特殊字符组\" class=\"headerlink\" title=\"特殊字符组\"></a>特殊字符组</h4><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">组</th>\n<th style=\"text-align:center\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">[[:alpha:]]</td>\n<td style=\"text-align:center\">匹配任意的字母字符，不管是大写还是小写</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">[[:alnum:]]</td>\n<td style=\"text-align:center\">匹配任意的字母数字字符0~9，A~Z或a~z</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">[[:blank:]]</td>\n<td style=\"text-align:center\">匹配空格或制表符</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">[[:digit:]]</td>\n<td style=\"text-align:center\">匹配0~9之间的数字</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">[[:lower:]]</td>\n<td style=\"text-align:center\">匹配小写字母字符a~z</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">[[:print:]]</td>\n<td style=\"text-align:center\">匹配任意可打印字符</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">[[:punct:]]</td>\n<td style=\"text-align:center\">匹配标点符号</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">[[:space:]]</td>\n<td style=\"text-align:center\">匹配任意空白字符：空格、制表符、NF、FF、VT和CR</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">[[:upper:]]</td>\n<td style=\"text-align:center\">匹配任意大写字母字符A~Z</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"扩展正则表达式\"><a href=\"#扩展正则表达式\" class=\"headerlink\" title=\"扩展正则表达式\"></a>扩展正则表达式</h4><blockquote>\n<p>需要注意的是，gawk程序可以识别扩展正则表达式，而sed编辑器不能。</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">元字符</th>\n<th style=\"text-align:left\">作用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">&#124;</td>\n<td style=\"text-align:left\">管道符，表示或，即匹配其中任何一个，book&#124;desk将匹配book或desk</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">()</td>\n<td style=\"text-align:left\">小括号，可以将正则字符和元字符或表达式进行组合，(book&#124;desk)s将匹配books或desks</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">?</td>\n<td style=\"text-align:left\">问号，匹配0个或1个前导表达式，如<code>a?</code>匹配其他字符串或a</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">\\&lt;</td>\n<td style=\"text-align:left\">反斜杠+小于号，词首定位符， <code>\\&lt; abc</code>表示所有包含以<code>abc</code>开头的单词的行</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">\\&gt;</td>\n<td style=\"text-align:left\">反斜杠+大于号，词尾定位符， <code>\\&gt;abc</code>表示所有包含以<code>abc</code>结尾的单词的行</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">-</td>\n<td style=\"text-align:left\">减号，用于指明字符范围， <code>[a-c]</code>将匹配包含<code>a、b和c</code>中任意一个字符的字符串</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">+</td>\n<td style=\"text-align:left\">加号，匹配一个或多个前导表达式，相当于<code>expr{1,}</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">&#123;&#125;</td>\n<td style=\"text-align:left\">为重复的正则表达式设定一个范围</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"练习\"><a href=\"#练习\" class=\"headerlink\" title=\"练习\"></a>练习</h3><h4 id=\"目录文件计数\"><a href=\"#目录文件计数\" class=\"headerlink\" title=\"目录文件计数\"></a>目录文件计数</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#!/bin/bash</span><br><span class=\"line\"></span><br><span class=\"line\">mypath=$(echo $PATH | sed &apos;s/:/ /g&apos;)</span><br><span class=\"line\">count=0</span><br><span class=\"line\"></span><br><span class=\"line\">for dir in $mypath</span><br><span class=\"line\">do</span><br><span class=\"line\">  subdir=$(ls $dir)</span><br><span class=\"line\">  for item in $subdir</span><br><span class=\"line\">  do</span><br><span class=\"line\">    count=$[ $count + 1]</span><br><span class=\"line\">  done</span><br><span class=\"line\">  echo &quot;$dir ---- $count&quot; </span><br><span class=\"line\">  count=0</span><br><span class=\"line\">done</span><br></pre></td></tr></table></figure>\n<h4 id=\"解析邮件地址\"><a href=\"#解析邮件地址\" class=\"headerlink\" title=\"解析邮件地址\"></a>解析邮件地址</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">^([a-zA-Z0-9_\\-\\.\\+]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]&#123;2,5&#125;)$</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"通配符\"><a href=\"#通配符\" class=\"headerlink\" title=\"通配符\"></a>通配符</h3><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">元字符</th>\n<th style=\"text-align:left\">作用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">*</td>\n<td style=\"text-align:left\">匹配0个或任意多个字符，也就是可以匹配任何内容</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">?</td>\n<td style=\"text-align:left\">匹配任意一个字符</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">[]</td>\n<td style=\"text-align:left\">匹配[ ]中任意一个字符</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">[-]</td>\n<td style=\"text-align:left\">匹配括号中任意一个字符，-代表一个范围，例如：[a-z]代表匹配一个小写字母</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">[^]</td>\n<td style=\"text-align:left\">逻辑非，表示匹配不是中括号内的一个字符，例如[^0-9]代表匹配一个不是数字的字符</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"正则表达式\"><a href=\"#正则表达式\" class=\"headerlink\" title=\"正则表达式\"></a>正则表达式</h3><h4 id=\"基础正则表达式\"><a href=\"#基础正则表达式\" class=\"headerlink\" title=\"基础正则表达式\"></a>基础正则表达式</h4><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">元字符</th>\n<th style=\"text-align:left\">作用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">*</td>\n<td style=\"text-align:left\">前一个字符匹配0次或任意多次，匹配0次前一个字符则表示匹配任意字符，包括空白行</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">.</td>\n<td style=\"text-align:left\">匹配除了换行符以外任意一个字符，“.*”匹配所有内容</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">^</td>\n<td style=\"text-align:left\">用于指定匹配字符串的头部，也称行首定位符；匹配行首。例如：^hello会匹配以hello开头的行，grep -n “^$” test.txt匹配空白行并显示行号</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">$</td>\n<td style=\"text-align:left\">用于指定匹配字符串的尾部，也称行尾定位符；匹配行尾。例如：hello$会匹配以hello结尾的行</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">[]</td>\n<td style=\"text-align:left\">匹配中括号中指定的任意一个字符，只匹配一个字符，要匹配[则要转义[</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">[^]</td>\n<td style=\"text-align:left\">匹配除中括号的字符以外的任意一个字符</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">\\</td>\n<td style=\"text-align:left\">转义符用于取消特殊符号的含义，匹配包含以.结尾的行grep “.$” test.txt</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">{n}</td>\n<td style=\"text-align:left\">表示其前面的字符恰好出现n次。例如：[0-9]{4}匹配4位数字，但注意添加两边的定界符，以精确匹配</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">{n,}</td>\n<td style=\"text-align:left\">表示其前面的字符出现不小于n次。例如：[0-9]{2,}匹配2位以上的数字</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">{n,m}</td>\n<td style=\"text-align:left\">表示其前面的字符至少出现n次，最多出现m次。例如：[a-z]{6,8}匹配6到8位的小写字母</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p>注1：<code>?、()</code>是扩展正则中的元字符<br>  注2：正则表达式中使用以上的元字符，如<code>[]、{}、*、.</code>等所以在匹配字符串中包含有这些元字符时必须使用反斜杠<code>\\\\</code>转义，但像<code>&lt;&gt;</code>这个非元字符符号就不需要转义。</p>\n</blockquote>\n<h4 id=\"特殊字符\"><a href=\"#特殊字符\" class=\"headerlink\" title=\"特殊字符\"></a>特殊字符</h4><p>正则表达式识别的特殊字符包括：</p>\n<blockquote>\n<p>.*[]^$&#123;&#125;\\+?()</p>\n</blockquote>\n<p>如果需要将特殊字符当作普通字符来使用，必须对特殊字符进行转义。</p>\n<h4 id=\"特殊字符组\"><a href=\"#特殊字符组\" class=\"headerlink\" title=\"特殊字符组\"></a>特殊字符组</h4><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">组</th>\n<th style=\"text-align:center\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">[[:alpha:]]</td>\n<td style=\"text-align:center\">匹配任意的字母字符，不管是大写还是小写</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">[[:alnum:]]</td>\n<td style=\"text-align:center\">匹配任意的字母数字字符0~9，A~Z或a~z</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">[[:blank:]]</td>\n<td style=\"text-align:center\">匹配空格或制表符</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">[[:digit:]]</td>\n<td style=\"text-align:center\">匹配0~9之间的数字</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">[[:lower:]]</td>\n<td style=\"text-align:center\">匹配小写字母字符a~z</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">[[:print:]]</td>\n<td style=\"text-align:center\">匹配任意可打印字符</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">[[:punct:]]</td>\n<td style=\"text-align:center\">匹配标点符号</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">[[:space:]]</td>\n<td style=\"text-align:center\">匹配任意空白字符：空格、制表符、NF、FF、VT和CR</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">[[:upper:]]</td>\n<td style=\"text-align:center\">匹配任意大写字母字符A~Z</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"扩展正则表达式\"><a href=\"#扩展正则表达式\" class=\"headerlink\" title=\"扩展正则表达式\"></a>扩展正则表达式</h4><blockquote>\n<p>需要注意的是，gawk程序可以识别扩展正则表达式，而sed编辑器不能。</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">元字符</th>\n<th style=\"text-align:left\">作用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">&#124;</td>\n<td style=\"text-align:left\">管道符，表示或，即匹配其中任何一个，book&#124;desk将匹配book或desk</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">()</td>\n<td style=\"text-align:left\">小括号，可以将正则字符和元字符或表达式进行组合，(book&#124;desk)s将匹配books或desks</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">?</td>\n<td style=\"text-align:left\">问号，匹配0个或1个前导表达式，如<code>a?</code>匹配其他字符串或a</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">\\&lt;</td>\n<td style=\"text-align:left\">反斜杠+小于号，词首定位符， <code>\\&lt; abc</code>表示所有包含以<code>abc</code>开头的单词的行</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">\\&gt;</td>\n<td style=\"text-align:left\">反斜杠+大于号，词尾定位符， <code>\\&gt;abc</code>表示所有包含以<code>abc</code>结尾的单词的行</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">-</td>\n<td style=\"text-align:left\">减号，用于指明字符范围， <code>[a-c]</code>将匹配包含<code>a、b和c</code>中任意一个字符的字符串</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">+</td>\n<td style=\"text-align:left\">加号，匹配一个或多个前导表达式，相当于<code>expr{1,}</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">&#123;&#125;</td>\n<td style=\"text-align:left\">为重复的正则表达式设定一个范围</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"练习\"><a href=\"#练习\" class=\"headerlink\" title=\"练习\"></a>练习</h3><h4 id=\"目录文件计数\"><a href=\"#目录文件计数\" class=\"headerlink\" title=\"目录文件计数\"></a>目录文件计数</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#!/bin/bash</span><br><span class=\"line\"></span><br><span class=\"line\">mypath=$(echo $PATH | sed &apos;s/:/ /g&apos;)</span><br><span class=\"line\">count=0</span><br><span class=\"line\"></span><br><span class=\"line\">for dir in $mypath</span><br><span class=\"line\">do</span><br><span class=\"line\">  subdir=$(ls $dir)</span><br><span class=\"line\">  for item in $subdir</span><br><span class=\"line\">  do</span><br><span class=\"line\">    count=$[ $count + 1]</span><br><span class=\"line\">  done</span><br><span class=\"line\">  echo &quot;$dir ---- $count&quot; </span><br><span class=\"line\">  count=0</span><br><span class=\"line\">done</span><br></pre></td></tr></table></figure>\n<h4 id=\"解析邮件地址\"><a href=\"#解析邮件地址\" class=\"headerlink\" title=\"解析邮件地址\"></a>解析邮件地址</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">^([a-zA-Z0-9_\\-\\.\\+]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]&#123;2,5&#125;)$</span><br></pre></td></tr></table></figure>\n"},{"title":"Linux之sed详解","date":"2018-02-02T16:00:00.000Z","modified":null,"_content":"\nsed是一种流编辑器，它是文本处理中常营的工具，能够完美的配合正则表达式使用。处理时，把当前处理的行存储在临时缓冲区中，称为“模式空间”（pattern space），接着用sed命令处理缓冲区中的内容，处理完成后，把缓冲区的内容送往屏幕。接着处理下一行，这样不断重复，直到文件末尾。文件内容并没有 改变，除非你使用重定向存储输出。Sed主要用来自动编辑一个或多个文件；简化对文件的反复操作；编写转换程序等。\n\n### 命令格式\nsed [-nefri] ‘command’ 输入文本\n\n### 常用选项\n-n∶使用安静(silent)模式。在一般 sed 的用法中，所有来自STDIN的资料一般都会被列出到屏幕上。但如果加上`-n`参数后，则只有经过sed特殊处理的那一行(或者动作)才会被列出来。\n-e∶直接在指令列模式上进行sed的动作编辑；或者需要在sed命令行上执行多个命令；例如`sed -e 's/brown/green/; s/dog/cat/' test.txt`；\n-f∶直接将sed的动作写在一个档案内，`-f filename`则可以执行 filename 内的sed 动作；\n-r∶sed的动作支援的是延伸型正规表示法的语法。(预设是基础正规表示法语法)\n-i∶直接修改读取的档案内容，而不是由屏幕输出。 \n\n### 常用命令\na：新增，a的后面可以接字串，而这些字串会在新的一行出现(目前的下一行)\nc：取代，c的后面可以接字串，这些字串可以取代n1,n2之间的行\nd：删除，由于是删除，所以d后面通常不接任何符号\ng：新文本将会替换所有匹配的文本\ni：插入，i的后面可以接字串，而这些字串会在新的一行出现(目前的上一行)\nl：打印数据流中的文本和不可打印的ASCII字符\np：打印，即将某个匹配的字符串打印。通常p会与参数 sed -n 一起使用\nr：将一个独立文件中的数据插入到数据流中\ns：替换，直接将匹配的字符串进行替换。通常与正则表达式一起使用\nw file：将替换的结果写到文件中\n\n### 使用文本过滤器\n格式如下：\n\n> /pattern/command\n\n```\nsed '/jimmy/s/bash/csh/' /etc/passwd\n```\n### sed进阶\n\n#### 多行命令\n\nN：将数据流中的下一行加进来创建一个多行组来处理；\nD：删除多行组中的一行；注意：D命令会强制sed编辑器返回到脚本的顶部，而不读取新的行；\nP：打印多行组中的一行。\n\nnext命令\n\n```\nsed '/head/{n ; d}' data.txt\t\t#删除含有head行的下一行\nsed '/first/{N ; s/\\n/ /}' data.txt     #将含有first的行以及下一行当作一行处理\nsed 'N ; s/System.Administrator/Desktop User' data.txt\n```\n\n多行删除\n\n```\nsed '/^$/{N ; /header/D}' data.txt\t#首先找到空白行，然后将下一行合并到模式空间内，由于D只会删除模式空间里的第一行，所以只会删除含有header行前的空白行\n```\n\n多行打印\n\n```\nsed -n 'N ; /System\\nAdministrator/P' data.txt  #只打印多行模式空间中的第一行\n```\n\n#### 保持空间\n\n模式空间是一块活跃的缓冲区，在sed编辑器执行命令时它会保存待检查的文本。但它并不是sed编辑器保存文本的唯一空间。\n\nsed编辑器有另一块称作保持空间的缓冲区域。在处理模式空间中的某些行时，可以用保持空间来临时保存一些行。\n\nsed编辑器的保持空间命令：\n\n|命令|描述|\n|:---:|:---:|\n|h|将模式空间复制到保持空间|\n|H|将模式空间附加到保持空间|\n|g|将保持空间复制到模式空间|\n|G|将保持空间附加到模式空间|\n|x|交换模式空间和保持空间的内容|\n\n```\nsed -n '/first/{h ; n ; p; g; p}' data.txt\t#将含有first的行和后面一行交换顺序输出\n```\n\n#### 排除命令\n\n使用感叹号(!)来排除命令，即让原本会起作用的命令不起作用。\n\n```\nsed -n '{1!G ; h ; $p}' data.txt\n```\n\n#### 改变流\n\n分支命令`b`，格式如下：\n[address]b [label]\n\n```\nsed '{2,3b; s/This is/Is this/; s/line./test?/}' data.txt\t#在第2、3行跳过替换\n```\n\n测试命令`t`，根据替换命令的结果跳转到某个标签，而不是根据地址进行跳转，格式如下：\n[address]t [label]\n\n#### 模式替代\n\n使用`&`符号用来代表替换命令中的匹配的模式\n\n```\n$ echo \"The cat sleeps in his hat.\" | sed 's/.at/\"&\"/g'\n```\n\nsed使用圆括号来定义替换模式中的子模式。\n\n```\n$ echo \"The System Administrator manual\" | sed 's/\\(System\\) Administrator\n/\\1 User/g'\n```\n\n### 实例\n\n#### 删除行\n\n```\nsed '1d' filename              #删除第一行 \nsed '$d' filename              #删除最后一行\nsed '1,2d' filename            #删除第一行到第二行\nsed '2,$d' filename            #删除第二行到最后一行\nsed '/1/,/3/d' filename        #在遇到数据行中有1时开始删除，遇到有3的行停止删除\n```\n\n#### 显示行\n\n```\nsed -n '1p' filename           #显示第一行 \nsed -n '$p' filename           #显示最后一行\nsed -n '1,2p' filename         #显示第一行到第二行\nsed -n '2,$p' filename         #显示第二行到最后一行\n```\n\n#### 查询\n\n```\nsed -n '/centos/p' filename    #查询包括关键字centos所在所有行\nsed -n '/\\$/p' filename        #查询包括关键字$所在所有行，使用反斜线\\对特殊字符进行转义\n```\n\n#### 增加一行或多行字符串\n\n```\nsed '1a drink tea' filename     #第一行后增加字符串\"drink tea\"\nsed '1,3a drink tea' filename   #第一行到第三行后增加字符串\"drink tea\"\nsed '1a drink\\ncoffee' filename #第一行后增加多行，使用换行符\\n\n```\n\n#### 替换一行或多行\n\n```\nsed '1c Hi' filename          #第一行代替为Hi\nsed '1,2c Hi' filename        #第一行到第二行代替为Hi\n```\n\n#### 替换一行中的某部分\n\n> 格式\n  sed 's/要替换的字符串/新的字符串/g'   (要替换的字符串可以用正则表达式)\n\n```\nsed -n '/centos/p' filename | sed 's/centos/redhat/g'    #替换centos为redhat\nsed -n '/centos/p' filename | sed 's/centos//g'          #删除centos\nsed 's/test/trial/2' data.txt\t\t\t         #只替换每行第二次出现的test\n```\n\n#### 插入\n\n```\nsed -i '$a bye' filename   #在文件filenamede 最后一行直接输入\"bye\"\nsed -n '2,$p' filename     #显示第二行到最后一行\n```\n\n#### 转换\n\n```\nsed 'y/123/789/' test.txt                   将1替换为7,2替换为8,3替换为9\n```\n\n### 习题\n\n1. 从ip addr中找到当前主机的ip\n\n  ```\n  ip addr|sed -nr 's/.*inet (.*)\\/24.*$/\\1/gp'\n  192.168.17.131\n  ```\n\n2. 将/etc/passwd第一项和最后一项互换\n\n  ```\n  cat /etc/passwd | sed -nr 's/(.*)(:x.*:)(.*$)/\\3\\2\\1/gp'\n  ```\n\n3. 加倍行间距\n\n  ```\n  $ sed '$!G' data.txt\n  #如果文本中本身就有空白行\n  $ sed '/^$/d; $!G' data.txt\n  ```\n\n4. 给文件中的行编号\n\n  ```\n  $ sed \"=\" data.txt | sed 'N; s/\\n/ /g'\n  ```\n\n5. 打印文件末尾的若干行\n\n  ```\n  $ sed '{\n    :start\n    $q; N ; 11,$D\n    b start\n    }' data.txt\n  ```\n\n6. 删除连续的空白行\n\n  ```\n  $ sed '/./,/^$/!d' data.txt\n  ```\n\n7. 删除开头的空白行\n\n  ```\n  $ sed '/./,$!d' data.txt\n  ```\n\n8. 删除结尾的空白行\n\n  ```\n  $ sed '{\n    :start\n    /^\\n*$/{$d ; N ; b start}\n    }' data.txt\n  ```\n\n9. 删除HTML标签\n\n  ```\n  $ sed 's/<[^>]*>//g ; /^$/d' data.txt\n  ```\n","source":"_posts/Linux-sed.md","raw":"---\ntitle: Linux之sed详解\ndate: 2018-02-03\nmodified:\ncategories:\n- Linux\ntags:\n- sed\n- Linux\n---\n\nsed是一种流编辑器，它是文本处理中常营的工具，能够完美的配合正则表达式使用。处理时，把当前处理的行存储在临时缓冲区中，称为“模式空间”（pattern space），接着用sed命令处理缓冲区中的内容，处理完成后，把缓冲区的内容送往屏幕。接着处理下一行，这样不断重复，直到文件末尾。文件内容并没有 改变，除非你使用重定向存储输出。Sed主要用来自动编辑一个或多个文件；简化对文件的反复操作；编写转换程序等。\n\n### 命令格式\nsed [-nefri] ‘command’ 输入文本\n\n### 常用选项\n-n∶使用安静(silent)模式。在一般 sed 的用法中，所有来自STDIN的资料一般都会被列出到屏幕上。但如果加上`-n`参数后，则只有经过sed特殊处理的那一行(或者动作)才会被列出来。\n-e∶直接在指令列模式上进行sed的动作编辑；或者需要在sed命令行上执行多个命令；例如`sed -e 's/brown/green/; s/dog/cat/' test.txt`；\n-f∶直接将sed的动作写在一个档案内，`-f filename`则可以执行 filename 内的sed 动作；\n-r∶sed的动作支援的是延伸型正规表示法的语法。(预设是基础正规表示法语法)\n-i∶直接修改读取的档案内容，而不是由屏幕输出。 \n\n### 常用命令\na：新增，a的后面可以接字串，而这些字串会在新的一行出现(目前的下一行)\nc：取代，c的后面可以接字串，这些字串可以取代n1,n2之间的行\nd：删除，由于是删除，所以d后面通常不接任何符号\ng：新文本将会替换所有匹配的文本\ni：插入，i的后面可以接字串，而这些字串会在新的一行出现(目前的上一行)\nl：打印数据流中的文本和不可打印的ASCII字符\np：打印，即将某个匹配的字符串打印。通常p会与参数 sed -n 一起使用\nr：将一个独立文件中的数据插入到数据流中\ns：替换，直接将匹配的字符串进行替换。通常与正则表达式一起使用\nw file：将替换的结果写到文件中\n\n### 使用文本过滤器\n格式如下：\n\n> /pattern/command\n\n```\nsed '/jimmy/s/bash/csh/' /etc/passwd\n```\n### sed进阶\n\n#### 多行命令\n\nN：将数据流中的下一行加进来创建一个多行组来处理；\nD：删除多行组中的一行；注意：D命令会强制sed编辑器返回到脚本的顶部，而不读取新的行；\nP：打印多行组中的一行。\n\nnext命令\n\n```\nsed '/head/{n ; d}' data.txt\t\t#删除含有head行的下一行\nsed '/first/{N ; s/\\n/ /}' data.txt     #将含有first的行以及下一行当作一行处理\nsed 'N ; s/System.Administrator/Desktop User' data.txt\n```\n\n多行删除\n\n```\nsed '/^$/{N ; /header/D}' data.txt\t#首先找到空白行，然后将下一行合并到模式空间内，由于D只会删除模式空间里的第一行，所以只会删除含有header行前的空白行\n```\n\n多行打印\n\n```\nsed -n 'N ; /System\\nAdministrator/P' data.txt  #只打印多行模式空间中的第一行\n```\n\n#### 保持空间\n\n模式空间是一块活跃的缓冲区，在sed编辑器执行命令时它会保存待检查的文本。但它并不是sed编辑器保存文本的唯一空间。\n\nsed编辑器有另一块称作保持空间的缓冲区域。在处理模式空间中的某些行时，可以用保持空间来临时保存一些行。\n\nsed编辑器的保持空间命令：\n\n|命令|描述|\n|:---:|:---:|\n|h|将模式空间复制到保持空间|\n|H|将模式空间附加到保持空间|\n|g|将保持空间复制到模式空间|\n|G|将保持空间附加到模式空间|\n|x|交换模式空间和保持空间的内容|\n\n```\nsed -n '/first/{h ; n ; p; g; p}' data.txt\t#将含有first的行和后面一行交换顺序输出\n```\n\n#### 排除命令\n\n使用感叹号(!)来排除命令，即让原本会起作用的命令不起作用。\n\n```\nsed -n '{1!G ; h ; $p}' data.txt\n```\n\n#### 改变流\n\n分支命令`b`，格式如下：\n[address]b [label]\n\n```\nsed '{2,3b; s/This is/Is this/; s/line./test?/}' data.txt\t#在第2、3行跳过替换\n```\n\n测试命令`t`，根据替换命令的结果跳转到某个标签，而不是根据地址进行跳转，格式如下：\n[address]t [label]\n\n#### 模式替代\n\n使用`&`符号用来代表替换命令中的匹配的模式\n\n```\n$ echo \"The cat sleeps in his hat.\" | sed 's/.at/\"&\"/g'\n```\n\nsed使用圆括号来定义替换模式中的子模式。\n\n```\n$ echo \"The System Administrator manual\" | sed 's/\\(System\\) Administrator\n/\\1 User/g'\n```\n\n### 实例\n\n#### 删除行\n\n```\nsed '1d' filename              #删除第一行 \nsed '$d' filename              #删除最后一行\nsed '1,2d' filename            #删除第一行到第二行\nsed '2,$d' filename            #删除第二行到最后一行\nsed '/1/,/3/d' filename        #在遇到数据行中有1时开始删除，遇到有3的行停止删除\n```\n\n#### 显示行\n\n```\nsed -n '1p' filename           #显示第一行 \nsed -n '$p' filename           #显示最后一行\nsed -n '1,2p' filename         #显示第一行到第二行\nsed -n '2,$p' filename         #显示第二行到最后一行\n```\n\n#### 查询\n\n```\nsed -n '/centos/p' filename    #查询包括关键字centos所在所有行\nsed -n '/\\$/p' filename        #查询包括关键字$所在所有行，使用反斜线\\对特殊字符进行转义\n```\n\n#### 增加一行或多行字符串\n\n```\nsed '1a drink tea' filename     #第一行后增加字符串\"drink tea\"\nsed '1,3a drink tea' filename   #第一行到第三行后增加字符串\"drink tea\"\nsed '1a drink\\ncoffee' filename #第一行后增加多行，使用换行符\\n\n```\n\n#### 替换一行或多行\n\n```\nsed '1c Hi' filename          #第一行代替为Hi\nsed '1,2c Hi' filename        #第一行到第二行代替为Hi\n```\n\n#### 替换一行中的某部分\n\n> 格式\n  sed 's/要替换的字符串/新的字符串/g'   (要替换的字符串可以用正则表达式)\n\n```\nsed -n '/centos/p' filename | sed 's/centos/redhat/g'    #替换centos为redhat\nsed -n '/centos/p' filename | sed 's/centos//g'          #删除centos\nsed 's/test/trial/2' data.txt\t\t\t         #只替换每行第二次出现的test\n```\n\n#### 插入\n\n```\nsed -i '$a bye' filename   #在文件filenamede 最后一行直接输入\"bye\"\nsed -n '2,$p' filename     #显示第二行到最后一行\n```\n\n#### 转换\n\n```\nsed 'y/123/789/' test.txt                   将1替换为7,2替换为8,3替换为9\n```\n\n### 习题\n\n1. 从ip addr中找到当前主机的ip\n\n  ```\n  ip addr|sed -nr 's/.*inet (.*)\\/24.*$/\\1/gp'\n  192.168.17.131\n  ```\n\n2. 将/etc/passwd第一项和最后一项互换\n\n  ```\n  cat /etc/passwd | sed -nr 's/(.*)(:x.*:)(.*$)/\\3\\2\\1/gp'\n  ```\n\n3. 加倍行间距\n\n  ```\n  $ sed '$!G' data.txt\n  #如果文本中本身就有空白行\n  $ sed '/^$/d; $!G' data.txt\n  ```\n\n4. 给文件中的行编号\n\n  ```\n  $ sed \"=\" data.txt | sed 'N; s/\\n/ /g'\n  ```\n\n5. 打印文件末尾的若干行\n\n  ```\n  $ sed '{\n    :start\n    $q; N ; 11,$D\n    b start\n    }' data.txt\n  ```\n\n6. 删除连续的空白行\n\n  ```\n  $ sed '/./,/^$/!d' data.txt\n  ```\n\n7. 删除开头的空白行\n\n  ```\n  $ sed '/./,$!d' data.txt\n  ```\n\n8. 删除结尾的空白行\n\n  ```\n  $ sed '{\n    :start\n    /^\\n*$/{$d ; N ; b start}\n    }' data.txt\n  ```\n\n9. 删除HTML标签\n\n  ```\n  $ sed 's/<[^>]*>//g ; /^$/d' data.txt\n  ```\n","slug":"Linux-sed","published":1,"updated":"2018-02-08T09:32:01.042Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjir2nrlv00099xasvd5jffw6","content":"<p>sed是一种流编辑器，它是文本处理中常营的工具，能够完美的配合正则表达式使用。处理时，把当前处理的行存储在临时缓冲区中，称为“模式空间”（pattern space），接着用sed命令处理缓冲区中的内容，处理完成后，把缓冲区的内容送往屏幕。接着处理下一行，这样不断重复，直到文件末尾。文件内容并没有 改变，除非你使用重定向存储输出。Sed主要用来自动编辑一个或多个文件；简化对文件的反复操作；编写转换程序等。</p>\n<h3 id=\"命令格式\"><a href=\"#命令格式\" class=\"headerlink\" title=\"命令格式\"></a>命令格式</h3><p>sed [-nefri] ‘command’ 输入文本</p>\n<h3 id=\"常用选项\"><a href=\"#常用选项\" class=\"headerlink\" title=\"常用选项\"></a>常用选项</h3><p>-n∶使用安静(silent)模式。在一般 sed 的用法中，所有来自STDIN的资料一般都会被列出到屏幕上。但如果加上<code>-n</code>参数后，则只有经过sed特殊处理的那一行(或者动作)才会被列出来。<br>-e∶直接在指令列模式上进行sed的动作编辑；或者需要在sed命令行上执行多个命令；例如<code>sed -e &#39;s/brown/green/; s/dog/cat/&#39; test.txt</code>；<br>-f∶直接将sed的动作写在一个档案内，<code>-f filename</code>则可以执行 filename 内的sed 动作；<br>-r∶sed的动作支援的是延伸型正规表示法的语法。(预设是基础正规表示法语法)<br>-i∶直接修改读取的档案内容，而不是由屏幕输出。 </p>\n<h3 id=\"常用命令\"><a href=\"#常用命令\" class=\"headerlink\" title=\"常用命令\"></a>常用命令</h3><p>a：新增，a的后面可以接字串，而这些字串会在新的一行出现(目前的下一行)<br>c：取代，c的后面可以接字串，这些字串可以取代n1,n2之间的行<br>d：删除，由于是删除，所以d后面通常不接任何符号<br>g：新文本将会替换所有匹配的文本<br>i：插入，i的后面可以接字串，而这些字串会在新的一行出现(目前的上一行)<br>l：打印数据流中的文本和不可打印的ASCII字符<br>p：打印，即将某个匹配的字符串打印。通常p会与参数 sed -n 一起使用<br>r：将一个独立文件中的数据插入到数据流中<br>s：替换，直接将匹配的字符串进行替换。通常与正则表达式一起使用<br>w file：将替换的结果写到文件中</p>\n<h3 id=\"使用文本过滤器\"><a href=\"#使用文本过滤器\" class=\"headerlink\" title=\"使用文本过滤器\"></a>使用文本过滤器</h3><p>格式如下：</p>\n<blockquote>\n<p>/pattern/command</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sed &apos;/jimmy/s/bash/csh/&apos; /etc/passwd</span><br></pre></td></tr></table></figure>\n<h3 id=\"sed进阶\"><a href=\"#sed进阶\" class=\"headerlink\" title=\"sed进阶\"></a>sed进阶</h3><h4 id=\"多行命令\"><a href=\"#多行命令\" class=\"headerlink\" title=\"多行命令\"></a>多行命令</h4><p>N：将数据流中的下一行加进来创建一个多行组来处理；<br>D：删除多行组中的一行；注意：D命令会强制sed编辑器返回到脚本的顶部，而不读取新的行；<br>P：打印多行组中的一行。</p>\n<p>next命令</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sed &apos;/head/&#123;n ; d&#125;&apos; data.txt\t\t#删除含有head行的下一行</span><br><span class=\"line\">sed &apos;/first/&#123;N ; s/\\n/ /&#125;&apos; data.txt     #将含有first的行以及下一行当作一行处理</span><br><span class=\"line\">sed &apos;N ; s/System.Administrator/Desktop User&apos; data.txt</span><br></pre></td></tr></table></figure>\n<p>多行删除</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sed &apos;/^$/&#123;N ; /header/D&#125;&apos; data.txt\t#首先找到空白行，然后将下一行合并到模式空间内，由于D只会删除模式空间里的第一行，所以只会删除含有header行前的空白行</span><br></pre></td></tr></table></figure>\n<p>多行打印</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sed -n &apos;N ; /System\\nAdministrator/P&apos; data.txt  #只打印多行模式空间中的第一行</span><br></pre></td></tr></table></figure>\n<h4 id=\"保持空间\"><a href=\"#保持空间\" class=\"headerlink\" title=\"保持空间\"></a>保持空间</h4><p>模式空间是一块活跃的缓冲区，在sed编辑器执行命令时它会保存待检查的文本。但它并不是sed编辑器保存文本的唯一空间。</p>\n<p>sed编辑器有另一块称作保持空间的缓冲区域。在处理模式空间中的某些行时，可以用保持空间来临时保存一些行。</p>\n<p>sed编辑器的保持空间命令：</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">命令</th>\n<th style=\"text-align:center\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">h</td>\n<td style=\"text-align:center\">将模式空间复制到保持空间</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">H</td>\n<td style=\"text-align:center\">将模式空间附加到保持空间</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">g</td>\n<td style=\"text-align:center\">将保持空间复制到模式空间</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">G</td>\n<td style=\"text-align:center\">将保持空间附加到模式空间</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">x</td>\n<td style=\"text-align:center\">交换模式空间和保持空间的内容</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sed -n &apos;/first/&#123;h ; n ; p; g; p&#125;&apos; data.txt\t#将含有first的行和后面一行交换顺序输出</span><br></pre></td></tr></table></figure>\n<h4 id=\"排除命令\"><a href=\"#排除命令\" class=\"headerlink\" title=\"排除命令\"></a>排除命令</h4><p>使用感叹号(!)来排除命令，即让原本会起作用的命令不起作用。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sed -n &apos;&#123;1!G ; h ; $p&#125;&apos; data.txt</span><br></pre></td></tr></table></figure>\n<h4 id=\"改变流\"><a href=\"#改变流\" class=\"headerlink\" title=\"改变流\"></a>改变流</h4><p>分支命令<code>b</code>，格式如下：<br>[address]b [label]</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sed &apos;&#123;2,3b; s/This is/Is this/; s/line./test?/&#125;&apos; data.txt\t#在第2、3行跳过替换</span><br></pre></td></tr></table></figure>\n<p>测试命令<code>t</code>，根据替换命令的结果跳转到某个标签，而不是根据地址进行跳转，格式如下：<br>[address]t [label]</p>\n<h4 id=\"模式替代\"><a href=\"#模式替代\" class=\"headerlink\" title=\"模式替代\"></a>模式替代</h4><p>使用<code>&amp;</code>符号用来代表替换命令中的匹配的模式</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ echo &quot;The cat sleeps in his hat.&quot; | sed &apos;s/.at/&quot;&amp;&quot;/g&apos;</span><br></pre></td></tr></table></figure>\n<p>sed使用圆括号来定义替换模式中的子模式。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ echo &quot;The System Administrator manual&quot; | sed &apos;s/\\(System\\) Administrator</span><br><span class=\"line\">/\\1 User/g&apos;</span><br></pre></td></tr></table></figure>\n<h3 id=\"实例\"><a href=\"#实例\" class=\"headerlink\" title=\"实例\"></a>实例</h3><h4 id=\"删除行\"><a href=\"#删除行\" class=\"headerlink\" title=\"删除行\"></a>删除行</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sed &apos;1d&apos; filename              #删除第一行 </span><br><span class=\"line\">sed &apos;$d&apos; filename              #删除最后一行</span><br><span class=\"line\">sed &apos;1,2d&apos; filename            #删除第一行到第二行</span><br><span class=\"line\">sed &apos;2,$d&apos; filename            #删除第二行到最后一行</span><br><span class=\"line\">sed &apos;/1/,/3/d&apos; filename        #在遇到数据行中有1时开始删除，遇到有3的行停止删除</span><br></pre></td></tr></table></figure>\n<h4 id=\"显示行\"><a href=\"#显示行\" class=\"headerlink\" title=\"显示行\"></a>显示行</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sed -n &apos;1p&apos; filename           #显示第一行 </span><br><span class=\"line\">sed -n &apos;$p&apos; filename           #显示最后一行</span><br><span class=\"line\">sed -n &apos;1,2p&apos; filename         #显示第一行到第二行</span><br><span class=\"line\">sed -n &apos;2,$p&apos; filename         #显示第二行到最后一行</span><br></pre></td></tr></table></figure>\n<h4 id=\"查询\"><a href=\"#查询\" class=\"headerlink\" title=\"查询\"></a>查询</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sed -n &apos;/centos/p&apos; filename    #查询包括关键字centos所在所有行</span><br><span class=\"line\">sed -n &apos;/\\$/p&apos; filename        #查询包括关键字$所在所有行，使用反斜线\\对特殊字符进行转义</span><br></pre></td></tr></table></figure>\n<h4 id=\"增加一行或多行字符串\"><a href=\"#增加一行或多行字符串\" class=\"headerlink\" title=\"增加一行或多行字符串\"></a>增加一行或多行字符串</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sed &apos;1a drink tea&apos; filename     #第一行后增加字符串&quot;drink tea&quot;</span><br><span class=\"line\">sed &apos;1,3a drink tea&apos; filename   #第一行到第三行后增加字符串&quot;drink tea&quot;</span><br><span class=\"line\">sed &apos;1a drink\\ncoffee&apos; filename #第一行后增加多行，使用换行符\\n</span><br></pre></td></tr></table></figure>\n<h4 id=\"替换一行或多行\"><a href=\"#替换一行或多行\" class=\"headerlink\" title=\"替换一行或多行\"></a>替换一行或多行</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sed &apos;1c Hi&apos; filename          #第一行代替为Hi</span><br><span class=\"line\">sed &apos;1,2c Hi&apos; filename        #第一行到第二行代替为Hi</span><br></pre></td></tr></table></figure>\n<h4 id=\"替换一行中的某部分\"><a href=\"#替换一行中的某部分\" class=\"headerlink\" title=\"替换一行中的某部分\"></a>替换一行中的某部分</h4><blockquote>\n<p>格式<br>  sed ‘s/要替换的字符串/新的字符串/g’   (要替换的字符串可以用正则表达式)</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sed -n &apos;/centos/p&apos; filename | sed &apos;s/centos/redhat/g&apos;    #替换centos为redhat</span><br><span class=\"line\">sed -n &apos;/centos/p&apos; filename | sed &apos;s/centos//g&apos;          #删除centos</span><br><span class=\"line\">sed &apos;s/test/trial/2&apos; data.txt\t\t\t         #只替换每行第二次出现的test</span><br></pre></td></tr></table></figure>\n<h4 id=\"插入\"><a href=\"#插入\" class=\"headerlink\" title=\"插入\"></a>插入</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sed -i &apos;$a bye&apos; filename   #在文件filenamede 最后一行直接输入&quot;bye&quot;</span><br><span class=\"line\">sed -n &apos;2,$p&apos; filename     #显示第二行到最后一行</span><br></pre></td></tr></table></figure>\n<h4 id=\"转换\"><a href=\"#转换\" class=\"headerlink\" title=\"转换\"></a>转换</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sed &apos;y/123/789/&apos; test.txt                   将1替换为7,2替换为8,3替换为9</span><br></pre></td></tr></table></figure>\n<h3 id=\"习题\"><a href=\"#习题\" class=\"headerlink\" title=\"习题\"></a>习题</h3><ol>\n<li><p>从ip addr中找到当前主机的ip</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ip addr|sed -nr &apos;s/.*inet (.*)\\/24.*$/\\1/gp&apos;</span><br><span class=\"line\">192.168.17.131</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>将/etc/passwd第一项和最后一项互换</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat /etc/passwd | sed -nr &apos;s/(.*)(:x.*:)(.*$)/\\3\\2\\1/gp&apos;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>加倍行间距</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sed &apos;$!G&apos; data.txt</span><br><span class=\"line\">#如果文本中本身就有空白行</span><br><span class=\"line\">$ sed &apos;/^$/d; $!G&apos; data.txt</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>给文件中的行编号</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sed &quot;=&quot; data.txt | sed &apos;N; s/\\n/ /g&apos;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>打印文件末尾的若干行</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sed &apos;&#123;</span><br><span class=\"line\">  :start</span><br><span class=\"line\">  $q; N ; 11,$D</span><br><span class=\"line\">  b start</span><br><span class=\"line\">  &#125;&apos; data.txt</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>删除连续的空白行</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sed &apos;/./,/^$/!d&apos; data.txt</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>删除开头的空白行</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sed &apos;/./,$!d&apos; data.txt</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>删除结尾的空白行</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sed &apos;&#123;</span><br><span class=\"line\">  :start</span><br><span class=\"line\">  /^\\n*$/&#123;$d ; N ; b start&#125;</span><br><span class=\"line\">  &#125;&apos; data.txt</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>删除HTML标签</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sed &apos;s/&lt;[^&gt;]*&gt;//g ; /^$/d&apos; data.txt</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<p>sed是一种流编辑器，它是文本处理中常营的工具，能够完美的配合正则表达式使用。处理时，把当前处理的行存储在临时缓冲区中，称为“模式空间”（pattern space），接着用sed命令处理缓冲区中的内容，处理完成后，把缓冲区的内容送往屏幕。接着处理下一行，这样不断重复，直到文件末尾。文件内容并没有 改变，除非你使用重定向存储输出。Sed主要用来自动编辑一个或多个文件；简化对文件的反复操作；编写转换程序等。</p>\n<h3 id=\"命令格式\"><a href=\"#命令格式\" class=\"headerlink\" title=\"命令格式\"></a>命令格式</h3><p>sed [-nefri] ‘command’ 输入文本</p>\n<h3 id=\"常用选项\"><a href=\"#常用选项\" class=\"headerlink\" title=\"常用选项\"></a>常用选项</h3><p>-n∶使用安静(silent)模式。在一般 sed 的用法中，所有来自STDIN的资料一般都会被列出到屏幕上。但如果加上<code>-n</code>参数后，则只有经过sed特殊处理的那一行(或者动作)才会被列出来。<br>-e∶直接在指令列模式上进行sed的动作编辑；或者需要在sed命令行上执行多个命令；例如<code>sed -e &#39;s/brown/green/; s/dog/cat/&#39; test.txt</code>；<br>-f∶直接将sed的动作写在一个档案内，<code>-f filename</code>则可以执行 filename 内的sed 动作；<br>-r∶sed的动作支援的是延伸型正规表示法的语法。(预设是基础正规表示法语法)<br>-i∶直接修改读取的档案内容，而不是由屏幕输出。 </p>\n<h3 id=\"常用命令\"><a href=\"#常用命令\" class=\"headerlink\" title=\"常用命令\"></a>常用命令</h3><p>a：新增，a的后面可以接字串，而这些字串会在新的一行出现(目前的下一行)<br>c：取代，c的后面可以接字串，这些字串可以取代n1,n2之间的行<br>d：删除，由于是删除，所以d后面通常不接任何符号<br>g：新文本将会替换所有匹配的文本<br>i：插入，i的后面可以接字串，而这些字串会在新的一行出现(目前的上一行)<br>l：打印数据流中的文本和不可打印的ASCII字符<br>p：打印，即将某个匹配的字符串打印。通常p会与参数 sed -n 一起使用<br>r：将一个独立文件中的数据插入到数据流中<br>s：替换，直接将匹配的字符串进行替换。通常与正则表达式一起使用<br>w file：将替换的结果写到文件中</p>\n<h3 id=\"使用文本过滤器\"><a href=\"#使用文本过滤器\" class=\"headerlink\" title=\"使用文本过滤器\"></a>使用文本过滤器</h3><p>格式如下：</p>\n<blockquote>\n<p>/pattern/command</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sed &apos;/jimmy/s/bash/csh/&apos; /etc/passwd</span><br></pre></td></tr></table></figure>\n<h3 id=\"sed进阶\"><a href=\"#sed进阶\" class=\"headerlink\" title=\"sed进阶\"></a>sed进阶</h3><h4 id=\"多行命令\"><a href=\"#多行命令\" class=\"headerlink\" title=\"多行命令\"></a>多行命令</h4><p>N：将数据流中的下一行加进来创建一个多行组来处理；<br>D：删除多行组中的一行；注意：D命令会强制sed编辑器返回到脚本的顶部，而不读取新的行；<br>P：打印多行组中的一行。</p>\n<p>next命令</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sed &apos;/head/&#123;n ; d&#125;&apos; data.txt\t\t#删除含有head行的下一行</span><br><span class=\"line\">sed &apos;/first/&#123;N ; s/\\n/ /&#125;&apos; data.txt     #将含有first的行以及下一行当作一行处理</span><br><span class=\"line\">sed &apos;N ; s/System.Administrator/Desktop User&apos; data.txt</span><br></pre></td></tr></table></figure>\n<p>多行删除</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sed &apos;/^$/&#123;N ; /header/D&#125;&apos; data.txt\t#首先找到空白行，然后将下一行合并到模式空间内，由于D只会删除模式空间里的第一行，所以只会删除含有header行前的空白行</span><br></pre></td></tr></table></figure>\n<p>多行打印</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sed -n &apos;N ; /System\\nAdministrator/P&apos; data.txt  #只打印多行模式空间中的第一行</span><br></pre></td></tr></table></figure>\n<h4 id=\"保持空间\"><a href=\"#保持空间\" class=\"headerlink\" title=\"保持空间\"></a>保持空间</h4><p>模式空间是一块活跃的缓冲区，在sed编辑器执行命令时它会保存待检查的文本。但它并不是sed编辑器保存文本的唯一空间。</p>\n<p>sed编辑器有另一块称作保持空间的缓冲区域。在处理模式空间中的某些行时，可以用保持空间来临时保存一些行。</p>\n<p>sed编辑器的保持空间命令：</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">命令</th>\n<th style=\"text-align:center\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">h</td>\n<td style=\"text-align:center\">将模式空间复制到保持空间</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">H</td>\n<td style=\"text-align:center\">将模式空间附加到保持空间</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">g</td>\n<td style=\"text-align:center\">将保持空间复制到模式空间</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">G</td>\n<td style=\"text-align:center\">将保持空间附加到模式空间</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">x</td>\n<td style=\"text-align:center\">交换模式空间和保持空间的内容</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sed -n &apos;/first/&#123;h ; n ; p; g; p&#125;&apos; data.txt\t#将含有first的行和后面一行交换顺序输出</span><br></pre></td></tr></table></figure>\n<h4 id=\"排除命令\"><a href=\"#排除命令\" class=\"headerlink\" title=\"排除命令\"></a>排除命令</h4><p>使用感叹号(!)来排除命令，即让原本会起作用的命令不起作用。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sed -n &apos;&#123;1!G ; h ; $p&#125;&apos; data.txt</span><br></pre></td></tr></table></figure>\n<h4 id=\"改变流\"><a href=\"#改变流\" class=\"headerlink\" title=\"改变流\"></a>改变流</h4><p>分支命令<code>b</code>，格式如下：<br>[address]b [label]</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sed &apos;&#123;2,3b; s/This is/Is this/; s/line./test?/&#125;&apos; data.txt\t#在第2、3行跳过替换</span><br></pre></td></tr></table></figure>\n<p>测试命令<code>t</code>，根据替换命令的结果跳转到某个标签，而不是根据地址进行跳转，格式如下：<br>[address]t [label]</p>\n<h4 id=\"模式替代\"><a href=\"#模式替代\" class=\"headerlink\" title=\"模式替代\"></a>模式替代</h4><p>使用<code>&amp;</code>符号用来代表替换命令中的匹配的模式</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ echo &quot;The cat sleeps in his hat.&quot; | sed &apos;s/.at/&quot;&amp;&quot;/g&apos;</span><br></pre></td></tr></table></figure>\n<p>sed使用圆括号来定义替换模式中的子模式。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ echo &quot;The System Administrator manual&quot; | sed &apos;s/\\(System\\) Administrator</span><br><span class=\"line\">/\\1 User/g&apos;</span><br></pre></td></tr></table></figure>\n<h3 id=\"实例\"><a href=\"#实例\" class=\"headerlink\" title=\"实例\"></a>实例</h3><h4 id=\"删除行\"><a href=\"#删除行\" class=\"headerlink\" title=\"删除行\"></a>删除行</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sed &apos;1d&apos; filename              #删除第一行 </span><br><span class=\"line\">sed &apos;$d&apos; filename              #删除最后一行</span><br><span class=\"line\">sed &apos;1,2d&apos; filename            #删除第一行到第二行</span><br><span class=\"line\">sed &apos;2,$d&apos; filename            #删除第二行到最后一行</span><br><span class=\"line\">sed &apos;/1/,/3/d&apos; filename        #在遇到数据行中有1时开始删除，遇到有3的行停止删除</span><br></pre></td></tr></table></figure>\n<h4 id=\"显示行\"><a href=\"#显示行\" class=\"headerlink\" title=\"显示行\"></a>显示行</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sed -n &apos;1p&apos; filename           #显示第一行 </span><br><span class=\"line\">sed -n &apos;$p&apos; filename           #显示最后一行</span><br><span class=\"line\">sed -n &apos;1,2p&apos; filename         #显示第一行到第二行</span><br><span class=\"line\">sed -n &apos;2,$p&apos; filename         #显示第二行到最后一行</span><br></pre></td></tr></table></figure>\n<h4 id=\"查询\"><a href=\"#查询\" class=\"headerlink\" title=\"查询\"></a>查询</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sed -n &apos;/centos/p&apos; filename    #查询包括关键字centos所在所有行</span><br><span class=\"line\">sed -n &apos;/\\$/p&apos; filename        #查询包括关键字$所在所有行，使用反斜线\\对特殊字符进行转义</span><br></pre></td></tr></table></figure>\n<h4 id=\"增加一行或多行字符串\"><a href=\"#增加一行或多行字符串\" class=\"headerlink\" title=\"增加一行或多行字符串\"></a>增加一行或多行字符串</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sed &apos;1a drink tea&apos; filename     #第一行后增加字符串&quot;drink tea&quot;</span><br><span class=\"line\">sed &apos;1,3a drink tea&apos; filename   #第一行到第三行后增加字符串&quot;drink tea&quot;</span><br><span class=\"line\">sed &apos;1a drink\\ncoffee&apos; filename #第一行后增加多行，使用换行符\\n</span><br></pre></td></tr></table></figure>\n<h4 id=\"替换一行或多行\"><a href=\"#替换一行或多行\" class=\"headerlink\" title=\"替换一行或多行\"></a>替换一行或多行</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sed &apos;1c Hi&apos; filename          #第一行代替为Hi</span><br><span class=\"line\">sed &apos;1,2c Hi&apos; filename        #第一行到第二行代替为Hi</span><br></pre></td></tr></table></figure>\n<h4 id=\"替换一行中的某部分\"><a href=\"#替换一行中的某部分\" class=\"headerlink\" title=\"替换一行中的某部分\"></a>替换一行中的某部分</h4><blockquote>\n<p>格式<br>  sed ‘s/要替换的字符串/新的字符串/g’   (要替换的字符串可以用正则表达式)</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sed -n &apos;/centos/p&apos; filename | sed &apos;s/centos/redhat/g&apos;    #替换centos为redhat</span><br><span class=\"line\">sed -n &apos;/centos/p&apos; filename | sed &apos;s/centos//g&apos;          #删除centos</span><br><span class=\"line\">sed &apos;s/test/trial/2&apos; data.txt\t\t\t         #只替换每行第二次出现的test</span><br></pre></td></tr></table></figure>\n<h4 id=\"插入\"><a href=\"#插入\" class=\"headerlink\" title=\"插入\"></a>插入</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sed -i &apos;$a bye&apos; filename   #在文件filenamede 最后一行直接输入&quot;bye&quot;</span><br><span class=\"line\">sed -n &apos;2,$p&apos; filename     #显示第二行到最后一行</span><br></pre></td></tr></table></figure>\n<h4 id=\"转换\"><a href=\"#转换\" class=\"headerlink\" title=\"转换\"></a>转换</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sed &apos;y/123/789/&apos; test.txt                   将1替换为7,2替换为8,3替换为9</span><br></pre></td></tr></table></figure>\n<h3 id=\"习题\"><a href=\"#习题\" class=\"headerlink\" title=\"习题\"></a>习题</h3><ol>\n<li><p>从ip addr中找到当前主机的ip</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ip addr|sed -nr &apos;s/.*inet (.*)\\/24.*$/\\1/gp&apos;</span><br><span class=\"line\">192.168.17.131</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>将/etc/passwd第一项和最后一项互换</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat /etc/passwd | sed -nr &apos;s/(.*)(:x.*:)(.*$)/\\3\\2\\1/gp&apos;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>加倍行间距</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sed &apos;$!G&apos; data.txt</span><br><span class=\"line\">#如果文本中本身就有空白行</span><br><span class=\"line\">$ sed &apos;/^$/d; $!G&apos; data.txt</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>给文件中的行编号</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sed &quot;=&quot; data.txt | sed &apos;N; s/\\n/ /g&apos;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>打印文件末尾的若干行</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sed &apos;&#123;</span><br><span class=\"line\">  :start</span><br><span class=\"line\">  $q; N ; 11,$D</span><br><span class=\"line\">  b start</span><br><span class=\"line\">  &#125;&apos; data.txt</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>删除连续的空白行</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sed &apos;/./,/^$/!d&apos; data.txt</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>删除开头的空白行</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sed &apos;/./,$!d&apos; data.txt</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>删除结尾的空白行</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sed &apos;&#123;</span><br><span class=\"line\">  :start</span><br><span class=\"line\">  /^\\n*$/&#123;$d ; N ; b start&#125;</span><br><span class=\"line\">  &#125;&apos; data.txt</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>删除HTML标签</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sed &apos;s/&lt;[^&gt;]*&gt;//g ; /^$/d&apos; data.txt</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n"},{"title":"Linux shell的实用脚本","date":"2018-02-12T01:56:15.000Z","modified":null,"_content":"\n### 归档\n\n\n","source":"_posts/Linux-shell-script.md","raw":"---\ntitle: Linux shell的实用脚本\ndate: 2018-02-12 09:56:15\nmodified:\ncategories:\n- Linux\ntags:\n- Shell\n- Linux\n---\n\n### 归档\n\n\n","slug":"Linux-shell-script","published":1,"updated":"2018-02-12T02:11:07.936Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjir2nrm6000c9xaswl53gnz5","content":"<h3 id=\"归档\"><a href=\"#归档\" class=\"headerlink\" title=\"归档\"></a>归档</h3>","site":{"data":{}},"excerpt":"","more":"<h3 id=\"归档\"><a href=\"#归档\" class=\"headerlink\" title=\"归档\"></a>归档</h3>"},{"title":"Linux的shell编程","date":"2018-02-04T04:00:56.000Z","modified":null,"_content":"\n### 创建shell脚本文件\n\n在创建shell脚本文件时，必须在文件的第一行指定要使用的shell。其格式为\n\n> #!/bin/bash\n  注意：shell只会去处理第一行注释行，并不会处理其他的注释行。\n\n创建shell脚本文件后，给文件添加执行权限\n\n> chmod u+x filename\n\n如果想把脚本中的文本字符串和命令输出显示在同一行中，可以用echo语句的-n参数\n\n> echo -n \"The time and date are: \"\n  date\n\n使用等号将值赋给用户变量时，在变量、等号和值之间不能出现空格。\n\n> testing=\\`date\\`\n  testing=$(date)\n\n引用一个变量值时需要使用$，而引用变量来对其进行赋值时则不要使用$：\n\n> value1=10\n  value2=$value1\n  \\# 注意：没有使用$，shell会将变量名解释成普通的文本字符串。\n\n#### 命令替换\n\n有两种方法可以将命令输出赋给变量：\n\n1. 反引号字符\\`\\`\n\n2. $\\(\\)格式\n\n  ```\n  testing=`date`\n  testing=$(date)\n  echo \"The date and time are: \" $testing\n\n  today=$(date +%y%m%d)\n  ls /usr/bin -al > log.$today\n  ```\n\n#### 重定向\n\n重定向包括输出重定向`>  >>`以及输入重定向`<  <<`\n\n> 内联输入重定向\n\n#### 执行数学运算\n\n##### expr命令\n\n```\nexpr 1 + 5\n6\n```\n\n##### 使用方括号\n\n如果需要将一个数学运算结果赋给某个变量，可以用美元符和方括号：\n\n```\nvar1=100\nvar2=50\nvar3=30\nvar4=$[$var1 * ($var3 - $var2)]\n```\n\n> 需要注意的是，bash shell数学运算符只支持整数运算。\n\n##### 浮点解决方案\n\n在脚本中使用bc，基本格式如下：\n\n> variable=$(echo \"options; expression\" | bc)\n\n```\nvar1=20\nvar2=3.14159\nvar3=$(echo \"scale=4; $var1 * var2\" | bc)\n```\n\n```\nvar1=10.46\nvar2=43.67\nvar3=33.2\nvar4=71\n\nvar5=$(bc << EOF\nscale = 4\na1 = ($var1 * $var2)\nb1 = ($var3 * $var4)\na1 + b1\nEOF\n)\n\necho $var5\n```\n\n#### 退出脚本\n\n退出状态码的查看`$?`\n\n|状态码|描述|\n|:---:|:---:|\n|0|命令成功结束|\n|1|通用未知错误|\n|2|误用Shell命令|\n|126|命令不可执行|\n|127|没找到命令|\n|128|无效退出参数|\n|128+x|Linux信号x的严重错误|\n|130|命令通过Ctrl+C控制码越界|\n|255|退出码越界|\n\nexit命令\n\n\n### 结构化命令\n\n#### if-then\n\n```\nif command; then\n  commands\nfi\n```\n\n```\nif pwd; then\n  echo \"It worked\"\nfi\n```\n\n#### if-then-else\n\n```\nif command\nthen \n  commands\nelse\n  commands\nfi\n```\n\n#### 嵌套if\n\n```\nif command1\nthen\n  commands\nelse\n  if command2\n  then\n    more commands\n  else\n    more commands\n  fi\nfi\n```\n\n```\nif command1\nthen\n  commands\nelif command2\nthen\n  more commands\nfi\n```\n\n#### test命令\n\n如果test命令中列出的条件成立，test命令就会退出并返回退出状态码0。\n\n> test condition\n\n或者可以用在`if-then`语句中\n\n```\nif test condition\nthen\n  commands\nfi\n```\n\n也可以使用方括号进行测试\n\n```\nif [ condition ]\nthen\n  commands\nfi\n```\n\n##### 数值比较\n\n|比较|描述|\n|:---:|:---:|\n|n1 -eq n2|检查n1是否等于n2|\n|n1 -ge n2|检查n1是否大于等于n2|\n|n1 -gt n2|检查n1是否大于n2|\n|n1 -le n2|检查n1是否小于等于n2|\n|n1 -lt n2|检查n1是否小于n2|\n|n1 -ne n2|检查n1是否不等于n2|\n\n##### 字符串比较\n\n|比较|描述|\n|:---:|:---:|\n|str1 = str2|检查字符串是否相同|\n|str1 != str2|检查字符串是否不同|\n|str1 < str2|检查str1是否比str2大|\n|str1 \\> str2|检查str1是否比str2小|\n|-n str1|检查str1的长度是否非0|\n|-z str1|检查str1的长度是否为0|\n\n> 需要注意的是，大于号和小于号在使用时需要转义\n\n##### 文件比较\n\n|比较|描述|\n|:---:|:---:|\n|-e file|如果file存在，则为真|\n|-d file|如果file存在并为目录，则为真|\n|-f file|如果file为常规文件，则为真|\n|-r file|如果file存在并可读，则为真|\n|-s file|如果file存在并非空，则为真|\n|-w file|如果file存在并可写，则为真|\n|-x file|如果file存在并可执行，则为真|\n|-O file|如果file存在并属于当前用户，则为真|\n|-G file|如果file存在并且默认组与当前用户相同，则为真|\n|file1 -nt file2|如果file1比file2新，则为真|\n|file1 -ot file2|如果file1比file2旧，则为真|\n\n##### 复合条件测试\n\nif-then可以用`&&`和`||`来组合测试\n\n#### if-then的高级特性\n\n##### 使用双括号\n\n双括号命令允许你在比较过程中使用高级数学表达式。其格式如下：\n> ((expression))\n\n双括号命令符号包括以下：\nval++，val--，++val，--val，!，~，**(幂运算)，<<，>>，&，|，&&，||\n\n##### 使用双方括号\n\n双方括号命令提供了针对字符串比较的高级特性。其格式如下：\n> [[expression]]\n\n```\nif [[ $USER == r* ]]\n```\n\n#### case命令\n\n```\ncase variable in\npattern1 | pattern2) commands1;;\npattern3) commands2;;\n*) default commands;;\nesac\n```\n\n#### for命令\n\n```\nfor var in list\ndo\n  commands\ndone\n```\n\nfor循环假定每个值都是用空格分割的。\n可以使用内部字段分隔符`IFS`来自定义分隔符，例如\n\n> IFS=$'\\n'\n  IFS=$'\\n':;\"\n\n##### C语言分隔的for命令\n\n命令格式：\n> for (( variable assignment ; condition ; iteration process ))\n\n#### while命令\n\nwhile命令的基本格式：\n\n```\nwhile test command\ndo\n  other commands\ndone\n```\n\n#### until命令\n\nuntil命令和while命令正好相反，只有测试命令的退出状态码不为0，bash shell才会执行循环中列出的命令。\n\n命令格式：\n\n```\nuntil test commands\ndo\n  other commands\ndone\n```\n\n#### 循环处理文件数据\n\n需要使用嵌套循环以及修改IFS环境变量\n\n```\nIFS.OLD=$IFS\nIFS=$'\\n'\nfor entry in $(cat /etc/passwd)\ndo\n  echo \"Value in $entry\"\n  IFS=:\n  for value in $entry\n  do\n    if [ -n \"$value\" ]\n    then\n      echo \"$value\"\n    fi\n  done\ndone\n```\n\n#### 控制循环\n\n##### break命令\n\n可以用break退出任意的循环，包括while和until循环。\n也可以使用`break -n`跳出外部循环，默认为1。\n\n##### continue命令\n\ncontinue命令可以提前终止某次循环中的命令，但并不会完全终止整个循环。\n也可以使用`continue -n`继续执行哪一层循环。\n\n#### 处理循环的输出\n\n可以对循环的输出使用管道或重定向。通过在done命令之后添加一个处理命令来实现。\n\n> done > output.txt\n\n#### 例子\n\n创建多个用户账户\n\n```\ninput=\"user.csv\"\nwhile IFS=\",\" read -r userid name\ndo\n  echo \"adding $userid\"\n  useradd -c \"$name\" -m \"userid\" \ndone < \"$input\"\n```\n\n### 处理用户输入\n\n#### 命令行参数\n\n向shell脚本传递数据的最基本方法是使用命令行参数。\n命令行参数允许在运行脚本时向命令行添加数据。\n\n```\n./test.sh 10 abc\n```\n\nbash shell会将一些位置参数的特殊变量分配给输入到命令行中的所有参数。这也包括shell所执行的脚本\n命令。其中：`$0`是程序名，`$1`是第一个参数，`$2`是第二个参数，一直到`$9`。\n\n在使用时，需要用空格将每个命令行参数分隔开，例如:\n\n```\ncount=$[ $1 * $2 ]\n```\n\n注意，当命令行参数中出现空格时，需要使用引号：\n\n```\n./test1.sh 'hello world'\n```\n\n如果命令行参数的数量超过9个时，从第十个参数开始，需要使用花括号，例如`${10}`、`${11}`等。\n\n使用`basename`命令可以返回不包含路径的脚本名，例如：\n\n```\necho \"$0\"\necho \"$(basename $0)\"\n```\n\n在使用命令行参数的脚本中，需要先检测其中是否存在数据：\n\n```\nif [ -n \"$1\" ]\n```\n\n#### 特殊的参数变量\n\n特殊变量`$#`含有脚本运行时携带的命令行参数的个数，例如：\n\n```\necho There are $# parameters supplied.\n```\n\n使用$&#123;!#&#125;可以返回最后一个命令行参数的值，如果命令行参数的个数为0，则返回当前脚本的名称。\n\n使用`$*`和`$@`可以访问所有的参数。其中`$*`变量会将命令行上提供的所有参数当作一个单词保存。这个单词包括了命令行中出现的每一个参数值；`$@`变量会将命令行上所有参数当作同一个字符串中的多个独立的单词，然后通过遍历获取所有的参数值。\n\n```\ncount=1\nfor param in \"$*\"\ndo\n  echo \"\\$* parameter #count = $param\"\n  count=$[ $count + 1 ]\ndone\necho\ncount=1\nfor param in \"$@\"\ndo\n  echo \"\\$@ parameter #count = $param\"\n  count=$[ $count + 1 ]\ndone\n```\n\n#### 移动变量\n\nbash shell的`shift`命令可以用来操作命令行参数，shift命令会根据命令行参数的相对位置来移动。\n在默认情况下，会将每个参数变量向左移动一个位置。其中$2的值会移动到$1，而$1的值则会被删除，$0不会改变。\n\n```\nwhile [ -n \"$1\" ]\ndo\n  echo \"$1\"\n  shift\ndone\n```\n\n也可以一次性移动多个位置\n\n> shift n\n\n#### 处理选项\n\n选项是跟在单破折号后面的单个字母，可以用来改变命令的行为。\n可以使用`--`来表明选项列表结束。\n\n##### getopt命令\n\ngetopt命令能够识别命令行参数，从而在脚本中解析更加方便。\n\n命令格式：\n\n> getopt optstring parameters\n  其中optstring定义了命令行有效的选项字母，还定义了哪些选项字母需要参数值。\n\n```\ngetopt ab:cd -a -b test1 -cd test2 test3\n-a -b test1 -c -d -- test2 test3\n```\n\n> 如果指定了一个不再optstring中的选项，默认情况下，getopt命令会产生一条错误消息。可以在命令后加-q忽略。\n\n在脚本中使用getopt\n\n> set -- $(getopt -q ab:cd \"$@\")\n\n##### getopts命令\n\n命令格式如下：\n\n> getopts optstring variable\n\n如果选项需要跟一个参数值，`OPTARG`环境变量就会保存这个值。`OPTIND`环境变量保存了参数列表中getopts正在处理的参数位置。\n\n#### 获取用户输入\n\n使用`read`命令获取用户输入。\n\nread命令从标准输入或另一个文件描述符接收输入。在收到输入后，read命令会将数据放进一个变量。\n\n```\nread -p \"Enter your name: \" first last\necho $last, $first\n```\n\n如果在read命令行中不指定变量，那么read命令会将它收到的任何数据都放进特殊环境变量`REPLY`中：\n\n```\nread -p \"Enter your name: \"\necho $REPLY\n```\n\n> 在使用read命令时，需要注意超时时间，可以使用-t选项来指定计时器\n\n```\nread -t 5 -p \"Please enter your name: \" name\n```\n\n如果需要隐藏输入的值时，可以使用`-s`选项。\nread在读取文件时，每次从文件中读取一行文本，当文件中没有内容时，read命令将会退出并返回非零退出状态码。\n\n```\ncat test | while read line\n```\n\n### 呈现数据\n\n|文件描述符|缩写|描述|\n|:---:|:---:|:---:|\n|0|STDIN|标准输入|\n|1|STDOUT|标准输出|\n|2|STDERR|标准错误|\n\n默认情况下，STDERR文件描述符和STDOUT文件描述符指向同样的地方。\n\n只重定向错误：\n\n> ls -al errorfile 2> test\n\n重定向错误和数据：\n\n> ls -al test.txt errorfile 2>test 1>test1\n\n同时重定向STDERR和STDOUT：\n\n> ls -al test.txt errorfile &>test2\n\n如果需要重定向到某个文件描述符时，必须在文件描述符之前加一个`&`：\n\n```\necho \"This is an error\" >&2\n```\n\n可以使用`exec`命令进行永久重定向：\n\n```\nexec 1> testout\nexec 0< testin\n```\n\n关闭文件描述符：\n\n```\nexec 3>&-\n```\n\n如果需要阻止命令输出，可以将STDERR重定向到`/dev/null`。\n\n也可以在/tmp目录中创建临时文件或文件夹。使用`mktemp`在本地目录创建临时文件。创建时，只需要指定一个临时模板：\n\n```\n#在当前目录创建临时文件，并返回文件名\nmktemp testing.xxxxxx\n#在系统临时目录创建临时文件，并返回全路径\nmktemp -t tmp.xxxxxx\n#在当前目录创建临时文件夹，并返回文件夹名\nmktemp -d dir.xxxxxx\n```\n\n使用`tee`命令可以将输出同时发送到显示器和日志文件中\n\n> date | tee testfile\n  \\#将文件进行追加，使用-a选项\n  date | tee -a testfile\n\n#### 实例\n\n```\n#!/bin/bash\n\noutputfile=\"person.sql\"\nIFS=','\n\nwhile read name age address\ndo\n  cat >> $outputfile << EOF\n  insert into person(name,age,address) values('$name','$age','$address');\n  EOF\ndone < $1\n```\n\n> ./test.sh testfile\n\n### 脚本控制\n\n#### 处理信号\n\n常用的Linux信号如下：\n\n|信号|值|描述|\n|:---:|:---:|:---:|\n|1|SIGHUP|挂起进程|\n|2|SIGINT|终止进程|\n|3|SIGQUIT|停止进程|\n|9|SIGKILL|无条件终止进程|\n|15|SIGTERM|尽可能终止进程|\n|17|SIGSTOP|无条件停止进程，但不是终止进程|\n|18|SIGTSTP|停止或暂停进程，但不终止进程|\n|19|SIGCONT|继续运行停止的进程|\n\n`Ctrl+Z`组合键会生成一个`SIGTSTP`信号，停止shell中运行的任何进程。停止进程会让程序继续保留在内存中，并能从上次停止的位置继续运行。\n\n使用`exit`退出停止的作业，使用`ps -l`查看已停止的作业。\n\n可以使用`trap`命令来捕获信号，其命令格式为：\n\n> trap command signals\n\n或者在trap命令后加上`EXIT`信号来捕获脚本的退出：\n\n```\ntrap \"echo end...\" EXIT\n```\n\n也可以重新使用带有选项的trap命令在脚本中的不同位置进行不同的捕获处理。\n\n#### 以后台模式运行脚本\n\n直接在命令后面添加`&`即可：\n\n> ./test.sh &\n\n注意：在ps命令的输出中，每一个后台进程都和终端会话终端联系在一起。如果终端会话退出，那么后台进程也会随之退出。\n\n此时可以使用`nohup`命令来阻止后台进程在终端退出时也一起终止：\n\n> nohup ./test.sh &\n\n#### 作业控制\n\n作业控制：启动、停止终止以及恢复作业的功能。\n\n使用`jobs`命令查看shell当前正在处理的作业。jobs命令参数如下：\n\n|参数|描述|\n|:---:|:---:|\n|-l|列出进程的PID以及作业号|\n|-n|只列出上次shell发出的通知后改变了状态的作业|\n|-p|只列出作业的PID|\n|-r|只列出运行中的作业|\n|-s|只列出已停止的作业|\n\n如果要以后台模式重启一个作业，可以用`bg`命令加上作业号：\n\n> bg 2\n\n如果要以前台模式重启一个作业，可以用`fg`命令加上作业号：\n\n> fg 2\n\n#### 调整优先级\n\n调度优先级：内核分配给进程的CPU时间。\n调度优先级是一个整数值，从-20(最高优先级)到+19(最低优先级)。默认情况下以优先级0来启动所有进程。\n\n使用`nice`命令设置命令启动时的调度优先级，例如：\n\n> nice -n 10 ./test.sh > test.out &\n\n使用`renice`命令改变运行中进程的PID，例如：\n\n> renice -n 10 -p 8888\n\n#### 定时运行作业\n\n使用`at`命令来计划执行作业。at命令会将作业提交到队列中，指定shell何时运行该作业。\nat命令的格式如下：\n\n> at [-f filename] time\n\n当作业在运行时，Linux系统会将提交该作业的用户的电子邮件地址作为STDOUT和STDERR。所以需要在脚本中对输出进行重定向。\n\n使用`atq`命令查看系统中有哪些作业在等待。\n\n使用`atrm`命令来删除等待中的作业。\n\n##### 使用cron程序\n\nLinux系统使用cron程序来安排要定期执行的作业。cron程序会在后台运行并检查一个特殊的表，以获知已安排执行的作业。\n\ncron时间表的格式如下：\n\n> min hour dayofmonth month dayof week command\n\n如果想在每天下午15:20执行某个文件，可以设置为：\n\n> 20 15 \\* \\* \\* \\* /home/zyj/shell/tesh.sh > test.out\n\n使用crontab命令来处理cron时间表。\n\n### 函数\n\n#### 基本函数\n\n创建函数\n\n```\nfunction name {\n    commands\n}\n```\n\n#### 在函数中使用变量\n\n向函数传递参数\n在脚本中指定函数时，必须将参数和函数放在同一行，例如：\n\n> func1 $value1 10\n\n```\n#!/bin/bash\n\nfunction add {\n  if [ $# -eq 0] || [ $# -gt 2]\n  then\n    echo -1\n  elif [ $# -eq 1 ]\n  then\n    echo $[ $1 + $1 ]\n  else \n    echo $[ $1 + $2 ]\n  fi\n}\n\nvalue1=$(add 10 15)\nvalue2=$(add 10)\nvalue3=$(add)\nvalue4=$(add 5 10 15)\necho $value1 $value2 $value3 $value4\n```\n\n#### 全局变量和局部变量\n\n使用`local`关键字定义局部变量。\n\n> local temp\n\nlocal关键字保证了变量只局限在该函数中。如果脚本中在该函数之外有同样名字的变量，那么shell将会保持这两个变量的值是分离的。\n\n#### 数组变量和函数\n\n向函数传递数组参数\n\n```\n#!/bin/bash\n\nfunction testArr {\n    local newArr\n    newArr=(\"$@\")\n    echo \"The new array is ${newArr[*]}\"\n}\n\nmyArr=(1 2 3 4 5)\ntestArr ${myArr[*]}\n```\n\n从函数返回数组\n\n#### 函数递归\n\n计算阶乘\n\n```\n#!/bin/bash\n\nfunction factorial {\n  if [ $1 -eq 1 ]\n  then\n    echo 1\n  else\n    local temp=$[ $1 - 1 ]\n    local result=$(factorial $temp)\n    echo $[ $result * $1 ]\n  fi\n}\n\nread -p \"Enter a number:\" value\nresult=$(factorial $value)\necho \"The result is: \" $result\n```\n\n","source":"_posts/Linux-shell.md","raw":"---\ntitle: Linux的shell编程\ndate: 2018-02-04 12:00:56\nmodified:\ncategories:\n- Linux\ntags:\n- Linux\n- Shell\n---\n\n### 创建shell脚本文件\n\n在创建shell脚本文件时，必须在文件的第一行指定要使用的shell。其格式为\n\n> #!/bin/bash\n  注意：shell只会去处理第一行注释行，并不会处理其他的注释行。\n\n创建shell脚本文件后，给文件添加执行权限\n\n> chmod u+x filename\n\n如果想把脚本中的文本字符串和命令输出显示在同一行中，可以用echo语句的-n参数\n\n> echo -n \"The time and date are: \"\n  date\n\n使用等号将值赋给用户变量时，在变量、等号和值之间不能出现空格。\n\n> testing=\\`date\\`\n  testing=$(date)\n\n引用一个变量值时需要使用$，而引用变量来对其进行赋值时则不要使用$：\n\n> value1=10\n  value2=$value1\n  \\# 注意：没有使用$，shell会将变量名解释成普通的文本字符串。\n\n#### 命令替换\n\n有两种方法可以将命令输出赋给变量：\n\n1. 反引号字符\\`\\`\n\n2. $\\(\\)格式\n\n  ```\n  testing=`date`\n  testing=$(date)\n  echo \"The date and time are: \" $testing\n\n  today=$(date +%y%m%d)\n  ls /usr/bin -al > log.$today\n  ```\n\n#### 重定向\n\n重定向包括输出重定向`>  >>`以及输入重定向`<  <<`\n\n> 内联输入重定向\n\n#### 执行数学运算\n\n##### expr命令\n\n```\nexpr 1 + 5\n6\n```\n\n##### 使用方括号\n\n如果需要将一个数学运算结果赋给某个变量，可以用美元符和方括号：\n\n```\nvar1=100\nvar2=50\nvar3=30\nvar4=$[$var1 * ($var3 - $var2)]\n```\n\n> 需要注意的是，bash shell数学运算符只支持整数运算。\n\n##### 浮点解决方案\n\n在脚本中使用bc，基本格式如下：\n\n> variable=$(echo \"options; expression\" | bc)\n\n```\nvar1=20\nvar2=3.14159\nvar3=$(echo \"scale=4; $var1 * var2\" | bc)\n```\n\n```\nvar1=10.46\nvar2=43.67\nvar3=33.2\nvar4=71\n\nvar5=$(bc << EOF\nscale = 4\na1 = ($var1 * $var2)\nb1 = ($var3 * $var4)\na1 + b1\nEOF\n)\n\necho $var5\n```\n\n#### 退出脚本\n\n退出状态码的查看`$?`\n\n|状态码|描述|\n|:---:|:---:|\n|0|命令成功结束|\n|1|通用未知错误|\n|2|误用Shell命令|\n|126|命令不可执行|\n|127|没找到命令|\n|128|无效退出参数|\n|128+x|Linux信号x的严重错误|\n|130|命令通过Ctrl+C控制码越界|\n|255|退出码越界|\n\nexit命令\n\n\n### 结构化命令\n\n#### if-then\n\n```\nif command; then\n  commands\nfi\n```\n\n```\nif pwd; then\n  echo \"It worked\"\nfi\n```\n\n#### if-then-else\n\n```\nif command\nthen \n  commands\nelse\n  commands\nfi\n```\n\n#### 嵌套if\n\n```\nif command1\nthen\n  commands\nelse\n  if command2\n  then\n    more commands\n  else\n    more commands\n  fi\nfi\n```\n\n```\nif command1\nthen\n  commands\nelif command2\nthen\n  more commands\nfi\n```\n\n#### test命令\n\n如果test命令中列出的条件成立，test命令就会退出并返回退出状态码0。\n\n> test condition\n\n或者可以用在`if-then`语句中\n\n```\nif test condition\nthen\n  commands\nfi\n```\n\n也可以使用方括号进行测试\n\n```\nif [ condition ]\nthen\n  commands\nfi\n```\n\n##### 数值比较\n\n|比较|描述|\n|:---:|:---:|\n|n1 -eq n2|检查n1是否等于n2|\n|n1 -ge n2|检查n1是否大于等于n2|\n|n1 -gt n2|检查n1是否大于n2|\n|n1 -le n2|检查n1是否小于等于n2|\n|n1 -lt n2|检查n1是否小于n2|\n|n1 -ne n2|检查n1是否不等于n2|\n\n##### 字符串比较\n\n|比较|描述|\n|:---:|:---:|\n|str1 = str2|检查字符串是否相同|\n|str1 != str2|检查字符串是否不同|\n|str1 < str2|检查str1是否比str2大|\n|str1 \\> str2|检查str1是否比str2小|\n|-n str1|检查str1的长度是否非0|\n|-z str1|检查str1的长度是否为0|\n\n> 需要注意的是，大于号和小于号在使用时需要转义\n\n##### 文件比较\n\n|比较|描述|\n|:---:|:---:|\n|-e file|如果file存在，则为真|\n|-d file|如果file存在并为目录，则为真|\n|-f file|如果file为常规文件，则为真|\n|-r file|如果file存在并可读，则为真|\n|-s file|如果file存在并非空，则为真|\n|-w file|如果file存在并可写，则为真|\n|-x file|如果file存在并可执行，则为真|\n|-O file|如果file存在并属于当前用户，则为真|\n|-G file|如果file存在并且默认组与当前用户相同，则为真|\n|file1 -nt file2|如果file1比file2新，则为真|\n|file1 -ot file2|如果file1比file2旧，则为真|\n\n##### 复合条件测试\n\nif-then可以用`&&`和`||`来组合测试\n\n#### if-then的高级特性\n\n##### 使用双括号\n\n双括号命令允许你在比较过程中使用高级数学表达式。其格式如下：\n> ((expression))\n\n双括号命令符号包括以下：\nval++，val--，++val，--val，!，~，**(幂运算)，<<，>>，&，|，&&，||\n\n##### 使用双方括号\n\n双方括号命令提供了针对字符串比较的高级特性。其格式如下：\n> [[expression]]\n\n```\nif [[ $USER == r* ]]\n```\n\n#### case命令\n\n```\ncase variable in\npattern1 | pattern2) commands1;;\npattern3) commands2;;\n*) default commands;;\nesac\n```\n\n#### for命令\n\n```\nfor var in list\ndo\n  commands\ndone\n```\n\nfor循环假定每个值都是用空格分割的。\n可以使用内部字段分隔符`IFS`来自定义分隔符，例如\n\n> IFS=$'\\n'\n  IFS=$'\\n':;\"\n\n##### C语言分隔的for命令\n\n命令格式：\n> for (( variable assignment ; condition ; iteration process ))\n\n#### while命令\n\nwhile命令的基本格式：\n\n```\nwhile test command\ndo\n  other commands\ndone\n```\n\n#### until命令\n\nuntil命令和while命令正好相反，只有测试命令的退出状态码不为0，bash shell才会执行循环中列出的命令。\n\n命令格式：\n\n```\nuntil test commands\ndo\n  other commands\ndone\n```\n\n#### 循环处理文件数据\n\n需要使用嵌套循环以及修改IFS环境变量\n\n```\nIFS.OLD=$IFS\nIFS=$'\\n'\nfor entry in $(cat /etc/passwd)\ndo\n  echo \"Value in $entry\"\n  IFS=:\n  for value in $entry\n  do\n    if [ -n \"$value\" ]\n    then\n      echo \"$value\"\n    fi\n  done\ndone\n```\n\n#### 控制循环\n\n##### break命令\n\n可以用break退出任意的循环，包括while和until循环。\n也可以使用`break -n`跳出外部循环，默认为1。\n\n##### continue命令\n\ncontinue命令可以提前终止某次循环中的命令，但并不会完全终止整个循环。\n也可以使用`continue -n`继续执行哪一层循环。\n\n#### 处理循环的输出\n\n可以对循环的输出使用管道或重定向。通过在done命令之后添加一个处理命令来实现。\n\n> done > output.txt\n\n#### 例子\n\n创建多个用户账户\n\n```\ninput=\"user.csv\"\nwhile IFS=\",\" read -r userid name\ndo\n  echo \"adding $userid\"\n  useradd -c \"$name\" -m \"userid\" \ndone < \"$input\"\n```\n\n### 处理用户输入\n\n#### 命令行参数\n\n向shell脚本传递数据的最基本方法是使用命令行参数。\n命令行参数允许在运行脚本时向命令行添加数据。\n\n```\n./test.sh 10 abc\n```\n\nbash shell会将一些位置参数的特殊变量分配给输入到命令行中的所有参数。这也包括shell所执行的脚本\n命令。其中：`$0`是程序名，`$1`是第一个参数，`$2`是第二个参数，一直到`$9`。\n\n在使用时，需要用空格将每个命令行参数分隔开，例如:\n\n```\ncount=$[ $1 * $2 ]\n```\n\n注意，当命令行参数中出现空格时，需要使用引号：\n\n```\n./test1.sh 'hello world'\n```\n\n如果命令行参数的数量超过9个时，从第十个参数开始，需要使用花括号，例如`${10}`、`${11}`等。\n\n使用`basename`命令可以返回不包含路径的脚本名，例如：\n\n```\necho \"$0\"\necho \"$(basename $0)\"\n```\n\n在使用命令行参数的脚本中，需要先检测其中是否存在数据：\n\n```\nif [ -n \"$1\" ]\n```\n\n#### 特殊的参数变量\n\n特殊变量`$#`含有脚本运行时携带的命令行参数的个数，例如：\n\n```\necho There are $# parameters supplied.\n```\n\n使用$&#123;!#&#125;可以返回最后一个命令行参数的值，如果命令行参数的个数为0，则返回当前脚本的名称。\n\n使用`$*`和`$@`可以访问所有的参数。其中`$*`变量会将命令行上提供的所有参数当作一个单词保存。这个单词包括了命令行中出现的每一个参数值；`$@`变量会将命令行上所有参数当作同一个字符串中的多个独立的单词，然后通过遍历获取所有的参数值。\n\n```\ncount=1\nfor param in \"$*\"\ndo\n  echo \"\\$* parameter #count = $param\"\n  count=$[ $count + 1 ]\ndone\necho\ncount=1\nfor param in \"$@\"\ndo\n  echo \"\\$@ parameter #count = $param\"\n  count=$[ $count + 1 ]\ndone\n```\n\n#### 移动变量\n\nbash shell的`shift`命令可以用来操作命令行参数，shift命令会根据命令行参数的相对位置来移动。\n在默认情况下，会将每个参数变量向左移动一个位置。其中$2的值会移动到$1，而$1的值则会被删除，$0不会改变。\n\n```\nwhile [ -n \"$1\" ]\ndo\n  echo \"$1\"\n  shift\ndone\n```\n\n也可以一次性移动多个位置\n\n> shift n\n\n#### 处理选项\n\n选项是跟在单破折号后面的单个字母，可以用来改变命令的行为。\n可以使用`--`来表明选项列表结束。\n\n##### getopt命令\n\ngetopt命令能够识别命令行参数，从而在脚本中解析更加方便。\n\n命令格式：\n\n> getopt optstring parameters\n  其中optstring定义了命令行有效的选项字母，还定义了哪些选项字母需要参数值。\n\n```\ngetopt ab:cd -a -b test1 -cd test2 test3\n-a -b test1 -c -d -- test2 test3\n```\n\n> 如果指定了一个不再optstring中的选项，默认情况下，getopt命令会产生一条错误消息。可以在命令后加-q忽略。\n\n在脚本中使用getopt\n\n> set -- $(getopt -q ab:cd \"$@\")\n\n##### getopts命令\n\n命令格式如下：\n\n> getopts optstring variable\n\n如果选项需要跟一个参数值，`OPTARG`环境变量就会保存这个值。`OPTIND`环境变量保存了参数列表中getopts正在处理的参数位置。\n\n#### 获取用户输入\n\n使用`read`命令获取用户输入。\n\nread命令从标准输入或另一个文件描述符接收输入。在收到输入后，read命令会将数据放进一个变量。\n\n```\nread -p \"Enter your name: \" first last\necho $last, $first\n```\n\n如果在read命令行中不指定变量，那么read命令会将它收到的任何数据都放进特殊环境变量`REPLY`中：\n\n```\nread -p \"Enter your name: \"\necho $REPLY\n```\n\n> 在使用read命令时，需要注意超时时间，可以使用-t选项来指定计时器\n\n```\nread -t 5 -p \"Please enter your name: \" name\n```\n\n如果需要隐藏输入的值时，可以使用`-s`选项。\nread在读取文件时，每次从文件中读取一行文本，当文件中没有内容时，read命令将会退出并返回非零退出状态码。\n\n```\ncat test | while read line\n```\n\n### 呈现数据\n\n|文件描述符|缩写|描述|\n|:---:|:---:|:---:|\n|0|STDIN|标准输入|\n|1|STDOUT|标准输出|\n|2|STDERR|标准错误|\n\n默认情况下，STDERR文件描述符和STDOUT文件描述符指向同样的地方。\n\n只重定向错误：\n\n> ls -al errorfile 2> test\n\n重定向错误和数据：\n\n> ls -al test.txt errorfile 2>test 1>test1\n\n同时重定向STDERR和STDOUT：\n\n> ls -al test.txt errorfile &>test2\n\n如果需要重定向到某个文件描述符时，必须在文件描述符之前加一个`&`：\n\n```\necho \"This is an error\" >&2\n```\n\n可以使用`exec`命令进行永久重定向：\n\n```\nexec 1> testout\nexec 0< testin\n```\n\n关闭文件描述符：\n\n```\nexec 3>&-\n```\n\n如果需要阻止命令输出，可以将STDERR重定向到`/dev/null`。\n\n也可以在/tmp目录中创建临时文件或文件夹。使用`mktemp`在本地目录创建临时文件。创建时，只需要指定一个临时模板：\n\n```\n#在当前目录创建临时文件，并返回文件名\nmktemp testing.xxxxxx\n#在系统临时目录创建临时文件，并返回全路径\nmktemp -t tmp.xxxxxx\n#在当前目录创建临时文件夹，并返回文件夹名\nmktemp -d dir.xxxxxx\n```\n\n使用`tee`命令可以将输出同时发送到显示器和日志文件中\n\n> date | tee testfile\n  \\#将文件进行追加，使用-a选项\n  date | tee -a testfile\n\n#### 实例\n\n```\n#!/bin/bash\n\noutputfile=\"person.sql\"\nIFS=','\n\nwhile read name age address\ndo\n  cat >> $outputfile << EOF\n  insert into person(name,age,address) values('$name','$age','$address');\n  EOF\ndone < $1\n```\n\n> ./test.sh testfile\n\n### 脚本控制\n\n#### 处理信号\n\n常用的Linux信号如下：\n\n|信号|值|描述|\n|:---:|:---:|:---:|\n|1|SIGHUP|挂起进程|\n|2|SIGINT|终止进程|\n|3|SIGQUIT|停止进程|\n|9|SIGKILL|无条件终止进程|\n|15|SIGTERM|尽可能终止进程|\n|17|SIGSTOP|无条件停止进程，但不是终止进程|\n|18|SIGTSTP|停止或暂停进程，但不终止进程|\n|19|SIGCONT|继续运行停止的进程|\n\n`Ctrl+Z`组合键会生成一个`SIGTSTP`信号，停止shell中运行的任何进程。停止进程会让程序继续保留在内存中，并能从上次停止的位置继续运行。\n\n使用`exit`退出停止的作业，使用`ps -l`查看已停止的作业。\n\n可以使用`trap`命令来捕获信号，其命令格式为：\n\n> trap command signals\n\n或者在trap命令后加上`EXIT`信号来捕获脚本的退出：\n\n```\ntrap \"echo end...\" EXIT\n```\n\n也可以重新使用带有选项的trap命令在脚本中的不同位置进行不同的捕获处理。\n\n#### 以后台模式运行脚本\n\n直接在命令后面添加`&`即可：\n\n> ./test.sh &\n\n注意：在ps命令的输出中，每一个后台进程都和终端会话终端联系在一起。如果终端会话退出，那么后台进程也会随之退出。\n\n此时可以使用`nohup`命令来阻止后台进程在终端退出时也一起终止：\n\n> nohup ./test.sh &\n\n#### 作业控制\n\n作业控制：启动、停止终止以及恢复作业的功能。\n\n使用`jobs`命令查看shell当前正在处理的作业。jobs命令参数如下：\n\n|参数|描述|\n|:---:|:---:|\n|-l|列出进程的PID以及作业号|\n|-n|只列出上次shell发出的通知后改变了状态的作业|\n|-p|只列出作业的PID|\n|-r|只列出运行中的作业|\n|-s|只列出已停止的作业|\n\n如果要以后台模式重启一个作业，可以用`bg`命令加上作业号：\n\n> bg 2\n\n如果要以前台模式重启一个作业，可以用`fg`命令加上作业号：\n\n> fg 2\n\n#### 调整优先级\n\n调度优先级：内核分配给进程的CPU时间。\n调度优先级是一个整数值，从-20(最高优先级)到+19(最低优先级)。默认情况下以优先级0来启动所有进程。\n\n使用`nice`命令设置命令启动时的调度优先级，例如：\n\n> nice -n 10 ./test.sh > test.out &\n\n使用`renice`命令改变运行中进程的PID，例如：\n\n> renice -n 10 -p 8888\n\n#### 定时运行作业\n\n使用`at`命令来计划执行作业。at命令会将作业提交到队列中，指定shell何时运行该作业。\nat命令的格式如下：\n\n> at [-f filename] time\n\n当作业在运行时，Linux系统会将提交该作业的用户的电子邮件地址作为STDOUT和STDERR。所以需要在脚本中对输出进行重定向。\n\n使用`atq`命令查看系统中有哪些作业在等待。\n\n使用`atrm`命令来删除等待中的作业。\n\n##### 使用cron程序\n\nLinux系统使用cron程序来安排要定期执行的作业。cron程序会在后台运行并检查一个特殊的表，以获知已安排执行的作业。\n\ncron时间表的格式如下：\n\n> min hour dayofmonth month dayof week command\n\n如果想在每天下午15:20执行某个文件，可以设置为：\n\n> 20 15 \\* \\* \\* \\* /home/zyj/shell/tesh.sh > test.out\n\n使用crontab命令来处理cron时间表。\n\n### 函数\n\n#### 基本函数\n\n创建函数\n\n```\nfunction name {\n    commands\n}\n```\n\n#### 在函数中使用变量\n\n向函数传递参数\n在脚本中指定函数时，必须将参数和函数放在同一行，例如：\n\n> func1 $value1 10\n\n```\n#!/bin/bash\n\nfunction add {\n  if [ $# -eq 0] || [ $# -gt 2]\n  then\n    echo -1\n  elif [ $# -eq 1 ]\n  then\n    echo $[ $1 + $1 ]\n  else \n    echo $[ $1 + $2 ]\n  fi\n}\n\nvalue1=$(add 10 15)\nvalue2=$(add 10)\nvalue3=$(add)\nvalue4=$(add 5 10 15)\necho $value1 $value2 $value3 $value4\n```\n\n#### 全局变量和局部变量\n\n使用`local`关键字定义局部变量。\n\n> local temp\n\nlocal关键字保证了变量只局限在该函数中。如果脚本中在该函数之外有同样名字的变量，那么shell将会保持这两个变量的值是分离的。\n\n#### 数组变量和函数\n\n向函数传递数组参数\n\n```\n#!/bin/bash\n\nfunction testArr {\n    local newArr\n    newArr=(\"$@\")\n    echo \"The new array is ${newArr[*]}\"\n}\n\nmyArr=(1 2 3 4 5)\ntestArr ${myArr[*]}\n```\n\n从函数返回数组\n\n#### 函数递归\n\n计算阶乘\n\n```\n#!/bin/bash\n\nfunction factorial {\n  if [ $1 -eq 1 ]\n  then\n    echo 1\n  else\n    local temp=$[ $1 - 1 ]\n    local result=$(factorial $temp)\n    echo $[ $result * $1 ]\n  fi\n}\n\nread -p \"Enter a number:\" value\nresult=$(factorial $value)\necho \"The result is: \" $result\n```\n\n","slug":"Linux-shell","published":1,"updated":"2018-02-08T06:35:58.545Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjir2nrma000d9xasyrudn038","content":"<h3 id=\"创建shell脚本文件\"><a href=\"#创建shell脚本文件\" class=\"headerlink\" title=\"创建shell脚本文件\"></a>创建shell脚本文件</h3><p>在创建shell脚本文件时，必须在文件的第一行指定要使用的shell。其格式为</p>\n<blockquote>\n<p>#!/bin/bash<br>  注意：shell只会去处理第一行注释行，并不会处理其他的注释行。</p>\n</blockquote>\n<p>创建shell脚本文件后，给文件添加执行权限</p>\n<blockquote>\n<p>chmod u+x filename</p>\n</blockquote>\n<p>如果想把脚本中的文本字符串和命令输出显示在同一行中，可以用echo语句的-n参数</p>\n<blockquote>\n<p>echo -n “The time and date are: “<br>  date</p>\n</blockquote>\n<p>使用等号将值赋给用户变量时，在变量、等号和值之间不能出现空格。</p>\n<blockquote>\n<p>testing=`date`<br>  testing=$(date)</p>\n</blockquote>\n<p>引用一个变量值时需要使用$，而引用变量来对其进行赋值时则不要使用$：</p>\n<blockquote>\n<p>value1=10<br>  value2=$value1<br>  # 注意：没有使用$，shell会将变量名解释成普通的文本字符串。</p>\n</blockquote>\n<h4 id=\"命令替换\"><a href=\"#命令替换\" class=\"headerlink\" title=\"命令替换\"></a>命令替换</h4><p>有两种方法可以将命令输出赋给变量：</p>\n<ol>\n<li><p>反引号字符``</p>\n</li>\n<li><p>$()格式</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">testing=`date`</span><br><span class=\"line\">testing=$(date)</span><br><span class=\"line\">echo &quot;The date and time are: &quot; $testing</span><br><span class=\"line\"></span><br><span class=\"line\">today=$(date +%y%m%d)</span><br><span class=\"line\">ls /usr/bin -al &gt; log.$today</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h4 id=\"重定向\"><a href=\"#重定向\" class=\"headerlink\" title=\"重定向\"></a>重定向</h4><p>重定向包括输出重定向<code>&gt;  &gt;&gt;</code>以及输入重定向<code>&lt;  &lt;&lt;</code></p>\n<blockquote>\n<p>内联输入重定向</p>\n</blockquote>\n<h4 id=\"执行数学运算\"><a href=\"#执行数学运算\" class=\"headerlink\" title=\"执行数学运算\"></a>执行数学运算</h4><h5 id=\"expr命令\"><a href=\"#expr命令\" class=\"headerlink\" title=\"expr命令\"></a>expr命令</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">expr 1 + 5</span><br><span class=\"line\">6</span><br></pre></td></tr></table></figure>\n<h5 id=\"使用方括号\"><a href=\"#使用方括号\" class=\"headerlink\" title=\"使用方括号\"></a>使用方括号</h5><p>如果需要将一个数学运算结果赋给某个变量，可以用美元符和方括号：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var1=100</span><br><span class=\"line\">var2=50</span><br><span class=\"line\">var3=30</span><br><span class=\"line\">var4=$[$var1 * ($var3 - $var2)]</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>需要注意的是，bash shell数学运算符只支持整数运算。</p>\n</blockquote>\n<h5 id=\"浮点解决方案\"><a href=\"#浮点解决方案\" class=\"headerlink\" title=\"浮点解决方案\"></a>浮点解决方案</h5><p>在脚本中使用bc，基本格式如下：</p>\n<blockquote>\n<p>variable=$(echo “options; expression” | bc)</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var1=20</span><br><span class=\"line\">var2=3.14159</span><br><span class=\"line\">var3=$(echo &quot;scale=4; $var1 * var2&quot; | bc)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var1=10.46</span><br><span class=\"line\">var2=43.67</span><br><span class=\"line\">var3=33.2</span><br><span class=\"line\">var4=71</span><br><span class=\"line\"></span><br><span class=\"line\">var5=$(bc &lt;&lt; EOF</span><br><span class=\"line\">scale = 4</span><br><span class=\"line\">a1 = ($var1 * $var2)</span><br><span class=\"line\">b1 = ($var3 * $var4)</span><br><span class=\"line\">a1 + b1</span><br><span class=\"line\">EOF</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\">echo $var5</span><br></pre></td></tr></table></figure>\n<h4 id=\"退出脚本\"><a href=\"#退出脚本\" class=\"headerlink\" title=\"退出脚本\"></a>退出脚本</h4><p>退出状态码的查看<code>$?</code></p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">状态码</th>\n<th style=\"text-align:center\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">0</td>\n<td style=\"text-align:center\">命令成功结束</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\">通用未知错误</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">2</td>\n<td style=\"text-align:center\">误用Shell命令</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">126</td>\n<td style=\"text-align:center\">命令不可执行</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">127</td>\n<td style=\"text-align:center\">没找到命令</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">128</td>\n<td style=\"text-align:center\">无效退出参数</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">128+x</td>\n<td style=\"text-align:center\">Linux信号x的严重错误</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">130</td>\n<td style=\"text-align:center\">命令通过Ctrl+C控制码越界</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">255</td>\n<td style=\"text-align:center\">退出码越界</td>\n</tr>\n</tbody>\n</table>\n<p>exit命令</p>\n<h3 id=\"结构化命令\"><a href=\"#结构化命令\" class=\"headerlink\" title=\"结构化命令\"></a>结构化命令</h3><h4 id=\"if-then\"><a href=\"#if-then\" class=\"headerlink\" title=\"if-then\"></a>if-then</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if command; then</span><br><span class=\"line\">  commands</span><br><span class=\"line\">fi</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if pwd; then</span><br><span class=\"line\">  echo &quot;It worked&quot;</span><br><span class=\"line\">fi</span><br></pre></td></tr></table></figure>\n<h4 id=\"if-then-else\"><a href=\"#if-then-else\" class=\"headerlink\" title=\"if-then-else\"></a>if-then-else</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if command</span><br><span class=\"line\">then </span><br><span class=\"line\">  commands</span><br><span class=\"line\">else</span><br><span class=\"line\">  commands</span><br><span class=\"line\">fi</span><br></pre></td></tr></table></figure>\n<h4 id=\"嵌套if\"><a href=\"#嵌套if\" class=\"headerlink\" title=\"嵌套if\"></a>嵌套if</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if command1</span><br><span class=\"line\">then</span><br><span class=\"line\">  commands</span><br><span class=\"line\">else</span><br><span class=\"line\">  if command2</span><br><span class=\"line\">  then</span><br><span class=\"line\">    more commands</span><br><span class=\"line\">  else</span><br><span class=\"line\">    more commands</span><br><span class=\"line\">  fi</span><br><span class=\"line\">fi</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if command1</span><br><span class=\"line\">then</span><br><span class=\"line\">  commands</span><br><span class=\"line\">elif command2</span><br><span class=\"line\">then</span><br><span class=\"line\">  more commands</span><br><span class=\"line\">fi</span><br></pre></td></tr></table></figure>\n<h4 id=\"test命令\"><a href=\"#test命令\" class=\"headerlink\" title=\"test命令\"></a>test命令</h4><p>如果test命令中列出的条件成立，test命令就会退出并返回退出状态码0。</p>\n<blockquote>\n<p>test condition</p>\n</blockquote>\n<p>或者可以用在<code>if-then</code>语句中</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if test condition</span><br><span class=\"line\">then</span><br><span class=\"line\">  commands</span><br><span class=\"line\">fi</span><br></pre></td></tr></table></figure>\n<p>也可以使用方括号进行测试</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if [ condition ]</span><br><span class=\"line\">then</span><br><span class=\"line\">  commands</span><br><span class=\"line\">fi</span><br></pre></td></tr></table></figure>\n<h5 id=\"数值比较\"><a href=\"#数值比较\" class=\"headerlink\" title=\"数值比较\"></a>数值比较</h5><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">比较</th>\n<th style=\"text-align:center\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">n1 -eq n2</td>\n<td style=\"text-align:center\">检查n1是否等于n2</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">n1 -ge n2</td>\n<td style=\"text-align:center\">检查n1是否大于等于n2</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">n1 -gt n2</td>\n<td style=\"text-align:center\">检查n1是否大于n2</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">n1 -le n2</td>\n<td style=\"text-align:center\">检查n1是否小于等于n2</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">n1 -lt n2</td>\n<td style=\"text-align:center\">检查n1是否小于n2</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">n1 -ne n2</td>\n<td style=\"text-align:center\">检查n1是否不等于n2</td>\n</tr>\n</tbody>\n</table>\n<h5 id=\"字符串比较\"><a href=\"#字符串比较\" class=\"headerlink\" title=\"字符串比较\"></a>字符串比较</h5><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">比较</th>\n<th style=\"text-align:center\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">str1 = str2</td>\n<td style=\"text-align:center\">检查字符串是否相同</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">str1 != str2</td>\n<td style=\"text-align:center\">检查字符串是否不同</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">str1 &lt; str2</td>\n<td style=\"text-align:center\">检查str1是否比str2大</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">str1 > str2</td>\n<td style=\"text-align:center\">检查str1是否比str2小</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">-n str1</td>\n<td style=\"text-align:center\">检查str1的长度是否非0</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">-z str1</td>\n<td style=\"text-align:center\">检查str1的长度是否为0</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p>需要注意的是，大于号和小于号在使用时需要转义</p>\n</blockquote>\n<h5 id=\"文件比较\"><a href=\"#文件比较\" class=\"headerlink\" title=\"文件比较\"></a>文件比较</h5><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">比较</th>\n<th style=\"text-align:center\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">-e file</td>\n<td style=\"text-align:center\">如果file存在，则为真</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">-d file</td>\n<td style=\"text-align:center\">如果file存在并为目录，则为真</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">-f file</td>\n<td style=\"text-align:center\">如果file为常规文件，则为真</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">-r file</td>\n<td style=\"text-align:center\">如果file存在并可读，则为真</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">-s file</td>\n<td style=\"text-align:center\">如果file存在并非空，则为真</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">-w file</td>\n<td style=\"text-align:center\">如果file存在并可写，则为真</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">-x file</td>\n<td style=\"text-align:center\">如果file存在并可执行，则为真</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">-O file</td>\n<td style=\"text-align:center\">如果file存在并属于当前用户，则为真</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">-G file</td>\n<td style=\"text-align:center\">如果file存在并且默认组与当前用户相同，则为真</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">file1 -nt file2</td>\n<td style=\"text-align:center\">如果file1比file2新，则为真</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">file1 -ot file2</td>\n<td style=\"text-align:center\">如果file1比file2旧，则为真</td>\n</tr>\n</tbody>\n</table>\n<h5 id=\"复合条件测试\"><a href=\"#复合条件测试\" class=\"headerlink\" title=\"复合条件测试\"></a>复合条件测试</h5><p>if-then可以用<code>&amp;&amp;</code>和<code>||</code>来组合测试</p>\n<h4 id=\"if-then的高级特性\"><a href=\"#if-then的高级特性\" class=\"headerlink\" title=\"if-then的高级特性\"></a>if-then的高级特性</h4><h5 id=\"使用双括号\"><a href=\"#使用双括号\" class=\"headerlink\" title=\"使用双括号\"></a>使用双括号</h5><p>双括号命令允许你在比较过程中使用高级数学表达式。其格式如下：</p>\n<blockquote>\n<p>((expression))</p>\n</blockquote>\n<p>双括号命令符号包括以下：<br>val++，val–，++val，–val，!，~，**(幂运算)，&lt;&lt;，&gt;&gt;，&amp;，|，&amp;&amp;，||</p>\n<h5 id=\"使用双方括号\"><a href=\"#使用双方括号\" class=\"headerlink\" title=\"使用双方括号\"></a>使用双方括号</h5><p>双方括号命令提供了针对字符串比较的高级特性。其格式如下：</p>\n<blockquote>\n<p>[[expression]]</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if [[ $USER == r* ]]</span><br></pre></td></tr></table></figure>\n<h4 id=\"case命令\"><a href=\"#case命令\" class=\"headerlink\" title=\"case命令\"></a>case命令</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">case variable in</span><br><span class=\"line\">pattern1 | pattern2) commands1;;</span><br><span class=\"line\">pattern3) commands2;;</span><br><span class=\"line\">*) default commands;;</span><br><span class=\"line\">esac</span><br></pre></td></tr></table></figure>\n<h4 id=\"for命令\"><a href=\"#for命令\" class=\"headerlink\" title=\"for命令\"></a>for命令</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">for var in list</span><br><span class=\"line\">do</span><br><span class=\"line\">  commands</span><br><span class=\"line\">done</span><br></pre></td></tr></table></figure>\n<p>for循环假定每个值都是用空格分割的。<br>可以使用内部字段分隔符<code>IFS</code>来自定义分隔符，例如</p>\n<blockquote>\n<p>IFS=$’\\n’<br>  IFS=$’\\n’:;”</p>\n</blockquote>\n<h5 id=\"C语言分隔的for命令\"><a href=\"#C语言分隔的for命令\" class=\"headerlink\" title=\"C语言分隔的for命令\"></a>C语言分隔的for命令</h5><p>命令格式：</p>\n<blockquote>\n<p>for (( variable assignment ; condition ; iteration process ))</p>\n</blockquote>\n<h4 id=\"while命令\"><a href=\"#while命令\" class=\"headerlink\" title=\"while命令\"></a>while命令</h4><p>while命令的基本格式：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">while test command</span><br><span class=\"line\">do</span><br><span class=\"line\">  other commands</span><br><span class=\"line\">done</span><br></pre></td></tr></table></figure>\n<h4 id=\"until命令\"><a href=\"#until命令\" class=\"headerlink\" title=\"until命令\"></a>until命令</h4><p>until命令和while命令正好相反，只有测试命令的退出状态码不为0，bash shell才会执行循环中列出的命令。</p>\n<p>命令格式：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">until test commands</span><br><span class=\"line\">do</span><br><span class=\"line\">  other commands</span><br><span class=\"line\">done</span><br></pre></td></tr></table></figure>\n<h4 id=\"循环处理文件数据\"><a href=\"#循环处理文件数据\" class=\"headerlink\" title=\"循环处理文件数据\"></a>循环处理文件数据</h4><p>需要使用嵌套循环以及修改IFS环境变量</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">IFS.OLD=$IFS</span><br><span class=\"line\">IFS=$&apos;\\n&apos;</span><br><span class=\"line\">for entry in $(cat /etc/passwd)</span><br><span class=\"line\">do</span><br><span class=\"line\">  echo &quot;Value in $entry&quot;</span><br><span class=\"line\">  IFS=:</span><br><span class=\"line\">  for value in $entry</span><br><span class=\"line\">  do</span><br><span class=\"line\">    if [ -n &quot;$value&quot; ]</span><br><span class=\"line\">    then</span><br><span class=\"line\">      echo &quot;$value&quot;</span><br><span class=\"line\">    fi</span><br><span class=\"line\">  done</span><br><span class=\"line\">done</span><br></pre></td></tr></table></figure>\n<h4 id=\"控制循环\"><a href=\"#控制循环\" class=\"headerlink\" title=\"控制循环\"></a>控制循环</h4><h5 id=\"break命令\"><a href=\"#break命令\" class=\"headerlink\" title=\"break命令\"></a>break命令</h5><p>可以用break退出任意的循环，包括while和until循环。<br>也可以使用<code>break -n</code>跳出外部循环，默认为1。</p>\n<h5 id=\"continue命令\"><a href=\"#continue命令\" class=\"headerlink\" title=\"continue命令\"></a>continue命令</h5><p>continue命令可以提前终止某次循环中的命令，但并不会完全终止整个循环。<br>也可以使用<code>continue -n</code>继续执行哪一层循环。</p>\n<h4 id=\"处理循环的输出\"><a href=\"#处理循环的输出\" class=\"headerlink\" title=\"处理循环的输出\"></a>处理循环的输出</h4><p>可以对循环的输出使用管道或重定向。通过在done命令之后添加一个处理命令来实现。</p>\n<blockquote>\n<p>done &gt; output.txt</p>\n</blockquote>\n<h4 id=\"例子\"><a href=\"#例子\" class=\"headerlink\" title=\"例子\"></a>例子</h4><p>创建多个用户账户</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">input=&quot;user.csv&quot;</span><br><span class=\"line\">while IFS=&quot;,&quot; read -r userid name</span><br><span class=\"line\">do</span><br><span class=\"line\">  echo &quot;adding $userid&quot;</span><br><span class=\"line\">  useradd -c &quot;$name&quot; -m &quot;userid&quot; </span><br><span class=\"line\">done &lt; &quot;$input&quot;</span><br></pre></td></tr></table></figure>\n<h3 id=\"处理用户输入\"><a href=\"#处理用户输入\" class=\"headerlink\" title=\"处理用户输入\"></a>处理用户输入</h3><h4 id=\"命令行参数\"><a href=\"#命令行参数\" class=\"headerlink\" title=\"命令行参数\"></a>命令行参数</h4><p>向shell脚本传递数据的最基本方法是使用命令行参数。<br>命令行参数允许在运行脚本时向命令行添加数据。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./test.sh 10 abc</span><br></pre></td></tr></table></figure>\n<p>bash shell会将一些位置参数的特殊变量分配给输入到命令行中的所有参数。这也包括shell所执行的脚本<br>命令。其中：<code>$0</code>是程序名，<code>$1</code>是第一个参数，<code>$2</code>是第二个参数，一直到<code>$9</code>。</p>\n<p>在使用时，需要用空格将每个命令行参数分隔开，例如:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">count=$[ $1 * $2 ]</span><br></pre></td></tr></table></figure>\n<p>注意，当命令行参数中出现空格时，需要使用引号：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./test1.sh &apos;hello world&apos;</span><br></pre></td></tr></table></figure>\n<p>如果命令行参数的数量超过9个时，从第十个参数开始，需要使用花括号，例如<code>${10}</code>、<code>${11}</code>等。</p>\n<p>使用<code>basename</code>命令可以返回不包含路径的脚本名，例如：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">echo &quot;$0&quot;</span><br><span class=\"line\">echo &quot;$(basename $0)&quot;</span><br></pre></td></tr></table></figure>\n<p>在使用命令行参数的脚本中，需要先检测其中是否存在数据：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if [ -n &quot;$1&quot; ]</span><br></pre></td></tr></table></figure>\n<h4 id=\"特殊的参数变量\"><a href=\"#特殊的参数变量\" class=\"headerlink\" title=\"特殊的参数变量\"></a>特殊的参数变量</h4><p>特殊变量<code>$#</code>含有脚本运行时携带的命令行参数的个数，例如：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">echo There are $# parameters supplied.</span><br></pre></td></tr></table></figure>\n<p>使用$&#123;!#&#125;可以返回最后一个命令行参数的值，如果命令行参数的个数为0，则返回当前脚本的名称。</p>\n<p>使用<code>$*</code>和<code>$@</code>可以访问所有的参数。其中<code>$*</code>变量会将命令行上提供的所有参数当作一个单词保存。这个单词包括了命令行中出现的每一个参数值；<code>$@</code>变量会将命令行上所有参数当作同一个字符串中的多个独立的单词，然后通过遍历获取所有的参数值。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">count=1</span><br><span class=\"line\">for param in &quot;$*&quot;</span><br><span class=\"line\">do</span><br><span class=\"line\">  echo &quot;\\$* parameter #count = $param&quot;</span><br><span class=\"line\">  count=$[ $count + 1 ]</span><br><span class=\"line\">done</span><br><span class=\"line\">echo</span><br><span class=\"line\">count=1</span><br><span class=\"line\">for param in &quot;$@&quot;</span><br><span class=\"line\">do</span><br><span class=\"line\">  echo &quot;\\$@ parameter #count = $param&quot;</span><br><span class=\"line\">  count=$[ $count + 1 ]</span><br><span class=\"line\">done</span><br></pre></td></tr></table></figure>\n<h4 id=\"移动变量\"><a href=\"#移动变量\" class=\"headerlink\" title=\"移动变量\"></a>移动变量</h4><p>bash shell的<code>shift</code>命令可以用来操作命令行参数，shift命令会根据命令行参数的相对位置来移动。<br>在默认情况下，会将每个参数变量向左移动一个位置。其中$2的值会移动到$1，而$1的值则会被删除，$0不会改变。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">while [ -n &quot;$1&quot; ]</span><br><span class=\"line\">do</span><br><span class=\"line\">  echo &quot;$1&quot;</span><br><span class=\"line\">  shift</span><br><span class=\"line\">done</span><br></pre></td></tr></table></figure>\n<p>也可以一次性移动多个位置</p>\n<blockquote>\n<p>shift n</p>\n</blockquote>\n<h4 id=\"处理选项\"><a href=\"#处理选项\" class=\"headerlink\" title=\"处理选项\"></a>处理选项</h4><p>选项是跟在单破折号后面的单个字母，可以用来改变命令的行为。<br>可以使用<code>--</code>来表明选项列表结束。</p>\n<h5 id=\"getopt命令\"><a href=\"#getopt命令\" class=\"headerlink\" title=\"getopt命令\"></a>getopt命令</h5><p>getopt命令能够识别命令行参数，从而在脚本中解析更加方便。</p>\n<p>命令格式：</p>\n<blockquote>\n<p>getopt optstring parameters<br>  其中optstring定义了命令行有效的选项字母，还定义了哪些选项字母需要参数值。</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">getopt ab:cd -a -b test1 -cd test2 test3</span><br><span class=\"line\">-a -b test1 -c -d -- test2 test3</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>如果指定了一个不再optstring中的选项，默认情况下，getopt命令会产生一条错误消息。可以在命令后加-q忽略。</p>\n</blockquote>\n<p>在脚本中使用getopt</p>\n<blockquote>\n<p>set – $(getopt -q ab:cd “$@”)</p>\n</blockquote>\n<h5 id=\"getopts命令\"><a href=\"#getopts命令\" class=\"headerlink\" title=\"getopts命令\"></a>getopts命令</h5><p>命令格式如下：</p>\n<blockquote>\n<p>getopts optstring variable</p>\n</blockquote>\n<p>如果选项需要跟一个参数值，<code>OPTARG</code>环境变量就会保存这个值。<code>OPTIND</code>环境变量保存了参数列表中getopts正在处理的参数位置。</p>\n<h4 id=\"获取用户输入\"><a href=\"#获取用户输入\" class=\"headerlink\" title=\"获取用户输入\"></a>获取用户输入</h4><p>使用<code>read</code>命令获取用户输入。</p>\n<p>read命令从标准输入或另一个文件描述符接收输入。在收到输入后，read命令会将数据放进一个变量。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">read -p &quot;Enter your name: &quot; first last</span><br><span class=\"line\">echo $last, $first</span><br></pre></td></tr></table></figure>\n<p>如果在read命令行中不指定变量，那么read命令会将它收到的任何数据都放进特殊环境变量<code>REPLY</code>中：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">read -p &quot;Enter your name: &quot;</span><br><span class=\"line\">echo $REPLY</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>在使用read命令时，需要注意超时时间，可以使用-t选项来指定计时器</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">read -t 5 -p &quot;Please enter your name: &quot; name</span><br></pre></td></tr></table></figure>\n<p>如果需要隐藏输入的值时，可以使用<code>-s</code>选项。<br>read在读取文件时，每次从文件中读取一行文本，当文件中没有内容时，read命令将会退出并返回非零退出状态码。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat test | while read line</span><br></pre></td></tr></table></figure>\n<h3 id=\"呈现数据\"><a href=\"#呈现数据\" class=\"headerlink\" title=\"呈现数据\"></a>呈现数据</h3><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">文件描述符</th>\n<th style=\"text-align:center\">缩写</th>\n<th style=\"text-align:center\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">0</td>\n<td style=\"text-align:center\">STDIN</td>\n<td style=\"text-align:center\">标准输入</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\">STDOUT</td>\n<td style=\"text-align:center\">标准输出</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">2</td>\n<td style=\"text-align:center\">STDERR</td>\n<td style=\"text-align:center\">标准错误</td>\n</tr>\n</tbody>\n</table>\n<p>默认情况下，STDERR文件描述符和STDOUT文件描述符指向同样的地方。</p>\n<p>只重定向错误：</p>\n<blockquote>\n<p>ls -al errorfile 2&gt; test</p>\n</blockquote>\n<p>重定向错误和数据：</p>\n<blockquote>\n<p>ls -al test.txt errorfile 2&gt;test 1&gt;test1</p>\n</blockquote>\n<p>同时重定向STDERR和STDOUT：</p>\n<blockquote>\n<p>ls -al test.txt errorfile &amp;&gt;test2</p>\n</blockquote>\n<p>如果需要重定向到某个文件描述符时，必须在文件描述符之前加一个<code>&amp;</code>：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">echo &quot;This is an error&quot; &gt;&amp;2</span><br></pre></td></tr></table></figure>\n<p>可以使用<code>exec</code>命令进行永久重定向：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">exec 1&gt; testout</span><br><span class=\"line\">exec 0&lt; testin</span><br></pre></td></tr></table></figure>\n<p>关闭文件描述符：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">exec 3&gt;&amp;-</span><br></pre></td></tr></table></figure>\n<p>如果需要阻止命令输出，可以将STDERR重定向到<code>/dev/null</code>。</p>\n<p>也可以在/tmp目录中创建临时文件或文件夹。使用<code>mktemp</code>在本地目录创建临时文件。创建时，只需要指定一个临时模板：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#在当前目录创建临时文件，并返回文件名</span><br><span class=\"line\">mktemp testing.xxxxxx</span><br><span class=\"line\">#在系统临时目录创建临时文件，并返回全路径</span><br><span class=\"line\">mktemp -t tmp.xxxxxx</span><br><span class=\"line\">#在当前目录创建临时文件夹，并返回文件夹名</span><br><span class=\"line\">mktemp -d dir.xxxxxx</span><br></pre></td></tr></table></figure>\n<p>使用<code>tee</code>命令可以将输出同时发送到显示器和日志文件中</p>\n<blockquote>\n<p>date | tee testfile<br>  #将文件进行追加，使用-a选项<br>  date | tee -a testfile</p>\n</blockquote>\n<h4 id=\"实例\"><a href=\"#实例\" class=\"headerlink\" title=\"实例\"></a>实例</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#!/bin/bash</span><br><span class=\"line\"></span><br><span class=\"line\">outputfile=&quot;person.sql&quot;</span><br><span class=\"line\">IFS=&apos;,&apos;</span><br><span class=\"line\"></span><br><span class=\"line\">while read name age address</span><br><span class=\"line\">do</span><br><span class=\"line\">  cat &gt;&gt; $outputfile &lt;&lt; EOF</span><br><span class=\"line\">  insert into person(name,age,address) values(&apos;$name&apos;,&apos;$age&apos;,&apos;$address&apos;);</span><br><span class=\"line\">  EOF</span><br><span class=\"line\">done &lt; $1</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>./test.sh testfile</p>\n</blockquote>\n<h3 id=\"脚本控制\"><a href=\"#脚本控制\" class=\"headerlink\" title=\"脚本控制\"></a>脚本控制</h3><h4 id=\"处理信号\"><a href=\"#处理信号\" class=\"headerlink\" title=\"处理信号\"></a>处理信号</h4><p>常用的Linux信号如下：</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">信号</th>\n<th style=\"text-align:center\">值</th>\n<th style=\"text-align:center\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\">SIGHUP</td>\n<td style=\"text-align:center\">挂起进程</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">2</td>\n<td style=\"text-align:center\">SIGINT</td>\n<td style=\"text-align:center\">终止进程</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">3</td>\n<td style=\"text-align:center\">SIGQUIT</td>\n<td style=\"text-align:center\">停止进程</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">9</td>\n<td style=\"text-align:center\">SIGKILL</td>\n<td style=\"text-align:center\">无条件终止进程</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">15</td>\n<td style=\"text-align:center\">SIGTERM</td>\n<td style=\"text-align:center\">尽可能终止进程</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">17</td>\n<td style=\"text-align:center\">SIGSTOP</td>\n<td style=\"text-align:center\">无条件停止进程，但不是终止进程</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">18</td>\n<td style=\"text-align:center\">SIGTSTP</td>\n<td style=\"text-align:center\">停止或暂停进程，但不终止进程</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">19</td>\n<td style=\"text-align:center\">SIGCONT</td>\n<td style=\"text-align:center\">继续运行停止的进程</td>\n</tr>\n</tbody>\n</table>\n<p><code>Ctrl+Z</code>组合键会生成一个<code>SIGTSTP</code>信号，停止shell中运行的任何进程。停止进程会让程序继续保留在内存中，并能从上次停止的位置继续运行。</p>\n<p>使用<code>exit</code>退出停止的作业，使用<code>ps -l</code>查看已停止的作业。</p>\n<p>可以使用<code>trap</code>命令来捕获信号，其命令格式为：</p>\n<blockquote>\n<p>trap command signals</p>\n</blockquote>\n<p>或者在trap命令后加上<code>EXIT</code>信号来捕获脚本的退出：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">trap &quot;echo end...&quot; EXIT</span><br></pre></td></tr></table></figure>\n<p>也可以重新使用带有选项的trap命令在脚本中的不同位置进行不同的捕获处理。</p>\n<h4 id=\"以后台模式运行脚本\"><a href=\"#以后台模式运行脚本\" class=\"headerlink\" title=\"以后台模式运行脚本\"></a>以后台模式运行脚本</h4><p>直接在命令后面添加<code>&amp;</code>即可：</p>\n<blockquote>\n<p>./test.sh &amp;</p>\n</blockquote>\n<p>注意：在ps命令的输出中，每一个后台进程都和终端会话终端联系在一起。如果终端会话退出，那么后台进程也会随之退出。</p>\n<p>此时可以使用<code>nohup</code>命令来阻止后台进程在终端退出时也一起终止：</p>\n<blockquote>\n<p>nohup ./test.sh &amp;</p>\n</blockquote>\n<h4 id=\"作业控制\"><a href=\"#作业控制\" class=\"headerlink\" title=\"作业控制\"></a>作业控制</h4><p>作业控制：启动、停止终止以及恢复作业的功能。</p>\n<p>使用<code>jobs</code>命令查看shell当前正在处理的作业。jobs命令参数如下：</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">参数</th>\n<th style=\"text-align:center\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">-l</td>\n<td style=\"text-align:center\">列出进程的PID以及作业号</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">-n</td>\n<td style=\"text-align:center\">只列出上次shell发出的通知后改变了状态的作业</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">-p</td>\n<td style=\"text-align:center\">只列出作业的PID</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">-r</td>\n<td style=\"text-align:center\">只列出运行中的作业</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">-s</td>\n<td style=\"text-align:center\">只列出已停止的作业</td>\n</tr>\n</tbody>\n</table>\n<p>如果要以后台模式重启一个作业，可以用<code>bg</code>命令加上作业号：</p>\n<blockquote>\n<p>bg 2</p>\n</blockquote>\n<p>如果要以前台模式重启一个作业，可以用<code>fg</code>命令加上作业号：</p>\n<blockquote>\n<p>fg 2</p>\n</blockquote>\n<h4 id=\"调整优先级\"><a href=\"#调整优先级\" class=\"headerlink\" title=\"调整优先级\"></a>调整优先级</h4><p>调度优先级：内核分配给进程的CPU时间。<br>调度优先级是一个整数值，从-20(最高优先级)到+19(最低优先级)。默认情况下以优先级0来启动所有进程。</p>\n<p>使用<code>nice</code>命令设置命令启动时的调度优先级，例如：</p>\n<blockquote>\n<p>nice -n 10 ./test.sh &gt; test.out &amp;</p>\n</blockquote>\n<p>使用<code>renice</code>命令改变运行中进程的PID，例如：</p>\n<blockquote>\n<p>renice -n 10 -p 8888</p>\n</blockquote>\n<h4 id=\"定时运行作业\"><a href=\"#定时运行作业\" class=\"headerlink\" title=\"定时运行作业\"></a>定时运行作业</h4><p>使用<code>at</code>命令来计划执行作业。at命令会将作业提交到队列中，指定shell何时运行该作业。<br>at命令的格式如下：</p>\n<blockquote>\n<p>at [-f filename] time</p>\n</blockquote>\n<p>当作业在运行时，Linux系统会将提交该作业的用户的电子邮件地址作为STDOUT和STDERR。所以需要在脚本中对输出进行重定向。</p>\n<p>使用<code>atq</code>命令查看系统中有哪些作业在等待。</p>\n<p>使用<code>atrm</code>命令来删除等待中的作业。</p>\n<h5 id=\"使用cron程序\"><a href=\"#使用cron程序\" class=\"headerlink\" title=\"使用cron程序\"></a>使用cron程序</h5><p>Linux系统使用cron程序来安排要定期执行的作业。cron程序会在后台运行并检查一个特殊的表，以获知已安排执行的作业。</p>\n<p>cron时间表的格式如下：</p>\n<blockquote>\n<p>min hour dayofmonth month dayof week command</p>\n</blockquote>\n<p>如果想在每天下午15:20执行某个文件，可以设置为：</p>\n<blockquote>\n<p>20 15 * * * * /home/zyj/shell/tesh.sh &gt; test.out</p>\n</blockquote>\n<p>使用crontab命令来处理cron时间表。</p>\n<h3 id=\"函数\"><a href=\"#函数\" class=\"headerlink\" title=\"函数\"></a>函数</h3><h4 id=\"基本函数\"><a href=\"#基本函数\" class=\"headerlink\" title=\"基本函数\"></a>基本函数</h4><p>创建函数</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function name &#123;</span><br><span class=\"line\">    commands</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"在函数中使用变量\"><a href=\"#在函数中使用变量\" class=\"headerlink\" title=\"在函数中使用变量\"></a>在函数中使用变量</h4><p>向函数传递参数<br>在脚本中指定函数时，必须将参数和函数放在同一行，例如：</p>\n<blockquote>\n<p>func1 $value1 10</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#!/bin/bash</span><br><span class=\"line\"></span><br><span class=\"line\">function add &#123;</span><br><span class=\"line\">  if [ $# -eq 0] || [ $# -gt 2]</span><br><span class=\"line\">  then</span><br><span class=\"line\">    echo -1</span><br><span class=\"line\">  elif [ $# -eq 1 ]</span><br><span class=\"line\">  then</span><br><span class=\"line\">    echo $[ $1 + $1 ]</span><br><span class=\"line\">  else </span><br><span class=\"line\">    echo $[ $1 + $2 ]</span><br><span class=\"line\">  fi</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">value1=$(add 10 15)</span><br><span class=\"line\">value2=$(add 10)</span><br><span class=\"line\">value3=$(add)</span><br><span class=\"line\">value4=$(add 5 10 15)</span><br><span class=\"line\">echo $value1 $value2 $value3 $value4</span><br></pre></td></tr></table></figure>\n<h4 id=\"全局变量和局部变量\"><a href=\"#全局变量和局部变量\" class=\"headerlink\" title=\"全局变量和局部变量\"></a>全局变量和局部变量</h4><p>使用<code>local</code>关键字定义局部变量。</p>\n<blockquote>\n<p>local temp</p>\n</blockquote>\n<p>local关键字保证了变量只局限在该函数中。如果脚本中在该函数之外有同样名字的变量，那么shell将会保持这两个变量的值是分离的。</p>\n<h4 id=\"数组变量和函数\"><a href=\"#数组变量和函数\" class=\"headerlink\" title=\"数组变量和函数\"></a>数组变量和函数</h4><p>向函数传递数组参数</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#!/bin/bash</span><br><span class=\"line\"></span><br><span class=\"line\">function testArr &#123;</span><br><span class=\"line\">    local newArr</span><br><span class=\"line\">    newArr=(&quot;$@&quot;)</span><br><span class=\"line\">    echo &quot;The new array is $&#123;newArr[*]&#125;&quot;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">myArr=(1 2 3 4 5)</span><br><span class=\"line\">testArr $&#123;myArr[*]&#125;</span><br></pre></td></tr></table></figure>\n<p>从函数返回数组</p>\n<h4 id=\"函数递归\"><a href=\"#函数递归\" class=\"headerlink\" title=\"函数递归\"></a>函数递归</h4><p>计算阶乘</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#!/bin/bash</span><br><span class=\"line\"></span><br><span class=\"line\">function factorial &#123;</span><br><span class=\"line\">  if [ $1 -eq 1 ]</span><br><span class=\"line\">  then</span><br><span class=\"line\">    echo 1</span><br><span class=\"line\">  else</span><br><span class=\"line\">    local temp=$[ $1 - 1 ]</span><br><span class=\"line\">    local result=$(factorial $temp)</span><br><span class=\"line\">    echo $[ $result * $1 ]</span><br><span class=\"line\">  fi</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">read -p &quot;Enter a number:&quot; value</span><br><span class=\"line\">result=$(factorial $value)</span><br><span class=\"line\">echo &quot;The result is: &quot; $result</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"创建shell脚本文件\"><a href=\"#创建shell脚本文件\" class=\"headerlink\" title=\"创建shell脚本文件\"></a>创建shell脚本文件</h3><p>在创建shell脚本文件时，必须在文件的第一行指定要使用的shell。其格式为</p>\n<blockquote>\n<p>#!/bin/bash<br>  注意：shell只会去处理第一行注释行，并不会处理其他的注释行。</p>\n</blockquote>\n<p>创建shell脚本文件后，给文件添加执行权限</p>\n<blockquote>\n<p>chmod u+x filename</p>\n</blockquote>\n<p>如果想把脚本中的文本字符串和命令输出显示在同一行中，可以用echo语句的-n参数</p>\n<blockquote>\n<p>echo -n “The time and date are: “<br>  date</p>\n</blockquote>\n<p>使用等号将值赋给用户变量时，在变量、等号和值之间不能出现空格。</p>\n<blockquote>\n<p>testing=`date`<br>  testing=$(date)</p>\n</blockquote>\n<p>引用一个变量值时需要使用$，而引用变量来对其进行赋值时则不要使用$：</p>\n<blockquote>\n<p>value1=10<br>  value2=$value1<br>  # 注意：没有使用$，shell会将变量名解释成普通的文本字符串。</p>\n</blockquote>\n<h4 id=\"命令替换\"><a href=\"#命令替换\" class=\"headerlink\" title=\"命令替换\"></a>命令替换</h4><p>有两种方法可以将命令输出赋给变量：</p>\n<ol>\n<li><p>反引号字符``</p>\n</li>\n<li><p>$()格式</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">testing=`date`</span><br><span class=\"line\">testing=$(date)</span><br><span class=\"line\">echo &quot;The date and time are: &quot; $testing</span><br><span class=\"line\"></span><br><span class=\"line\">today=$(date +%y%m%d)</span><br><span class=\"line\">ls /usr/bin -al &gt; log.$today</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h4 id=\"重定向\"><a href=\"#重定向\" class=\"headerlink\" title=\"重定向\"></a>重定向</h4><p>重定向包括输出重定向<code>&gt;  &gt;&gt;</code>以及输入重定向<code>&lt;  &lt;&lt;</code></p>\n<blockquote>\n<p>内联输入重定向</p>\n</blockquote>\n<h4 id=\"执行数学运算\"><a href=\"#执行数学运算\" class=\"headerlink\" title=\"执行数学运算\"></a>执行数学运算</h4><h5 id=\"expr命令\"><a href=\"#expr命令\" class=\"headerlink\" title=\"expr命令\"></a>expr命令</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">expr 1 + 5</span><br><span class=\"line\">6</span><br></pre></td></tr></table></figure>\n<h5 id=\"使用方括号\"><a href=\"#使用方括号\" class=\"headerlink\" title=\"使用方括号\"></a>使用方括号</h5><p>如果需要将一个数学运算结果赋给某个变量，可以用美元符和方括号：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var1=100</span><br><span class=\"line\">var2=50</span><br><span class=\"line\">var3=30</span><br><span class=\"line\">var4=$[$var1 * ($var3 - $var2)]</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>需要注意的是，bash shell数学运算符只支持整数运算。</p>\n</blockquote>\n<h5 id=\"浮点解决方案\"><a href=\"#浮点解决方案\" class=\"headerlink\" title=\"浮点解决方案\"></a>浮点解决方案</h5><p>在脚本中使用bc，基本格式如下：</p>\n<blockquote>\n<p>variable=$(echo “options; expression” | bc)</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var1=20</span><br><span class=\"line\">var2=3.14159</span><br><span class=\"line\">var3=$(echo &quot;scale=4; $var1 * var2&quot; | bc)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var1=10.46</span><br><span class=\"line\">var2=43.67</span><br><span class=\"line\">var3=33.2</span><br><span class=\"line\">var4=71</span><br><span class=\"line\"></span><br><span class=\"line\">var5=$(bc &lt;&lt; EOF</span><br><span class=\"line\">scale = 4</span><br><span class=\"line\">a1 = ($var1 * $var2)</span><br><span class=\"line\">b1 = ($var3 * $var4)</span><br><span class=\"line\">a1 + b1</span><br><span class=\"line\">EOF</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\">echo $var5</span><br></pre></td></tr></table></figure>\n<h4 id=\"退出脚本\"><a href=\"#退出脚本\" class=\"headerlink\" title=\"退出脚本\"></a>退出脚本</h4><p>退出状态码的查看<code>$?</code></p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">状态码</th>\n<th style=\"text-align:center\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">0</td>\n<td style=\"text-align:center\">命令成功结束</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\">通用未知错误</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">2</td>\n<td style=\"text-align:center\">误用Shell命令</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">126</td>\n<td style=\"text-align:center\">命令不可执行</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">127</td>\n<td style=\"text-align:center\">没找到命令</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">128</td>\n<td style=\"text-align:center\">无效退出参数</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">128+x</td>\n<td style=\"text-align:center\">Linux信号x的严重错误</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">130</td>\n<td style=\"text-align:center\">命令通过Ctrl+C控制码越界</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">255</td>\n<td style=\"text-align:center\">退出码越界</td>\n</tr>\n</tbody>\n</table>\n<p>exit命令</p>\n<h3 id=\"结构化命令\"><a href=\"#结构化命令\" class=\"headerlink\" title=\"结构化命令\"></a>结构化命令</h3><h4 id=\"if-then\"><a href=\"#if-then\" class=\"headerlink\" title=\"if-then\"></a>if-then</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if command; then</span><br><span class=\"line\">  commands</span><br><span class=\"line\">fi</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if pwd; then</span><br><span class=\"line\">  echo &quot;It worked&quot;</span><br><span class=\"line\">fi</span><br></pre></td></tr></table></figure>\n<h4 id=\"if-then-else\"><a href=\"#if-then-else\" class=\"headerlink\" title=\"if-then-else\"></a>if-then-else</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if command</span><br><span class=\"line\">then </span><br><span class=\"line\">  commands</span><br><span class=\"line\">else</span><br><span class=\"line\">  commands</span><br><span class=\"line\">fi</span><br></pre></td></tr></table></figure>\n<h4 id=\"嵌套if\"><a href=\"#嵌套if\" class=\"headerlink\" title=\"嵌套if\"></a>嵌套if</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if command1</span><br><span class=\"line\">then</span><br><span class=\"line\">  commands</span><br><span class=\"line\">else</span><br><span class=\"line\">  if command2</span><br><span class=\"line\">  then</span><br><span class=\"line\">    more commands</span><br><span class=\"line\">  else</span><br><span class=\"line\">    more commands</span><br><span class=\"line\">  fi</span><br><span class=\"line\">fi</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if command1</span><br><span class=\"line\">then</span><br><span class=\"line\">  commands</span><br><span class=\"line\">elif command2</span><br><span class=\"line\">then</span><br><span class=\"line\">  more commands</span><br><span class=\"line\">fi</span><br></pre></td></tr></table></figure>\n<h4 id=\"test命令\"><a href=\"#test命令\" class=\"headerlink\" title=\"test命令\"></a>test命令</h4><p>如果test命令中列出的条件成立，test命令就会退出并返回退出状态码0。</p>\n<blockquote>\n<p>test condition</p>\n</blockquote>\n<p>或者可以用在<code>if-then</code>语句中</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if test condition</span><br><span class=\"line\">then</span><br><span class=\"line\">  commands</span><br><span class=\"line\">fi</span><br></pre></td></tr></table></figure>\n<p>也可以使用方括号进行测试</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if [ condition ]</span><br><span class=\"line\">then</span><br><span class=\"line\">  commands</span><br><span class=\"line\">fi</span><br></pre></td></tr></table></figure>\n<h5 id=\"数值比较\"><a href=\"#数值比较\" class=\"headerlink\" title=\"数值比较\"></a>数值比较</h5><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">比较</th>\n<th style=\"text-align:center\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">n1 -eq n2</td>\n<td style=\"text-align:center\">检查n1是否等于n2</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">n1 -ge n2</td>\n<td style=\"text-align:center\">检查n1是否大于等于n2</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">n1 -gt n2</td>\n<td style=\"text-align:center\">检查n1是否大于n2</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">n1 -le n2</td>\n<td style=\"text-align:center\">检查n1是否小于等于n2</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">n1 -lt n2</td>\n<td style=\"text-align:center\">检查n1是否小于n2</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">n1 -ne n2</td>\n<td style=\"text-align:center\">检查n1是否不等于n2</td>\n</tr>\n</tbody>\n</table>\n<h5 id=\"字符串比较\"><a href=\"#字符串比较\" class=\"headerlink\" title=\"字符串比较\"></a>字符串比较</h5><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">比较</th>\n<th style=\"text-align:center\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">str1 = str2</td>\n<td style=\"text-align:center\">检查字符串是否相同</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">str1 != str2</td>\n<td style=\"text-align:center\">检查字符串是否不同</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">str1 &lt; str2</td>\n<td style=\"text-align:center\">检查str1是否比str2大</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">str1 > str2</td>\n<td style=\"text-align:center\">检查str1是否比str2小</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">-n str1</td>\n<td style=\"text-align:center\">检查str1的长度是否非0</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">-z str1</td>\n<td style=\"text-align:center\">检查str1的长度是否为0</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p>需要注意的是，大于号和小于号在使用时需要转义</p>\n</blockquote>\n<h5 id=\"文件比较\"><a href=\"#文件比较\" class=\"headerlink\" title=\"文件比较\"></a>文件比较</h5><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">比较</th>\n<th style=\"text-align:center\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">-e file</td>\n<td style=\"text-align:center\">如果file存在，则为真</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">-d file</td>\n<td style=\"text-align:center\">如果file存在并为目录，则为真</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">-f file</td>\n<td style=\"text-align:center\">如果file为常规文件，则为真</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">-r file</td>\n<td style=\"text-align:center\">如果file存在并可读，则为真</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">-s file</td>\n<td style=\"text-align:center\">如果file存在并非空，则为真</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">-w file</td>\n<td style=\"text-align:center\">如果file存在并可写，则为真</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">-x file</td>\n<td style=\"text-align:center\">如果file存在并可执行，则为真</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">-O file</td>\n<td style=\"text-align:center\">如果file存在并属于当前用户，则为真</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">-G file</td>\n<td style=\"text-align:center\">如果file存在并且默认组与当前用户相同，则为真</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">file1 -nt file2</td>\n<td style=\"text-align:center\">如果file1比file2新，则为真</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">file1 -ot file2</td>\n<td style=\"text-align:center\">如果file1比file2旧，则为真</td>\n</tr>\n</tbody>\n</table>\n<h5 id=\"复合条件测试\"><a href=\"#复合条件测试\" class=\"headerlink\" title=\"复合条件测试\"></a>复合条件测试</h5><p>if-then可以用<code>&amp;&amp;</code>和<code>||</code>来组合测试</p>\n<h4 id=\"if-then的高级特性\"><a href=\"#if-then的高级特性\" class=\"headerlink\" title=\"if-then的高级特性\"></a>if-then的高级特性</h4><h5 id=\"使用双括号\"><a href=\"#使用双括号\" class=\"headerlink\" title=\"使用双括号\"></a>使用双括号</h5><p>双括号命令允许你在比较过程中使用高级数学表达式。其格式如下：</p>\n<blockquote>\n<p>((expression))</p>\n</blockquote>\n<p>双括号命令符号包括以下：<br>val++，val–，++val，–val，!，~，**(幂运算)，&lt;&lt;，&gt;&gt;，&amp;，|，&amp;&amp;，||</p>\n<h5 id=\"使用双方括号\"><a href=\"#使用双方括号\" class=\"headerlink\" title=\"使用双方括号\"></a>使用双方括号</h5><p>双方括号命令提供了针对字符串比较的高级特性。其格式如下：</p>\n<blockquote>\n<p>[[expression]]</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if [[ $USER == r* ]]</span><br></pre></td></tr></table></figure>\n<h4 id=\"case命令\"><a href=\"#case命令\" class=\"headerlink\" title=\"case命令\"></a>case命令</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">case variable in</span><br><span class=\"line\">pattern1 | pattern2) commands1;;</span><br><span class=\"line\">pattern3) commands2;;</span><br><span class=\"line\">*) default commands;;</span><br><span class=\"line\">esac</span><br></pre></td></tr></table></figure>\n<h4 id=\"for命令\"><a href=\"#for命令\" class=\"headerlink\" title=\"for命令\"></a>for命令</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">for var in list</span><br><span class=\"line\">do</span><br><span class=\"line\">  commands</span><br><span class=\"line\">done</span><br></pre></td></tr></table></figure>\n<p>for循环假定每个值都是用空格分割的。<br>可以使用内部字段分隔符<code>IFS</code>来自定义分隔符，例如</p>\n<blockquote>\n<p>IFS=$’\\n’<br>  IFS=$’\\n’:;”</p>\n</blockquote>\n<h5 id=\"C语言分隔的for命令\"><a href=\"#C语言分隔的for命令\" class=\"headerlink\" title=\"C语言分隔的for命令\"></a>C语言分隔的for命令</h5><p>命令格式：</p>\n<blockquote>\n<p>for (( variable assignment ; condition ; iteration process ))</p>\n</blockquote>\n<h4 id=\"while命令\"><a href=\"#while命令\" class=\"headerlink\" title=\"while命令\"></a>while命令</h4><p>while命令的基本格式：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">while test command</span><br><span class=\"line\">do</span><br><span class=\"line\">  other commands</span><br><span class=\"line\">done</span><br></pre></td></tr></table></figure>\n<h4 id=\"until命令\"><a href=\"#until命令\" class=\"headerlink\" title=\"until命令\"></a>until命令</h4><p>until命令和while命令正好相反，只有测试命令的退出状态码不为0，bash shell才会执行循环中列出的命令。</p>\n<p>命令格式：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">until test commands</span><br><span class=\"line\">do</span><br><span class=\"line\">  other commands</span><br><span class=\"line\">done</span><br></pre></td></tr></table></figure>\n<h4 id=\"循环处理文件数据\"><a href=\"#循环处理文件数据\" class=\"headerlink\" title=\"循环处理文件数据\"></a>循环处理文件数据</h4><p>需要使用嵌套循环以及修改IFS环境变量</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">IFS.OLD=$IFS</span><br><span class=\"line\">IFS=$&apos;\\n&apos;</span><br><span class=\"line\">for entry in $(cat /etc/passwd)</span><br><span class=\"line\">do</span><br><span class=\"line\">  echo &quot;Value in $entry&quot;</span><br><span class=\"line\">  IFS=:</span><br><span class=\"line\">  for value in $entry</span><br><span class=\"line\">  do</span><br><span class=\"line\">    if [ -n &quot;$value&quot; ]</span><br><span class=\"line\">    then</span><br><span class=\"line\">      echo &quot;$value&quot;</span><br><span class=\"line\">    fi</span><br><span class=\"line\">  done</span><br><span class=\"line\">done</span><br></pre></td></tr></table></figure>\n<h4 id=\"控制循环\"><a href=\"#控制循环\" class=\"headerlink\" title=\"控制循环\"></a>控制循环</h4><h5 id=\"break命令\"><a href=\"#break命令\" class=\"headerlink\" title=\"break命令\"></a>break命令</h5><p>可以用break退出任意的循环，包括while和until循环。<br>也可以使用<code>break -n</code>跳出外部循环，默认为1。</p>\n<h5 id=\"continue命令\"><a href=\"#continue命令\" class=\"headerlink\" title=\"continue命令\"></a>continue命令</h5><p>continue命令可以提前终止某次循环中的命令，但并不会完全终止整个循环。<br>也可以使用<code>continue -n</code>继续执行哪一层循环。</p>\n<h4 id=\"处理循环的输出\"><a href=\"#处理循环的输出\" class=\"headerlink\" title=\"处理循环的输出\"></a>处理循环的输出</h4><p>可以对循环的输出使用管道或重定向。通过在done命令之后添加一个处理命令来实现。</p>\n<blockquote>\n<p>done &gt; output.txt</p>\n</blockquote>\n<h4 id=\"例子\"><a href=\"#例子\" class=\"headerlink\" title=\"例子\"></a>例子</h4><p>创建多个用户账户</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">input=&quot;user.csv&quot;</span><br><span class=\"line\">while IFS=&quot;,&quot; read -r userid name</span><br><span class=\"line\">do</span><br><span class=\"line\">  echo &quot;adding $userid&quot;</span><br><span class=\"line\">  useradd -c &quot;$name&quot; -m &quot;userid&quot; </span><br><span class=\"line\">done &lt; &quot;$input&quot;</span><br></pre></td></tr></table></figure>\n<h3 id=\"处理用户输入\"><a href=\"#处理用户输入\" class=\"headerlink\" title=\"处理用户输入\"></a>处理用户输入</h3><h4 id=\"命令行参数\"><a href=\"#命令行参数\" class=\"headerlink\" title=\"命令行参数\"></a>命令行参数</h4><p>向shell脚本传递数据的最基本方法是使用命令行参数。<br>命令行参数允许在运行脚本时向命令行添加数据。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./test.sh 10 abc</span><br></pre></td></tr></table></figure>\n<p>bash shell会将一些位置参数的特殊变量分配给输入到命令行中的所有参数。这也包括shell所执行的脚本<br>命令。其中：<code>$0</code>是程序名，<code>$1</code>是第一个参数，<code>$2</code>是第二个参数，一直到<code>$9</code>。</p>\n<p>在使用时，需要用空格将每个命令行参数分隔开，例如:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">count=$[ $1 * $2 ]</span><br></pre></td></tr></table></figure>\n<p>注意，当命令行参数中出现空格时，需要使用引号：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./test1.sh &apos;hello world&apos;</span><br></pre></td></tr></table></figure>\n<p>如果命令行参数的数量超过9个时，从第十个参数开始，需要使用花括号，例如<code>${10}</code>、<code>${11}</code>等。</p>\n<p>使用<code>basename</code>命令可以返回不包含路径的脚本名，例如：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">echo &quot;$0&quot;</span><br><span class=\"line\">echo &quot;$(basename $0)&quot;</span><br></pre></td></tr></table></figure>\n<p>在使用命令行参数的脚本中，需要先检测其中是否存在数据：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if [ -n &quot;$1&quot; ]</span><br></pre></td></tr></table></figure>\n<h4 id=\"特殊的参数变量\"><a href=\"#特殊的参数变量\" class=\"headerlink\" title=\"特殊的参数变量\"></a>特殊的参数变量</h4><p>特殊变量<code>$#</code>含有脚本运行时携带的命令行参数的个数，例如：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">echo There are $# parameters supplied.</span><br></pre></td></tr></table></figure>\n<p>使用$&#123;!#&#125;可以返回最后一个命令行参数的值，如果命令行参数的个数为0，则返回当前脚本的名称。</p>\n<p>使用<code>$*</code>和<code>$@</code>可以访问所有的参数。其中<code>$*</code>变量会将命令行上提供的所有参数当作一个单词保存。这个单词包括了命令行中出现的每一个参数值；<code>$@</code>变量会将命令行上所有参数当作同一个字符串中的多个独立的单词，然后通过遍历获取所有的参数值。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">count=1</span><br><span class=\"line\">for param in &quot;$*&quot;</span><br><span class=\"line\">do</span><br><span class=\"line\">  echo &quot;\\$* parameter #count = $param&quot;</span><br><span class=\"line\">  count=$[ $count + 1 ]</span><br><span class=\"line\">done</span><br><span class=\"line\">echo</span><br><span class=\"line\">count=1</span><br><span class=\"line\">for param in &quot;$@&quot;</span><br><span class=\"line\">do</span><br><span class=\"line\">  echo &quot;\\$@ parameter #count = $param&quot;</span><br><span class=\"line\">  count=$[ $count + 1 ]</span><br><span class=\"line\">done</span><br></pre></td></tr></table></figure>\n<h4 id=\"移动变量\"><a href=\"#移动变量\" class=\"headerlink\" title=\"移动变量\"></a>移动变量</h4><p>bash shell的<code>shift</code>命令可以用来操作命令行参数，shift命令会根据命令行参数的相对位置来移动。<br>在默认情况下，会将每个参数变量向左移动一个位置。其中$2的值会移动到$1，而$1的值则会被删除，$0不会改变。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">while [ -n &quot;$1&quot; ]</span><br><span class=\"line\">do</span><br><span class=\"line\">  echo &quot;$1&quot;</span><br><span class=\"line\">  shift</span><br><span class=\"line\">done</span><br></pre></td></tr></table></figure>\n<p>也可以一次性移动多个位置</p>\n<blockquote>\n<p>shift n</p>\n</blockquote>\n<h4 id=\"处理选项\"><a href=\"#处理选项\" class=\"headerlink\" title=\"处理选项\"></a>处理选项</h4><p>选项是跟在单破折号后面的单个字母，可以用来改变命令的行为。<br>可以使用<code>--</code>来表明选项列表结束。</p>\n<h5 id=\"getopt命令\"><a href=\"#getopt命令\" class=\"headerlink\" title=\"getopt命令\"></a>getopt命令</h5><p>getopt命令能够识别命令行参数，从而在脚本中解析更加方便。</p>\n<p>命令格式：</p>\n<blockquote>\n<p>getopt optstring parameters<br>  其中optstring定义了命令行有效的选项字母，还定义了哪些选项字母需要参数值。</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">getopt ab:cd -a -b test1 -cd test2 test3</span><br><span class=\"line\">-a -b test1 -c -d -- test2 test3</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>如果指定了一个不再optstring中的选项，默认情况下，getopt命令会产生一条错误消息。可以在命令后加-q忽略。</p>\n</blockquote>\n<p>在脚本中使用getopt</p>\n<blockquote>\n<p>set – $(getopt -q ab:cd “$@”)</p>\n</blockquote>\n<h5 id=\"getopts命令\"><a href=\"#getopts命令\" class=\"headerlink\" title=\"getopts命令\"></a>getopts命令</h5><p>命令格式如下：</p>\n<blockquote>\n<p>getopts optstring variable</p>\n</blockquote>\n<p>如果选项需要跟一个参数值，<code>OPTARG</code>环境变量就会保存这个值。<code>OPTIND</code>环境变量保存了参数列表中getopts正在处理的参数位置。</p>\n<h4 id=\"获取用户输入\"><a href=\"#获取用户输入\" class=\"headerlink\" title=\"获取用户输入\"></a>获取用户输入</h4><p>使用<code>read</code>命令获取用户输入。</p>\n<p>read命令从标准输入或另一个文件描述符接收输入。在收到输入后，read命令会将数据放进一个变量。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">read -p &quot;Enter your name: &quot; first last</span><br><span class=\"line\">echo $last, $first</span><br></pre></td></tr></table></figure>\n<p>如果在read命令行中不指定变量，那么read命令会将它收到的任何数据都放进特殊环境变量<code>REPLY</code>中：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">read -p &quot;Enter your name: &quot;</span><br><span class=\"line\">echo $REPLY</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>在使用read命令时，需要注意超时时间，可以使用-t选项来指定计时器</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">read -t 5 -p &quot;Please enter your name: &quot; name</span><br></pre></td></tr></table></figure>\n<p>如果需要隐藏输入的值时，可以使用<code>-s</code>选项。<br>read在读取文件时，每次从文件中读取一行文本，当文件中没有内容时，read命令将会退出并返回非零退出状态码。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat test | while read line</span><br></pre></td></tr></table></figure>\n<h3 id=\"呈现数据\"><a href=\"#呈现数据\" class=\"headerlink\" title=\"呈现数据\"></a>呈现数据</h3><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">文件描述符</th>\n<th style=\"text-align:center\">缩写</th>\n<th style=\"text-align:center\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">0</td>\n<td style=\"text-align:center\">STDIN</td>\n<td style=\"text-align:center\">标准输入</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\">STDOUT</td>\n<td style=\"text-align:center\">标准输出</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">2</td>\n<td style=\"text-align:center\">STDERR</td>\n<td style=\"text-align:center\">标准错误</td>\n</tr>\n</tbody>\n</table>\n<p>默认情况下，STDERR文件描述符和STDOUT文件描述符指向同样的地方。</p>\n<p>只重定向错误：</p>\n<blockquote>\n<p>ls -al errorfile 2&gt; test</p>\n</blockquote>\n<p>重定向错误和数据：</p>\n<blockquote>\n<p>ls -al test.txt errorfile 2&gt;test 1&gt;test1</p>\n</blockquote>\n<p>同时重定向STDERR和STDOUT：</p>\n<blockquote>\n<p>ls -al test.txt errorfile &amp;&gt;test2</p>\n</blockquote>\n<p>如果需要重定向到某个文件描述符时，必须在文件描述符之前加一个<code>&amp;</code>：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">echo &quot;This is an error&quot; &gt;&amp;2</span><br></pre></td></tr></table></figure>\n<p>可以使用<code>exec</code>命令进行永久重定向：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">exec 1&gt; testout</span><br><span class=\"line\">exec 0&lt; testin</span><br></pre></td></tr></table></figure>\n<p>关闭文件描述符：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">exec 3&gt;&amp;-</span><br></pre></td></tr></table></figure>\n<p>如果需要阻止命令输出，可以将STDERR重定向到<code>/dev/null</code>。</p>\n<p>也可以在/tmp目录中创建临时文件或文件夹。使用<code>mktemp</code>在本地目录创建临时文件。创建时，只需要指定一个临时模板：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#在当前目录创建临时文件，并返回文件名</span><br><span class=\"line\">mktemp testing.xxxxxx</span><br><span class=\"line\">#在系统临时目录创建临时文件，并返回全路径</span><br><span class=\"line\">mktemp -t tmp.xxxxxx</span><br><span class=\"line\">#在当前目录创建临时文件夹，并返回文件夹名</span><br><span class=\"line\">mktemp -d dir.xxxxxx</span><br></pre></td></tr></table></figure>\n<p>使用<code>tee</code>命令可以将输出同时发送到显示器和日志文件中</p>\n<blockquote>\n<p>date | tee testfile<br>  #将文件进行追加，使用-a选项<br>  date | tee -a testfile</p>\n</blockquote>\n<h4 id=\"实例\"><a href=\"#实例\" class=\"headerlink\" title=\"实例\"></a>实例</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#!/bin/bash</span><br><span class=\"line\"></span><br><span class=\"line\">outputfile=&quot;person.sql&quot;</span><br><span class=\"line\">IFS=&apos;,&apos;</span><br><span class=\"line\"></span><br><span class=\"line\">while read name age address</span><br><span class=\"line\">do</span><br><span class=\"line\">  cat &gt;&gt; $outputfile &lt;&lt; EOF</span><br><span class=\"line\">  insert into person(name,age,address) values(&apos;$name&apos;,&apos;$age&apos;,&apos;$address&apos;);</span><br><span class=\"line\">  EOF</span><br><span class=\"line\">done &lt; $1</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>./test.sh testfile</p>\n</blockquote>\n<h3 id=\"脚本控制\"><a href=\"#脚本控制\" class=\"headerlink\" title=\"脚本控制\"></a>脚本控制</h3><h4 id=\"处理信号\"><a href=\"#处理信号\" class=\"headerlink\" title=\"处理信号\"></a>处理信号</h4><p>常用的Linux信号如下：</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">信号</th>\n<th style=\"text-align:center\">值</th>\n<th style=\"text-align:center\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\">SIGHUP</td>\n<td style=\"text-align:center\">挂起进程</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">2</td>\n<td style=\"text-align:center\">SIGINT</td>\n<td style=\"text-align:center\">终止进程</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">3</td>\n<td style=\"text-align:center\">SIGQUIT</td>\n<td style=\"text-align:center\">停止进程</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">9</td>\n<td style=\"text-align:center\">SIGKILL</td>\n<td style=\"text-align:center\">无条件终止进程</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">15</td>\n<td style=\"text-align:center\">SIGTERM</td>\n<td style=\"text-align:center\">尽可能终止进程</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">17</td>\n<td style=\"text-align:center\">SIGSTOP</td>\n<td style=\"text-align:center\">无条件停止进程，但不是终止进程</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">18</td>\n<td style=\"text-align:center\">SIGTSTP</td>\n<td style=\"text-align:center\">停止或暂停进程，但不终止进程</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">19</td>\n<td style=\"text-align:center\">SIGCONT</td>\n<td style=\"text-align:center\">继续运行停止的进程</td>\n</tr>\n</tbody>\n</table>\n<p><code>Ctrl+Z</code>组合键会生成一个<code>SIGTSTP</code>信号，停止shell中运行的任何进程。停止进程会让程序继续保留在内存中，并能从上次停止的位置继续运行。</p>\n<p>使用<code>exit</code>退出停止的作业，使用<code>ps -l</code>查看已停止的作业。</p>\n<p>可以使用<code>trap</code>命令来捕获信号，其命令格式为：</p>\n<blockquote>\n<p>trap command signals</p>\n</blockquote>\n<p>或者在trap命令后加上<code>EXIT</code>信号来捕获脚本的退出：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">trap &quot;echo end...&quot; EXIT</span><br></pre></td></tr></table></figure>\n<p>也可以重新使用带有选项的trap命令在脚本中的不同位置进行不同的捕获处理。</p>\n<h4 id=\"以后台模式运行脚本\"><a href=\"#以后台模式运行脚本\" class=\"headerlink\" title=\"以后台模式运行脚本\"></a>以后台模式运行脚本</h4><p>直接在命令后面添加<code>&amp;</code>即可：</p>\n<blockquote>\n<p>./test.sh &amp;</p>\n</blockquote>\n<p>注意：在ps命令的输出中，每一个后台进程都和终端会话终端联系在一起。如果终端会话退出，那么后台进程也会随之退出。</p>\n<p>此时可以使用<code>nohup</code>命令来阻止后台进程在终端退出时也一起终止：</p>\n<blockquote>\n<p>nohup ./test.sh &amp;</p>\n</blockquote>\n<h4 id=\"作业控制\"><a href=\"#作业控制\" class=\"headerlink\" title=\"作业控制\"></a>作业控制</h4><p>作业控制：启动、停止终止以及恢复作业的功能。</p>\n<p>使用<code>jobs</code>命令查看shell当前正在处理的作业。jobs命令参数如下：</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">参数</th>\n<th style=\"text-align:center\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">-l</td>\n<td style=\"text-align:center\">列出进程的PID以及作业号</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">-n</td>\n<td style=\"text-align:center\">只列出上次shell发出的通知后改变了状态的作业</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">-p</td>\n<td style=\"text-align:center\">只列出作业的PID</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">-r</td>\n<td style=\"text-align:center\">只列出运行中的作业</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">-s</td>\n<td style=\"text-align:center\">只列出已停止的作业</td>\n</tr>\n</tbody>\n</table>\n<p>如果要以后台模式重启一个作业，可以用<code>bg</code>命令加上作业号：</p>\n<blockquote>\n<p>bg 2</p>\n</blockquote>\n<p>如果要以前台模式重启一个作业，可以用<code>fg</code>命令加上作业号：</p>\n<blockquote>\n<p>fg 2</p>\n</blockquote>\n<h4 id=\"调整优先级\"><a href=\"#调整优先级\" class=\"headerlink\" title=\"调整优先级\"></a>调整优先级</h4><p>调度优先级：内核分配给进程的CPU时间。<br>调度优先级是一个整数值，从-20(最高优先级)到+19(最低优先级)。默认情况下以优先级0来启动所有进程。</p>\n<p>使用<code>nice</code>命令设置命令启动时的调度优先级，例如：</p>\n<blockquote>\n<p>nice -n 10 ./test.sh &gt; test.out &amp;</p>\n</blockquote>\n<p>使用<code>renice</code>命令改变运行中进程的PID，例如：</p>\n<blockquote>\n<p>renice -n 10 -p 8888</p>\n</blockquote>\n<h4 id=\"定时运行作业\"><a href=\"#定时运行作业\" class=\"headerlink\" title=\"定时运行作业\"></a>定时运行作业</h4><p>使用<code>at</code>命令来计划执行作业。at命令会将作业提交到队列中，指定shell何时运行该作业。<br>at命令的格式如下：</p>\n<blockquote>\n<p>at [-f filename] time</p>\n</blockquote>\n<p>当作业在运行时，Linux系统会将提交该作业的用户的电子邮件地址作为STDOUT和STDERR。所以需要在脚本中对输出进行重定向。</p>\n<p>使用<code>atq</code>命令查看系统中有哪些作业在等待。</p>\n<p>使用<code>atrm</code>命令来删除等待中的作业。</p>\n<h5 id=\"使用cron程序\"><a href=\"#使用cron程序\" class=\"headerlink\" title=\"使用cron程序\"></a>使用cron程序</h5><p>Linux系统使用cron程序来安排要定期执行的作业。cron程序会在后台运行并检查一个特殊的表，以获知已安排执行的作业。</p>\n<p>cron时间表的格式如下：</p>\n<blockquote>\n<p>min hour dayofmonth month dayof week command</p>\n</blockquote>\n<p>如果想在每天下午15:20执行某个文件，可以设置为：</p>\n<blockquote>\n<p>20 15 * * * * /home/zyj/shell/tesh.sh &gt; test.out</p>\n</blockquote>\n<p>使用crontab命令来处理cron时间表。</p>\n<h3 id=\"函数\"><a href=\"#函数\" class=\"headerlink\" title=\"函数\"></a>函数</h3><h4 id=\"基本函数\"><a href=\"#基本函数\" class=\"headerlink\" title=\"基本函数\"></a>基本函数</h4><p>创建函数</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function name &#123;</span><br><span class=\"line\">    commands</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"在函数中使用变量\"><a href=\"#在函数中使用变量\" class=\"headerlink\" title=\"在函数中使用变量\"></a>在函数中使用变量</h4><p>向函数传递参数<br>在脚本中指定函数时，必须将参数和函数放在同一行，例如：</p>\n<blockquote>\n<p>func1 $value1 10</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#!/bin/bash</span><br><span class=\"line\"></span><br><span class=\"line\">function add &#123;</span><br><span class=\"line\">  if [ $# -eq 0] || [ $# -gt 2]</span><br><span class=\"line\">  then</span><br><span class=\"line\">    echo -1</span><br><span class=\"line\">  elif [ $# -eq 1 ]</span><br><span class=\"line\">  then</span><br><span class=\"line\">    echo $[ $1 + $1 ]</span><br><span class=\"line\">  else </span><br><span class=\"line\">    echo $[ $1 + $2 ]</span><br><span class=\"line\">  fi</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">value1=$(add 10 15)</span><br><span class=\"line\">value2=$(add 10)</span><br><span class=\"line\">value3=$(add)</span><br><span class=\"line\">value4=$(add 5 10 15)</span><br><span class=\"line\">echo $value1 $value2 $value3 $value4</span><br></pre></td></tr></table></figure>\n<h4 id=\"全局变量和局部变量\"><a href=\"#全局变量和局部变量\" class=\"headerlink\" title=\"全局变量和局部变量\"></a>全局变量和局部变量</h4><p>使用<code>local</code>关键字定义局部变量。</p>\n<blockquote>\n<p>local temp</p>\n</blockquote>\n<p>local关键字保证了变量只局限在该函数中。如果脚本中在该函数之外有同样名字的变量，那么shell将会保持这两个变量的值是分离的。</p>\n<h4 id=\"数组变量和函数\"><a href=\"#数组变量和函数\" class=\"headerlink\" title=\"数组变量和函数\"></a>数组变量和函数</h4><p>向函数传递数组参数</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#!/bin/bash</span><br><span class=\"line\"></span><br><span class=\"line\">function testArr &#123;</span><br><span class=\"line\">    local newArr</span><br><span class=\"line\">    newArr=(&quot;$@&quot;)</span><br><span class=\"line\">    echo &quot;The new array is $&#123;newArr[*]&#125;&quot;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">myArr=(1 2 3 4 5)</span><br><span class=\"line\">testArr $&#123;myArr[*]&#125;</span><br></pre></td></tr></table></figure>\n<p>从函数返回数组</p>\n<h4 id=\"函数递归\"><a href=\"#函数递归\" class=\"headerlink\" title=\"函数递归\"></a>函数递归</h4><p>计算阶乘</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#!/bin/bash</span><br><span class=\"line\"></span><br><span class=\"line\">function factorial &#123;</span><br><span class=\"line\">  if [ $1 -eq 1 ]</span><br><span class=\"line\">  then</span><br><span class=\"line\">    echo 1</span><br><span class=\"line\">  else</span><br><span class=\"line\">    local temp=$[ $1 - 1 ]</span><br><span class=\"line\">    local result=$(factorial $temp)</span><br><span class=\"line\">    echo $[ $result * $1 ]</span><br><span class=\"line\">  fi</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">read -p &quot;Enter a number:&quot; value</span><br><span class=\"line\">result=$(factorial $value)</span><br><span class=\"line\">echo &quot;The result is: &quot; $result</span><br></pre></td></tr></table></figure>\n"},{"title":"docker的安装和使用","date":"2018-02-01T09:33:36.979Z","modified":null,"_content":"### docker安装\n在最小化安装的情况下，docker是没有安装的，所以不需要先卸载。\n\n> 安装yum-config-manager工具\n\n```\nyum -y install yum-utils\n```\n\n> 设置Docker仓库\n\n```\nyum-config-manager --add-repo https://docs.docker.com/v1.13/engine/installation/linux/repo_files/centos/docker.repo\n```\n\n> 更新yum源并安装最新的docker\n\n```\nyum makecache fast\nyum -y install docker-engine\n```\n\n> 启动docker\n\n```\nsystemctl start docker\nsystemctl enable docker\n```\n\n> 升级docker\n\n```\nyum makecache fast\nyum list docker-engine.x86_64  --showduplicates |sort -r\nyum -y install docker-engine-<VERSION_STRING>\n```\n","source":"_posts/docker.md","raw":"---\ntitle: docker的安装和使用\ndate:\nmodified: \ncategories:\n- Linux\ntags:\n- docker\n- Linux\n---\n### docker安装\n在最小化安装的情况下，docker是没有安装的，所以不需要先卸载。\n\n> 安装yum-config-manager工具\n\n```\nyum -y install yum-utils\n```\n\n> 设置Docker仓库\n\n```\nyum-config-manager --add-repo https://docs.docker.com/v1.13/engine/installation/linux/repo_files/centos/docker.repo\n```\n\n> 更新yum源并安装最新的docker\n\n```\nyum makecache fast\nyum -y install docker-engine\n```\n\n> 启动docker\n\n```\nsystemctl start docker\nsystemctl enable docker\n```\n\n> 升级docker\n\n```\nyum makecache fast\nyum list docker-engine.x86_64  --showduplicates |sort -r\nyum -y install docker-engine-<VERSION_STRING>\n```\n","slug":"docker","published":1,"updated":"2018-02-01T09:33:36.977Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjir2nrmk000h9xas8r5zt0f1","content":"<h3 id=\"docker安装\"><a href=\"#docker安装\" class=\"headerlink\" title=\"docker安装\"></a>docker安装</h3><p>在最小化安装的情况下，docker是没有安装的，所以不需要先卸载。</p>\n<blockquote>\n<p>安装yum-config-manager工具</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum -y install yum-utils</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>设置Docker仓库</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum-config-manager --add-repo https://docs.docker.com/v1.13/engine/installation/linux/repo_files/centos/docker.repo</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>更新yum源并安装最新的docker</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum makecache fast</span><br><span class=\"line\">yum -y install docker-engine</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>启动docker</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl start docker</span><br><span class=\"line\">systemctl enable docker</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>升级docker</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum makecache fast</span><br><span class=\"line\">yum list docker-engine.x86_64  --showduplicates |sort -r</span><br><span class=\"line\">yum -y install docker-engine-&lt;VERSION_STRING&gt;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"docker安装\"><a href=\"#docker安装\" class=\"headerlink\" title=\"docker安装\"></a>docker安装</h3><p>在最小化安装的情况下，docker是没有安装的，所以不需要先卸载。</p>\n<blockquote>\n<p>安装yum-config-manager工具</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum -y install yum-utils</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>设置Docker仓库</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum-config-manager --add-repo https://docs.docker.com/v1.13/engine/installation/linux/repo_files/centos/docker.repo</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>更新yum源并安装最新的docker</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum makecache fast</span><br><span class=\"line\">yum -y install docker-engine</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>启动docker</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl start docker</span><br><span class=\"line\">systemctl enable docker</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>升级docker</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum makecache fast</span><br><span class=\"line\">yum list docker-engine.x86_64  --showduplicates |sort -r</span><br><span class=\"line\">yum -y install docker-engine-&lt;VERSION_STRING&gt;</span><br></pre></td></tr></table></figure>\n"},{"title":"Hadoop配置文件详解","date":"2018-02-11T01:51:44.000Z","modified":null,"_content":"\n### 配置文件的层级关系\n\n### core-site.xml文件\n\n|参数|属性值|解释|\n|:---:|:---:|:---:|\n|fs.defaultFS|NameNode URL|hdfs://host:port/|\n|io.file.buffer.size|131072|SequenceFiles文件中.读写缓存size设定|\n|hadoop.tmp.dir|/home/hadoop/tmp|hadoop文件系统依赖的基础配置|\n|ha.zookeeper.quorum|hostname:port|zookeeper的地址，多个地址以逗号分隔|\n\n```\n<configuration>\n  <property>\n    <name>fs.default.name</name>\n    <value>hdfs://hadoop1:9000</value>\n    <description>hadoop1为服务器主机名，其实也可以使用IP地址</description>\n  </property>\n  <property>\n    <name>hadoop.tmp.dir</name>\n    <value>/home/hadoop/tmp</value>\n  </property>\n  <property>\n    <name>io.file.buffer.size</name>\n    <value>131072</value>\n    <description>该属性值单位为KB，131072KB即为默认的64M</description>\n  </property>\n</configuration>\n```\n\n### hdfs-site.xml文件\n\n|参数|属性值|解释|\n|:---:|:---:|:---:|\n|dfs.namenode.name.dir|本地文件系统所在的NameNode的存储空间和持续化处理日志的路径|可以是按逗号分隔的目录列表，fsimage文件会存储在全部目录，冗余安全|\n|dfs.blocksize|268435456|大文件系统HDFS块大小为256M，默认值为64M|\n|dfs.datanode.data.dir|datanode存放数据块文件的目录|如果这是一个以逗号分隔的目录列表，那么数据将被存储在所有命名的目录，通常在不同的设备|\n|dfs.replication|hdfs保存数据的副本数量|副本数目不能大于datanode数目，伪分布式可以将其配置成1|\n|dfs.permissions|true/false|是否对远程读写hdfs进行权限检查，可以设置为false，即不检查|\n|dfs.nameservices|clustername|使用federation，启动两个HDFS集群，clustername为集群的别名，可以为任意，但不能重复|\n|dfs.ha.namenodes.clustername|hostname|指定nameservice是clustername时的namenode有哪些，这里的值是逻辑名称，可以随意，但不能重复|\n|dfs.namenode.rpc-address.clustername.hostname|hostname:9000|指定rpc地址|\n|dfs.namenode.http-address.clustername.hostname|hostname:50070|指定http地址|\n|dfs.namenode.shared.edits.dir|qjournal://hostname:port;hostname:port/clustername|指定clustername的NameNode共享edits文件目录时，使用的JournalNode集群信息|\n|dfs.ha.automatic-failover.enabled.cluster1|true/false|cluster1是否启用自动故障恢复，即当NameNode出故障时，是否切换到另一台NameNode|\n|dfs.client.failover.proxy.provider.cluster1|org.apache.hadoop.hdfs.server.namenode.ha.ConfiguredFailoverProxyProvider|指定cluster1出故障时，哪个实现类负责执行故障切换|\n|dfs.ha.fencing.methods|sshfence|NameNode需要进行切换时，使用ssh方式进行操作|\n|dfs.ha.fencing.ssh.private-key-files|/home/hadoop/.ssh/id_rsa|如果使用ssh方式，指定密钥存储的位置|\n\n```\n<configuration>\n  <property>\n    <name>dfs.name.dir</name>\n    <value>/home/hadoop/hdfs/name</value>\n  </property>\n\n  <property>\n    <name>dfs.data.dir</name>\n    <value>/home/hadoop/hdfs/data</value>\n  </property>\n\n  <property>\n    <name>dfs.replication</name>\n    <value>2</value>\n  </property>\n\n  <property>\n    <name>dfs.permissions</name>\n    <value>false</value>\n    <description>need not permissions</description>\n  </property>\n</configuration>\n```\n\n### slaves文件\n\n从节点的主机名，直接添加即可。\n\n### mapred-site.xml文件\n\n### yarn-site.xml文件\n","source":"_posts/hadoop-configure-file.md","raw":"---\ntitle: Hadoop配置文件详解\ndate: 2018-02-11 09:51:44\nmodified:\ncategories:\n- 大数据\ntags:\n- Hadoop\n- 大数据\n---\n\n### 配置文件的层级关系\n\n### core-site.xml文件\n\n|参数|属性值|解释|\n|:---:|:---:|:---:|\n|fs.defaultFS|NameNode URL|hdfs://host:port/|\n|io.file.buffer.size|131072|SequenceFiles文件中.读写缓存size设定|\n|hadoop.tmp.dir|/home/hadoop/tmp|hadoop文件系统依赖的基础配置|\n|ha.zookeeper.quorum|hostname:port|zookeeper的地址，多个地址以逗号分隔|\n\n```\n<configuration>\n  <property>\n    <name>fs.default.name</name>\n    <value>hdfs://hadoop1:9000</value>\n    <description>hadoop1为服务器主机名，其实也可以使用IP地址</description>\n  </property>\n  <property>\n    <name>hadoop.tmp.dir</name>\n    <value>/home/hadoop/tmp</value>\n  </property>\n  <property>\n    <name>io.file.buffer.size</name>\n    <value>131072</value>\n    <description>该属性值单位为KB，131072KB即为默认的64M</description>\n  </property>\n</configuration>\n```\n\n### hdfs-site.xml文件\n\n|参数|属性值|解释|\n|:---:|:---:|:---:|\n|dfs.namenode.name.dir|本地文件系统所在的NameNode的存储空间和持续化处理日志的路径|可以是按逗号分隔的目录列表，fsimage文件会存储在全部目录，冗余安全|\n|dfs.blocksize|268435456|大文件系统HDFS块大小为256M，默认值为64M|\n|dfs.datanode.data.dir|datanode存放数据块文件的目录|如果这是一个以逗号分隔的目录列表，那么数据将被存储在所有命名的目录，通常在不同的设备|\n|dfs.replication|hdfs保存数据的副本数量|副本数目不能大于datanode数目，伪分布式可以将其配置成1|\n|dfs.permissions|true/false|是否对远程读写hdfs进行权限检查，可以设置为false，即不检查|\n|dfs.nameservices|clustername|使用federation，启动两个HDFS集群，clustername为集群的别名，可以为任意，但不能重复|\n|dfs.ha.namenodes.clustername|hostname|指定nameservice是clustername时的namenode有哪些，这里的值是逻辑名称，可以随意，但不能重复|\n|dfs.namenode.rpc-address.clustername.hostname|hostname:9000|指定rpc地址|\n|dfs.namenode.http-address.clustername.hostname|hostname:50070|指定http地址|\n|dfs.namenode.shared.edits.dir|qjournal://hostname:port;hostname:port/clustername|指定clustername的NameNode共享edits文件目录时，使用的JournalNode集群信息|\n|dfs.ha.automatic-failover.enabled.cluster1|true/false|cluster1是否启用自动故障恢复，即当NameNode出故障时，是否切换到另一台NameNode|\n|dfs.client.failover.proxy.provider.cluster1|org.apache.hadoop.hdfs.server.namenode.ha.ConfiguredFailoverProxyProvider|指定cluster1出故障时，哪个实现类负责执行故障切换|\n|dfs.ha.fencing.methods|sshfence|NameNode需要进行切换时，使用ssh方式进行操作|\n|dfs.ha.fencing.ssh.private-key-files|/home/hadoop/.ssh/id_rsa|如果使用ssh方式，指定密钥存储的位置|\n\n```\n<configuration>\n  <property>\n    <name>dfs.name.dir</name>\n    <value>/home/hadoop/hdfs/name</value>\n  </property>\n\n  <property>\n    <name>dfs.data.dir</name>\n    <value>/home/hadoop/hdfs/data</value>\n  </property>\n\n  <property>\n    <name>dfs.replication</name>\n    <value>2</value>\n  </property>\n\n  <property>\n    <name>dfs.permissions</name>\n    <value>false</value>\n    <description>need not permissions</description>\n  </property>\n</configuration>\n```\n\n### slaves文件\n\n从节点的主机名，直接添加即可。\n\n### mapred-site.xml文件\n\n### yarn-site.xml文件\n","slug":"hadoop-configure-file","published":1,"updated":"2018-02-11T07:40:30.956Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjir2nrmt000k9xastja5qavy","content":"<h3 id=\"配置文件的层级关系\"><a href=\"#配置文件的层级关系\" class=\"headerlink\" title=\"配置文件的层级关系\"></a>配置文件的层级关系</h3><h3 id=\"core-site-xml文件\"><a href=\"#core-site-xml文件\" class=\"headerlink\" title=\"core-site.xml文件\"></a>core-site.xml文件</h3><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">参数</th>\n<th style=\"text-align:center\">属性值</th>\n<th style=\"text-align:center\">解释</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">fs.defaultFS</td>\n<td style=\"text-align:center\">NameNode URL</td>\n<td style=\"text-align:center\">hdfs://host:port/</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">io.file.buffer.size</td>\n<td style=\"text-align:center\">131072</td>\n<td style=\"text-align:center\">SequenceFiles文件中.读写缓存size设定</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">hadoop.tmp.dir</td>\n<td style=\"text-align:center\">/home/hadoop/tmp</td>\n<td style=\"text-align:center\">hadoop文件系统依赖的基础配置</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ha.zookeeper.quorum</td>\n<td style=\"text-align:center\">hostname:port</td>\n<td style=\"text-align:center\">zookeeper的地址，多个地址以逗号分隔</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;configuration&gt;</span><br><span class=\"line\">  &lt;property&gt;</span><br><span class=\"line\">    &lt;name&gt;fs.default.name&lt;/name&gt;</span><br><span class=\"line\">    &lt;value&gt;hdfs://hadoop1:9000&lt;/value&gt;</span><br><span class=\"line\">    &lt;description&gt;hadoop1为服务器主机名，其实也可以使用IP地址&lt;/description&gt;</span><br><span class=\"line\">  &lt;/property&gt;</span><br><span class=\"line\">  &lt;property&gt;</span><br><span class=\"line\">    &lt;name&gt;hadoop.tmp.dir&lt;/name&gt;</span><br><span class=\"line\">    &lt;value&gt;/home/hadoop/tmp&lt;/value&gt;</span><br><span class=\"line\">  &lt;/property&gt;</span><br><span class=\"line\">  &lt;property&gt;</span><br><span class=\"line\">    &lt;name&gt;io.file.buffer.size&lt;/name&gt;</span><br><span class=\"line\">    &lt;value&gt;131072&lt;/value&gt;</span><br><span class=\"line\">    &lt;description&gt;该属性值单位为KB，131072KB即为默认的64M&lt;/description&gt;</span><br><span class=\"line\">  &lt;/property&gt;</span><br><span class=\"line\">&lt;/configuration&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"hdfs-site-xml文件\"><a href=\"#hdfs-site-xml文件\" class=\"headerlink\" title=\"hdfs-site.xml文件\"></a>hdfs-site.xml文件</h3><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">参数</th>\n<th style=\"text-align:center\">属性值</th>\n<th style=\"text-align:center\">解释</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">dfs.namenode.name.dir</td>\n<td style=\"text-align:center\">本地文件系统所在的NameNode的存储空间和持续化处理日志的路径</td>\n<td style=\"text-align:center\">可以是按逗号分隔的目录列表，fsimage文件会存储在全部目录，冗余安全</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">dfs.blocksize</td>\n<td style=\"text-align:center\">268435456</td>\n<td style=\"text-align:center\">大文件系统HDFS块大小为256M，默认值为64M</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">dfs.datanode.data.dir</td>\n<td style=\"text-align:center\">datanode存放数据块文件的目录</td>\n<td style=\"text-align:center\">如果这是一个以逗号分隔的目录列表，那么数据将被存储在所有命名的目录，通常在不同的设备</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">dfs.replication</td>\n<td style=\"text-align:center\">hdfs保存数据的副本数量</td>\n<td style=\"text-align:center\">副本数目不能大于datanode数目，伪分布式可以将其配置成1</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">dfs.permissions</td>\n<td style=\"text-align:center\">true/false</td>\n<td style=\"text-align:center\">是否对远程读写hdfs进行权限检查，可以设置为false，即不检查</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">dfs.nameservices</td>\n<td style=\"text-align:center\">clustername</td>\n<td style=\"text-align:center\">使用federation，启动两个HDFS集群，clustername为集群的别名，可以为任意，但不能重复</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">dfs.ha.namenodes.clustername</td>\n<td style=\"text-align:center\">hostname</td>\n<td style=\"text-align:center\">指定nameservice是clustername时的namenode有哪些，这里的值是逻辑名称，可以随意，但不能重复</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">dfs.namenode.rpc-address.clustername.hostname</td>\n<td style=\"text-align:center\">hostname:9000</td>\n<td style=\"text-align:center\">指定rpc地址</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">dfs.namenode.http-address.clustername.hostname</td>\n<td style=\"text-align:center\">hostname:50070</td>\n<td style=\"text-align:center\">指定http地址</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">dfs.namenode.shared.edits.dir</td>\n<td style=\"text-align:center\">qjournal://hostname:port;hostname:port/clustername</td>\n<td style=\"text-align:center\">指定clustername的NameNode共享edits文件目录时，使用的JournalNode集群信息</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">dfs.ha.automatic-failover.enabled.cluster1</td>\n<td style=\"text-align:center\">true/false</td>\n<td style=\"text-align:center\">cluster1是否启用自动故障恢复，即当NameNode出故障时，是否切换到另一台NameNode</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">dfs.client.failover.proxy.provider.cluster1</td>\n<td style=\"text-align:center\">org.apache.hadoop.hdfs.server.namenode.ha.ConfiguredFailoverProxyProvider</td>\n<td style=\"text-align:center\">指定cluster1出故障时，哪个实现类负责执行故障切换</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">dfs.ha.fencing.methods</td>\n<td style=\"text-align:center\">sshfence</td>\n<td style=\"text-align:center\">NameNode需要进行切换时，使用ssh方式进行操作</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">dfs.ha.fencing.ssh.private-key-files</td>\n<td style=\"text-align:center\">/home/hadoop/.ssh/id_rsa</td>\n<td style=\"text-align:center\">如果使用ssh方式，指定密钥存储的位置</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;configuration&gt;</span><br><span class=\"line\">  &lt;property&gt;</span><br><span class=\"line\">    &lt;name&gt;dfs.name.dir&lt;/name&gt;</span><br><span class=\"line\">    &lt;value&gt;/home/hadoop/hdfs/name&lt;/value&gt;</span><br><span class=\"line\">  &lt;/property&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">  &lt;property&gt;</span><br><span class=\"line\">    &lt;name&gt;dfs.data.dir&lt;/name&gt;</span><br><span class=\"line\">    &lt;value&gt;/home/hadoop/hdfs/data&lt;/value&gt;</span><br><span class=\"line\">  &lt;/property&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">  &lt;property&gt;</span><br><span class=\"line\">    &lt;name&gt;dfs.replication&lt;/name&gt;</span><br><span class=\"line\">    &lt;value&gt;2&lt;/value&gt;</span><br><span class=\"line\">  &lt;/property&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">  &lt;property&gt;</span><br><span class=\"line\">    &lt;name&gt;dfs.permissions&lt;/name&gt;</span><br><span class=\"line\">    &lt;value&gt;false&lt;/value&gt;</span><br><span class=\"line\">    &lt;description&gt;need not permissions&lt;/description&gt;</span><br><span class=\"line\">  &lt;/property&gt;</span><br><span class=\"line\">&lt;/configuration&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"slaves文件\"><a href=\"#slaves文件\" class=\"headerlink\" title=\"slaves文件\"></a>slaves文件</h3><p>从节点的主机名，直接添加即可。</p>\n<h3 id=\"mapred-site-xml文件\"><a href=\"#mapred-site-xml文件\" class=\"headerlink\" title=\"mapred-site.xml文件\"></a>mapred-site.xml文件</h3><h3 id=\"yarn-site-xml文件\"><a href=\"#yarn-site-xml文件\" class=\"headerlink\" title=\"yarn-site.xml文件\"></a>yarn-site.xml文件</h3>","site":{"data":{}},"excerpt":"","more":"<h3 id=\"配置文件的层级关系\"><a href=\"#配置文件的层级关系\" class=\"headerlink\" title=\"配置文件的层级关系\"></a>配置文件的层级关系</h3><h3 id=\"core-site-xml文件\"><a href=\"#core-site-xml文件\" class=\"headerlink\" title=\"core-site.xml文件\"></a>core-site.xml文件</h3><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">参数</th>\n<th style=\"text-align:center\">属性值</th>\n<th style=\"text-align:center\">解释</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">fs.defaultFS</td>\n<td style=\"text-align:center\">NameNode URL</td>\n<td style=\"text-align:center\">hdfs://host:port/</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">io.file.buffer.size</td>\n<td style=\"text-align:center\">131072</td>\n<td style=\"text-align:center\">SequenceFiles文件中.读写缓存size设定</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">hadoop.tmp.dir</td>\n<td style=\"text-align:center\">/home/hadoop/tmp</td>\n<td style=\"text-align:center\">hadoop文件系统依赖的基础配置</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ha.zookeeper.quorum</td>\n<td style=\"text-align:center\">hostname:port</td>\n<td style=\"text-align:center\">zookeeper的地址，多个地址以逗号分隔</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;configuration&gt;</span><br><span class=\"line\">  &lt;property&gt;</span><br><span class=\"line\">    &lt;name&gt;fs.default.name&lt;/name&gt;</span><br><span class=\"line\">    &lt;value&gt;hdfs://hadoop1:9000&lt;/value&gt;</span><br><span class=\"line\">    &lt;description&gt;hadoop1为服务器主机名，其实也可以使用IP地址&lt;/description&gt;</span><br><span class=\"line\">  &lt;/property&gt;</span><br><span class=\"line\">  &lt;property&gt;</span><br><span class=\"line\">    &lt;name&gt;hadoop.tmp.dir&lt;/name&gt;</span><br><span class=\"line\">    &lt;value&gt;/home/hadoop/tmp&lt;/value&gt;</span><br><span class=\"line\">  &lt;/property&gt;</span><br><span class=\"line\">  &lt;property&gt;</span><br><span class=\"line\">    &lt;name&gt;io.file.buffer.size&lt;/name&gt;</span><br><span class=\"line\">    &lt;value&gt;131072&lt;/value&gt;</span><br><span class=\"line\">    &lt;description&gt;该属性值单位为KB，131072KB即为默认的64M&lt;/description&gt;</span><br><span class=\"line\">  &lt;/property&gt;</span><br><span class=\"line\">&lt;/configuration&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"hdfs-site-xml文件\"><a href=\"#hdfs-site-xml文件\" class=\"headerlink\" title=\"hdfs-site.xml文件\"></a>hdfs-site.xml文件</h3><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">参数</th>\n<th style=\"text-align:center\">属性值</th>\n<th style=\"text-align:center\">解释</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">dfs.namenode.name.dir</td>\n<td style=\"text-align:center\">本地文件系统所在的NameNode的存储空间和持续化处理日志的路径</td>\n<td style=\"text-align:center\">可以是按逗号分隔的目录列表，fsimage文件会存储在全部目录，冗余安全</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">dfs.blocksize</td>\n<td style=\"text-align:center\">268435456</td>\n<td style=\"text-align:center\">大文件系统HDFS块大小为256M，默认值为64M</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">dfs.datanode.data.dir</td>\n<td style=\"text-align:center\">datanode存放数据块文件的目录</td>\n<td style=\"text-align:center\">如果这是一个以逗号分隔的目录列表，那么数据将被存储在所有命名的目录，通常在不同的设备</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">dfs.replication</td>\n<td style=\"text-align:center\">hdfs保存数据的副本数量</td>\n<td style=\"text-align:center\">副本数目不能大于datanode数目，伪分布式可以将其配置成1</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">dfs.permissions</td>\n<td style=\"text-align:center\">true/false</td>\n<td style=\"text-align:center\">是否对远程读写hdfs进行权限检查，可以设置为false，即不检查</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">dfs.nameservices</td>\n<td style=\"text-align:center\">clustername</td>\n<td style=\"text-align:center\">使用federation，启动两个HDFS集群，clustername为集群的别名，可以为任意，但不能重复</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">dfs.ha.namenodes.clustername</td>\n<td style=\"text-align:center\">hostname</td>\n<td style=\"text-align:center\">指定nameservice是clustername时的namenode有哪些，这里的值是逻辑名称，可以随意，但不能重复</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">dfs.namenode.rpc-address.clustername.hostname</td>\n<td style=\"text-align:center\">hostname:9000</td>\n<td style=\"text-align:center\">指定rpc地址</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">dfs.namenode.http-address.clustername.hostname</td>\n<td style=\"text-align:center\">hostname:50070</td>\n<td style=\"text-align:center\">指定http地址</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">dfs.namenode.shared.edits.dir</td>\n<td style=\"text-align:center\">qjournal://hostname:port;hostname:port/clustername</td>\n<td style=\"text-align:center\">指定clustername的NameNode共享edits文件目录时，使用的JournalNode集群信息</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">dfs.ha.automatic-failover.enabled.cluster1</td>\n<td style=\"text-align:center\">true/false</td>\n<td style=\"text-align:center\">cluster1是否启用自动故障恢复，即当NameNode出故障时，是否切换到另一台NameNode</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">dfs.client.failover.proxy.provider.cluster1</td>\n<td style=\"text-align:center\">org.apache.hadoop.hdfs.server.namenode.ha.ConfiguredFailoverProxyProvider</td>\n<td style=\"text-align:center\">指定cluster1出故障时，哪个实现类负责执行故障切换</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">dfs.ha.fencing.methods</td>\n<td style=\"text-align:center\">sshfence</td>\n<td style=\"text-align:center\">NameNode需要进行切换时，使用ssh方式进行操作</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">dfs.ha.fencing.ssh.private-key-files</td>\n<td style=\"text-align:center\">/home/hadoop/.ssh/id_rsa</td>\n<td style=\"text-align:center\">如果使用ssh方式，指定密钥存储的位置</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;configuration&gt;</span><br><span class=\"line\">  &lt;property&gt;</span><br><span class=\"line\">    &lt;name&gt;dfs.name.dir&lt;/name&gt;</span><br><span class=\"line\">    &lt;value&gt;/home/hadoop/hdfs/name&lt;/value&gt;</span><br><span class=\"line\">  &lt;/property&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">  &lt;property&gt;</span><br><span class=\"line\">    &lt;name&gt;dfs.data.dir&lt;/name&gt;</span><br><span class=\"line\">    &lt;value&gt;/home/hadoop/hdfs/data&lt;/value&gt;</span><br><span class=\"line\">  &lt;/property&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">  &lt;property&gt;</span><br><span class=\"line\">    &lt;name&gt;dfs.replication&lt;/name&gt;</span><br><span class=\"line\">    &lt;value&gt;2&lt;/value&gt;</span><br><span class=\"line\">  &lt;/property&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">  &lt;property&gt;</span><br><span class=\"line\">    &lt;name&gt;dfs.permissions&lt;/name&gt;</span><br><span class=\"line\">    &lt;value&gt;false&lt;/value&gt;</span><br><span class=\"line\">    &lt;description&gt;need not permissions&lt;/description&gt;</span><br><span class=\"line\">  &lt;/property&gt;</span><br><span class=\"line\">&lt;/configuration&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"slaves文件\"><a href=\"#slaves文件\" class=\"headerlink\" title=\"slaves文件\"></a>slaves文件</h3><p>从节点的主机名，直接添加即可。</p>\n<h3 id=\"mapred-site-xml文件\"><a href=\"#mapred-site-xml文件\" class=\"headerlink\" title=\"mapred-site.xml文件\"></a>mapred-site.xml文件</h3><h3 id=\"yarn-site-xml文件\"><a href=\"#yarn-site-xml文件\" class=\"headerlink\" title=\"yarn-site.xml文件\"></a>yarn-site.xml文件</h3>"},{"title":"hadoop安装和基本使用","date":"2018-02-07T11:05:43.000Z","_content":"\n### Hadoop安装\n\n#### 创建hadoop用户\n\n```\nuseradd -m hadoop -s /bin/bash\n```\n\n#### 安装java环境\n\n1. 如果是系统自带的java，请先卸载：\n\n  ```\n  rpm -qa | grep jdk\n  rpm -e --nodeps XXXX\t\t#XXXX是上一条命令的查询结构\n  ```\n\n2. 到Oracle官网下载jdk，并安装(这里下载的是.tar.gz版)\n\n  ```\n  mkdir /usr/java/\n  mv jdk-8u161-linux-x64.tar.gz /usr/java/\n  tar zxvf jdk-8u161-linux-x64.tar.gz\n  mv jdk1.8.0_161/ jdk1.8\n  ```\n\n3. 编辑配置文件，配置环境变量\n\n  ```\n  vim /etc/profile\n\n  JAVA_HOME=/usr/java/jdk1.8\n  CLASSPATH=$JAVA_HOME/lib/\n  PATH=$PATH:$JAVA_HOME/bin\n  export PATH JAVA_HOME CLASSPATH\n\n  source /etc/profile\n  ```\n\n#### 安装Hadoop2\n\n从hadoop的官网下载已经编译好的(binary)hadoop压缩包，在这里使用的是hadoop2.8.3版本。\n\n```\ncd /home/hadoop\ntar -zxvf hadoop-2.8.3.tar.gz\nmv hadoop-2.8.3 hadoop\n```\n\n修改配置文件，添加环境变量\n\n```\nsu\nvim /etc/profile\n\nexport HADOOP_HOME=/home/hadoop/hadoop\nexport PATH=.:$HADOOP_HOME/bin:$HADOOP_HOME/sbin:$PATH\n\nsource /etc/profile\n```\n\n### Hadoop目录结构说明\n\n```\n$ cd /home/hadoop/hadoop\n$ ll\ndrwxr-xr-x. 2 hadoop hadoop  4096 Dec  5 12:28 bin\ndrwxr-xr-x. 3 hadoop hadoop    19 Dec  5 12:28 etc\ndrwxr-xr-x. 2 hadoop hadoop   101 Dec  5 12:28 include\ndrwxr-xr-x. 3 hadoop hadoop    19 Dec  5 12:28 lib\ndrwxr-xr-x. 2 hadoop hadoop  4096 Dec  5 12:28 libexec\n-rw-r--r--. 1 hadoop hadoop 99253 Dec  5 12:28 LICENSE.txt\ndrwxrwxr-x. 3 hadoop hadoop  4096 Feb 10 11:20 logs\n-rw-r--r--. 1 hadoop hadoop 15915 Dec  5 12:28 NOTICE.txt\n-rw-r--r--. 1 hadoop hadoop  1366 Dec  5 12:28 README.txt\ndrwxr-xr-x. 2 hadoop hadoop  4096 Dec  5 12:28 sbin\ndrwxr-xr-x. 4 hadoop hadoop    29 Dec  5 12:28 share\n```\n\n1. bin：Hadoop最基本的管理脚本和使用脚本的目录，这些脚本是sbin目录下管理脚本的基础实现，用户可以直接使用这些脚本管理和使用Hadoop；\n\n2. etc：Hadoop配置文件所在的目录，包括core-site,xml、hdfs-site.xml、mapred-site.xml等从Hadoop1.0继承而来的配置文件和yarn-site.xml等Hadoop2.0新增的配置文件；\n\n3. include：对外提供的编程库头文件（具体动态库和静态库在lib目录中），这些头文件均是用C++定义的，通常用于C++程序访问HDFS或者编写MapReduce程序；\n\n4. lib：该目录包含了Hadoop对外提供的编程动态库和静态库，与include目录中的头文件结合使用；\n\n5. libexec：各个服务对用的shell配置文件所在的目录，可用于配置日志输出、启动参数（比如JVM参数）等基本信息；\n\n6. sbin：Hadoop管理脚本所在的目录，主要包含HDFS和YARN中各类服务的启动/关闭脚本；\n\n7. share：Hadoop各个模块编译后的jar包所在的目录。 \n\n### Hadoop伪集群环境安装\n\n#### 在/home/hadoop/目录下，建立tmp、hdfs/name、hdfs/data目录\n\n```\n$ cd /home/hadoop\n$ mkdir tmp\n$ mkdir hdfs\n$ cd hdfs/\n$ mkdir data\n$ mkdir name\n```\n\n#### 修改hadoop的配置文件\n\n1. 配置hadoop-env.sh和yarn-env.sh\n\n  ```\n  $ cd /home/hadoop/hadoop/etc/hadoop\n  \n  $ vim hadoop-env.sh\n  #修改export JAVA_HOME\n  export JAVA_HOME=/usr/java/jdk1.8\n  \n  $ vim yarn-env.sh\n  #修改export JAVA_HOME\n  export JAVA_HOME=/usr/java/jdk1.8 \n  ```\n\n2. 配置core-site.xml\n\n  其中fs.defaultFS是NameNode的master节点的URI，hadoop.tmp.dir是namenode上本地的hadoop临时文件夹\n\n  ```\n  <configuration>\n    <property>\n      <name>fs.defaultFS</name>\n      <value>hdfs://hadoop1:9000</value>\n    </property>\n\n    <property>\n      <name>hadoop.tmp.dir</name>\n      <value>/home/hadoop/tmp</value>\n    </property>\n  </configuration>\n  ```\n\n3. 配置hdfs-site.xml\n\n  其中dfs.name.dir是namenode上存储hdfs名字空间元数据，dfs.data.dir是namenode上数据块的物理存储位置，dfs.replication是副本的个数，默认为3，一般小于datanode的机器数量，在伪集群配置中设置为1。\n\n  ```\n  <configuration>\n    <property>\n      <name>dfs.name.dir</name>\n      <value>/home/hadoop/hdfs/name</value>\n    </property>\n\n    <property>\n      <name>dfs.data.dir</name>\n      <value>/home/hadoop/hdfs/data</value>\n    </property>\n\n    <property>\n      <name>dfs.replication</name>\n      <value>1</value>\n    </property>\n  </configuration>\n  ```\n\n4. 配置mapred-site.xml\n\n  > 注意，默认文件夹中并没有这个文件，而是有一个mapred-site.xml.template，可以将该文件复制并重命名\n\n  ```\n  <configuration>\n    <property>\n      <name>mapreduce.framework.name</name>\n      <value>yarn</value>\n    </property>\n  </configuration>\n  ```\n\n5. 配置yarn-site.xml\n\n  ```\n  <configuration>\n    <property>\n      <name>yarn.nodemanager.aux-services</name>\n      <value>mapreduce_shuffle</value>\n    </property>\n    <property>\n      <name>yarn.resourcemanager.hostname</name>\n      <value>hadoop1</value>\n    </property>\n  </configuration>\n  ```\n\n### Hadoop启动\n\n#### 格式化namenode\n\n```\n$ ./bin/hdfs namenode -format\n```\n\n#### 启动NameNode和DataNode的守护进程\n\n```\n$ ./sbin/start-dfs.sh\n```\n\n#### 启动ResourceManager和NodeManager的守护进程\n\n```\n$ ./sbin/start-yarn.sh\n```\n\n#### 验证启动\n\n执行jps命令\n\n```\n$ jps\n3994 SecondaryNameNode\n3803 DataNode\n4156 ResourceManager\n4333 Jps\n3695 NameNode\n4255 NodeManager\n```\n\n> SecondaryNameNode:它不是namenode的冗余守护进程，而是提供周期检查点和清理任务。\nDataNode:它负责管理连接到节点的存储(一个集群中可以有多个节点)。每个存储数据的节点运行一个datanode守护进程。\nResourceManager:接收客户端任务请求，接收和监控NodeManager(NM)的资源情况汇报，负责资源的分配与调度，启动和监控ApplicationMaster(AM)。\nJps：JDK提供查看当前java进程的小工具。\nNameNode:它是Hadoop中的主服务器，管理文件系统名称空间和对集群中存储的文件的访问。\nNodeManager:NodeManager(NM)是YARN中每个节点上的代理，它管理Hadoop集群中单个计算节点，包括与ResourceManger保持通信，监督Container的生命周期管理，监控每个Container的资源使用(内存、CPU等)情况，追踪节点健康状况，管理日志和不同应用程序用到的附属服务(auxiliaryservice)。\n\n#### 免密登陆\n\n每次在启动或者停止hadoop是都需要输入密码进行验证，此时可以设置免密登陆：\n\n1. 安装ssh服务\n\n  ```\n  $ yum install -y openssh-server openssh-clients \n  ```\n\n2. 进入用户目录，生成密钥\n\n  ```\n  $ cd ~\n  $ cd .ssh/\n  $ ssh-keygen -t rsa (然后一路回车)\n  $ cp id_rsa.pub authorized_keys\n\n  $ ssh localhost  #如果此时不提示任何错误，则表明设置成功\n  ```\n\n### Hadoop集群安装\n\n#### 安装3台机器\n\n  安装3个虚拟机，主机名分别为hadoop1，hadoop2和hadoop3，对应的ip分别为192.168.17.133,192.168.17.134以及192.168.17.135。\n\n#### 修改机器名\n\n```\nhostnamectl set-hostname hadoop1\nhostnamectl set-hostname hadoop2\nhostnamectl set-hostname hadoop3\n```\n\n#### 修改/etc/hosts文件\n\n```\n192.168.17.133 hadoop1\n192.168.17.134 hadoop2\n192.168.17.135 hadoop3\n```\n\n#### 免密登陆\n\n```\n$ cd ~\n$ cd .ssh/\n$ ssh-keygen -t rsa (然后一路回车)\n$ cp id_rsa.pub authorized_keys \n\n然后修改authorized_keys文件，将三台机器的文件内容合并，然后复制到每台机器中\n```\n\n#### 配置Hadoop\n\n在hadoop1机器中执行以下命令：\n\n```\nmkdir /home/hadoop/tmp  \nmkdir /home/hadoop/var  \nmkdir /home/hadoop/hdfs  \nmkdir /home/hadoop/hdfs/name  \nmkdir /home/hadoop/hdfs/data\n```\n\n1. 修改core-site.xml文件：\n\n  ```\n  <configuration>\n    <property>\n      <name>hadoop.tmp.dir</name>\n      <value>/home/hadoop/tmp</value>\n      <description>Abase for other temporary directories.</description>\n    </property>\n    <property>\n      <name>fs.default.name</name>\n      <value>hdfs://hadoop1:9000</value>\n    </property>\n  </configuration>\n  ```\n\n2. 修改hadoop-env.sh文件：\n \n  略\n\n3. 修改hdfs-site.xml文件：\n\n  ```\n  <configuration>\n    <property>\n      <name>dfs.name.dir</name>\n      <value>/home/hadoop/hdfs/name</value>\n    </property>\n    <property>\n      <name>dfs.data.dir</name>\n      <value>/home/hadoop/hdfs/data</value>\n    </property>\n    <property>\n      <name>dfs.replication</name>\n      <value>2</value>\n    </property>\n    <property>\n      <name>dfs.permissions</name>\n      <value>false</value>\n    </property>\n  </configuration>\n  ```\n\n4. 修改mapred-site.xml文件：\n\n  ```\n  <configuration>\n    <property>\n      <name>mapred.job.tracker</name>\n      <value>hadoop1:49001</value>\n    </property>\n    <property>\n      <name>mapred.local.dir</name>\n      <value>/home/hadoop/var</value>\n    </property>\n    <property>\n      <name>mapreduce.framework.name</name>\n      <value>yarn</value>\n    </property>\n  </configuration>\n  ```\n\n5. 修改slaves文件：\n\n  > hadoop2\n    hadoop3\n \n6. 修改yarn-site.xml文件：\n\n  ```\n  <configuration>\n    <property>\n      <name>yarn.resourcemanager.hostname</name>\n      <value>hadoop1</value>\n    </property>\n    <property>\n      <description>The address of the applications manager interface in the RM.</description>\n      <name>yarn.resourcemanager.address</name>\n      <value>${yarn.resourcemanager.hostname}:8032</value>\n    </property>\n    <property>\n      <description>The address of the scheduler interface.</description>\n      <name>yarn.resourcemanager.scheduler.address</name>\n      <value>${yarn.resourcemanager.hostname}:8030</value>\n    </property>\n    <property>\n      <description>The http address of the RM web application.</description>\n      <name>yarn.resourcemanager.webapp.address</name>\n      <value>${yarn.resourcemanager.hostname}:8088</value>\n    </property>\n    <property>\n      <description>The https adddress of the RM web application.</description>\n      <name>yarn.resourcemanager.webapp.https.address</name>\n      <value>${yarn.resourcemanager.hostname}:8090</value>\n    </property>\n    <property>\n      <name>yarn.resourcemanager.resource-tracker.address</name>\n      <value>${yarn.resourcemanager.hostname}:8031</value>\n    </property>\n    <property>\n      <description>The address of the RM admin interface.</description>\n      <name>yarn.resourcemanager.admin.address</name>\n      <value>${yarn.resourcemanager.hostname}:8033</value>\n    </property>\n    <property>\n      <name>yarn.nodemanager.aux-services</name>\n      <value>mapreduce_shuffle</value>\n    </property>\n    <property>\n      <name>yarn.scheduler.maximum-allocation-mb</name>\n      <value>2048</value>\n      <discription>每个节点可用内存,单位MB,默认8182MB</discription>\n    </property>\n    <property>\n      <name>yarn.nodemanager.vmem-pmem-ratio</name>\n      <value>2.1</value>\n    </property>\n    <property>\n      <name>yarn.nodemanager.resource.memory-mb</name>\n      <value>2048</value>\n    </property>\n    <property>\n      <name>yarn.nodemanager.vmem-check-enabled</name>\n      <value>false</value>\n    </property>\n  </configuration>\n  ```\n\n#### 启动hadoop\n\n略\n\n#### 测试hadoop\n\n在浏览器访问  http://192.168.17.133:50070 以及 http://192.168.17.133:8088/\n\n","source":"_posts/hadoop-install-use.md","raw":"---\ntitle: hadoop安装和基本使用\ndate: 2018-02-07 19:05:43\ncategories:\n- 大数据\ntags:\n- hadoop\n---\n\n### Hadoop安装\n\n#### 创建hadoop用户\n\n```\nuseradd -m hadoop -s /bin/bash\n```\n\n#### 安装java环境\n\n1. 如果是系统自带的java，请先卸载：\n\n  ```\n  rpm -qa | grep jdk\n  rpm -e --nodeps XXXX\t\t#XXXX是上一条命令的查询结构\n  ```\n\n2. 到Oracle官网下载jdk，并安装(这里下载的是.tar.gz版)\n\n  ```\n  mkdir /usr/java/\n  mv jdk-8u161-linux-x64.tar.gz /usr/java/\n  tar zxvf jdk-8u161-linux-x64.tar.gz\n  mv jdk1.8.0_161/ jdk1.8\n  ```\n\n3. 编辑配置文件，配置环境变量\n\n  ```\n  vim /etc/profile\n\n  JAVA_HOME=/usr/java/jdk1.8\n  CLASSPATH=$JAVA_HOME/lib/\n  PATH=$PATH:$JAVA_HOME/bin\n  export PATH JAVA_HOME CLASSPATH\n\n  source /etc/profile\n  ```\n\n#### 安装Hadoop2\n\n从hadoop的官网下载已经编译好的(binary)hadoop压缩包，在这里使用的是hadoop2.8.3版本。\n\n```\ncd /home/hadoop\ntar -zxvf hadoop-2.8.3.tar.gz\nmv hadoop-2.8.3 hadoop\n```\n\n修改配置文件，添加环境变量\n\n```\nsu\nvim /etc/profile\n\nexport HADOOP_HOME=/home/hadoop/hadoop\nexport PATH=.:$HADOOP_HOME/bin:$HADOOP_HOME/sbin:$PATH\n\nsource /etc/profile\n```\n\n### Hadoop目录结构说明\n\n```\n$ cd /home/hadoop/hadoop\n$ ll\ndrwxr-xr-x. 2 hadoop hadoop  4096 Dec  5 12:28 bin\ndrwxr-xr-x. 3 hadoop hadoop    19 Dec  5 12:28 etc\ndrwxr-xr-x. 2 hadoop hadoop   101 Dec  5 12:28 include\ndrwxr-xr-x. 3 hadoop hadoop    19 Dec  5 12:28 lib\ndrwxr-xr-x. 2 hadoop hadoop  4096 Dec  5 12:28 libexec\n-rw-r--r--. 1 hadoop hadoop 99253 Dec  5 12:28 LICENSE.txt\ndrwxrwxr-x. 3 hadoop hadoop  4096 Feb 10 11:20 logs\n-rw-r--r--. 1 hadoop hadoop 15915 Dec  5 12:28 NOTICE.txt\n-rw-r--r--. 1 hadoop hadoop  1366 Dec  5 12:28 README.txt\ndrwxr-xr-x. 2 hadoop hadoop  4096 Dec  5 12:28 sbin\ndrwxr-xr-x. 4 hadoop hadoop    29 Dec  5 12:28 share\n```\n\n1. bin：Hadoop最基本的管理脚本和使用脚本的目录，这些脚本是sbin目录下管理脚本的基础实现，用户可以直接使用这些脚本管理和使用Hadoop；\n\n2. etc：Hadoop配置文件所在的目录，包括core-site,xml、hdfs-site.xml、mapred-site.xml等从Hadoop1.0继承而来的配置文件和yarn-site.xml等Hadoop2.0新增的配置文件；\n\n3. include：对外提供的编程库头文件（具体动态库和静态库在lib目录中），这些头文件均是用C++定义的，通常用于C++程序访问HDFS或者编写MapReduce程序；\n\n4. lib：该目录包含了Hadoop对外提供的编程动态库和静态库，与include目录中的头文件结合使用；\n\n5. libexec：各个服务对用的shell配置文件所在的目录，可用于配置日志输出、启动参数（比如JVM参数）等基本信息；\n\n6. sbin：Hadoop管理脚本所在的目录，主要包含HDFS和YARN中各类服务的启动/关闭脚本；\n\n7. share：Hadoop各个模块编译后的jar包所在的目录。 \n\n### Hadoop伪集群环境安装\n\n#### 在/home/hadoop/目录下，建立tmp、hdfs/name、hdfs/data目录\n\n```\n$ cd /home/hadoop\n$ mkdir tmp\n$ mkdir hdfs\n$ cd hdfs/\n$ mkdir data\n$ mkdir name\n```\n\n#### 修改hadoop的配置文件\n\n1. 配置hadoop-env.sh和yarn-env.sh\n\n  ```\n  $ cd /home/hadoop/hadoop/etc/hadoop\n  \n  $ vim hadoop-env.sh\n  #修改export JAVA_HOME\n  export JAVA_HOME=/usr/java/jdk1.8\n  \n  $ vim yarn-env.sh\n  #修改export JAVA_HOME\n  export JAVA_HOME=/usr/java/jdk1.8 \n  ```\n\n2. 配置core-site.xml\n\n  其中fs.defaultFS是NameNode的master节点的URI，hadoop.tmp.dir是namenode上本地的hadoop临时文件夹\n\n  ```\n  <configuration>\n    <property>\n      <name>fs.defaultFS</name>\n      <value>hdfs://hadoop1:9000</value>\n    </property>\n\n    <property>\n      <name>hadoop.tmp.dir</name>\n      <value>/home/hadoop/tmp</value>\n    </property>\n  </configuration>\n  ```\n\n3. 配置hdfs-site.xml\n\n  其中dfs.name.dir是namenode上存储hdfs名字空间元数据，dfs.data.dir是namenode上数据块的物理存储位置，dfs.replication是副本的个数，默认为3，一般小于datanode的机器数量，在伪集群配置中设置为1。\n\n  ```\n  <configuration>\n    <property>\n      <name>dfs.name.dir</name>\n      <value>/home/hadoop/hdfs/name</value>\n    </property>\n\n    <property>\n      <name>dfs.data.dir</name>\n      <value>/home/hadoop/hdfs/data</value>\n    </property>\n\n    <property>\n      <name>dfs.replication</name>\n      <value>1</value>\n    </property>\n  </configuration>\n  ```\n\n4. 配置mapred-site.xml\n\n  > 注意，默认文件夹中并没有这个文件，而是有一个mapred-site.xml.template，可以将该文件复制并重命名\n\n  ```\n  <configuration>\n    <property>\n      <name>mapreduce.framework.name</name>\n      <value>yarn</value>\n    </property>\n  </configuration>\n  ```\n\n5. 配置yarn-site.xml\n\n  ```\n  <configuration>\n    <property>\n      <name>yarn.nodemanager.aux-services</name>\n      <value>mapreduce_shuffle</value>\n    </property>\n    <property>\n      <name>yarn.resourcemanager.hostname</name>\n      <value>hadoop1</value>\n    </property>\n  </configuration>\n  ```\n\n### Hadoop启动\n\n#### 格式化namenode\n\n```\n$ ./bin/hdfs namenode -format\n```\n\n#### 启动NameNode和DataNode的守护进程\n\n```\n$ ./sbin/start-dfs.sh\n```\n\n#### 启动ResourceManager和NodeManager的守护进程\n\n```\n$ ./sbin/start-yarn.sh\n```\n\n#### 验证启动\n\n执行jps命令\n\n```\n$ jps\n3994 SecondaryNameNode\n3803 DataNode\n4156 ResourceManager\n4333 Jps\n3695 NameNode\n4255 NodeManager\n```\n\n> SecondaryNameNode:它不是namenode的冗余守护进程，而是提供周期检查点和清理任务。\nDataNode:它负责管理连接到节点的存储(一个集群中可以有多个节点)。每个存储数据的节点运行一个datanode守护进程。\nResourceManager:接收客户端任务请求，接收和监控NodeManager(NM)的资源情况汇报，负责资源的分配与调度，启动和监控ApplicationMaster(AM)。\nJps：JDK提供查看当前java进程的小工具。\nNameNode:它是Hadoop中的主服务器，管理文件系统名称空间和对集群中存储的文件的访问。\nNodeManager:NodeManager(NM)是YARN中每个节点上的代理，它管理Hadoop集群中单个计算节点，包括与ResourceManger保持通信，监督Container的生命周期管理，监控每个Container的资源使用(内存、CPU等)情况，追踪节点健康状况，管理日志和不同应用程序用到的附属服务(auxiliaryservice)。\n\n#### 免密登陆\n\n每次在启动或者停止hadoop是都需要输入密码进行验证，此时可以设置免密登陆：\n\n1. 安装ssh服务\n\n  ```\n  $ yum install -y openssh-server openssh-clients \n  ```\n\n2. 进入用户目录，生成密钥\n\n  ```\n  $ cd ~\n  $ cd .ssh/\n  $ ssh-keygen -t rsa (然后一路回车)\n  $ cp id_rsa.pub authorized_keys\n\n  $ ssh localhost  #如果此时不提示任何错误，则表明设置成功\n  ```\n\n### Hadoop集群安装\n\n#### 安装3台机器\n\n  安装3个虚拟机，主机名分别为hadoop1，hadoop2和hadoop3，对应的ip分别为192.168.17.133,192.168.17.134以及192.168.17.135。\n\n#### 修改机器名\n\n```\nhostnamectl set-hostname hadoop1\nhostnamectl set-hostname hadoop2\nhostnamectl set-hostname hadoop3\n```\n\n#### 修改/etc/hosts文件\n\n```\n192.168.17.133 hadoop1\n192.168.17.134 hadoop2\n192.168.17.135 hadoop3\n```\n\n#### 免密登陆\n\n```\n$ cd ~\n$ cd .ssh/\n$ ssh-keygen -t rsa (然后一路回车)\n$ cp id_rsa.pub authorized_keys \n\n然后修改authorized_keys文件，将三台机器的文件内容合并，然后复制到每台机器中\n```\n\n#### 配置Hadoop\n\n在hadoop1机器中执行以下命令：\n\n```\nmkdir /home/hadoop/tmp  \nmkdir /home/hadoop/var  \nmkdir /home/hadoop/hdfs  \nmkdir /home/hadoop/hdfs/name  \nmkdir /home/hadoop/hdfs/data\n```\n\n1. 修改core-site.xml文件：\n\n  ```\n  <configuration>\n    <property>\n      <name>hadoop.tmp.dir</name>\n      <value>/home/hadoop/tmp</value>\n      <description>Abase for other temporary directories.</description>\n    </property>\n    <property>\n      <name>fs.default.name</name>\n      <value>hdfs://hadoop1:9000</value>\n    </property>\n  </configuration>\n  ```\n\n2. 修改hadoop-env.sh文件：\n \n  略\n\n3. 修改hdfs-site.xml文件：\n\n  ```\n  <configuration>\n    <property>\n      <name>dfs.name.dir</name>\n      <value>/home/hadoop/hdfs/name</value>\n    </property>\n    <property>\n      <name>dfs.data.dir</name>\n      <value>/home/hadoop/hdfs/data</value>\n    </property>\n    <property>\n      <name>dfs.replication</name>\n      <value>2</value>\n    </property>\n    <property>\n      <name>dfs.permissions</name>\n      <value>false</value>\n    </property>\n  </configuration>\n  ```\n\n4. 修改mapred-site.xml文件：\n\n  ```\n  <configuration>\n    <property>\n      <name>mapred.job.tracker</name>\n      <value>hadoop1:49001</value>\n    </property>\n    <property>\n      <name>mapred.local.dir</name>\n      <value>/home/hadoop/var</value>\n    </property>\n    <property>\n      <name>mapreduce.framework.name</name>\n      <value>yarn</value>\n    </property>\n  </configuration>\n  ```\n\n5. 修改slaves文件：\n\n  > hadoop2\n    hadoop3\n \n6. 修改yarn-site.xml文件：\n\n  ```\n  <configuration>\n    <property>\n      <name>yarn.resourcemanager.hostname</name>\n      <value>hadoop1</value>\n    </property>\n    <property>\n      <description>The address of the applications manager interface in the RM.</description>\n      <name>yarn.resourcemanager.address</name>\n      <value>${yarn.resourcemanager.hostname}:8032</value>\n    </property>\n    <property>\n      <description>The address of the scheduler interface.</description>\n      <name>yarn.resourcemanager.scheduler.address</name>\n      <value>${yarn.resourcemanager.hostname}:8030</value>\n    </property>\n    <property>\n      <description>The http address of the RM web application.</description>\n      <name>yarn.resourcemanager.webapp.address</name>\n      <value>${yarn.resourcemanager.hostname}:8088</value>\n    </property>\n    <property>\n      <description>The https adddress of the RM web application.</description>\n      <name>yarn.resourcemanager.webapp.https.address</name>\n      <value>${yarn.resourcemanager.hostname}:8090</value>\n    </property>\n    <property>\n      <name>yarn.resourcemanager.resource-tracker.address</name>\n      <value>${yarn.resourcemanager.hostname}:8031</value>\n    </property>\n    <property>\n      <description>The address of the RM admin interface.</description>\n      <name>yarn.resourcemanager.admin.address</name>\n      <value>${yarn.resourcemanager.hostname}:8033</value>\n    </property>\n    <property>\n      <name>yarn.nodemanager.aux-services</name>\n      <value>mapreduce_shuffle</value>\n    </property>\n    <property>\n      <name>yarn.scheduler.maximum-allocation-mb</name>\n      <value>2048</value>\n      <discription>每个节点可用内存,单位MB,默认8182MB</discription>\n    </property>\n    <property>\n      <name>yarn.nodemanager.vmem-pmem-ratio</name>\n      <value>2.1</value>\n    </property>\n    <property>\n      <name>yarn.nodemanager.resource.memory-mb</name>\n      <value>2048</value>\n    </property>\n    <property>\n      <name>yarn.nodemanager.vmem-check-enabled</name>\n      <value>false</value>\n    </property>\n  </configuration>\n  ```\n\n#### 启动hadoop\n\n略\n\n#### 测试hadoop\n\n在浏览器访问  http://192.168.17.133:50070 以及 http://192.168.17.133:8088/\n\n","slug":"hadoop-install-use","published":1,"updated":"2018-02-12T09:49:56.643Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjir2nrmy000o9xas47yxx8zq","content":"<h3 id=\"Hadoop安装\"><a href=\"#Hadoop安装\" class=\"headerlink\" title=\"Hadoop安装\"></a>Hadoop安装</h3><h4 id=\"创建hadoop用户\"><a href=\"#创建hadoop用户\" class=\"headerlink\" title=\"创建hadoop用户\"></a>创建hadoop用户</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">useradd -m hadoop -s /bin/bash</span><br></pre></td></tr></table></figure>\n<h4 id=\"安装java环境\"><a href=\"#安装java环境\" class=\"headerlink\" title=\"安装java环境\"></a>安装java环境</h4><ol>\n<li><p>如果是系统自带的java，请先卸载：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rpm -qa | grep jdk</span><br><span class=\"line\">rpm -e --nodeps XXXX\t\t#XXXX是上一条命令的查询结构</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>到Oracle官网下载jdk，并安装(这里下载的是.tar.gz版)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir /usr/java/</span><br><span class=\"line\">mv jdk-8u161-linux-x64.tar.gz /usr/java/</span><br><span class=\"line\">tar zxvf jdk-8u161-linux-x64.tar.gz</span><br><span class=\"line\">mv jdk1.8.0_161/ jdk1.8</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>编辑配置文件，配置环境变量</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim /etc/profile</span><br><span class=\"line\"></span><br><span class=\"line\">JAVA_HOME=/usr/java/jdk1.8</span><br><span class=\"line\">CLASSPATH=$JAVA_HOME/lib/</span><br><span class=\"line\">PATH=$PATH:$JAVA_HOME/bin</span><br><span class=\"line\">export PATH JAVA_HOME CLASSPATH</span><br><span class=\"line\"></span><br><span class=\"line\">source /etc/profile</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h4 id=\"安装Hadoop2\"><a href=\"#安装Hadoop2\" class=\"headerlink\" title=\"安装Hadoop2\"></a>安装Hadoop2</h4><p>从hadoop的官网下载已经编译好的(binary)hadoop压缩包，在这里使用的是hadoop2.8.3版本。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /home/hadoop</span><br><span class=\"line\">tar -zxvf hadoop-2.8.3.tar.gz</span><br><span class=\"line\">mv hadoop-2.8.3 hadoop</span><br></pre></td></tr></table></figure>\n<p>修改配置文件，添加环境变量</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">su</span><br><span class=\"line\">vim /etc/profile</span><br><span class=\"line\"></span><br><span class=\"line\">export HADOOP_HOME=/home/hadoop/hadoop</span><br><span class=\"line\">export PATH=.:$HADOOP_HOME/bin:$HADOOP_HOME/sbin:$PATH</span><br><span class=\"line\"></span><br><span class=\"line\">source /etc/profile</span><br></pre></td></tr></table></figure>\n<h3 id=\"Hadoop目录结构说明\"><a href=\"#Hadoop目录结构说明\" class=\"headerlink\" title=\"Hadoop目录结构说明\"></a>Hadoop目录结构说明</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ cd /home/hadoop/hadoop</span><br><span class=\"line\">$ ll</span><br><span class=\"line\">drwxr-xr-x. 2 hadoop hadoop  4096 Dec  5 12:28 bin</span><br><span class=\"line\">drwxr-xr-x. 3 hadoop hadoop    19 Dec  5 12:28 etc</span><br><span class=\"line\">drwxr-xr-x. 2 hadoop hadoop   101 Dec  5 12:28 include</span><br><span class=\"line\">drwxr-xr-x. 3 hadoop hadoop    19 Dec  5 12:28 lib</span><br><span class=\"line\">drwxr-xr-x. 2 hadoop hadoop  4096 Dec  5 12:28 libexec</span><br><span class=\"line\">-rw-r--r--. 1 hadoop hadoop 99253 Dec  5 12:28 LICENSE.txt</span><br><span class=\"line\">drwxrwxr-x. 3 hadoop hadoop  4096 Feb 10 11:20 logs</span><br><span class=\"line\">-rw-r--r--. 1 hadoop hadoop 15915 Dec  5 12:28 NOTICE.txt</span><br><span class=\"line\">-rw-r--r--. 1 hadoop hadoop  1366 Dec  5 12:28 README.txt</span><br><span class=\"line\">drwxr-xr-x. 2 hadoop hadoop  4096 Dec  5 12:28 sbin</span><br><span class=\"line\">drwxr-xr-x. 4 hadoop hadoop    29 Dec  5 12:28 share</span><br></pre></td></tr></table></figure>\n<ol>\n<li><p>bin：Hadoop最基本的管理脚本和使用脚本的目录，这些脚本是sbin目录下管理脚本的基础实现，用户可以直接使用这些脚本管理和使用Hadoop；</p>\n</li>\n<li><p>etc：Hadoop配置文件所在的目录，包括core-site,xml、hdfs-site.xml、mapred-site.xml等从Hadoop1.0继承而来的配置文件和yarn-site.xml等Hadoop2.0新增的配置文件；</p>\n</li>\n<li><p>include：对外提供的编程库头文件（具体动态库和静态库在lib目录中），这些头文件均是用C++定义的，通常用于C++程序访问HDFS或者编写MapReduce程序；</p>\n</li>\n<li><p>lib：该目录包含了Hadoop对外提供的编程动态库和静态库，与include目录中的头文件结合使用；</p>\n</li>\n<li><p>libexec：各个服务对用的shell配置文件所在的目录，可用于配置日志输出、启动参数（比如JVM参数）等基本信息；</p>\n</li>\n<li><p>sbin：Hadoop管理脚本所在的目录，主要包含HDFS和YARN中各类服务的启动/关闭脚本；</p>\n</li>\n<li><p>share：Hadoop各个模块编译后的jar包所在的目录。 </p>\n</li>\n</ol>\n<h3 id=\"Hadoop伪集群环境安装\"><a href=\"#Hadoop伪集群环境安装\" class=\"headerlink\" title=\"Hadoop伪集群环境安装\"></a>Hadoop伪集群环境安装</h3><h4 id=\"在-home-hadoop-目录下，建立tmp、hdfs-name、hdfs-data目录\"><a href=\"#在-home-hadoop-目录下，建立tmp、hdfs-name、hdfs-data目录\" class=\"headerlink\" title=\"在/home/hadoop/目录下，建立tmp、hdfs/name、hdfs/data目录\"></a>在/home/hadoop/目录下，建立tmp、hdfs/name、hdfs/data目录</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ cd /home/hadoop</span><br><span class=\"line\">$ mkdir tmp</span><br><span class=\"line\">$ mkdir hdfs</span><br><span class=\"line\">$ cd hdfs/</span><br><span class=\"line\">$ mkdir data</span><br><span class=\"line\">$ mkdir name</span><br></pre></td></tr></table></figure>\n<h4 id=\"修改hadoop的配置文件\"><a href=\"#修改hadoop的配置文件\" class=\"headerlink\" title=\"修改hadoop的配置文件\"></a>修改hadoop的配置文件</h4><ol>\n<li><p>配置hadoop-env.sh和yarn-env.sh</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ cd /home/hadoop/hadoop/etc/hadoop</span><br><span class=\"line\"></span><br><span class=\"line\">$ vim hadoop-env.sh</span><br><span class=\"line\">#修改export JAVA_HOME</span><br><span class=\"line\">export JAVA_HOME=/usr/java/jdk1.8</span><br><span class=\"line\"></span><br><span class=\"line\">$ vim yarn-env.sh</span><br><span class=\"line\">#修改export JAVA_HOME</span><br><span class=\"line\">export JAVA_HOME=/usr/java/jdk1.8</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>配置core-site.xml</p>\n<p>其中fs.defaultFS是NameNode的master节点的URI，hadoop.tmp.dir是namenode上本地的hadoop临时文件夹</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;configuration&gt;</span><br><span class=\"line\">  &lt;property&gt;</span><br><span class=\"line\">    &lt;name&gt;fs.defaultFS&lt;/name&gt;</span><br><span class=\"line\">    &lt;value&gt;hdfs://hadoop1:9000&lt;/value&gt;</span><br><span class=\"line\">  &lt;/property&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">  &lt;property&gt;</span><br><span class=\"line\">    &lt;name&gt;hadoop.tmp.dir&lt;/name&gt;</span><br><span class=\"line\">    &lt;value&gt;/home/hadoop/tmp&lt;/value&gt;</span><br><span class=\"line\">  &lt;/property&gt;</span><br><span class=\"line\">&lt;/configuration&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>配置hdfs-site.xml</p>\n<p>其中dfs.name.dir是namenode上存储hdfs名字空间元数据，dfs.data.dir是namenode上数据块的物理存储位置，dfs.replication是副本的个数，默认为3，一般小于datanode的机器数量，在伪集群配置中设置为1。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;configuration&gt;</span><br><span class=\"line\">  &lt;property&gt;</span><br><span class=\"line\">    &lt;name&gt;dfs.name.dir&lt;/name&gt;</span><br><span class=\"line\">    &lt;value&gt;/home/hadoop/hdfs/name&lt;/value&gt;</span><br><span class=\"line\">  &lt;/property&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">  &lt;property&gt;</span><br><span class=\"line\">    &lt;name&gt;dfs.data.dir&lt;/name&gt;</span><br><span class=\"line\">    &lt;value&gt;/home/hadoop/hdfs/data&lt;/value&gt;</span><br><span class=\"line\">  &lt;/property&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">  &lt;property&gt;</span><br><span class=\"line\">    &lt;name&gt;dfs.replication&lt;/name&gt;</span><br><span class=\"line\">    &lt;value&gt;1&lt;/value&gt;</span><br><span class=\"line\">  &lt;/property&gt;</span><br><span class=\"line\">&lt;/configuration&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>配置mapred-site.xml</p>\n<blockquote>\n<p>注意，默认文件夹中并没有这个文件，而是有一个mapred-site.xml.template，可以将该文件复制并重命名</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;configuration&gt;</span><br><span class=\"line\">  &lt;property&gt;</span><br><span class=\"line\">    &lt;name&gt;mapreduce.framework.name&lt;/name&gt;</span><br><span class=\"line\">    &lt;value&gt;yarn&lt;/value&gt;</span><br><span class=\"line\">  &lt;/property&gt;</span><br><span class=\"line\">&lt;/configuration&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>配置yarn-site.xml</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;configuration&gt;</span><br><span class=\"line\">  &lt;property&gt;</span><br><span class=\"line\">    &lt;name&gt;yarn.nodemanager.aux-services&lt;/name&gt;</span><br><span class=\"line\">    &lt;value&gt;mapreduce_shuffle&lt;/value&gt;</span><br><span class=\"line\">  &lt;/property&gt;</span><br><span class=\"line\">  &lt;property&gt;</span><br><span class=\"line\">    &lt;name&gt;yarn.resourcemanager.hostname&lt;/name&gt;</span><br><span class=\"line\">    &lt;value&gt;hadoop1&lt;/value&gt;</span><br><span class=\"line\">  &lt;/property&gt;</span><br><span class=\"line\">&lt;/configuration&gt;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h3 id=\"Hadoop启动\"><a href=\"#Hadoop启动\" class=\"headerlink\" title=\"Hadoop启动\"></a>Hadoop启动</h3><h4 id=\"格式化namenode\"><a href=\"#格式化namenode\" class=\"headerlink\" title=\"格式化namenode\"></a>格式化namenode</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ./bin/hdfs namenode -format</span><br></pre></td></tr></table></figure>\n<h4 id=\"启动NameNode和DataNode的守护进程\"><a href=\"#启动NameNode和DataNode的守护进程\" class=\"headerlink\" title=\"启动NameNode和DataNode的守护进程\"></a>启动NameNode和DataNode的守护进程</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ./sbin/start-dfs.sh</span><br></pre></td></tr></table></figure>\n<h4 id=\"启动ResourceManager和NodeManager的守护进程\"><a href=\"#启动ResourceManager和NodeManager的守护进程\" class=\"headerlink\" title=\"启动ResourceManager和NodeManager的守护进程\"></a>启动ResourceManager和NodeManager的守护进程</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ./sbin/start-yarn.sh</span><br></pre></td></tr></table></figure>\n<h4 id=\"验证启动\"><a href=\"#验证启动\" class=\"headerlink\" title=\"验证启动\"></a>验证启动</h4><p>执行jps命令</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ jps</span><br><span class=\"line\">3994 SecondaryNameNode</span><br><span class=\"line\">3803 DataNode</span><br><span class=\"line\">4156 ResourceManager</span><br><span class=\"line\">4333 Jps</span><br><span class=\"line\">3695 NameNode</span><br><span class=\"line\">4255 NodeManager</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>SecondaryNameNode:它不是namenode的冗余守护进程，而是提供周期检查点和清理任务。<br>DataNode:它负责管理连接到节点的存储(一个集群中可以有多个节点)。每个存储数据的节点运行一个datanode守护进程。<br>ResourceManager:接收客户端任务请求，接收和监控NodeManager(NM)的资源情况汇报，负责资源的分配与调度，启动和监控ApplicationMaster(AM)。<br>Jps：JDK提供查看当前java进程的小工具。<br>NameNode:它是Hadoop中的主服务器，管理文件系统名称空间和对集群中存储的文件的访问。<br>NodeManager:NodeManager(NM)是YARN中每个节点上的代理，它管理Hadoop集群中单个计算节点，包括与ResourceManger保持通信，监督Container的生命周期管理，监控每个Container的资源使用(内存、CPU等)情况，追踪节点健康状况，管理日志和不同应用程序用到的附属服务(auxiliaryservice)。</p>\n</blockquote>\n<h4 id=\"免密登陆\"><a href=\"#免密登陆\" class=\"headerlink\" title=\"免密登陆\"></a>免密登陆</h4><p>每次在启动或者停止hadoop是都需要输入密码进行验证，此时可以设置免密登陆：</p>\n<ol>\n<li><p>安装ssh服务</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ yum install -y openssh-server openssh-clients</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>进入用户目录，生成密钥</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ cd ~</span><br><span class=\"line\">$ cd .ssh/</span><br><span class=\"line\">$ ssh-keygen -t rsa (然后一路回车)</span><br><span class=\"line\">$ cp id_rsa.pub authorized_keys</span><br><span class=\"line\"></span><br><span class=\"line\">$ ssh localhost  #如果此时不提示任何错误，则表明设置成功</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h3 id=\"Hadoop集群安装\"><a href=\"#Hadoop集群安装\" class=\"headerlink\" title=\"Hadoop集群安装\"></a>Hadoop集群安装</h3><h4 id=\"安装3台机器\"><a href=\"#安装3台机器\" class=\"headerlink\" title=\"安装3台机器\"></a>安装3台机器</h4><p>  安装3个虚拟机，主机名分别为hadoop1，hadoop2和hadoop3，对应的ip分别为192.168.17.133,192.168.17.134以及192.168.17.135。</p>\n<h4 id=\"修改机器名\"><a href=\"#修改机器名\" class=\"headerlink\" title=\"修改机器名\"></a>修改机器名</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hostnamectl set-hostname hadoop1</span><br><span class=\"line\">hostnamectl set-hostname hadoop2</span><br><span class=\"line\">hostnamectl set-hostname hadoop3</span><br></pre></td></tr></table></figure>\n<h4 id=\"修改-etc-hosts文件\"><a href=\"#修改-etc-hosts文件\" class=\"headerlink\" title=\"修改/etc/hosts文件\"></a>修改/etc/hosts文件</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">192.168.17.133 hadoop1</span><br><span class=\"line\">192.168.17.134 hadoop2</span><br><span class=\"line\">192.168.17.135 hadoop3</span><br></pre></td></tr></table></figure>\n<h4 id=\"免密登陆-1\"><a href=\"#免密登陆-1\" class=\"headerlink\" title=\"免密登陆\"></a>免密登陆</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ cd ~</span><br><span class=\"line\">$ cd .ssh/</span><br><span class=\"line\">$ ssh-keygen -t rsa (然后一路回车)</span><br><span class=\"line\">$ cp id_rsa.pub authorized_keys </span><br><span class=\"line\"></span><br><span class=\"line\">然后修改authorized_keys文件，将三台机器的文件内容合并，然后复制到每台机器中</span><br></pre></td></tr></table></figure>\n<h4 id=\"配置Hadoop\"><a href=\"#配置Hadoop\" class=\"headerlink\" title=\"配置Hadoop\"></a>配置Hadoop</h4><p>在hadoop1机器中执行以下命令：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir /home/hadoop/tmp  </span><br><span class=\"line\">mkdir /home/hadoop/var  </span><br><span class=\"line\">mkdir /home/hadoop/hdfs  </span><br><span class=\"line\">mkdir /home/hadoop/hdfs/name  </span><br><span class=\"line\">mkdir /home/hadoop/hdfs/data</span><br></pre></td></tr></table></figure>\n<ol>\n<li><p>修改core-site.xml文件：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;configuration&gt;</span><br><span class=\"line\">  &lt;property&gt;</span><br><span class=\"line\">    &lt;name&gt;hadoop.tmp.dir&lt;/name&gt;</span><br><span class=\"line\">    &lt;value&gt;/home/hadoop/tmp&lt;/value&gt;</span><br><span class=\"line\">    &lt;description&gt;Abase for other temporary directories.&lt;/description&gt;</span><br><span class=\"line\">  &lt;/property&gt;</span><br><span class=\"line\">  &lt;property&gt;</span><br><span class=\"line\">    &lt;name&gt;fs.default.name&lt;/name&gt;</span><br><span class=\"line\">    &lt;value&gt;hdfs://hadoop1:9000&lt;/value&gt;</span><br><span class=\"line\">  &lt;/property&gt;</span><br><span class=\"line\">&lt;/configuration&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>修改hadoop-env.sh文件：</p>\n<p>略</p>\n</li>\n<li><p>修改hdfs-site.xml文件：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;configuration&gt;</span><br><span class=\"line\">  &lt;property&gt;</span><br><span class=\"line\">    &lt;name&gt;dfs.name.dir&lt;/name&gt;</span><br><span class=\"line\">    &lt;value&gt;/home/hadoop/hdfs/name&lt;/value&gt;</span><br><span class=\"line\">  &lt;/property&gt;</span><br><span class=\"line\">  &lt;property&gt;</span><br><span class=\"line\">    &lt;name&gt;dfs.data.dir&lt;/name&gt;</span><br><span class=\"line\">    &lt;value&gt;/home/hadoop/hdfs/data&lt;/value&gt;</span><br><span class=\"line\">  &lt;/property&gt;</span><br><span class=\"line\">  &lt;property&gt;</span><br><span class=\"line\">    &lt;name&gt;dfs.replication&lt;/name&gt;</span><br><span class=\"line\">    &lt;value&gt;2&lt;/value&gt;</span><br><span class=\"line\">  &lt;/property&gt;</span><br><span class=\"line\">  &lt;property&gt;</span><br><span class=\"line\">    &lt;name&gt;dfs.permissions&lt;/name&gt;</span><br><span class=\"line\">    &lt;value&gt;false&lt;/value&gt;</span><br><span class=\"line\">  &lt;/property&gt;</span><br><span class=\"line\">&lt;/configuration&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>修改mapred-site.xml文件：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;configuration&gt;</span><br><span class=\"line\">  &lt;property&gt;</span><br><span class=\"line\">    &lt;name&gt;mapred.job.tracker&lt;/name&gt;</span><br><span class=\"line\">    &lt;value&gt;hadoop1:49001&lt;/value&gt;</span><br><span class=\"line\">  &lt;/property&gt;</span><br><span class=\"line\">  &lt;property&gt;</span><br><span class=\"line\">    &lt;name&gt;mapred.local.dir&lt;/name&gt;</span><br><span class=\"line\">    &lt;value&gt;/home/hadoop/var&lt;/value&gt;</span><br><span class=\"line\">  &lt;/property&gt;</span><br><span class=\"line\">  &lt;property&gt;</span><br><span class=\"line\">    &lt;name&gt;mapreduce.framework.name&lt;/name&gt;</span><br><span class=\"line\">    &lt;value&gt;yarn&lt;/value&gt;</span><br><span class=\"line\">  &lt;/property&gt;</span><br><span class=\"line\">&lt;/configuration&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>修改slaves文件：</p>\n<blockquote>\n<p>hadoop2<br> hadoop3</p>\n</blockquote>\n</li>\n<li><p>修改yarn-site.xml文件：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;configuration&gt;</span><br><span class=\"line\">  &lt;property&gt;</span><br><span class=\"line\">    &lt;name&gt;yarn.resourcemanager.hostname&lt;/name&gt;</span><br><span class=\"line\">    &lt;value&gt;hadoop1&lt;/value&gt;</span><br><span class=\"line\">  &lt;/property&gt;</span><br><span class=\"line\">  &lt;property&gt;</span><br><span class=\"line\">    &lt;description&gt;The address of the applications manager interface in the RM.&lt;/description&gt;</span><br><span class=\"line\">    &lt;name&gt;yarn.resourcemanager.address&lt;/name&gt;</span><br><span class=\"line\">    &lt;value&gt;$&#123;yarn.resourcemanager.hostname&#125;:8032&lt;/value&gt;</span><br><span class=\"line\">  &lt;/property&gt;</span><br><span class=\"line\">  &lt;property&gt;</span><br><span class=\"line\">    &lt;description&gt;The address of the scheduler interface.&lt;/description&gt;</span><br><span class=\"line\">    &lt;name&gt;yarn.resourcemanager.scheduler.address&lt;/name&gt;</span><br><span class=\"line\">    &lt;value&gt;$&#123;yarn.resourcemanager.hostname&#125;:8030&lt;/value&gt;</span><br><span class=\"line\">  &lt;/property&gt;</span><br><span class=\"line\">  &lt;property&gt;</span><br><span class=\"line\">    &lt;description&gt;The http address of the RM web application.&lt;/description&gt;</span><br><span class=\"line\">    &lt;name&gt;yarn.resourcemanager.webapp.address&lt;/name&gt;</span><br><span class=\"line\">    &lt;value&gt;$&#123;yarn.resourcemanager.hostname&#125;:8088&lt;/value&gt;</span><br><span class=\"line\">  &lt;/property&gt;</span><br><span class=\"line\">  &lt;property&gt;</span><br><span class=\"line\">    &lt;description&gt;The https adddress of the RM web application.&lt;/description&gt;</span><br><span class=\"line\">    &lt;name&gt;yarn.resourcemanager.webapp.https.address&lt;/name&gt;</span><br><span class=\"line\">    &lt;value&gt;$&#123;yarn.resourcemanager.hostname&#125;:8090&lt;/value&gt;</span><br><span class=\"line\">  &lt;/property&gt;</span><br><span class=\"line\">  &lt;property&gt;</span><br><span class=\"line\">    &lt;name&gt;yarn.resourcemanager.resource-tracker.address&lt;/name&gt;</span><br><span class=\"line\">    &lt;value&gt;$&#123;yarn.resourcemanager.hostname&#125;:8031&lt;/value&gt;</span><br><span class=\"line\">  &lt;/property&gt;</span><br><span class=\"line\">  &lt;property&gt;</span><br><span class=\"line\">    &lt;description&gt;The address of the RM admin interface.&lt;/description&gt;</span><br><span class=\"line\">    &lt;name&gt;yarn.resourcemanager.admin.address&lt;/name&gt;</span><br><span class=\"line\">    &lt;value&gt;$&#123;yarn.resourcemanager.hostname&#125;:8033&lt;/value&gt;</span><br><span class=\"line\">  &lt;/property&gt;</span><br><span class=\"line\">  &lt;property&gt;</span><br><span class=\"line\">    &lt;name&gt;yarn.nodemanager.aux-services&lt;/name&gt;</span><br><span class=\"line\">    &lt;value&gt;mapreduce_shuffle&lt;/value&gt;</span><br><span class=\"line\">  &lt;/property&gt;</span><br><span class=\"line\">  &lt;property&gt;</span><br><span class=\"line\">    &lt;name&gt;yarn.scheduler.maximum-allocation-mb&lt;/name&gt;</span><br><span class=\"line\">    &lt;value&gt;2048&lt;/value&gt;</span><br><span class=\"line\">    &lt;discription&gt;每个节点可用内存,单位MB,默认8182MB&lt;/discription&gt;</span><br><span class=\"line\">  &lt;/property&gt;</span><br><span class=\"line\">  &lt;property&gt;</span><br><span class=\"line\">    &lt;name&gt;yarn.nodemanager.vmem-pmem-ratio&lt;/name&gt;</span><br><span class=\"line\">    &lt;value&gt;2.1&lt;/value&gt;</span><br><span class=\"line\">  &lt;/property&gt;</span><br><span class=\"line\">  &lt;property&gt;</span><br><span class=\"line\">    &lt;name&gt;yarn.nodemanager.resource.memory-mb&lt;/name&gt;</span><br><span class=\"line\">    &lt;value&gt;2048&lt;/value&gt;</span><br><span class=\"line\">  &lt;/property&gt;</span><br><span class=\"line\">  &lt;property&gt;</span><br><span class=\"line\">    &lt;name&gt;yarn.nodemanager.vmem-check-enabled&lt;/name&gt;</span><br><span class=\"line\">    &lt;value&gt;false&lt;/value&gt;</span><br><span class=\"line\">  &lt;/property&gt;</span><br><span class=\"line\">&lt;/configuration&gt;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h4 id=\"启动hadoop\"><a href=\"#启动hadoop\" class=\"headerlink\" title=\"启动hadoop\"></a>启动hadoop</h4><p>略</p>\n<h4 id=\"测试hadoop\"><a href=\"#测试hadoop\" class=\"headerlink\" title=\"测试hadoop\"></a>测试hadoop</h4><p>在浏览器访问  <a href=\"http://192.168.17.133:50070\" target=\"_blank\" rel=\"noopener\">http://192.168.17.133:50070</a> 以及 <a href=\"http://192.168.17.133:8088/\" target=\"_blank\" rel=\"noopener\">http://192.168.17.133:8088/</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"Hadoop安装\"><a href=\"#Hadoop安装\" class=\"headerlink\" title=\"Hadoop安装\"></a>Hadoop安装</h3><h4 id=\"创建hadoop用户\"><a href=\"#创建hadoop用户\" class=\"headerlink\" title=\"创建hadoop用户\"></a>创建hadoop用户</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">useradd -m hadoop -s /bin/bash</span><br></pre></td></tr></table></figure>\n<h4 id=\"安装java环境\"><a href=\"#安装java环境\" class=\"headerlink\" title=\"安装java环境\"></a>安装java环境</h4><ol>\n<li><p>如果是系统自带的java，请先卸载：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rpm -qa | grep jdk</span><br><span class=\"line\">rpm -e --nodeps XXXX\t\t#XXXX是上一条命令的查询结构</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>到Oracle官网下载jdk，并安装(这里下载的是.tar.gz版)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir /usr/java/</span><br><span class=\"line\">mv jdk-8u161-linux-x64.tar.gz /usr/java/</span><br><span class=\"line\">tar zxvf jdk-8u161-linux-x64.tar.gz</span><br><span class=\"line\">mv jdk1.8.0_161/ jdk1.8</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>编辑配置文件，配置环境变量</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim /etc/profile</span><br><span class=\"line\"></span><br><span class=\"line\">JAVA_HOME=/usr/java/jdk1.8</span><br><span class=\"line\">CLASSPATH=$JAVA_HOME/lib/</span><br><span class=\"line\">PATH=$PATH:$JAVA_HOME/bin</span><br><span class=\"line\">export PATH JAVA_HOME CLASSPATH</span><br><span class=\"line\"></span><br><span class=\"line\">source /etc/profile</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h4 id=\"安装Hadoop2\"><a href=\"#安装Hadoop2\" class=\"headerlink\" title=\"安装Hadoop2\"></a>安装Hadoop2</h4><p>从hadoop的官网下载已经编译好的(binary)hadoop压缩包，在这里使用的是hadoop2.8.3版本。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /home/hadoop</span><br><span class=\"line\">tar -zxvf hadoop-2.8.3.tar.gz</span><br><span class=\"line\">mv hadoop-2.8.3 hadoop</span><br></pre></td></tr></table></figure>\n<p>修改配置文件，添加环境变量</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">su</span><br><span class=\"line\">vim /etc/profile</span><br><span class=\"line\"></span><br><span class=\"line\">export HADOOP_HOME=/home/hadoop/hadoop</span><br><span class=\"line\">export PATH=.:$HADOOP_HOME/bin:$HADOOP_HOME/sbin:$PATH</span><br><span class=\"line\"></span><br><span class=\"line\">source /etc/profile</span><br></pre></td></tr></table></figure>\n<h3 id=\"Hadoop目录结构说明\"><a href=\"#Hadoop目录结构说明\" class=\"headerlink\" title=\"Hadoop目录结构说明\"></a>Hadoop目录结构说明</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ cd /home/hadoop/hadoop</span><br><span class=\"line\">$ ll</span><br><span class=\"line\">drwxr-xr-x. 2 hadoop hadoop  4096 Dec  5 12:28 bin</span><br><span class=\"line\">drwxr-xr-x. 3 hadoop hadoop    19 Dec  5 12:28 etc</span><br><span class=\"line\">drwxr-xr-x. 2 hadoop hadoop   101 Dec  5 12:28 include</span><br><span class=\"line\">drwxr-xr-x. 3 hadoop hadoop    19 Dec  5 12:28 lib</span><br><span class=\"line\">drwxr-xr-x. 2 hadoop hadoop  4096 Dec  5 12:28 libexec</span><br><span class=\"line\">-rw-r--r--. 1 hadoop hadoop 99253 Dec  5 12:28 LICENSE.txt</span><br><span class=\"line\">drwxrwxr-x. 3 hadoop hadoop  4096 Feb 10 11:20 logs</span><br><span class=\"line\">-rw-r--r--. 1 hadoop hadoop 15915 Dec  5 12:28 NOTICE.txt</span><br><span class=\"line\">-rw-r--r--. 1 hadoop hadoop  1366 Dec  5 12:28 README.txt</span><br><span class=\"line\">drwxr-xr-x. 2 hadoop hadoop  4096 Dec  5 12:28 sbin</span><br><span class=\"line\">drwxr-xr-x. 4 hadoop hadoop    29 Dec  5 12:28 share</span><br></pre></td></tr></table></figure>\n<ol>\n<li><p>bin：Hadoop最基本的管理脚本和使用脚本的目录，这些脚本是sbin目录下管理脚本的基础实现，用户可以直接使用这些脚本管理和使用Hadoop；</p>\n</li>\n<li><p>etc：Hadoop配置文件所在的目录，包括core-site,xml、hdfs-site.xml、mapred-site.xml等从Hadoop1.0继承而来的配置文件和yarn-site.xml等Hadoop2.0新增的配置文件；</p>\n</li>\n<li><p>include：对外提供的编程库头文件（具体动态库和静态库在lib目录中），这些头文件均是用C++定义的，通常用于C++程序访问HDFS或者编写MapReduce程序；</p>\n</li>\n<li><p>lib：该目录包含了Hadoop对外提供的编程动态库和静态库，与include目录中的头文件结合使用；</p>\n</li>\n<li><p>libexec：各个服务对用的shell配置文件所在的目录，可用于配置日志输出、启动参数（比如JVM参数）等基本信息；</p>\n</li>\n<li><p>sbin：Hadoop管理脚本所在的目录，主要包含HDFS和YARN中各类服务的启动/关闭脚本；</p>\n</li>\n<li><p>share：Hadoop各个模块编译后的jar包所在的目录。 </p>\n</li>\n</ol>\n<h3 id=\"Hadoop伪集群环境安装\"><a href=\"#Hadoop伪集群环境安装\" class=\"headerlink\" title=\"Hadoop伪集群环境安装\"></a>Hadoop伪集群环境安装</h3><h4 id=\"在-home-hadoop-目录下，建立tmp、hdfs-name、hdfs-data目录\"><a href=\"#在-home-hadoop-目录下，建立tmp、hdfs-name、hdfs-data目录\" class=\"headerlink\" title=\"在/home/hadoop/目录下，建立tmp、hdfs/name、hdfs/data目录\"></a>在/home/hadoop/目录下，建立tmp、hdfs/name、hdfs/data目录</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ cd /home/hadoop</span><br><span class=\"line\">$ mkdir tmp</span><br><span class=\"line\">$ mkdir hdfs</span><br><span class=\"line\">$ cd hdfs/</span><br><span class=\"line\">$ mkdir data</span><br><span class=\"line\">$ mkdir name</span><br></pre></td></tr></table></figure>\n<h4 id=\"修改hadoop的配置文件\"><a href=\"#修改hadoop的配置文件\" class=\"headerlink\" title=\"修改hadoop的配置文件\"></a>修改hadoop的配置文件</h4><ol>\n<li><p>配置hadoop-env.sh和yarn-env.sh</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ cd /home/hadoop/hadoop/etc/hadoop</span><br><span class=\"line\"></span><br><span class=\"line\">$ vim hadoop-env.sh</span><br><span class=\"line\">#修改export JAVA_HOME</span><br><span class=\"line\">export JAVA_HOME=/usr/java/jdk1.8</span><br><span class=\"line\"></span><br><span class=\"line\">$ vim yarn-env.sh</span><br><span class=\"line\">#修改export JAVA_HOME</span><br><span class=\"line\">export JAVA_HOME=/usr/java/jdk1.8</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>配置core-site.xml</p>\n<p>其中fs.defaultFS是NameNode的master节点的URI，hadoop.tmp.dir是namenode上本地的hadoop临时文件夹</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;configuration&gt;</span><br><span class=\"line\">  &lt;property&gt;</span><br><span class=\"line\">    &lt;name&gt;fs.defaultFS&lt;/name&gt;</span><br><span class=\"line\">    &lt;value&gt;hdfs://hadoop1:9000&lt;/value&gt;</span><br><span class=\"line\">  &lt;/property&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">  &lt;property&gt;</span><br><span class=\"line\">    &lt;name&gt;hadoop.tmp.dir&lt;/name&gt;</span><br><span class=\"line\">    &lt;value&gt;/home/hadoop/tmp&lt;/value&gt;</span><br><span class=\"line\">  &lt;/property&gt;</span><br><span class=\"line\">&lt;/configuration&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>配置hdfs-site.xml</p>\n<p>其中dfs.name.dir是namenode上存储hdfs名字空间元数据，dfs.data.dir是namenode上数据块的物理存储位置，dfs.replication是副本的个数，默认为3，一般小于datanode的机器数量，在伪集群配置中设置为1。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;configuration&gt;</span><br><span class=\"line\">  &lt;property&gt;</span><br><span class=\"line\">    &lt;name&gt;dfs.name.dir&lt;/name&gt;</span><br><span class=\"line\">    &lt;value&gt;/home/hadoop/hdfs/name&lt;/value&gt;</span><br><span class=\"line\">  &lt;/property&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">  &lt;property&gt;</span><br><span class=\"line\">    &lt;name&gt;dfs.data.dir&lt;/name&gt;</span><br><span class=\"line\">    &lt;value&gt;/home/hadoop/hdfs/data&lt;/value&gt;</span><br><span class=\"line\">  &lt;/property&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">  &lt;property&gt;</span><br><span class=\"line\">    &lt;name&gt;dfs.replication&lt;/name&gt;</span><br><span class=\"line\">    &lt;value&gt;1&lt;/value&gt;</span><br><span class=\"line\">  &lt;/property&gt;</span><br><span class=\"line\">&lt;/configuration&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>配置mapred-site.xml</p>\n<blockquote>\n<p>注意，默认文件夹中并没有这个文件，而是有一个mapred-site.xml.template，可以将该文件复制并重命名</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;configuration&gt;</span><br><span class=\"line\">  &lt;property&gt;</span><br><span class=\"line\">    &lt;name&gt;mapreduce.framework.name&lt;/name&gt;</span><br><span class=\"line\">    &lt;value&gt;yarn&lt;/value&gt;</span><br><span class=\"line\">  &lt;/property&gt;</span><br><span class=\"line\">&lt;/configuration&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>配置yarn-site.xml</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;configuration&gt;</span><br><span class=\"line\">  &lt;property&gt;</span><br><span class=\"line\">    &lt;name&gt;yarn.nodemanager.aux-services&lt;/name&gt;</span><br><span class=\"line\">    &lt;value&gt;mapreduce_shuffle&lt;/value&gt;</span><br><span class=\"line\">  &lt;/property&gt;</span><br><span class=\"line\">  &lt;property&gt;</span><br><span class=\"line\">    &lt;name&gt;yarn.resourcemanager.hostname&lt;/name&gt;</span><br><span class=\"line\">    &lt;value&gt;hadoop1&lt;/value&gt;</span><br><span class=\"line\">  &lt;/property&gt;</span><br><span class=\"line\">&lt;/configuration&gt;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h3 id=\"Hadoop启动\"><a href=\"#Hadoop启动\" class=\"headerlink\" title=\"Hadoop启动\"></a>Hadoop启动</h3><h4 id=\"格式化namenode\"><a href=\"#格式化namenode\" class=\"headerlink\" title=\"格式化namenode\"></a>格式化namenode</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ./bin/hdfs namenode -format</span><br></pre></td></tr></table></figure>\n<h4 id=\"启动NameNode和DataNode的守护进程\"><a href=\"#启动NameNode和DataNode的守护进程\" class=\"headerlink\" title=\"启动NameNode和DataNode的守护进程\"></a>启动NameNode和DataNode的守护进程</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ./sbin/start-dfs.sh</span><br></pre></td></tr></table></figure>\n<h4 id=\"启动ResourceManager和NodeManager的守护进程\"><a href=\"#启动ResourceManager和NodeManager的守护进程\" class=\"headerlink\" title=\"启动ResourceManager和NodeManager的守护进程\"></a>启动ResourceManager和NodeManager的守护进程</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ./sbin/start-yarn.sh</span><br></pre></td></tr></table></figure>\n<h4 id=\"验证启动\"><a href=\"#验证启动\" class=\"headerlink\" title=\"验证启动\"></a>验证启动</h4><p>执行jps命令</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ jps</span><br><span class=\"line\">3994 SecondaryNameNode</span><br><span class=\"line\">3803 DataNode</span><br><span class=\"line\">4156 ResourceManager</span><br><span class=\"line\">4333 Jps</span><br><span class=\"line\">3695 NameNode</span><br><span class=\"line\">4255 NodeManager</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>SecondaryNameNode:它不是namenode的冗余守护进程，而是提供周期检查点和清理任务。<br>DataNode:它负责管理连接到节点的存储(一个集群中可以有多个节点)。每个存储数据的节点运行一个datanode守护进程。<br>ResourceManager:接收客户端任务请求，接收和监控NodeManager(NM)的资源情况汇报，负责资源的分配与调度，启动和监控ApplicationMaster(AM)。<br>Jps：JDK提供查看当前java进程的小工具。<br>NameNode:它是Hadoop中的主服务器，管理文件系统名称空间和对集群中存储的文件的访问。<br>NodeManager:NodeManager(NM)是YARN中每个节点上的代理，它管理Hadoop集群中单个计算节点，包括与ResourceManger保持通信，监督Container的生命周期管理，监控每个Container的资源使用(内存、CPU等)情况，追踪节点健康状况，管理日志和不同应用程序用到的附属服务(auxiliaryservice)。</p>\n</blockquote>\n<h4 id=\"免密登陆\"><a href=\"#免密登陆\" class=\"headerlink\" title=\"免密登陆\"></a>免密登陆</h4><p>每次在启动或者停止hadoop是都需要输入密码进行验证，此时可以设置免密登陆：</p>\n<ol>\n<li><p>安装ssh服务</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ yum install -y openssh-server openssh-clients</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>进入用户目录，生成密钥</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ cd ~</span><br><span class=\"line\">$ cd .ssh/</span><br><span class=\"line\">$ ssh-keygen -t rsa (然后一路回车)</span><br><span class=\"line\">$ cp id_rsa.pub authorized_keys</span><br><span class=\"line\"></span><br><span class=\"line\">$ ssh localhost  #如果此时不提示任何错误，则表明设置成功</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h3 id=\"Hadoop集群安装\"><a href=\"#Hadoop集群安装\" class=\"headerlink\" title=\"Hadoop集群安装\"></a>Hadoop集群安装</h3><h4 id=\"安装3台机器\"><a href=\"#安装3台机器\" class=\"headerlink\" title=\"安装3台机器\"></a>安装3台机器</h4><p>  安装3个虚拟机，主机名分别为hadoop1，hadoop2和hadoop3，对应的ip分别为192.168.17.133,192.168.17.134以及192.168.17.135。</p>\n<h4 id=\"修改机器名\"><a href=\"#修改机器名\" class=\"headerlink\" title=\"修改机器名\"></a>修改机器名</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hostnamectl set-hostname hadoop1</span><br><span class=\"line\">hostnamectl set-hostname hadoop2</span><br><span class=\"line\">hostnamectl set-hostname hadoop3</span><br></pre></td></tr></table></figure>\n<h4 id=\"修改-etc-hosts文件\"><a href=\"#修改-etc-hosts文件\" class=\"headerlink\" title=\"修改/etc/hosts文件\"></a>修改/etc/hosts文件</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">192.168.17.133 hadoop1</span><br><span class=\"line\">192.168.17.134 hadoop2</span><br><span class=\"line\">192.168.17.135 hadoop3</span><br></pre></td></tr></table></figure>\n<h4 id=\"免密登陆-1\"><a href=\"#免密登陆-1\" class=\"headerlink\" title=\"免密登陆\"></a>免密登陆</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ cd ~</span><br><span class=\"line\">$ cd .ssh/</span><br><span class=\"line\">$ ssh-keygen -t rsa (然后一路回车)</span><br><span class=\"line\">$ cp id_rsa.pub authorized_keys </span><br><span class=\"line\"></span><br><span class=\"line\">然后修改authorized_keys文件，将三台机器的文件内容合并，然后复制到每台机器中</span><br></pre></td></tr></table></figure>\n<h4 id=\"配置Hadoop\"><a href=\"#配置Hadoop\" class=\"headerlink\" title=\"配置Hadoop\"></a>配置Hadoop</h4><p>在hadoop1机器中执行以下命令：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir /home/hadoop/tmp  </span><br><span class=\"line\">mkdir /home/hadoop/var  </span><br><span class=\"line\">mkdir /home/hadoop/hdfs  </span><br><span class=\"line\">mkdir /home/hadoop/hdfs/name  </span><br><span class=\"line\">mkdir /home/hadoop/hdfs/data</span><br></pre></td></tr></table></figure>\n<ol>\n<li><p>修改core-site.xml文件：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;configuration&gt;</span><br><span class=\"line\">  &lt;property&gt;</span><br><span class=\"line\">    &lt;name&gt;hadoop.tmp.dir&lt;/name&gt;</span><br><span class=\"line\">    &lt;value&gt;/home/hadoop/tmp&lt;/value&gt;</span><br><span class=\"line\">    &lt;description&gt;Abase for other temporary directories.&lt;/description&gt;</span><br><span class=\"line\">  &lt;/property&gt;</span><br><span class=\"line\">  &lt;property&gt;</span><br><span class=\"line\">    &lt;name&gt;fs.default.name&lt;/name&gt;</span><br><span class=\"line\">    &lt;value&gt;hdfs://hadoop1:9000&lt;/value&gt;</span><br><span class=\"line\">  &lt;/property&gt;</span><br><span class=\"line\">&lt;/configuration&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>修改hadoop-env.sh文件：</p>\n<p>略</p>\n</li>\n<li><p>修改hdfs-site.xml文件：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;configuration&gt;</span><br><span class=\"line\">  &lt;property&gt;</span><br><span class=\"line\">    &lt;name&gt;dfs.name.dir&lt;/name&gt;</span><br><span class=\"line\">    &lt;value&gt;/home/hadoop/hdfs/name&lt;/value&gt;</span><br><span class=\"line\">  &lt;/property&gt;</span><br><span class=\"line\">  &lt;property&gt;</span><br><span class=\"line\">    &lt;name&gt;dfs.data.dir&lt;/name&gt;</span><br><span class=\"line\">    &lt;value&gt;/home/hadoop/hdfs/data&lt;/value&gt;</span><br><span class=\"line\">  &lt;/property&gt;</span><br><span class=\"line\">  &lt;property&gt;</span><br><span class=\"line\">    &lt;name&gt;dfs.replication&lt;/name&gt;</span><br><span class=\"line\">    &lt;value&gt;2&lt;/value&gt;</span><br><span class=\"line\">  &lt;/property&gt;</span><br><span class=\"line\">  &lt;property&gt;</span><br><span class=\"line\">    &lt;name&gt;dfs.permissions&lt;/name&gt;</span><br><span class=\"line\">    &lt;value&gt;false&lt;/value&gt;</span><br><span class=\"line\">  &lt;/property&gt;</span><br><span class=\"line\">&lt;/configuration&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>修改mapred-site.xml文件：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;configuration&gt;</span><br><span class=\"line\">  &lt;property&gt;</span><br><span class=\"line\">    &lt;name&gt;mapred.job.tracker&lt;/name&gt;</span><br><span class=\"line\">    &lt;value&gt;hadoop1:49001&lt;/value&gt;</span><br><span class=\"line\">  &lt;/property&gt;</span><br><span class=\"line\">  &lt;property&gt;</span><br><span class=\"line\">    &lt;name&gt;mapred.local.dir&lt;/name&gt;</span><br><span class=\"line\">    &lt;value&gt;/home/hadoop/var&lt;/value&gt;</span><br><span class=\"line\">  &lt;/property&gt;</span><br><span class=\"line\">  &lt;property&gt;</span><br><span class=\"line\">    &lt;name&gt;mapreduce.framework.name&lt;/name&gt;</span><br><span class=\"line\">    &lt;value&gt;yarn&lt;/value&gt;</span><br><span class=\"line\">  &lt;/property&gt;</span><br><span class=\"line\">&lt;/configuration&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>修改slaves文件：</p>\n<blockquote>\n<p>hadoop2<br> hadoop3</p>\n</blockquote>\n</li>\n<li><p>修改yarn-site.xml文件：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;configuration&gt;</span><br><span class=\"line\">  &lt;property&gt;</span><br><span class=\"line\">    &lt;name&gt;yarn.resourcemanager.hostname&lt;/name&gt;</span><br><span class=\"line\">    &lt;value&gt;hadoop1&lt;/value&gt;</span><br><span class=\"line\">  &lt;/property&gt;</span><br><span class=\"line\">  &lt;property&gt;</span><br><span class=\"line\">    &lt;description&gt;The address of the applications manager interface in the RM.&lt;/description&gt;</span><br><span class=\"line\">    &lt;name&gt;yarn.resourcemanager.address&lt;/name&gt;</span><br><span class=\"line\">    &lt;value&gt;$&#123;yarn.resourcemanager.hostname&#125;:8032&lt;/value&gt;</span><br><span class=\"line\">  &lt;/property&gt;</span><br><span class=\"line\">  &lt;property&gt;</span><br><span class=\"line\">    &lt;description&gt;The address of the scheduler interface.&lt;/description&gt;</span><br><span class=\"line\">    &lt;name&gt;yarn.resourcemanager.scheduler.address&lt;/name&gt;</span><br><span class=\"line\">    &lt;value&gt;$&#123;yarn.resourcemanager.hostname&#125;:8030&lt;/value&gt;</span><br><span class=\"line\">  &lt;/property&gt;</span><br><span class=\"line\">  &lt;property&gt;</span><br><span class=\"line\">    &lt;description&gt;The http address of the RM web application.&lt;/description&gt;</span><br><span class=\"line\">    &lt;name&gt;yarn.resourcemanager.webapp.address&lt;/name&gt;</span><br><span class=\"line\">    &lt;value&gt;$&#123;yarn.resourcemanager.hostname&#125;:8088&lt;/value&gt;</span><br><span class=\"line\">  &lt;/property&gt;</span><br><span class=\"line\">  &lt;property&gt;</span><br><span class=\"line\">    &lt;description&gt;The https adddress of the RM web application.&lt;/description&gt;</span><br><span class=\"line\">    &lt;name&gt;yarn.resourcemanager.webapp.https.address&lt;/name&gt;</span><br><span class=\"line\">    &lt;value&gt;$&#123;yarn.resourcemanager.hostname&#125;:8090&lt;/value&gt;</span><br><span class=\"line\">  &lt;/property&gt;</span><br><span class=\"line\">  &lt;property&gt;</span><br><span class=\"line\">    &lt;name&gt;yarn.resourcemanager.resource-tracker.address&lt;/name&gt;</span><br><span class=\"line\">    &lt;value&gt;$&#123;yarn.resourcemanager.hostname&#125;:8031&lt;/value&gt;</span><br><span class=\"line\">  &lt;/property&gt;</span><br><span class=\"line\">  &lt;property&gt;</span><br><span class=\"line\">    &lt;description&gt;The address of the RM admin interface.&lt;/description&gt;</span><br><span class=\"line\">    &lt;name&gt;yarn.resourcemanager.admin.address&lt;/name&gt;</span><br><span class=\"line\">    &lt;value&gt;$&#123;yarn.resourcemanager.hostname&#125;:8033&lt;/value&gt;</span><br><span class=\"line\">  &lt;/property&gt;</span><br><span class=\"line\">  &lt;property&gt;</span><br><span class=\"line\">    &lt;name&gt;yarn.nodemanager.aux-services&lt;/name&gt;</span><br><span class=\"line\">    &lt;value&gt;mapreduce_shuffle&lt;/value&gt;</span><br><span class=\"line\">  &lt;/property&gt;</span><br><span class=\"line\">  &lt;property&gt;</span><br><span class=\"line\">    &lt;name&gt;yarn.scheduler.maximum-allocation-mb&lt;/name&gt;</span><br><span class=\"line\">    &lt;value&gt;2048&lt;/value&gt;</span><br><span class=\"line\">    &lt;discription&gt;每个节点可用内存,单位MB,默认8182MB&lt;/discription&gt;</span><br><span class=\"line\">  &lt;/property&gt;</span><br><span class=\"line\">  &lt;property&gt;</span><br><span class=\"line\">    &lt;name&gt;yarn.nodemanager.vmem-pmem-ratio&lt;/name&gt;</span><br><span class=\"line\">    &lt;value&gt;2.1&lt;/value&gt;</span><br><span class=\"line\">  &lt;/property&gt;</span><br><span class=\"line\">  &lt;property&gt;</span><br><span class=\"line\">    &lt;name&gt;yarn.nodemanager.resource.memory-mb&lt;/name&gt;</span><br><span class=\"line\">    &lt;value&gt;2048&lt;/value&gt;</span><br><span class=\"line\">  &lt;/property&gt;</span><br><span class=\"line\">  &lt;property&gt;</span><br><span class=\"line\">    &lt;name&gt;yarn.nodemanager.vmem-check-enabled&lt;/name&gt;</span><br><span class=\"line\">    &lt;value&gt;false&lt;/value&gt;</span><br><span class=\"line\">  &lt;/property&gt;</span><br><span class=\"line\">&lt;/configuration&gt;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h4 id=\"启动hadoop\"><a href=\"#启动hadoop\" class=\"headerlink\" title=\"启动hadoop\"></a>启动hadoop</h4><p>略</p>\n<h4 id=\"测试hadoop\"><a href=\"#测试hadoop\" class=\"headerlink\" title=\"测试hadoop\"></a>测试hadoop</h4><p>在浏览器访问  <a href=\"http://192.168.17.133:50070\" target=\"_blank\" rel=\"noopener\">http://192.168.17.133:50070</a> 以及 <a href=\"http://192.168.17.133:8088/\" target=\"_blank\" rel=\"noopener\">http://192.168.17.133:8088/</a></p>\n"},{"title":"HEXO安装与使用","date":"2018-01-29T16:00:00.000Z","modified":null,"_content":"\n### nodejs安装\n\n> 通过EPEL的方式进行安装\n\n```\n# 安装epel\nyum install -y epel-release\nyum repolist\n\n# 安装node\nyum install -y nodejs\nnode --version\nyum install npm\n```\n\n### hexo安装\n\n```\nnpm install hexo-cli -g\n```\n\n> 快速新建一个博客系统\n\n```\nhexo init blog\ncd blog\nnpm install\nhexo server\n```\n\n### hexo常用命令\n\n```\n# 清空缓存\nhexo clean\n# 生成静态网页\nhexo g\n# 启动hexo服务，默认端口为4000\nhexo s\n```\n\n### 安装NEXT主题\n> 资源链接\n\nhttps://github.com/iissnan/hexo-theme-next\n\n> 安装方法\n\n```\n$ cd hexo\n$ ls\n_config.yml  node_modules  package.json  public  scaffolds  source  themes\n$ mkdir themes/next\n$ curl -s https://api.github.com/repos/iissnan/hexo-theme-next/releases/latest | grep tarball_url | cut -d '\"' -f 4 | wget -i - -O- | tar -zx -C themes/next --strip-components=1\n```\n\n### NEXT的相关配置\n\n> 对于整个项目，有一个站点配置文件`_config.yml`，该文件位于根目录下，在本项目中位于`/root/blog`目录下，对于每个主题，都有一个主题的配置文件`_config.yml`，位于每个主题的根目录下，在本项目中位于`/root/blog/themes/next`目录下：\n\n```\n$ ls /root/blog/\n_config.yml  node_modules  public     source\ndb.json      package.json  scaffolds  themes\n\n$ ls /root/blog/themes/next/\nbower.json   gulpfile.coffee  layout   package.json  README.md  source\n_config.yml  languages        LICENSE  README.cn.md  scripts    test\n```\n\n\n\n\n### 添加分类标签\n\n> 如果需要给首页添加分页，首先修改主题配置文件，将menu下的about前的#去除：\n\n```\nmenu:\n  home: /\n  #tags: /tags/ || tags\n  categories: /categories/\n  archives: /archives/\n  about: /about/\n  #schedule: /schedule/ || calendar\n  #sitemap: /sitemap.xml || sitemap\n  #commonweal: /404/ || heartbeat\n```\n\n> 然后在source目录下新建一个categories文件夹，并在该文件夹中添加一个index.md文件\n\n```\n$ cd /root/blog/source\n$ mkdir categories/\n$ vim index.md\n```\n\n> 在文件中添加以下内容\n\n```\n---\ntitle: 文章分类\ndate: 日期\ntype: \"categories\"\ncomments: false\n---\n```\n\n> 然后在文件的头部添加以下内容：\n\n```\n---\ntitle: Hello World\ncategories: \n- test\n---\n```\n\n### 添加动态背景\n\n> 打开  next/layout/_layout.swig\n在`</body>`之前添加代码(注意不要放在`</head>`的后面)：\n\n```\n{% if theme.canvas_nest %}\n<script type=\"text/javascript\" src=\"//cdn.bootcss.com/canvas-nest.js/1.0.0/canvas-nest.min.js\"></script>\n{% endif %}\n```\n\n> 修改主题配置文件，将canvas_nest修改为true\n\n```\ncanvas_nest: true\n```\n\n### 添加更新时间\n\n> 修改语言配置文件`/themes/next/languages/zh_Hans.yml`，在post下添加以下内容：\n\n```\npost:\n  updated: 更新于\n```\n\n> 修改主题配置文件`/themes/next/_config.yml`\n\n```\nupdated_at: true\n```\n\n> 写文章的时候可以直接在文章开头设置更新时间\n\n```\nmodified:\n```\n\n### 添加站内搜索\n#### 安装hexo-generator-search\n\n> 在站点的根目录下执行以下命令：\n\n```\nnpm install hexo-generator-search --save\n```\n\n#### 安装 hexo-generator-searchdb\n\n> 在站点的根目录下执行以下命令：\n\n```\nnpm install hexo-generator-searchdb --save\n```\n\n#### 启用搜索\n\n> 编辑站点配置文件，新增以下内容到最后：\n\n```\nsearch:\n  path: search.xml\n  field: post\n  format: html\n  limit: 10000\n```\n\n> 编辑主题配置文件，将local_search下的enable改为true：\n\n```\nlocal_search:\n  enable: true\n```\n\n### 上传代码到github\n\n#### 注册Github的账号\n\n略\n\n#### 创建Repository\n创建的时候需要注意Repository的名字。例如我的Github账号是pchad321，那么应该创建的Repository的名字为：pchad321.github.io\n\n#### 修改配置文件\n\n1. 进入刚刚创建的Repository，复制Repository的连接，例如https://github.com/pchad321/pchad321.github.io.git\n\n2. 修改站点配置文件\n\n  ```\n  deploy:\n    type: git\n    repo: https://github.com/pchad321/pchad321.github.io.git\n    branch: master\n    message: 'updated at:{{now(\"YYYY-MM-DD HH/mm/ss\")}}'\n\n  ```\n\n#### 设置SSH keys\n\n1. 配置本机全局git环境\n\n  ```\n  git config --global user.email \"you@example.com\"\n  git config --global user.name \"Your Name\"\n  ```\n\n2. 生成SSH密钥\n\n  ```\n  # -C后面是github上的用户邮箱地址\n  ssh-keygen -t rsa -C you@126.com\n\n  # 然后一路回车\n  ```\n\n3. 将SSH密钥添加到github中\n\n  ```\n  less ~/.ssh/id_rsa.pub\n  ```\n\n  > 复制出现的一堆密码，然后在github的SSH and GPG keys中粘贴这一段密码\n\n4. 设置的验证\n\n  在本地输入以下代码：\n\n  ```\n  ssh -T git@github.com\n  ```\n\n  > 如果在最后出现了你配置的用户名，说明配置成功\n\n5. 提交代码到github上\n\n  ```\n  hexo generate\n  hexo deploy\n  ```\n\n  > 在提交代码时可能会出现`ERROR Deployer not found: git`的错误，此时只需要运行以下命令\n\n  ```\n  npm install --save hexo-deployer-git\n  ```\n\n#### 将Hexo的源码备份到Github分支里面\n\n上传到分支里存储，修改本地的时候先上传存储，再发布。更换电脑的时候再下载下来源文件\n\n```\n$ git init\n$ git remote add origin git@github.com:username/username.github.io.git\n$ git add .\n$ git commit -m \"blog\"\n$ git push origin master:Hexo-Blog\n```\n\n在本地写好博文后，可以先执行：\n\n```\n$ git add .\n$ git commit -m \"blog\"\n$ git push origin master:Hexo-Blog\n```\n","source":"_posts/hexo-install-use.md","raw":"---\ntitle: HEXO安装与使用 \ndate: 2018-01-30\nmodified:\ncategories:\n- 前端\ntags:\n- HEXO\n- Linux \n---\n\n### nodejs安装\n\n> 通过EPEL的方式进行安装\n\n```\n# 安装epel\nyum install -y epel-release\nyum repolist\n\n# 安装node\nyum install -y nodejs\nnode --version\nyum install npm\n```\n\n### hexo安装\n\n```\nnpm install hexo-cli -g\n```\n\n> 快速新建一个博客系统\n\n```\nhexo init blog\ncd blog\nnpm install\nhexo server\n```\n\n### hexo常用命令\n\n```\n# 清空缓存\nhexo clean\n# 生成静态网页\nhexo g\n# 启动hexo服务，默认端口为4000\nhexo s\n```\n\n### 安装NEXT主题\n> 资源链接\n\nhttps://github.com/iissnan/hexo-theme-next\n\n> 安装方法\n\n```\n$ cd hexo\n$ ls\n_config.yml  node_modules  package.json  public  scaffolds  source  themes\n$ mkdir themes/next\n$ curl -s https://api.github.com/repos/iissnan/hexo-theme-next/releases/latest | grep tarball_url | cut -d '\"' -f 4 | wget -i - -O- | tar -zx -C themes/next --strip-components=1\n```\n\n### NEXT的相关配置\n\n> 对于整个项目，有一个站点配置文件`_config.yml`，该文件位于根目录下，在本项目中位于`/root/blog`目录下，对于每个主题，都有一个主题的配置文件`_config.yml`，位于每个主题的根目录下，在本项目中位于`/root/blog/themes/next`目录下：\n\n```\n$ ls /root/blog/\n_config.yml  node_modules  public     source\ndb.json      package.json  scaffolds  themes\n\n$ ls /root/blog/themes/next/\nbower.json   gulpfile.coffee  layout   package.json  README.md  source\n_config.yml  languages        LICENSE  README.cn.md  scripts    test\n```\n\n\n\n\n### 添加分类标签\n\n> 如果需要给首页添加分页，首先修改主题配置文件，将menu下的about前的#去除：\n\n```\nmenu:\n  home: /\n  #tags: /tags/ || tags\n  categories: /categories/\n  archives: /archives/\n  about: /about/\n  #schedule: /schedule/ || calendar\n  #sitemap: /sitemap.xml || sitemap\n  #commonweal: /404/ || heartbeat\n```\n\n> 然后在source目录下新建一个categories文件夹，并在该文件夹中添加一个index.md文件\n\n```\n$ cd /root/blog/source\n$ mkdir categories/\n$ vim index.md\n```\n\n> 在文件中添加以下内容\n\n```\n---\ntitle: 文章分类\ndate: 日期\ntype: \"categories\"\ncomments: false\n---\n```\n\n> 然后在文件的头部添加以下内容：\n\n```\n---\ntitle: Hello World\ncategories: \n- test\n---\n```\n\n### 添加动态背景\n\n> 打开  next/layout/_layout.swig\n在`</body>`之前添加代码(注意不要放在`</head>`的后面)：\n\n```\n{% if theme.canvas_nest %}\n<script type=\"text/javascript\" src=\"//cdn.bootcss.com/canvas-nest.js/1.0.0/canvas-nest.min.js\"></script>\n{% endif %}\n```\n\n> 修改主题配置文件，将canvas_nest修改为true\n\n```\ncanvas_nest: true\n```\n\n### 添加更新时间\n\n> 修改语言配置文件`/themes/next/languages/zh_Hans.yml`，在post下添加以下内容：\n\n```\npost:\n  updated: 更新于\n```\n\n> 修改主题配置文件`/themes/next/_config.yml`\n\n```\nupdated_at: true\n```\n\n> 写文章的时候可以直接在文章开头设置更新时间\n\n```\nmodified:\n```\n\n### 添加站内搜索\n#### 安装hexo-generator-search\n\n> 在站点的根目录下执行以下命令：\n\n```\nnpm install hexo-generator-search --save\n```\n\n#### 安装 hexo-generator-searchdb\n\n> 在站点的根目录下执行以下命令：\n\n```\nnpm install hexo-generator-searchdb --save\n```\n\n#### 启用搜索\n\n> 编辑站点配置文件，新增以下内容到最后：\n\n```\nsearch:\n  path: search.xml\n  field: post\n  format: html\n  limit: 10000\n```\n\n> 编辑主题配置文件，将local_search下的enable改为true：\n\n```\nlocal_search:\n  enable: true\n```\n\n### 上传代码到github\n\n#### 注册Github的账号\n\n略\n\n#### 创建Repository\n创建的时候需要注意Repository的名字。例如我的Github账号是pchad321，那么应该创建的Repository的名字为：pchad321.github.io\n\n#### 修改配置文件\n\n1. 进入刚刚创建的Repository，复制Repository的连接，例如https://github.com/pchad321/pchad321.github.io.git\n\n2. 修改站点配置文件\n\n  ```\n  deploy:\n    type: git\n    repo: https://github.com/pchad321/pchad321.github.io.git\n    branch: master\n    message: 'updated at:{{now(\"YYYY-MM-DD HH/mm/ss\")}}'\n\n  ```\n\n#### 设置SSH keys\n\n1. 配置本机全局git环境\n\n  ```\n  git config --global user.email \"you@example.com\"\n  git config --global user.name \"Your Name\"\n  ```\n\n2. 生成SSH密钥\n\n  ```\n  # -C后面是github上的用户邮箱地址\n  ssh-keygen -t rsa -C you@126.com\n\n  # 然后一路回车\n  ```\n\n3. 将SSH密钥添加到github中\n\n  ```\n  less ~/.ssh/id_rsa.pub\n  ```\n\n  > 复制出现的一堆密码，然后在github的SSH and GPG keys中粘贴这一段密码\n\n4. 设置的验证\n\n  在本地输入以下代码：\n\n  ```\n  ssh -T git@github.com\n  ```\n\n  > 如果在最后出现了你配置的用户名，说明配置成功\n\n5. 提交代码到github上\n\n  ```\n  hexo generate\n  hexo deploy\n  ```\n\n  > 在提交代码时可能会出现`ERROR Deployer not found: git`的错误，此时只需要运行以下命令\n\n  ```\n  npm install --save hexo-deployer-git\n  ```\n\n#### 将Hexo的源码备份到Github分支里面\n\n上传到分支里存储，修改本地的时候先上传存储，再发布。更换电脑的时候再下载下来源文件\n\n```\n$ git init\n$ git remote add origin git@github.com:username/username.github.io.git\n$ git add .\n$ git commit -m \"blog\"\n$ git push origin master:Hexo-Blog\n```\n\n在本地写好博文后，可以先执行：\n\n```\n$ git add .\n$ git commit -m \"blog\"\n$ git push origin master:Hexo-Blog\n```\n","slug":"hexo-install-use","published":1,"updated":"2018-02-12T06:08:41.532Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjir2nrn6000s9xasfqgymj6s","content":"<h3 id=\"nodejs安装\"><a href=\"#nodejs安装\" class=\"headerlink\" title=\"nodejs安装\"></a>nodejs安装</h3><blockquote>\n<p>通过EPEL的方式进行安装</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 安装epel</span><br><span class=\"line\">yum install -y epel-release</span><br><span class=\"line\">yum repolist</span><br><span class=\"line\"></span><br><span class=\"line\"># 安装node</span><br><span class=\"line\">yum install -y nodejs</span><br><span class=\"line\">node --version</span><br><span class=\"line\">yum install npm</span><br></pre></td></tr></table></figure>\n<h3 id=\"hexo安装\"><a href=\"#hexo安装\" class=\"headerlink\" title=\"hexo安装\"></a>hexo安装</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-cli -g</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>快速新建一个博客系统</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo init blog</span><br><span class=\"line\">cd blog</span><br><span class=\"line\">npm install</span><br><span class=\"line\">hexo server</span><br></pre></td></tr></table></figure>\n<h3 id=\"hexo常用命令\"><a href=\"#hexo常用命令\" class=\"headerlink\" title=\"hexo常用命令\"></a>hexo常用命令</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 清空缓存</span><br><span class=\"line\">hexo clean</span><br><span class=\"line\"># 生成静态网页</span><br><span class=\"line\">hexo g</span><br><span class=\"line\"># 启动hexo服务，默认端口为4000</span><br><span class=\"line\">hexo s</span><br></pre></td></tr></table></figure>\n<h3 id=\"安装NEXT主题\"><a href=\"#安装NEXT主题\" class=\"headerlink\" title=\"安装NEXT主题\"></a>安装NEXT主题</h3><blockquote>\n<p>资源链接</p>\n</blockquote>\n<p><a href=\"https://github.com/iissnan/hexo-theme-next\" target=\"_blank\" rel=\"noopener\">https://github.com/iissnan/hexo-theme-next</a></p>\n<blockquote>\n<p>安装方法</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ cd hexo</span><br><span class=\"line\">$ ls</span><br><span class=\"line\">_config.yml  node_modules  package.json  public  scaffolds  source  themes</span><br><span class=\"line\">$ mkdir themes/next</span><br><span class=\"line\">$ curl -s https://api.github.com/repos/iissnan/hexo-theme-next/releases/latest | grep tarball_url | cut -d &apos;&quot;&apos; -f 4 | wget -i - -O- | tar -zx -C themes/next --strip-components=1</span><br></pre></td></tr></table></figure>\n<h3 id=\"NEXT的相关配置\"><a href=\"#NEXT的相关配置\" class=\"headerlink\" title=\"NEXT的相关配置\"></a>NEXT的相关配置</h3><blockquote>\n<p>对于整个项目，有一个站点配置文件<code>_config.yml</code>，该文件位于根目录下，在本项目中位于<code>/root/blog</code>目录下，对于每个主题，都有一个主题的配置文件<code>_config.yml</code>，位于每个主题的根目录下，在本项目中位于<code>/root/blog/themes/next</code>目录下：</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ls /root/blog/</span><br><span class=\"line\">_config.yml  node_modules  public     source</span><br><span class=\"line\">db.json      package.json  scaffolds  themes</span><br><span class=\"line\"></span><br><span class=\"line\">$ ls /root/blog/themes/next/</span><br><span class=\"line\">bower.json   gulpfile.coffee  layout   package.json  README.md  source</span><br><span class=\"line\">_config.yml  languages        LICENSE  README.cn.md  scripts    test</span><br></pre></td></tr></table></figure>\n<h3 id=\"添加分类标签\"><a href=\"#添加分类标签\" class=\"headerlink\" title=\"添加分类标签\"></a>添加分类标签</h3><blockquote>\n<p>如果需要给首页添加分页，首先修改主题配置文件，将menu下的about前的#去除：</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">menu:</span><br><span class=\"line\">  home: /</span><br><span class=\"line\">  #tags: /tags/ || tags</span><br><span class=\"line\">  categories: /categories/</span><br><span class=\"line\">  archives: /archives/</span><br><span class=\"line\">  about: /about/</span><br><span class=\"line\">  #schedule: /schedule/ || calendar</span><br><span class=\"line\">  #sitemap: /sitemap.xml || sitemap</span><br><span class=\"line\">  #commonweal: /404/ || heartbeat</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>然后在source目录下新建一个categories文件夹，并在该文件夹中添加一个index.md文件</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ cd /root/blog/source</span><br><span class=\"line\">$ mkdir categories/</span><br><span class=\"line\">$ vim index.md</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>在文件中添加以下内容</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: 文章分类</span><br><span class=\"line\">date: 日期</span><br><span class=\"line\">type: &quot;categories&quot;</span><br><span class=\"line\">comments: false</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>然后在文件的头部添加以下内容：</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: Hello World</span><br><span class=\"line\">categories: </span><br><span class=\"line\">- test</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n<h3 id=\"添加动态背景\"><a href=\"#添加动态背景\" class=\"headerlink\" title=\"添加动态背景\"></a>添加动态背景</h3><blockquote>\n<p>打开  next/layout/_layout.swig<br>在<code>&lt;/body&gt;</code>之前添加代码(注意不要放在<code>&lt;/head&gt;</code>的后面)：</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% if theme.canvas_nest %&#125;</span><br><span class=\"line\">&lt;script type=&quot;text/javascript&quot; src=&quot;//cdn.bootcss.com/canvas-nest.js/1.0.0/canvas-nest.min.js&quot;&gt;&lt;/script&gt;</span><br><span class=\"line\">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>修改主题配置文件，将canvas_nest修改为true</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">canvas_nest: true</span><br></pre></td></tr></table></figure>\n<h3 id=\"添加更新时间\"><a href=\"#添加更新时间\" class=\"headerlink\" title=\"添加更新时间\"></a>添加更新时间</h3><blockquote>\n<p>修改语言配置文件<code>/themes/next/languages/zh_Hans.yml</code>，在post下添加以下内容：</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">post:</span><br><span class=\"line\">  updated: 更新于</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>修改主题配置文件<code>/themes/next/_config.yml</code></p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">updated_at: true</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>写文章的时候可以直接在文章开头设置更新时间</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">modified:</span><br></pre></td></tr></table></figure>\n<h3 id=\"添加站内搜索\"><a href=\"#添加站内搜索\" class=\"headerlink\" title=\"添加站内搜索\"></a>添加站内搜索</h3><h4 id=\"安装hexo-generator-search\"><a href=\"#安装hexo-generator-search\" class=\"headerlink\" title=\"安装hexo-generator-search\"></a>安装hexo-generator-search</h4><blockquote>\n<p>在站点的根目录下执行以下命令：</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-generator-search --save</span><br></pre></td></tr></table></figure>\n<h4 id=\"安装-hexo-generator-searchdb\"><a href=\"#安装-hexo-generator-searchdb\" class=\"headerlink\" title=\"安装 hexo-generator-searchdb\"></a>安装 hexo-generator-searchdb</h4><blockquote>\n<p>在站点的根目录下执行以下命令：</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure>\n<h4 id=\"启用搜索\"><a href=\"#启用搜索\" class=\"headerlink\" title=\"启用搜索\"></a>启用搜索</h4><blockquote>\n<p>编辑站点配置文件，新增以下内容到最后：</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">search:</span><br><span class=\"line\">  path: search.xml</span><br><span class=\"line\">  field: post</span><br><span class=\"line\">  format: html</span><br><span class=\"line\">  limit: 10000</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>编辑主题配置文件，将local_search下的enable改为true：</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">local_search:</span><br><span class=\"line\">  enable: true</span><br></pre></td></tr></table></figure>\n<h3 id=\"上传代码到github\"><a href=\"#上传代码到github\" class=\"headerlink\" title=\"上传代码到github\"></a>上传代码到github</h3><h4 id=\"注册Github的账号\"><a href=\"#注册Github的账号\" class=\"headerlink\" title=\"注册Github的账号\"></a>注册Github的账号</h4><p>略</p>\n<h4 id=\"创建Repository\"><a href=\"#创建Repository\" class=\"headerlink\" title=\"创建Repository\"></a>创建Repository</h4><p>创建的时候需要注意Repository的名字。例如我的Github账号是pchad321，那么应该创建的Repository的名字为：pchad321.github.io</p>\n<h4 id=\"修改配置文件\"><a href=\"#修改配置文件\" class=\"headerlink\" title=\"修改配置文件\"></a>修改配置文件</h4><ol>\n<li><p>进入刚刚创建的Repository，复制Repository的连接，例如<a href=\"https://github.com/pchad321/pchad321.github.io.git\" target=\"_blank\" rel=\"noopener\">https://github.com/pchad321/pchad321.github.io.git</a></p>\n</li>\n<li><p>修改站点配置文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deploy:</span><br><span class=\"line\">  type: git</span><br><span class=\"line\">  repo: https://github.com/pchad321/pchad321.github.io.git</span><br><span class=\"line\">  branch: master</span><br><span class=\"line\">  message: &apos;updated at:&#123;&#123;now(&quot;YYYY-MM-DD HH/mm/ss&quot;)&#125;&#125;&apos;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h4 id=\"设置SSH-keys\"><a href=\"#设置SSH-keys\" class=\"headerlink\" title=\"设置SSH keys\"></a>设置SSH keys</h4><ol>\n<li><p>配置本机全局git环境</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global user.email &quot;you@example.com&quot;</span><br><span class=\"line\">git config --global user.name &quot;Your Name&quot;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>生成SSH密钥</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># -C后面是github上的用户邮箱地址</span><br><span class=\"line\">ssh-keygen -t rsa -C you@126.com</span><br><span class=\"line\"></span><br><span class=\"line\"># 然后一路回车</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>将SSH密钥添加到github中</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">less ~/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>复制出现的一堆密码，然后在github的SSH and GPG keys中粘贴这一段密码</p>\n</blockquote>\n</li>\n<li><p>设置的验证</p>\n<p>在本地输入以下代码：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh -T git@github.com</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>如果在最后出现了你配置的用户名，说明配置成功</p>\n</blockquote>\n</li>\n<li><p>提交代码到github上</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo generate</span><br><span class=\"line\">hexo deploy</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>在提交代码时可能会出现<code>ERROR Deployer not found: git</code>的错误，此时只需要运行以下命令</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install --save hexo-deployer-git</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h4 id=\"将Hexo的源码备份到Github分支里面\"><a href=\"#将Hexo的源码备份到Github分支里面\" class=\"headerlink\" title=\"将Hexo的源码备份到Github分支里面\"></a>将Hexo的源码备份到Github分支里面</h4><p>上传到分支里存储，修改本地的时候先上传存储，再发布。更换电脑的时候再下载下来源文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git init</span><br><span class=\"line\">$ git remote add origin git@github.com:username/username.github.io.git</span><br><span class=\"line\">$ git add .</span><br><span class=\"line\">$ git commit -m &quot;blog&quot;</span><br><span class=\"line\">$ git push origin master:Hexo-Blog</span><br></pre></td></tr></table></figure>\n<p>在本地写好博文后，可以先执行：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git add .</span><br><span class=\"line\">$ git commit -m &quot;blog&quot;</span><br><span class=\"line\">$ git push origin master:Hexo-Blog</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"nodejs安装\"><a href=\"#nodejs安装\" class=\"headerlink\" title=\"nodejs安装\"></a>nodejs安装</h3><blockquote>\n<p>通过EPEL的方式进行安装</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 安装epel</span><br><span class=\"line\">yum install -y epel-release</span><br><span class=\"line\">yum repolist</span><br><span class=\"line\"></span><br><span class=\"line\"># 安装node</span><br><span class=\"line\">yum install -y nodejs</span><br><span class=\"line\">node --version</span><br><span class=\"line\">yum install npm</span><br></pre></td></tr></table></figure>\n<h3 id=\"hexo安装\"><a href=\"#hexo安装\" class=\"headerlink\" title=\"hexo安装\"></a>hexo安装</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-cli -g</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>快速新建一个博客系统</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo init blog</span><br><span class=\"line\">cd blog</span><br><span class=\"line\">npm install</span><br><span class=\"line\">hexo server</span><br></pre></td></tr></table></figure>\n<h3 id=\"hexo常用命令\"><a href=\"#hexo常用命令\" class=\"headerlink\" title=\"hexo常用命令\"></a>hexo常用命令</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 清空缓存</span><br><span class=\"line\">hexo clean</span><br><span class=\"line\"># 生成静态网页</span><br><span class=\"line\">hexo g</span><br><span class=\"line\"># 启动hexo服务，默认端口为4000</span><br><span class=\"line\">hexo s</span><br></pre></td></tr></table></figure>\n<h3 id=\"安装NEXT主题\"><a href=\"#安装NEXT主题\" class=\"headerlink\" title=\"安装NEXT主题\"></a>安装NEXT主题</h3><blockquote>\n<p>资源链接</p>\n</blockquote>\n<p><a href=\"https://github.com/iissnan/hexo-theme-next\" target=\"_blank\" rel=\"noopener\">https://github.com/iissnan/hexo-theme-next</a></p>\n<blockquote>\n<p>安装方法</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ cd hexo</span><br><span class=\"line\">$ ls</span><br><span class=\"line\">_config.yml  node_modules  package.json  public  scaffolds  source  themes</span><br><span class=\"line\">$ mkdir themes/next</span><br><span class=\"line\">$ curl -s https://api.github.com/repos/iissnan/hexo-theme-next/releases/latest | grep tarball_url | cut -d &apos;&quot;&apos; -f 4 | wget -i - -O- | tar -zx -C themes/next --strip-components=1</span><br></pre></td></tr></table></figure>\n<h3 id=\"NEXT的相关配置\"><a href=\"#NEXT的相关配置\" class=\"headerlink\" title=\"NEXT的相关配置\"></a>NEXT的相关配置</h3><blockquote>\n<p>对于整个项目，有一个站点配置文件<code>_config.yml</code>，该文件位于根目录下，在本项目中位于<code>/root/blog</code>目录下，对于每个主题，都有一个主题的配置文件<code>_config.yml</code>，位于每个主题的根目录下，在本项目中位于<code>/root/blog/themes/next</code>目录下：</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ls /root/blog/</span><br><span class=\"line\">_config.yml  node_modules  public     source</span><br><span class=\"line\">db.json      package.json  scaffolds  themes</span><br><span class=\"line\"></span><br><span class=\"line\">$ ls /root/blog/themes/next/</span><br><span class=\"line\">bower.json   gulpfile.coffee  layout   package.json  README.md  source</span><br><span class=\"line\">_config.yml  languages        LICENSE  README.cn.md  scripts    test</span><br></pre></td></tr></table></figure>\n<h3 id=\"添加分类标签\"><a href=\"#添加分类标签\" class=\"headerlink\" title=\"添加分类标签\"></a>添加分类标签</h3><blockquote>\n<p>如果需要给首页添加分页，首先修改主题配置文件，将menu下的about前的#去除：</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">menu:</span><br><span class=\"line\">  home: /</span><br><span class=\"line\">  #tags: /tags/ || tags</span><br><span class=\"line\">  categories: /categories/</span><br><span class=\"line\">  archives: /archives/</span><br><span class=\"line\">  about: /about/</span><br><span class=\"line\">  #schedule: /schedule/ || calendar</span><br><span class=\"line\">  #sitemap: /sitemap.xml || sitemap</span><br><span class=\"line\">  #commonweal: /404/ || heartbeat</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>然后在source目录下新建一个categories文件夹，并在该文件夹中添加一个index.md文件</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ cd /root/blog/source</span><br><span class=\"line\">$ mkdir categories/</span><br><span class=\"line\">$ vim index.md</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>在文件中添加以下内容</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: 文章分类</span><br><span class=\"line\">date: 日期</span><br><span class=\"line\">type: &quot;categories&quot;</span><br><span class=\"line\">comments: false</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>然后在文件的头部添加以下内容：</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: Hello World</span><br><span class=\"line\">categories: </span><br><span class=\"line\">- test</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n<h3 id=\"添加动态背景\"><a href=\"#添加动态背景\" class=\"headerlink\" title=\"添加动态背景\"></a>添加动态背景</h3><blockquote>\n<p>打开  next/layout/_layout.swig<br>在<code>&lt;/body&gt;</code>之前添加代码(注意不要放在<code>&lt;/head&gt;</code>的后面)：</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% if theme.canvas_nest %&#125;</span><br><span class=\"line\">&lt;script type=&quot;text/javascript&quot; src=&quot;//cdn.bootcss.com/canvas-nest.js/1.0.0/canvas-nest.min.js&quot;&gt;&lt;/script&gt;</span><br><span class=\"line\">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>修改主题配置文件，将canvas_nest修改为true</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">canvas_nest: true</span><br></pre></td></tr></table></figure>\n<h3 id=\"添加更新时间\"><a href=\"#添加更新时间\" class=\"headerlink\" title=\"添加更新时间\"></a>添加更新时间</h3><blockquote>\n<p>修改语言配置文件<code>/themes/next/languages/zh_Hans.yml</code>，在post下添加以下内容：</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">post:</span><br><span class=\"line\">  updated: 更新于</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>修改主题配置文件<code>/themes/next/_config.yml</code></p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">updated_at: true</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>写文章的时候可以直接在文章开头设置更新时间</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">modified:</span><br></pre></td></tr></table></figure>\n<h3 id=\"添加站内搜索\"><a href=\"#添加站内搜索\" class=\"headerlink\" title=\"添加站内搜索\"></a>添加站内搜索</h3><h4 id=\"安装hexo-generator-search\"><a href=\"#安装hexo-generator-search\" class=\"headerlink\" title=\"安装hexo-generator-search\"></a>安装hexo-generator-search</h4><blockquote>\n<p>在站点的根目录下执行以下命令：</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-generator-search --save</span><br></pre></td></tr></table></figure>\n<h4 id=\"安装-hexo-generator-searchdb\"><a href=\"#安装-hexo-generator-searchdb\" class=\"headerlink\" title=\"安装 hexo-generator-searchdb\"></a>安装 hexo-generator-searchdb</h4><blockquote>\n<p>在站点的根目录下执行以下命令：</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure>\n<h4 id=\"启用搜索\"><a href=\"#启用搜索\" class=\"headerlink\" title=\"启用搜索\"></a>启用搜索</h4><blockquote>\n<p>编辑站点配置文件，新增以下内容到最后：</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">search:</span><br><span class=\"line\">  path: search.xml</span><br><span class=\"line\">  field: post</span><br><span class=\"line\">  format: html</span><br><span class=\"line\">  limit: 10000</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>编辑主题配置文件，将local_search下的enable改为true：</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">local_search:</span><br><span class=\"line\">  enable: true</span><br></pre></td></tr></table></figure>\n<h3 id=\"上传代码到github\"><a href=\"#上传代码到github\" class=\"headerlink\" title=\"上传代码到github\"></a>上传代码到github</h3><h4 id=\"注册Github的账号\"><a href=\"#注册Github的账号\" class=\"headerlink\" title=\"注册Github的账号\"></a>注册Github的账号</h4><p>略</p>\n<h4 id=\"创建Repository\"><a href=\"#创建Repository\" class=\"headerlink\" title=\"创建Repository\"></a>创建Repository</h4><p>创建的时候需要注意Repository的名字。例如我的Github账号是pchad321，那么应该创建的Repository的名字为：pchad321.github.io</p>\n<h4 id=\"修改配置文件\"><a href=\"#修改配置文件\" class=\"headerlink\" title=\"修改配置文件\"></a>修改配置文件</h4><ol>\n<li><p>进入刚刚创建的Repository，复制Repository的连接，例如<a href=\"https://github.com/pchad321/pchad321.github.io.git\" target=\"_blank\" rel=\"noopener\">https://github.com/pchad321/pchad321.github.io.git</a></p>\n</li>\n<li><p>修改站点配置文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deploy:</span><br><span class=\"line\">  type: git</span><br><span class=\"line\">  repo: https://github.com/pchad321/pchad321.github.io.git</span><br><span class=\"line\">  branch: master</span><br><span class=\"line\">  message: &apos;updated at:&#123;&#123;now(&quot;YYYY-MM-DD HH/mm/ss&quot;)&#125;&#125;&apos;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h4 id=\"设置SSH-keys\"><a href=\"#设置SSH-keys\" class=\"headerlink\" title=\"设置SSH keys\"></a>设置SSH keys</h4><ol>\n<li><p>配置本机全局git环境</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global user.email &quot;you@example.com&quot;</span><br><span class=\"line\">git config --global user.name &quot;Your Name&quot;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>生成SSH密钥</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># -C后面是github上的用户邮箱地址</span><br><span class=\"line\">ssh-keygen -t rsa -C you@126.com</span><br><span class=\"line\"></span><br><span class=\"line\"># 然后一路回车</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>将SSH密钥添加到github中</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">less ~/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>复制出现的一堆密码，然后在github的SSH and GPG keys中粘贴这一段密码</p>\n</blockquote>\n</li>\n<li><p>设置的验证</p>\n<p>在本地输入以下代码：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh -T git@github.com</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>如果在最后出现了你配置的用户名，说明配置成功</p>\n</blockquote>\n</li>\n<li><p>提交代码到github上</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo generate</span><br><span class=\"line\">hexo deploy</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>在提交代码时可能会出现<code>ERROR Deployer not found: git</code>的错误，此时只需要运行以下命令</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install --save hexo-deployer-git</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h4 id=\"将Hexo的源码备份到Github分支里面\"><a href=\"#将Hexo的源码备份到Github分支里面\" class=\"headerlink\" title=\"将Hexo的源码备份到Github分支里面\"></a>将Hexo的源码备份到Github分支里面</h4><p>上传到分支里存储，修改本地的时候先上传存储，再发布。更换电脑的时候再下载下来源文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git init</span><br><span class=\"line\">$ git remote add origin git@github.com:username/username.github.io.git</span><br><span class=\"line\">$ git add .</span><br><span class=\"line\">$ git commit -m &quot;blog&quot;</span><br><span class=\"line\">$ git push origin master:Hexo-Blog</span><br></pre></td></tr></table></figure>\n<p>在本地写好博文后，可以先执行：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git add .</span><br><span class=\"line\">$ git commit -m &quot;blog&quot;</span><br><span class=\"line\">$ git push origin master:Hexo-Blog</span><br></pre></td></tr></table></figure>\n"},{"title":"Nginx+Keepalived的安装和使用","date":"2018-01-30T16:00:00.000Z","modified":null,"_content":"\n## vim安装\n\n```\nyum install vim -y\n```\n\n## 修改ip\n修改`/etc/sysconfig/network-scripts/ifcfg-eth0`的内容(如果该文件不存在，先新建)\n\n```\nDEVICE=eth0 #网卡对应的设备别名\nBOOTPROTO=static #设置为静态IP，static\nONBOOT=yes\nDNS1=114.114.114.114\nHWADDR=00:07:E9:05:E8:B4 #对应的网卡物理地址，可以不用配置\nIPADDR=192.168.17.133 #ip地址静态指定\nNETMASK=255.255.255.0 \nGATEWAY=192.168.17.2\n```\n然后在虚拟机->设置->网络适配器中选择自定义VMnet8\n\n> 可以将原有的`ifcfg-enoxxxxxxx`文件删除，然后修改`grub`文件\nvim /etc/default/grub\n然后在`GRUB_CMDLINE_LINUX`原有的参数后面加上`\"net.ifnames=0 biosdevname=0\"`，保存退出后，执行\n`grub2-mkconfig -o /boot/grub2/grub.cfg`\n然后重启计算机\n\n## 添加用户和权限\n\n```\n$ useradd apache\n\n$ passwd apache\n\n$ visudo \n\n$ /root\n\n$ yyp\n```\n\n## 安装apache\n```\nyum install httpd httpd-devel\n\n#开启apache服务\nsystemctl start httpd.service\n\n#关闭apache服务\nsystemctl stop httpd.service\n\n#设置为开机启动\nsystemctl enable httpd.service\n\n#关闭防火墙\nsystemctl stop firewalld.service\n\n#开机不启动防火墙\nsystemctl disable firewalld.service\n\n#apache默认使用/var/www/html文件夹里的资源，故可以创建一个index.html文件\necho apache133 > index.html\n```\n\n## 安装Nginx\n\n### 使用压缩包安装nginx\n\n1. 切换为root用户\n\n2. 进入/usr/local/src目录下\n\n3. 下载Nginx、openssl、pcre以及zlib\n\n  ```\n  wget http://nginx.org/download/nginx-1.12.2.tar.gz\n  wget https://www.openssl.org/source/openssl-fips-2.0.16.tar.gz\n  wget ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/pcre-8.40.tar.gz\n  wget http://www.zlib.net/zlib-1.2.11.tar.gz\n  ```\n\n4. 可能需要先安装c++编译环境\n\n  ```\n  yum install gcc-c++\n  ```\n\n5. 安装openssl\n\n  ```\n  tar zxvf openssl-fips-2.0.16.tar.gz \n  cd openssl-fips-2.0.16/\n  ./config\n  make && make install\n  ```\n\n6. 安装pcre\n\n  ```\n  tar zxvf pcre-8.40.tar.gz \n  cd pcre-8.40/\n  ./configure\n  make && make install\n  ```\n\n7. 安装zlib\n\n  ```\n  tar zxvf zlib-1.2.11.tar.gz \n  cd zlib-1.2.11/\n  ./configure\n  make && make install\n  ```\n\n8. 安装Nginx\n\n  ```\n  tar zxvf nginx-1.12.2.tar.gz \n  cd nginx-1.12.2/\n  ./configure\n  make && make install\n  ```\n\n9. 启动Nginx\n\n  ```\n  /usr/local/nginx/sbin/nginx\n  ```\n\n10. Nginx基本操作\n\n  ```\n  #启动\n  [root@localhost ~]# /usr/local/nginx/sbin/nginx\n  #停止/重启\n  [root@localhost ~]# /usr/local/nginx/sbin/nginx -s stop(quit、reload)\n  #命令帮助\n  [root@localhost ~]# /usr/local/nginx/sbin/nginx -h\n  #验证配置文件\n  [root@localhost ~]# /usr/local/nginx/sbin/nginx -t\n  #配置文件\n  [root@localhost ~]# vim /usr/local/nginx/conf/nginx.conf\n  ```\n\n11. 获取Nginx的安装位置\n\n  ```\n  whereis nginx\n  ```\n\n12. 修改Nginx的配置文件\n\n  ```\n  [root@localhost conf]# cd /usr/local/nginx/conf/\n  [root@localhost conf]# vim nginx.conf\n  ```\n\n13. 在http内添加\n\n  ```\n  upstream test.com{\n    server 192.168.17.133:80 weight=5;\n    server 192.168.17.134:80 weight=1;\n  }\n  ```\n\n14. 在http->server中的location中添加\n\n  ```\n  location / {\n    proxy_pass  http://test.com;\n    proxy_set_header Host       $host;\n    proxy_set_header X-Real-IP  $remote_addr;\n    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n    root   html;\n    index  index.html index.htm;\n  }\n  ```\n\n15. 安装rz和sz\n\n  ```\n  yum install lrzsz\n  ```\n\n### 使用yum安装nginx(推荐)\n\n> 本地yum源中没有我们想要的nginx，那么就需要创建一个`/etc/yum.repos.d/nginx.repo`的文件，新增一个yum源。\n\n```\nvim /etc/yum.repos.d/nginx.repo\n```\n\n> 然后加入如下内容\n\n```\n[nginx]\nname=nginx repo\nbaseurl=http://nginx.org/packages/centos/$releasever/$basearch/\ngpgcheck=0\nenabled=1\n```\n\n> 查询nginx的相关信息并安装\n\n```\nyum list | grep nginx\nyum install -y nginx\n```\n\n\n## 安装Keepalived\n### 安装Keepalived\n```\nwget http://www.keepalived.org/software/keepalived-1.2.24.tar.gz\ntar -zxvf keepalived-1.2.24.tar.gz\ncd keepalived-1.2.24\n./configure --prefix=/usr/local/keepalived\nmake && make install\n```\n\n> 在安装时可能会出现如下错误\\\n!!! OpenSSL is not properly installed on your system. !!!\\\n!!! Can not include OpenSSL headers files.\\\n解决办法：yum -y install openssl-devel\n\n> 也可以直接使用yum安装\n\n```\nyum install keepalived\n```\n\n### 配置Keepalived\nkeepalived启动时会从/etc/keepalived目录下查找keepalived.conf配置文件，如果没有找到则使用默认的配置。/etc/keepalived目录安装时默认是没有安装的，需要手动创建。\n\n> 先备份配置文件\n\n```\ncp keepalived.conf keepalived.conf.bak\n```\n\n> `在启动keepalived前先关闭防火墙和selinux`\n\n```\nsystemctl stop firewalld.service\nsystemctl disable firewalld.service\n\ngetenforce\n/usr/sbin/sestatus -v\n#临时关闭\nsetenforce 0\n#永久关闭\nvim /etc/selinux/config\n#将SELINUX=enforcing改为SELINUX=disabled，必须重启才能生效\n```\n","source":"_posts/keepalived-nginx.md","raw":"---\ntitle: Nginx+Keepalived的安装和使用\ndate: 2018-01-31\nmodified: \ncategories:\n- Linux\ntags:\n- Nginx\n- Keepalived\n- Linux\n---\n\n## vim安装\n\n```\nyum install vim -y\n```\n\n## 修改ip\n修改`/etc/sysconfig/network-scripts/ifcfg-eth0`的内容(如果该文件不存在，先新建)\n\n```\nDEVICE=eth0 #网卡对应的设备别名\nBOOTPROTO=static #设置为静态IP，static\nONBOOT=yes\nDNS1=114.114.114.114\nHWADDR=00:07:E9:05:E8:B4 #对应的网卡物理地址，可以不用配置\nIPADDR=192.168.17.133 #ip地址静态指定\nNETMASK=255.255.255.0 \nGATEWAY=192.168.17.2\n```\n然后在虚拟机->设置->网络适配器中选择自定义VMnet8\n\n> 可以将原有的`ifcfg-enoxxxxxxx`文件删除，然后修改`grub`文件\nvim /etc/default/grub\n然后在`GRUB_CMDLINE_LINUX`原有的参数后面加上`\"net.ifnames=0 biosdevname=0\"`，保存退出后，执行\n`grub2-mkconfig -o /boot/grub2/grub.cfg`\n然后重启计算机\n\n## 添加用户和权限\n\n```\n$ useradd apache\n\n$ passwd apache\n\n$ visudo \n\n$ /root\n\n$ yyp\n```\n\n## 安装apache\n```\nyum install httpd httpd-devel\n\n#开启apache服务\nsystemctl start httpd.service\n\n#关闭apache服务\nsystemctl stop httpd.service\n\n#设置为开机启动\nsystemctl enable httpd.service\n\n#关闭防火墙\nsystemctl stop firewalld.service\n\n#开机不启动防火墙\nsystemctl disable firewalld.service\n\n#apache默认使用/var/www/html文件夹里的资源，故可以创建一个index.html文件\necho apache133 > index.html\n```\n\n## 安装Nginx\n\n### 使用压缩包安装nginx\n\n1. 切换为root用户\n\n2. 进入/usr/local/src目录下\n\n3. 下载Nginx、openssl、pcre以及zlib\n\n  ```\n  wget http://nginx.org/download/nginx-1.12.2.tar.gz\n  wget https://www.openssl.org/source/openssl-fips-2.0.16.tar.gz\n  wget ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/pcre-8.40.tar.gz\n  wget http://www.zlib.net/zlib-1.2.11.tar.gz\n  ```\n\n4. 可能需要先安装c++编译环境\n\n  ```\n  yum install gcc-c++\n  ```\n\n5. 安装openssl\n\n  ```\n  tar zxvf openssl-fips-2.0.16.tar.gz \n  cd openssl-fips-2.0.16/\n  ./config\n  make && make install\n  ```\n\n6. 安装pcre\n\n  ```\n  tar zxvf pcre-8.40.tar.gz \n  cd pcre-8.40/\n  ./configure\n  make && make install\n  ```\n\n7. 安装zlib\n\n  ```\n  tar zxvf zlib-1.2.11.tar.gz \n  cd zlib-1.2.11/\n  ./configure\n  make && make install\n  ```\n\n8. 安装Nginx\n\n  ```\n  tar zxvf nginx-1.12.2.tar.gz \n  cd nginx-1.12.2/\n  ./configure\n  make && make install\n  ```\n\n9. 启动Nginx\n\n  ```\n  /usr/local/nginx/sbin/nginx\n  ```\n\n10. Nginx基本操作\n\n  ```\n  #启动\n  [root@localhost ~]# /usr/local/nginx/sbin/nginx\n  #停止/重启\n  [root@localhost ~]# /usr/local/nginx/sbin/nginx -s stop(quit、reload)\n  #命令帮助\n  [root@localhost ~]# /usr/local/nginx/sbin/nginx -h\n  #验证配置文件\n  [root@localhost ~]# /usr/local/nginx/sbin/nginx -t\n  #配置文件\n  [root@localhost ~]# vim /usr/local/nginx/conf/nginx.conf\n  ```\n\n11. 获取Nginx的安装位置\n\n  ```\n  whereis nginx\n  ```\n\n12. 修改Nginx的配置文件\n\n  ```\n  [root@localhost conf]# cd /usr/local/nginx/conf/\n  [root@localhost conf]# vim nginx.conf\n  ```\n\n13. 在http内添加\n\n  ```\n  upstream test.com{\n    server 192.168.17.133:80 weight=5;\n    server 192.168.17.134:80 weight=1;\n  }\n  ```\n\n14. 在http->server中的location中添加\n\n  ```\n  location / {\n    proxy_pass  http://test.com;\n    proxy_set_header Host       $host;\n    proxy_set_header X-Real-IP  $remote_addr;\n    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n    root   html;\n    index  index.html index.htm;\n  }\n  ```\n\n15. 安装rz和sz\n\n  ```\n  yum install lrzsz\n  ```\n\n### 使用yum安装nginx(推荐)\n\n> 本地yum源中没有我们想要的nginx，那么就需要创建一个`/etc/yum.repos.d/nginx.repo`的文件，新增一个yum源。\n\n```\nvim /etc/yum.repos.d/nginx.repo\n```\n\n> 然后加入如下内容\n\n```\n[nginx]\nname=nginx repo\nbaseurl=http://nginx.org/packages/centos/$releasever/$basearch/\ngpgcheck=0\nenabled=1\n```\n\n> 查询nginx的相关信息并安装\n\n```\nyum list | grep nginx\nyum install -y nginx\n```\n\n\n## 安装Keepalived\n### 安装Keepalived\n```\nwget http://www.keepalived.org/software/keepalived-1.2.24.tar.gz\ntar -zxvf keepalived-1.2.24.tar.gz\ncd keepalived-1.2.24\n./configure --prefix=/usr/local/keepalived\nmake && make install\n```\n\n> 在安装时可能会出现如下错误\\\n!!! OpenSSL is not properly installed on your system. !!!\\\n!!! Can not include OpenSSL headers files.\\\n解决办法：yum -y install openssl-devel\n\n> 也可以直接使用yum安装\n\n```\nyum install keepalived\n```\n\n### 配置Keepalived\nkeepalived启动时会从/etc/keepalived目录下查找keepalived.conf配置文件，如果没有找到则使用默认的配置。/etc/keepalived目录安装时默认是没有安装的，需要手动创建。\n\n> 先备份配置文件\n\n```\ncp keepalived.conf keepalived.conf.bak\n```\n\n> `在启动keepalived前先关闭防火墙和selinux`\n\n```\nsystemctl stop firewalld.service\nsystemctl disable firewalld.service\n\ngetenforce\n/usr/sbin/sestatus -v\n#临时关闭\nsetenforce 0\n#永久关闭\nvim /etc/selinux/config\n#将SELINUX=enforcing改为SELINUX=disabled，必须重启才能生效\n```\n","slug":"keepalived-nginx","published":1,"updated":"2018-01-31T14:23:12.441Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjir2nrnd000v9xas9tg7s8ht","content":"<h2 id=\"vim安装\"><a href=\"#vim安装\" class=\"headerlink\" title=\"vim安装\"></a>vim安装</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install vim -y</span><br></pre></td></tr></table></figure>\n<h2 id=\"修改ip\"><a href=\"#修改ip\" class=\"headerlink\" title=\"修改ip\"></a>修改ip</h2><p>修改<code>/etc/sysconfig/network-scripts/ifcfg-eth0</code>的内容(如果该文件不存在，先新建)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">DEVICE=eth0 #网卡对应的设备别名</span><br><span class=\"line\">BOOTPROTO=static #设置为静态IP，static</span><br><span class=\"line\">ONBOOT=yes</span><br><span class=\"line\">DNS1=114.114.114.114</span><br><span class=\"line\">HWADDR=00:07:E9:05:E8:B4 #对应的网卡物理地址，可以不用配置</span><br><span class=\"line\">IPADDR=192.168.17.133 #ip地址静态指定</span><br><span class=\"line\">NETMASK=255.255.255.0 </span><br><span class=\"line\">GATEWAY=192.168.17.2</span><br></pre></td></tr></table></figure>\n<p>然后在虚拟机-&gt;设置-&gt;网络适配器中选择自定义VMnet8</p>\n<blockquote>\n<p>可以将原有的<code>ifcfg-enoxxxxxxx</code>文件删除，然后修改<code>grub</code>文件<br>vim /etc/default/grub<br>然后在<code>GRUB_CMDLINE_LINUX</code>原有的参数后面加上<code>&quot;net.ifnames=0 biosdevname=0&quot;</code>，保存退出后，执行<br><code>grub2-mkconfig -o /boot/grub2/grub.cfg</code><br>然后重启计算机</p>\n</blockquote>\n<h2 id=\"添加用户和权限\"><a href=\"#添加用户和权限\" class=\"headerlink\" title=\"添加用户和权限\"></a>添加用户和权限</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ useradd apache</span><br><span class=\"line\"></span><br><span class=\"line\">$ passwd apache</span><br><span class=\"line\"></span><br><span class=\"line\">$ visudo </span><br><span class=\"line\"></span><br><span class=\"line\">$ /root</span><br><span class=\"line\"></span><br><span class=\"line\">$ yyp</span><br></pre></td></tr></table></figure>\n<h2 id=\"安装apache\"><a href=\"#安装apache\" class=\"headerlink\" title=\"安装apache\"></a>安装apache</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install httpd httpd-devel</span><br><span class=\"line\"></span><br><span class=\"line\">#开启apache服务</span><br><span class=\"line\">systemctl start httpd.service</span><br><span class=\"line\"></span><br><span class=\"line\">#关闭apache服务</span><br><span class=\"line\">systemctl stop httpd.service</span><br><span class=\"line\"></span><br><span class=\"line\">#设置为开机启动</span><br><span class=\"line\">systemctl enable httpd.service</span><br><span class=\"line\"></span><br><span class=\"line\">#关闭防火墙</span><br><span class=\"line\">systemctl stop firewalld.service</span><br><span class=\"line\"></span><br><span class=\"line\">#开机不启动防火墙</span><br><span class=\"line\">systemctl disable firewalld.service</span><br><span class=\"line\"></span><br><span class=\"line\">#apache默认使用/var/www/html文件夹里的资源，故可以创建一个index.html文件</span><br><span class=\"line\">echo apache133 &gt; index.html</span><br></pre></td></tr></table></figure>\n<h2 id=\"安装Nginx\"><a href=\"#安装Nginx\" class=\"headerlink\" title=\"安装Nginx\"></a>安装Nginx</h2><h3 id=\"使用压缩包安装nginx\"><a href=\"#使用压缩包安装nginx\" class=\"headerlink\" title=\"使用压缩包安装nginx\"></a>使用压缩包安装nginx</h3><ol>\n<li><p>切换为root用户</p>\n</li>\n<li><p>进入/usr/local/src目录下</p>\n</li>\n<li><p>下载Nginx、openssl、pcre以及zlib</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget http://nginx.org/download/nginx-1.12.2.tar.gz</span><br><span class=\"line\">wget https://www.openssl.org/source/openssl-fips-2.0.16.tar.gz</span><br><span class=\"line\">wget ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/pcre-8.40.tar.gz</span><br><span class=\"line\">wget http://www.zlib.net/zlib-1.2.11.tar.gz</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>可能需要先安装c++编译环境</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install gcc-c++</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>安装openssl</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar zxvf openssl-fips-2.0.16.tar.gz </span><br><span class=\"line\">cd openssl-fips-2.0.16/</span><br><span class=\"line\">./config</span><br><span class=\"line\">make &amp;&amp; make install</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>安装pcre</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar zxvf pcre-8.40.tar.gz </span><br><span class=\"line\">cd pcre-8.40/</span><br><span class=\"line\">./configure</span><br><span class=\"line\">make &amp;&amp; make install</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>安装zlib</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar zxvf zlib-1.2.11.tar.gz </span><br><span class=\"line\">cd zlib-1.2.11/</span><br><span class=\"line\">./configure</span><br><span class=\"line\">make &amp;&amp; make install</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>安装Nginx</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar zxvf nginx-1.12.2.tar.gz </span><br><span class=\"line\">cd nginx-1.12.2/</span><br><span class=\"line\">./configure</span><br><span class=\"line\">make &amp;&amp; make install</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>启动Nginx</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/usr/local/nginx/sbin/nginx</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Nginx基本操作</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#启动</span><br><span class=\"line\">[root@localhost ~]# /usr/local/nginx/sbin/nginx</span><br><span class=\"line\">#停止/重启</span><br><span class=\"line\">[root@localhost ~]# /usr/local/nginx/sbin/nginx -s stop(quit、reload)</span><br><span class=\"line\">#命令帮助</span><br><span class=\"line\">[root@localhost ~]# /usr/local/nginx/sbin/nginx -h</span><br><span class=\"line\">#验证配置文件</span><br><span class=\"line\">[root@localhost ~]# /usr/local/nginx/sbin/nginx -t</span><br><span class=\"line\">#配置文件</span><br><span class=\"line\">[root@localhost ~]# vim /usr/local/nginx/conf/nginx.conf</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>获取Nginx的安装位置</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">whereis nginx</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>修改Nginx的配置文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost conf]# cd /usr/local/nginx/conf/</span><br><span class=\"line\">[root@localhost conf]# vim nginx.conf</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在http内添加</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">upstream test.com&#123;</span><br><span class=\"line\">  server 192.168.17.133:80 weight=5;</span><br><span class=\"line\">  server 192.168.17.134:80 weight=1;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在http-&gt;server中的location中添加</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">location / &#123;</span><br><span class=\"line\">  proxy_pass  http://test.com;</span><br><span class=\"line\">  proxy_set_header Host       $host;</span><br><span class=\"line\">  proxy_set_header X-Real-IP  $remote_addr;</span><br><span class=\"line\">  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class=\"line\">  root   html;</span><br><span class=\"line\">  index  index.html index.htm;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>安装rz和sz</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install lrzsz</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h3 id=\"使用yum安装nginx-推荐\"><a href=\"#使用yum安装nginx-推荐\" class=\"headerlink\" title=\"使用yum安装nginx(推荐)\"></a>使用yum安装nginx(推荐)</h3><blockquote>\n<p>本地yum源中没有我们想要的nginx，那么就需要创建一个<code>/etc/yum.repos.d/nginx.repo</code>的文件，新增一个yum源。</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim /etc/yum.repos.d/nginx.repo</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>然后加入如下内容</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[nginx]</span><br><span class=\"line\">name=nginx repo</span><br><span class=\"line\">baseurl=http://nginx.org/packages/centos/$releasever/$basearch/</span><br><span class=\"line\">gpgcheck=0</span><br><span class=\"line\">enabled=1</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>查询nginx的相关信息并安装</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum list | grep nginx</span><br><span class=\"line\">yum install -y nginx</span><br></pre></td></tr></table></figure>\n<h2 id=\"安装Keepalived\"><a href=\"#安装Keepalived\" class=\"headerlink\" title=\"安装Keepalived\"></a>安装Keepalived</h2><h3 id=\"安装Keepalived-1\"><a href=\"#安装Keepalived-1\" class=\"headerlink\" title=\"安装Keepalived\"></a>安装Keepalived</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget http://www.keepalived.org/software/keepalived-1.2.24.tar.gz</span><br><span class=\"line\">tar -zxvf keepalived-1.2.24.tar.gz</span><br><span class=\"line\">cd keepalived-1.2.24</span><br><span class=\"line\">./configure --prefix=/usr/local/keepalived</span><br><span class=\"line\">make &amp;&amp; make install</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>在安装时可能会出现如下错误\\<br>!!! OpenSSL is not properly installed on your system. !!!\\<br>!!! Can not include OpenSSL headers files.\\<br>解决办法：yum -y install openssl-devel</p>\n<p>也可以直接使用yum安装</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install keepalived</span><br></pre></td></tr></table></figure>\n<h3 id=\"配置Keepalived\"><a href=\"#配置Keepalived\" class=\"headerlink\" title=\"配置Keepalived\"></a>配置Keepalived</h3><p>keepalived启动时会从/etc/keepalived目录下查找keepalived.conf配置文件，如果没有找到则使用默认的配置。/etc/keepalived目录安装时默认是没有安装的，需要手动创建。</p>\n<blockquote>\n<p>先备份配置文件</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cp keepalived.conf keepalived.conf.bak</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p><code>在启动keepalived前先关闭防火墙和selinux</code></p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl stop firewalld.service</span><br><span class=\"line\">systemctl disable firewalld.service</span><br><span class=\"line\"></span><br><span class=\"line\">getenforce</span><br><span class=\"line\">/usr/sbin/sestatus -v</span><br><span class=\"line\">#临时关闭</span><br><span class=\"line\">setenforce 0</span><br><span class=\"line\">#永久关闭</span><br><span class=\"line\">vim /etc/selinux/config</span><br><span class=\"line\">#将SELINUX=enforcing改为SELINUX=disabled，必须重启才能生效</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"vim安装\"><a href=\"#vim安装\" class=\"headerlink\" title=\"vim安装\"></a>vim安装</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install vim -y</span><br></pre></td></tr></table></figure>\n<h2 id=\"修改ip\"><a href=\"#修改ip\" class=\"headerlink\" title=\"修改ip\"></a>修改ip</h2><p>修改<code>/etc/sysconfig/network-scripts/ifcfg-eth0</code>的内容(如果该文件不存在，先新建)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">DEVICE=eth0 #网卡对应的设备别名</span><br><span class=\"line\">BOOTPROTO=static #设置为静态IP，static</span><br><span class=\"line\">ONBOOT=yes</span><br><span class=\"line\">DNS1=114.114.114.114</span><br><span class=\"line\">HWADDR=00:07:E9:05:E8:B4 #对应的网卡物理地址，可以不用配置</span><br><span class=\"line\">IPADDR=192.168.17.133 #ip地址静态指定</span><br><span class=\"line\">NETMASK=255.255.255.0 </span><br><span class=\"line\">GATEWAY=192.168.17.2</span><br></pre></td></tr></table></figure>\n<p>然后在虚拟机-&gt;设置-&gt;网络适配器中选择自定义VMnet8</p>\n<blockquote>\n<p>可以将原有的<code>ifcfg-enoxxxxxxx</code>文件删除，然后修改<code>grub</code>文件<br>vim /etc/default/grub<br>然后在<code>GRUB_CMDLINE_LINUX</code>原有的参数后面加上<code>&quot;net.ifnames=0 biosdevname=0&quot;</code>，保存退出后，执行<br><code>grub2-mkconfig -o /boot/grub2/grub.cfg</code><br>然后重启计算机</p>\n</blockquote>\n<h2 id=\"添加用户和权限\"><a href=\"#添加用户和权限\" class=\"headerlink\" title=\"添加用户和权限\"></a>添加用户和权限</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ useradd apache</span><br><span class=\"line\"></span><br><span class=\"line\">$ passwd apache</span><br><span class=\"line\"></span><br><span class=\"line\">$ visudo </span><br><span class=\"line\"></span><br><span class=\"line\">$ /root</span><br><span class=\"line\"></span><br><span class=\"line\">$ yyp</span><br></pre></td></tr></table></figure>\n<h2 id=\"安装apache\"><a href=\"#安装apache\" class=\"headerlink\" title=\"安装apache\"></a>安装apache</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install httpd httpd-devel</span><br><span class=\"line\"></span><br><span class=\"line\">#开启apache服务</span><br><span class=\"line\">systemctl start httpd.service</span><br><span class=\"line\"></span><br><span class=\"line\">#关闭apache服务</span><br><span class=\"line\">systemctl stop httpd.service</span><br><span class=\"line\"></span><br><span class=\"line\">#设置为开机启动</span><br><span class=\"line\">systemctl enable httpd.service</span><br><span class=\"line\"></span><br><span class=\"line\">#关闭防火墙</span><br><span class=\"line\">systemctl stop firewalld.service</span><br><span class=\"line\"></span><br><span class=\"line\">#开机不启动防火墙</span><br><span class=\"line\">systemctl disable firewalld.service</span><br><span class=\"line\"></span><br><span class=\"line\">#apache默认使用/var/www/html文件夹里的资源，故可以创建一个index.html文件</span><br><span class=\"line\">echo apache133 &gt; index.html</span><br></pre></td></tr></table></figure>\n<h2 id=\"安装Nginx\"><a href=\"#安装Nginx\" class=\"headerlink\" title=\"安装Nginx\"></a>安装Nginx</h2><h3 id=\"使用压缩包安装nginx\"><a href=\"#使用压缩包安装nginx\" class=\"headerlink\" title=\"使用压缩包安装nginx\"></a>使用压缩包安装nginx</h3><ol>\n<li><p>切换为root用户</p>\n</li>\n<li><p>进入/usr/local/src目录下</p>\n</li>\n<li><p>下载Nginx、openssl、pcre以及zlib</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget http://nginx.org/download/nginx-1.12.2.tar.gz</span><br><span class=\"line\">wget https://www.openssl.org/source/openssl-fips-2.0.16.tar.gz</span><br><span class=\"line\">wget ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/pcre-8.40.tar.gz</span><br><span class=\"line\">wget http://www.zlib.net/zlib-1.2.11.tar.gz</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>可能需要先安装c++编译环境</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install gcc-c++</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>安装openssl</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar zxvf openssl-fips-2.0.16.tar.gz </span><br><span class=\"line\">cd openssl-fips-2.0.16/</span><br><span class=\"line\">./config</span><br><span class=\"line\">make &amp;&amp; make install</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>安装pcre</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar zxvf pcre-8.40.tar.gz </span><br><span class=\"line\">cd pcre-8.40/</span><br><span class=\"line\">./configure</span><br><span class=\"line\">make &amp;&amp; make install</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>安装zlib</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar zxvf zlib-1.2.11.tar.gz </span><br><span class=\"line\">cd zlib-1.2.11/</span><br><span class=\"line\">./configure</span><br><span class=\"line\">make &amp;&amp; make install</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>安装Nginx</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar zxvf nginx-1.12.2.tar.gz </span><br><span class=\"line\">cd nginx-1.12.2/</span><br><span class=\"line\">./configure</span><br><span class=\"line\">make &amp;&amp; make install</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>启动Nginx</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/usr/local/nginx/sbin/nginx</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Nginx基本操作</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#启动</span><br><span class=\"line\">[root@localhost ~]# /usr/local/nginx/sbin/nginx</span><br><span class=\"line\">#停止/重启</span><br><span class=\"line\">[root@localhost ~]# /usr/local/nginx/sbin/nginx -s stop(quit、reload)</span><br><span class=\"line\">#命令帮助</span><br><span class=\"line\">[root@localhost ~]# /usr/local/nginx/sbin/nginx -h</span><br><span class=\"line\">#验证配置文件</span><br><span class=\"line\">[root@localhost ~]# /usr/local/nginx/sbin/nginx -t</span><br><span class=\"line\">#配置文件</span><br><span class=\"line\">[root@localhost ~]# vim /usr/local/nginx/conf/nginx.conf</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>获取Nginx的安装位置</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">whereis nginx</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>修改Nginx的配置文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost conf]# cd /usr/local/nginx/conf/</span><br><span class=\"line\">[root@localhost conf]# vim nginx.conf</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在http内添加</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">upstream test.com&#123;</span><br><span class=\"line\">  server 192.168.17.133:80 weight=5;</span><br><span class=\"line\">  server 192.168.17.134:80 weight=1;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在http-&gt;server中的location中添加</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">location / &#123;</span><br><span class=\"line\">  proxy_pass  http://test.com;</span><br><span class=\"line\">  proxy_set_header Host       $host;</span><br><span class=\"line\">  proxy_set_header X-Real-IP  $remote_addr;</span><br><span class=\"line\">  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class=\"line\">  root   html;</span><br><span class=\"line\">  index  index.html index.htm;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>安装rz和sz</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install lrzsz</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h3 id=\"使用yum安装nginx-推荐\"><a href=\"#使用yum安装nginx-推荐\" class=\"headerlink\" title=\"使用yum安装nginx(推荐)\"></a>使用yum安装nginx(推荐)</h3><blockquote>\n<p>本地yum源中没有我们想要的nginx，那么就需要创建一个<code>/etc/yum.repos.d/nginx.repo</code>的文件，新增一个yum源。</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim /etc/yum.repos.d/nginx.repo</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>然后加入如下内容</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[nginx]</span><br><span class=\"line\">name=nginx repo</span><br><span class=\"line\">baseurl=http://nginx.org/packages/centos/$releasever/$basearch/</span><br><span class=\"line\">gpgcheck=0</span><br><span class=\"line\">enabled=1</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>查询nginx的相关信息并安装</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum list | grep nginx</span><br><span class=\"line\">yum install -y nginx</span><br></pre></td></tr></table></figure>\n<h2 id=\"安装Keepalived\"><a href=\"#安装Keepalived\" class=\"headerlink\" title=\"安装Keepalived\"></a>安装Keepalived</h2><h3 id=\"安装Keepalived-1\"><a href=\"#安装Keepalived-1\" class=\"headerlink\" title=\"安装Keepalived\"></a>安装Keepalived</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget http://www.keepalived.org/software/keepalived-1.2.24.tar.gz</span><br><span class=\"line\">tar -zxvf keepalived-1.2.24.tar.gz</span><br><span class=\"line\">cd keepalived-1.2.24</span><br><span class=\"line\">./configure --prefix=/usr/local/keepalived</span><br><span class=\"line\">make &amp;&amp; make install</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>在安装时可能会出现如下错误\\<br>!!! OpenSSL is not properly installed on your system. !!!\\<br>!!! Can not include OpenSSL headers files.\\<br>解决办法：yum -y install openssl-devel</p>\n<p>也可以直接使用yum安装</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install keepalived</span><br></pre></td></tr></table></figure>\n<h3 id=\"配置Keepalived\"><a href=\"#配置Keepalived\" class=\"headerlink\" title=\"配置Keepalived\"></a>配置Keepalived</h3><p>keepalived启动时会从/etc/keepalived目录下查找keepalived.conf配置文件，如果没有找到则使用默认的配置。/etc/keepalived目录安装时默认是没有安装的，需要手动创建。</p>\n<blockquote>\n<p>先备份配置文件</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cp keepalived.conf keepalived.conf.bak</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p><code>在启动keepalived前先关闭防火墙和selinux</code></p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl stop firewalld.service</span><br><span class=\"line\">systemctl disable firewalld.service</span><br><span class=\"line\"></span><br><span class=\"line\">getenforce</span><br><span class=\"line\">/usr/sbin/sestatus -v</span><br><span class=\"line\">#临时关闭</span><br><span class=\"line\">setenforce 0</span><br><span class=\"line\">#永久关闭</span><br><span class=\"line\">vim /etc/selinux/config</span><br><span class=\"line\">#将SELINUX=enforcing改为SELINUX=disabled，必须重启才能生效</span><br></pre></td></tr></table></figure>\n"},{"title":"Nginx中proxy_pass和rewrite详解","date":"2018-02-03T16:00:00.000Z","modified":null,"_content":"\n## proxy_pass和rewrite\n\n### proxy_pass\n\n```\nSyntax:     proxy_pass URL;\nDefault:    —\nContext:    location, if in location, limit_except\n```\n\n1. 不影响浏览器地址栏的url\n\n2. 设置被代理server的协议和地址，URI可选(可以有，也可以没有)\n\n3. 协议可以为http或https\n\n4. 地址可以为域名或者IP，端口可选；eg：\n  \n  ```\n  proxy_pass http://localhost:8000/uri/;\n  ```\n\n5. 如果一个域名可以解析到多个地址，那么这些地址会被轮流使用，此外，还可以把一个地址指定为 server group（如：nginx的upstream）, eg:\n  \n  ```\n  upstream backend {\n    server backend1.example.com       weight=5;\n    server backend2.example.com:8080;\n    server unix:/tmp/backend3;\n \n    server backup1.example.com:8080   backup;\n    server backup2.example.com:8080   backup;\n  }\n \n  server {\n    location / {\n        proxy_pass http://backend;\n    }\n  }\n  ```\n\n6. server name，port，  URI支持变量的形式，eg：\n\n  ```\n  proxy_pass http://$host$uri;\n  ```\n\n  这种情况下，nginx会在server groups（upstream后端server）里搜索server name，如果没有找到，会用dns解析请求的URI按照下面的规则传给后端server\n    \n  6.1. 如果proxy_pass的URL定向里包括URI，那么请求中匹配到location中URI的部分会被proxy_pass后面URL中的URI替换，eg：\n\n    ```\n    location /name/ {\n        proxy_pass http://127.0.0.1/remote/;\n    }\n    # 请求http://127.0.0.1/name/test.html 会被代理到http://127.0.0.1/remote/test.html\n    ```\n\n  6.2. 如果proxy_pass的URL定向里不包括URI，那么请求中的URI会保持原样传送给后端server，eg：\n\n    ```\n    location /name/ {\n        proxy_pass http://127.0.0.1;\n    }\n    #请求http://127.0.0.1/name/test.html 会被代理到http://127.0.0.1/name/test.html\n    ```\n\n  6.3. 一些情况下，不能确定替换的URI：\n    1. location里是正则表达式，这种情况下，proxy_pass里最好不要有URI；\n    2. 在proxy_pass前面用了rewrite，如下，这种情况下，proxy_pass是无效的，eg:\n      ```\n      location /name/ {\n        rewrite    /name/([^/]+) /users?name=$1 break;\n        proxy_pass http://127.0.0.1;\n      }\n      ```\n    \n### rewrite\n\n```\nsyntax:     rewrite regex replacement [flag]\nDefault:    —\nContext:    server, location, if\n```\n\n- 如果正则表达式（regex）匹配到了请求的URI（request URI），这个URI会被后面的replacement替换\n- rewrite的定向会根据他们在配置文件中出现的顺序依次执行\n- 通过使用flag可以终止定向后进一步的处理\n- 如果replacement以“http://”, “https://”, or “$scheme”开头，处理将会终止，请求结果会以重定向的形式返回给客户端（client）\n- 如果replacement字符串里有新的request参数，那么之前的参数会附加到其后面，如果要避免这种情况，那就在replacement字符串后面加上“？”，eg：\n\n  ```\n  rewrite ^/users/(.*)$ /show?user=$1? last;=\n  ```\n\n- 如果正则表达式（regex）里包含“}” or “;”字符，需要用单引号或者双引号把正则表达式引起来\n\n可选的flag参数如下：\n- last\n    1. 结束当前的请求处理，用替换后的URI重新匹配location；\n    2. 可理解为重写（rewrite）后，发起了一个新请求，进入server模块，匹配location；\n    3. 如果重新匹配循环的次数超过10次，nginx会返回500错误；\n    4. 返回302 http状态码 ；\n    5. 浏览器地址栏显示重地向后的url\n- break\n    1. 结束当前的请求处理，使用当前资源，不在执行location里余下的语句；\n    2. 返回302 http状态码 ；\n    3. 浏览器地址栏显示重定向后的url\n- redirect\n    1. 临时跳转，返回302 http状态码；\n    2. 浏览器地址栏显示重定向后的url\n- permanent\n    1. 永久跳转，返回301 http状态码；\n    2. 浏览器地址栏显示重定向后的url\n","source":"_posts/nginx-proxypass-rewrite.md","raw":"---\ntitle: Nginx中proxy_pass和rewrite详解\ndate: 2018-02-04\nmodified:\ncategories:\n- Linux\ntags:\n- Nginx\n- Linux\n---\n\n## proxy_pass和rewrite\n\n### proxy_pass\n\n```\nSyntax:     proxy_pass URL;\nDefault:    —\nContext:    location, if in location, limit_except\n```\n\n1. 不影响浏览器地址栏的url\n\n2. 设置被代理server的协议和地址，URI可选(可以有，也可以没有)\n\n3. 协议可以为http或https\n\n4. 地址可以为域名或者IP，端口可选；eg：\n  \n  ```\n  proxy_pass http://localhost:8000/uri/;\n  ```\n\n5. 如果一个域名可以解析到多个地址，那么这些地址会被轮流使用，此外，还可以把一个地址指定为 server group（如：nginx的upstream）, eg:\n  \n  ```\n  upstream backend {\n    server backend1.example.com       weight=5;\n    server backend2.example.com:8080;\n    server unix:/tmp/backend3;\n \n    server backup1.example.com:8080   backup;\n    server backup2.example.com:8080   backup;\n  }\n \n  server {\n    location / {\n        proxy_pass http://backend;\n    }\n  }\n  ```\n\n6. server name，port，  URI支持变量的形式，eg：\n\n  ```\n  proxy_pass http://$host$uri;\n  ```\n\n  这种情况下，nginx会在server groups（upstream后端server）里搜索server name，如果没有找到，会用dns解析请求的URI按照下面的规则传给后端server\n    \n  6.1. 如果proxy_pass的URL定向里包括URI，那么请求中匹配到location中URI的部分会被proxy_pass后面URL中的URI替换，eg：\n\n    ```\n    location /name/ {\n        proxy_pass http://127.0.0.1/remote/;\n    }\n    # 请求http://127.0.0.1/name/test.html 会被代理到http://127.0.0.1/remote/test.html\n    ```\n\n  6.2. 如果proxy_pass的URL定向里不包括URI，那么请求中的URI会保持原样传送给后端server，eg：\n\n    ```\n    location /name/ {\n        proxy_pass http://127.0.0.1;\n    }\n    #请求http://127.0.0.1/name/test.html 会被代理到http://127.0.0.1/name/test.html\n    ```\n\n  6.3. 一些情况下，不能确定替换的URI：\n    1. location里是正则表达式，这种情况下，proxy_pass里最好不要有URI；\n    2. 在proxy_pass前面用了rewrite，如下，这种情况下，proxy_pass是无效的，eg:\n      ```\n      location /name/ {\n        rewrite    /name/([^/]+) /users?name=$1 break;\n        proxy_pass http://127.0.0.1;\n      }\n      ```\n    \n### rewrite\n\n```\nsyntax:     rewrite regex replacement [flag]\nDefault:    —\nContext:    server, location, if\n```\n\n- 如果正则表达式（regex）匹配到了请求的URI（request URI），这个URI会被后面的replacement替换\n- rewrite的定向会根据他们在配置文件中出现的顺序依次执行\n- 通过使用flag可以终止定向后进一步的处理\n- 如果replacement以“http://”, “https://”, or “$scheme”开头，处理将会终止，请求结果会以重定向的形式返回给客户端（client）\n- 如果replacement字符串里有新的request参数，那么之前的参数会附加到其后面，如果要避免这种情况，那就在replacement字符串后面加上“？”，eg：\n\n  ```\n  rewrite ^/users/(.*)$ /show?user=$1? last;=\n  ```\n\n- 如果正则表达式（regex）里包含“}” or “;”字符，需要用单引号或者双引号把正则表达式引起来\n\n可选的flag参数如下：\n- last\n    1. 结束当前的请求处理，用替换后的URI重新匹配location；\n    2. 可理解为重写（rewrite）后，发起了一个新请求，进入server模块，匹配location；\n    3. 如果重新匹配循环的次数超过10次，nginx会返回500错误；\n    4. 返回302 http状态码 ；\n    5. 浏览器地址栏显示重地向后的url\n- break\n    1. 结束当前的请求处理，使用当前资源，不在执行location里余下的语句；\n    2. 返回302 http状态码 ；\n    3. 浏览器地址栏显示重定向后的url\n- redirect\n    1. 临时跳转，返回302 http状态码；\n    2. 浏览器地址栏显示重定向后的url\n- permanent\n    1. 永久跳转，返回301 http状态码；\n    2. 浏览器地址栏显示重定向后的url\n","slug":"nginx-proxypass-rewrite","published":1,"updated":"2018-02-12T06:11:49.654Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjir2nrnm000x9xasplvzm092","content":"<h2 id=\"proxy-pass和rewrite\"><a href=\"#proxy-pass和rewrite\" class=\"headerlink\" title=\"proxy_pass和rewrite\"></a>proxy_pass和rewrite</h2><h3 id=\"proxy-pass\"><a href=\"#proxy-pass\" class=\"headerlink\" title=\"proxy_pass\"></a>proxy_pass</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Syntax:     proxy_pass URL;</span><br><span class=\"line\">Default:    —</span><br><span class=\"line\">Context:    location, if in location, limit_except</span><br></pre></td></tr></table></figure>\n<ol>\n<li><p>不影响浏览器地址栏的url</p>\n</li>\n<li><p>设置被代理server的协议和地址，URI可选(可以有，也可以没有)</p>\n</li>\n<li><p>协议可以为http或https</p>\n</li>\n<li><p>地址可以为域名或者IP，端口可选；eg：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">proxy_pass http://localhost:8000/uri/;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>如果一个域名可以解析到多个地址，那么这些地址会被轮流使用，此外，还可以把一个地址指定为 server group（如：nginx的upstream）, eg:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">upstream backend &#123;</span><br><span class=\"line\">  server backend1.example.com       weight=5;</span><br><span class=\"line\">  server backend2.example.com:8080;</span><br><span class=\"line\">  server unix:/tmp/backend3;</span><br><span class=\"line\"> </span><br><span class=\"line\">  server backup1.example.com:8080   backup;</span><br><span class=\"line\">  server backup2.example.com:8080   backup;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">server &#123;</span><br><span class=\"line\">  location / &#123;</span><br><span class=\"line\">      proxy_pass http://backend;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>server name，port，  URI支持变量的形式，eg：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">proxy_pass http://$host$uri;</span><br></pre></td></tr></table></figure>\n<p>这种情况下，nginx会在server groups（upstream后端server）里搜索server name，如果没有找到，会用dns解析请求的URI按照下面的规则传给后端server</p>\n<p>6.1. 如果proxy_pass的URL定向里包括URI，那么请求中匹配到location中URI的部分会被proxy_pass后面URL中的URI替换，eg：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">location /name/ &#123;</span><br><span class=\"line\">    proxy_pass http://127.0.0.1/remote/;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"># 请求http://127.0.0.1/name/test.html 会被代理到http://127.0.0.1/remote/test.html</span><br></pre></td></tr></table></figure>\n<p>6.2. 如果proxy_pass的URL定向里不包括URI，那么请求中的URI会保持原样传送给后端server，eg：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">location /name/ &#123;</span><br><span class=\"line\">    proxy_pass http://127.0.0.1;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#请求http://127.0.0.1/name/test.html 会被代理到http://127.0.0.1/name/test.html</span><br></pre></td></tr></table></figure>\n<p>6.3. 一些情况下，不能确定替换的URI：</p>\n<ol>\n<li>location里是正则表达式，这种情况下，proxy_pass里最好不要有URI；</li>\n<li>在proxy_pass前面用了rewrite，如下，这种情况下，proxy_pass是无效的，eg:<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">location /name/ &#123;</span><br><span class=\"line\">  rewrite    /name/([^/]+) /users?name=$1 break;</span><br><span class=\"line\">  proxy_pass http://127.0.0.1;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"rewrite\"><a href=\"#rewrite\" class=\"headerlink\" title=\"rewrite\"></a>rewrite</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">syntax:     rewrite regex replacement [flag]</span><br><span class=\"line\">Default:    —</span><br><span class=\"line\">Context:    server, location, if</span><br></pre></td></tr></table></figure>\n<ul>\n<li>如果正则表达式（regex）匹配到了请求的URI（request URI），这个URI会被后面的replacement替换</li>\n<li>rewrite的定向会根据他们在配置文件中出现的顺序依次执行</li>\n<li>通过使用flag可以终止定向后进一步的处理</li>\n<li>如果replacement以“http://”, “https://”, or “$scheme”开头，处理将会终止，请求结果会以重定向的形式返回给客户端（client）</li>\n<li><p>如果replacement字符串里有新的request参数，那么之前的参数会附加到其后面，如果要避免这种情况，那就在replacement字符串后面加上“？”，eg：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rewrite ^/users/(.*)$ /show?user=$1? last;=</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>如果正则表达式（regex）里包含“}” or “;”字符，需要用单引号或者双引号把正则表达式引起来</p>\n</li>\n</ul>\n<p>可选的flag参数如下：</p>\n<ul>\n<li>last<ol>\n<li>结束当前的请求处理，用替换后的URI重新匹配location；</li>\n<li>可理解为重写（rewrite）后，发起了一个新请求，进入server模块，匹配location；</li>\n<li>如果重新匹配循环的次数超过10次，nginx会返回500错误；</li>\n<li>返回302 http状态码 ；</li>\n<li>浏览器地址栏显示重地向后的url</li>\n</ol>\n</li>\n<li>break<ol>\n<li>结束当前的请求处理，使用当前资源，不在执行location里余下的语句；</li>\n<li>返回302 http状态码 ；</li>\n<li>浏览器地址栏显示重定向后的url</li>\n</ol>\n</li>\n<li>redirect<ol>\n<li>临时跳转，返回302 http状态码；</li>\n<li>浏览器地址栏显示重定向后的url</li>\n</ol>\n</li>\n<li>permanent<ol>\n<li>永久跳转，返回301 http状态码；</li>\n<li>浏览器地址栏显示重定向后的url</li>\n</ol>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"proxy-pass和rewrite\"><a href=\"#proxy-pass和rewrite\" class=\"headerlink\" title=\"proxy_pass和rewrite\"></a>proxy_pass和rewrite</h2><h3 id=\"proxy-pass\"><a href=\"#proxy-pass\" class=\"headerlink\" title=\"proxy_pass\"></a>proxy_pass</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Syntax:     proxy_pass URL;</span><br><span class=\"line\">Default:    —</span><br><span class=\"line\">Context:    location, if in location, limit_except</span><br></pre></td></tr></table></figure>\n<ol>\n<li><p>不影响浏览器地址栏的url</p>\n</li>\n<li><p>设置被代理server的协议和地址，URI可选(可以有，也可以没有)</p>\n</li>\n<li><p>协议可以为http或https</p>\n</li>\n<li><p>地址可以为域名或者IP，端口可选；eg：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">proxy_pass http://localhost:8000/uri/;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>如果一个域名可以解析到多个地址，那么这些地址会被轮流使用，此外，还可以把一个地址指定为 server group（如：nginx的upstream）, eg:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">upstream backend &#123;</span><br><span class=\"line\">  server backend1.example.com       weight=5;</span><br><span class=\"line\">  server backend2.example.com:8080;</span><br><span class=\"line\">  server unix:/tmp/backend3;</span><br><span class=\"line\"> </span><br><span class=\"line\">  server backup1.example.com:8080   backup;</span><br><span class=\"line\">  server backup2.example.com:8080   backup;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">server &#123;</span><br><span class=\"line\">  location / &#123;</span><br><span class=\"line\">      proxy_pass http://backend;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>server name，port，  URI支持变量的形式，eg：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">proxy_pass http://$host$uri;</span><br></pre></td></tr></table></figure>\n<p>这种情况下，nginx会在server groups（upstream后端server）里搜索server name，如果没有找到，会用dns解析请求的URI按照下面的规则传给后端server</p>\n<p>6.1. 如果proxy_pass的URL定向里包括URI，那么请求中匹配到location中URI的部分会被proxy_pass后面URL中的URI替换，eg：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">location /name/ &#123;</span><br><span class=\"line\">    proxy_pass http://127.0.0.1/remote/;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"># 请求http://127.0.0.1/name/test.html 会被代理到http://127.0.0.1/remote/test.html</span><br></pre></td></tr></table></figure>\n<p>6.2. 如果proxy_pass的URL定向里不包括URI，那么请求中的URI会保持原样传送给后端server，eg：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">location /name/ &#123;</span><br><span class=\"line\">    proxy_pass http://127.0.0.1;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#请求http://127.0.0.1/name/test.html 会被代理到http://127.0.0.1/name/test.html</span><br></pre></td></tr></table></figure>\n<p>6.3. 一些情况下，不能确定替换的URI：</p>\n<ol>\n<li>location里是正则表达式，这种情况下，proxy_pass里最好不要有URI；</li>\n<li>在proxy_pass前面用了rewrite，如下，这种情况下，proxy_pass是无效的，eg:<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">location /name/ &#123;</span><br><span class=\"line\">  rewrite    /name/([^/]+) /users?name=$1 break;</span><br><span class=\"line\">  proxy_pass http://127.0.0.1;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"rewrite\"><a href=\"#rewrite\" class=\"headerlink\" title=\"rewrite\"></a>rewrite</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">syntax:     rewrite regex replacement [flag]</span><br><span class=\"line\">Default:    —</span><br><span class=\"line\">Context:    server, location, if</span><br></pre></td></tr></table></figure>\n<ul>\n<li>如果正则表达式（regex）匹配到了请求的URI（request URI），这个URI会被后面的replacement替换</li>\n<li>rewrite的定向会根据他们在配置文件中出现的顺序依次执行</li>\n<li>通过使用flag可以终止定向后进一步的处理</li>\n<li>如果replacement以“http://”, “https://”, or “$scheme”开头，处理将会终止，请求结果会以重定向的形式返回给客户端（client）</li>\n<li><p>如果replacement字符串里有新的request参数，那么之前的参数会附加到其后面，如果要避免这种情况，那就在replacement字符串后面加上“？”，eg：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rewrite ^/users/(.*)$ /show?user=$1? last;=</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>如果正则表达式（regex）里包含“}” or “;”字符，需要用单引号或者双引号把正则表达式引起来</p>\n</li>\n</ul>\n<p>可选的flag参数如下：</p>\n<ul>\n<li>last<ol>\n<li>结束当前的请求处理，用替换后的URI重新匹配location；</li>\n<li>可理解为重写（rewrite）后，发起了一个新请求，进入server模块，匹配location；</li>\n<li>如果重新匹配循环的次数超过10次，nginx会返回500错误；</li>\n<li>返回302 http状态码 ；</li>\n<li>浏览器地址栏显示重地向后的url</li>\n</ol>\n</li>\n<li>break<ol>\n<li>结束当前的请求处理，使用当前资源，不在执行location里余下的语句；</li>\n<li>返回302 http状态码 ；</li>\n<li>浏览器地址栏显示重定向后的url</li>\n</ol>\n</li>\n<li>redirect<ol>\n<li>临时跳转，返回302 http状态码；</li>\n<li>浏览器地址栏显示重定向后的url</li>\n</ol>\n</li>\n<li>permanent<ol>\n<li>永久跳转，返回301 http状态码；</li>\n<li>浏览器地址栏显示重定向后的url</li>\n</ol>\n</li>\n</ul>\n"},{"title":"python3基础数据类型详解","date":"2018-02-12T06:49:50.000Z","modified":null,"_content":"\n### 数据类型\n\n#### Integral类型\n\nPython提供了两种内置的Integral类型，即int与bool。\n\n#### 浮点类型\n\nPython提供了3中浮点值：内置的float与complex类型，以及来自标准库的decimal.Decimal类型。\n\n#### 字符串\n\n字符串是使用固定不变的str数据类型表示的，其中存放Unicode字符序列。\n由于字符串是固定序列，所有可用于固定序列的功能都可用于字符串。\n\n### 组合数据类型\n\n#### 序列类型\n\n序列类型支持成员关系操作符(in)、大小计算函数(len())、分片([])，并且是可以迭代的。\nPython提供了5中内置的序列类型：bytearray、bytes、list、str与tuple，以及标准类库中提供的collections.namedtuple。\n\n##### 元组tuple\n\n元组是有序的序列，其中包含0个或多个对象引用。\n元组是固定的，不能替换或删除其中包含的任意数据项。\n元组使用小括号()表示，中间的元素用逗号分隔。\n元组是可以迭代的(iterable)。\n\n##### 列表list\n\n列表是包含0个或多个对象引用的有序序列，支持与字符串以及元组一样的分片与步距语法。\n列表是可变的，可以对列表中的项进行删除或替换。\n列表使用方括号[]表示，中间的元素用逗号分隔。\n列表是可以迭代的(iterable)。\n\n#### 集合类型set\n\nset是可以迭代的(iterable)。在进行迭代时，集合类型以任意顺序提供其数据项。\nPython提供了两种内置的集合类型：可变的set类型，固定的frozenset类型。\n只有可哈希运算的对象可以添加到集合中，可哈希运算的对象包含一个__hash__()特殊方法。\n所有内置的固定数据类型(例如float、frozenset、int、str、tuple)都是可以哈希运算的，都可以添加到集合中。内置的可变数据类型(例如dict、list、set)都不是可哈希运算的，因为其哈希值会随着包含项数的变化而变化，因此这些数据类型不能添加到集合中。\n\n集合是0个或多个对象引用的无序组合，这些对象引用所引用的对象都是可哈希运算的。集合是可变的，但其中的项是无序的，所以没有索引位置的概念。\n集合中包含的每个数据项都是独一无二的，不会出现重复的数据项。\n集合使用大括号&#123;&#125;表示，数据项用逗号分隔。\n\n固定集合是指那种一旦创建后就不能改变的集合，固定集合只能使用frozenset数据类型函数进行创建。\n集合与固定集合都可以包含固定集合。\n\n#### 映射类型\n\n映射类型是一种支持成员关系操作符(in)与尺寸函数(len())的数据类型，并且也是可以迭代的。\n映射是键-值数据项的组合，并提供了存取数据项及其键、值的方法。\n在进行迭代时，映射类型以任意顺序提供其数据项。\nPython3支持三种无序的映射类型-内置的dict类型，标准库中的collections.defaultdict和collections.OrderedDict。\n只有可哈希运算的对象可用作字典的键，因此固定数据类型都可以用作字典的值，可变的数据类型则不能。\n\n字典dict是一种无序的组合数据类型，其中包含0个或多个键-值对。\n字典是可变的，可以对其进行数据项的添加或移除操作。\n字典的键是独一无二的，所以不存在重复的键。\n\n默认字典也是一种字典，但是可以对遗失的键进行处理，其他与普通字典一样。\n\n有序字典可用作对无序字典dict的下降替代，有序字典以数据项插入的顺序进行存储。\n\n#### 组合数据类型的迭代与复制\n\niterable数据类型每次返回其中的一个数据项。任意包含__iter__()方法的对象或任意序列(即包含__getitem__()方法的对象)都是一个iterable，并可以提供一个迭代子。迭代子是一个对象，该对象可以提供__next__()方法。\n\n浅复制和深复制\n深复制需要调用copy模块中的deepcopy函数。\n","source":"_posts/python3-base-datatype.md","raw":"---\ntitle: python3基础数据类型详解\ndate: 2018-02-12 14:49:50\nmodified:\ncategories:\n- python\ntags:\n- python\n---\n\n### 数据类型\n\n#### Integral类型\n\nPython提供了两种内置的Integral类型，即int与bool。\n\n#### 浮点类型\n\nPython提供了3中浮点值：内置的float与complex类型，以及来自标准库的decimal.Decimal类型。\n\n#### 字符串\n\n字符串是使用固定不变的str数据类型表示的，其中存放Unicode字符序列。\n由于字符串是固定序列，所有可用于固定序列的功能都可用于字符串。\n\n### 组合数据类型\n\n#### 序列类型\n\n序列类型支持成员关系操作符(in)、大小计算函数(len())、分片([])，并且是可以迭代的。\nPython提供了5中内置的序列类型：bytearray、bytes、list、str与tuple，以及标准类库中提供的collections.namedtuple。\n\n##### 元组tuple\n\n元组是有序的序列，其中包含0个或多个对象引用。\n元组是固定的，不能替换或删除其中包含的任意数据项。\n元组使用小括号()表示，中间的元素用逗号分隔。\n元组是可以迭代的(iterable)。\n\n##### 列表list\n\n列表是包含0个或多个对象引用的有序序列，支持与字符串以及元组一样的分片与步距语法。\n列表是可变的，可以对列表中的项进行删除或替换。\n列表使用方括号[]表示，中间的元素用逗号分隔。\n列表是可以迭代的(iterable)。\n\n#### 集合类型set\n\nset是可以迭代的(iterable)。在进行迭代时，集合类型以任意顺序提供其数据项。\nPython提供了两种内置的集合类型：可变的set类型，固定的frozenset类型。\n只有可哈希运算的对象可以添加到集合中，可哈希运算的对象包含一个__hash__()特殊方法。\n所有内置的固定数据类型(例如float、frozenset、int、str、tuple)都是可以哈希运算的，都可以添加到集合中。内置的可变数据类型(例如dict、list、set)都不是可哈希运算的，因为其哈希值会随着包含项数的变化而变化，因此这些数据类型不能添加到集合中。\n\n集合是0个或多个对象引用的无序组合，这些对象引用所引用的对象都是可哈希运算的。集合是可变的，但其中的项是无序的，所以没有索引位置的概念。\n集合中包含的每个数据项都是独一无二的，不会出现重复的数据项。\n集合使用大括号&#123;&#125;表示，数据项用逗号分隔。\n\n固定集合是指那种一旦创建后就不能改变的集合，固定集合只能使用frozenset数据类型函数进行创建。\n集合与固定集合都可以包含固定集合。\n\n#### 映射类型\n\n映射类型是一种支持成员关系操作符(in)与尺寸函数(len())的数据类型，并且也是可以迭代的。\n映射是键-值数据项的组合，并提供了存取数据项及其键、值的方法。\n在进行迭代时，映射类型以任意顺序提供其数据项。\nPython3支持三种无序的映射类型-内置的dict类型，标准库中的collections.defaultdict和collections.OrderedDict。\n只有可哈希运算的对象可用作字典的键，因此固定数据类型都可以用作字典的值，可变的数据类型则不能。\n\n字典dict是一种无序的组合数据类型，其中包含0个或多个键-值对。\n字典是可变的，可以对其进行数据项的添加或移除操作。\n字典的键是独一无二的，所以不存在重复的键。\n\n默认字典也是一种字典，但是可以对遗失的键进行处理，其他与普通字典一样。\n\n有序字典可用作对无序字典dict的下降替代，有序字典以数据项插入的顺序进行存储。\n\n#### 组合数据类型的迭代与复制\n\niterable数据类型每次返回其中的一个数据项。任意包含__iter__()方法的对象或任意序列(即包含__getitem__()方法的对象)都是一个iterable，并可以提供一个迭代子。迭代子是一个对象，该对象可以提供__next__()方法。\n\n浅复制和深复制\n深复制需要调用copy模块中的deepcopy函数。\n","slug":"python3-base-datatype","published":1,"updated":"2018-02-12T08:04:53.910Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjir2nrnx00119xas423b3g9w","content":"<h3 id=\"数据类型\"><a href=\"#数据类型\" class=\"headerlink\" title=\"数据类型\"></a>数据类型</h3><h4 id=\"Integral类型\"><a href=\"#Integral类型\" class=\"headerlink\" title=\"Integral类型\"></a>Integral类型</h4><p>Python提供了两种内置的Integral类型，即int与bool。</p>\n<h4 id=\"浮点类型\"><a href=\"#浮点类型\" class=\"headerlink\" title=\"浮点类型\"></a>浮点类型</h4><p>Python提供了3中浮点值：内置的float与complex类型，以及来自标准库的decimal.Decimal类型。</p>\n<h4 id=\"字符串\"><a href=\"#字符串\" class=\"headerlink\" title=\"字符串\"></a>字符串</h4><p>字符串是使用固定不变的str数据类型表示的，其中存放Unicode字符序列。<br>由于字符串是固定序列，所有可用于固定序列的功能都可用于字符串。</p>\n<h3 id=\"组合数据类型\"><a href=\"#组合数据类型\" class=\"headerlink\" title=\"组合数据类型\"></a>组合数据类型</h3><h4 id=\"序列类型\"><a href=\"#序列类型\" class=\"headerlink\" title=\"序列类型\"></a>序列类型</h4><p>序列类型支持成员关系操作符(in)、大小计算函数(len())、分片([])，并且是可以迭代的。<br>Python提供了5中内置的序列类型：bytearray、bytes、list、str与tuple，以及标准类库中提供的collections.namedtuple。</p>\n<h5 id=\"元组tuple\"><a href=\"#元组tuple\" class=\"headerlink\" title=\"元组tuple\"></a>元组tuple</h5><p>元组是有序的序列，其中包含0个或多个对象引用。<br>元组是固定的，不能替换或删除其中包含的任意数据项。<br>元组使用小括号()表示，中间的元素用逗号分隔。<br>元组是可以迭代的(iterable)。</p>\n<h5 id=\"列表list\"><a href=\"#列表list\" class=\"headerlink\" title=\"列表list\"></a>列表list</h5><p>列表是包含0个或多个对象引用的有序序列，支持与字符串以及元组一样的分片与步距语法。<br>列表是可变的，可以对列表中的项进行删除或替换。<br>列表使用方括号[]表示，中间的元素用逗号分隔。<br>列表是可以迭代的(iterable)。</p>\n<h4 id=\"集合类型set\"><a href=\"#集合类型set\" class=\"headerlink\" title=\"集合类型set\"></a>集合类型set</h4><p>set是可以迭代的(iterable)。在进行迭代时，集合类型以任意顺序提供其数据项。<br>Python提供了两种内置的集合类型：可变的set类型，固定的frozenset类型。<br>只有可哈希运算的对象可以添加到集合中，可哈希运算的对象包含一个<strong>hash</strong>()特殊方法。<br>所有内置的固定数据类型(例如float、frozenset、int、str、tuple)都是可以哈希运算的，都可以添加到集合中。内置的可变数据类型(例如dict、list、set)都不是可哈希运算的，因为其哈希值会随着包含项数的变化而变化，因此这些数据类型不能添加到集合中。</p>\n<p>集合是0个或多个对象引用的无序组合，这些对象引用所引用的对象都是可哈希运算的。集合是可变的，但其中的项是无序的，所以没有索引位置的概念。<br>集合中包含的每个数据项都是独一无二的，不会出现重复的数据项。<br>集合使用大括号&#123;&#125;表示，数据项用逗号分隔。</p>\n<p>固定集合是指那种一旦创建后就不能改变的集合，固定集合只能使用frozenset数据类型函数进行创建。<br>集合与固定集合都可以包含固定集合。</p>\n<h4 id=\"映射类型\"><a href=\"#映射类型\" class=\"headerlink\" title=\"映射类型\"></a>映射类型</h4><p>映射类型是一种支持成员关系操作符(in)与尺寸函数(len())的数据类型，并且也是可以迭代的。<br>映射是键-值数据项的组合，并提供了存取数据项及其键、值的方法。<br>在进行迭代时，映射类型以任意顺序提供其数据项。<br>Python3支持三种无序的映射类型-内置的dict类型，标准库中的collections.defaultdict和collections.OrderedDict。<br>只有可哈希运算的对象可用作字典的键，因此固定数据类型都可以用作字典的值，可变的数据类型则不能。</p>\n<p>字典dict是一种无序的组合数据类型，其中包含0个或多个键-值对。<br>字典是可变的，可以对其进行数据项的添加或移除操作。<br>字典的键是独一无二的，所以不存在重复的键。</p>\n<p>默认字典也是一种字典，但是可以对遗失的键进行处理，其他与普通字典一样。</p>\n<p>有序字典可用作对无序字典dict的下降替代，有序字典以数据项插入的顺序进行存储。</p>\n<h4 id=\"组合数据类型的迭代与复制\"><a href=\"#组合数据类型的迭代与复制\" class=\"headerlink\" title=\"组合数据类型的迭代与复制\"></a>组合数据类型的迭代与复制</h4><p>iterable数据类型每次返回其中的一个数据项。任意包含<strong>iter</strong>()方法的对象或任意序列(即包含<strong>getitem</strong>()方法的对象)都是一个iterable，并可以提供一个迭代子。迭代子是一个对象，该对象可以提供<strong>next</strong>()方法。</p>\n<p>浅复制和深复制<br>深复制需要调用copy模块中的deepcopy函数。</p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"数据类型\"><a href=\"#数据类型\" class=\"headerlink\" title=\"数据类型\"></a>数据类型</h3><h4 id=\"Integral类型\"><a href=\"#Integral类型\" class=\"headerlink\" title=\"Integral类型\"></a>Integral类型</h4><p>Python提供了两种内置的Integral类型，即int与bool。</p>\n<h4 id=\"浮点类型\"><a href=\"#浮点类型\" class=\"headerlink\" title=\"浮点类型\"></a>浮点类型</h4><p>Python提供了3中浮点值：内置的float与complex类型，以及来自标准库的decimal.Decimal类型。</p>\n<h4 id=\"字符串\"><a href=\"#字符串\" class=\"headerlink\" title=\"字符串\"></a>字符串</h4><p>字符串是使用固定不变的str数据类型表示的，其中存放Unicode字符序列。<br>由于字符串是固定序列，所有可用于固定序列的功能都可用于字符串。</p>\n<h3 id=\"组合数据类型\"><a href=\"#组合数据类型\" class=\"headerlink\" title=\"组合数据类型\"></a>组合数据类型</h3><h4 id=\"序列类型\"><a href=\"#序列类型\" class=\"headerlink\" title=\"序列类型\"></a>序列类型</h4><p>序列类型支持成员关系操作符(in)、大小计算函数(len())、分片([])，并且是可以迭代的。<br>Python提供了5中内置的序列类型：bytearray、bytes、list、str与tuple，以及标准类库中提供的collections.namedtuple。</p>\n<h5 id=\"元组tuple\"><a href=\"#元组tuple\" class=\"headerlink\" title=\"元组tuple\"></a>元组tuple</h5><p>元组是有序的序列，其中包含0个或多个对象引用。<br>元组是固定的，不能替换或删除其中包含的任意数据项。<br>元组使用小括号()表示，中间的元素用逗号分隔。<br>元组是可以迭代的(iterable)。</p>\n<h5 id=\"列表list\"><a href=\"#列表list\" class=\"headerlink\" title=\"列表list\"></a>列表list</h5><p>列表是包含0个或多个对象引用的有序序列，支持与字符串以及元组一样的分片与步距语法。<br>列表是可变的，可以对列表中的项进行删除或替换。<br>列表使用方括号[]表示，中间的元素用逗号分隔。<br>列表是可以迭代的(iterable)。</p>\n<h4 id=\"集合类型set\"><a href=\"#集合类型set\" class=\"headerlink\" title=\"集合类型set\"></a>集合类型set</h4><p>set是可以迭代的(iterable)。在进行迭代时，集合类型以任意顺序提供其数据项。<br>Python提供了两种内置的集合类型：可变的set类型，固定的frozenset类型。<br>只有可哈希运算的对象可以添加到集合中，可哈希运算的对象包含一个<strong>hash</strong>()特殊方法。<br>所有内置的固定数据类型(例如float、frozenset、int、str、tuple)都是可以哈希运算的，都可以添加到集合中。内置的可变数据类型(例如dict、list、set)都不是可哈希运算的，因为其哈希值会随着包含项数的变化而变化，因此这些数据类型不能添加到集合中。</p>\n<p>集合是0个或多个对象引用的无序组合，这些对象引用所引用的对象都是可哈希运算的。集合是可变的，但其中的项是无序的，所以没有索引位置的概念。<br>集合中包含的每个数据项都是独一无二的，不会出现重复的数据项。<br>集合使用大括号&#123;&#125;表示，数据项用逗号分隔。</p>\n<p>固定集合是指那种一旦创建后就不能改变的集合，固定集合只能使用frozenset数据类型函数进行创建。<br>集合与固定集合都可以包含固定集合。</p>\n<h4 id=\"映射类型\"><a href=\"#映射类型\" class=\"headerlink\" title=\"映射类型\"></a>映射类型</h4><p>映射类型是一种支持成员关系操作符(in)与尺寸函数(len())的数据类型，并且也是可以迭代的。<br>映射是键-值数据项的组合，并提供了存取数据项及其键、值的方法。<br>在进行迭代时，映射类型以任意顺序提供其数据项。<br>Python3支持三种无序的映射类型-内置的dict类型，标准库中的collections.defaultdict和collections.OrderedDict。<br>只有可哈希运算的对象可用作字典的键，因此固定数据类型都可以用作字典的值，可变的数据类型则不能。</p>\n<p>字典dict是一种无序的组合数据类型，其中包含0个或多个键-值对。<br>字典是可变的，可以对其进行数据项的添加或移除操作。<br>字典的键是独一无二的，所以不存在重复的键。</p>\n<p>默认字典也是一种字典，但是可以对遗失的键进行处理，其他与普通字典一样。</p>\n<p>有序字典可用作对无序字典dict的下降替代，有序字典以数据项插入的顺序进行存储。</p>\n<h4 id=\"组合数据类型的迭代与复制\"><a href=\"#组合数据类型的迭代与复制\" class=\"headerlink\" title=\"组合数据类型的迭代与复制\"></a>组合数据类型的迭代与复制</h4><p>iterable数据类型每次返回其中的一个数据项。任意包含<strong>iter</strong>()方法的对象或任意序列(即包含<strong>getitem</strong>()方法的对象)都是一个iterable，并可以提供一个迭代子。迭代子是一个对象，该对象可以提供<strong>next</strong>()方法。</p>\n<p>浅复制和深复制<br>深复制需要调用copy模块中的deepcopy函数。</p>\n"},{"title":"爬虫原理与数据抓取","date":"2018-06-23T07:01:47.145Z","modified":null,"_content":"\n### 通用爬虫和聚焦爬虫\n根据使用场景，网络爬虫可分为通用爬虫和聚焦爬虫两种。\n\n#### 通用爬虫\n通用网络爬虫是搜索引擎抓取系统的重要组成部分。主要目的是将互联网上的网页下载到本地，形成一个互联网内容的镜像备份。\n\n##### 通用搜索引擎的工作原理\n通用网络爬虫 从互联网中搜集网页，采集信息，这些网页信息用于为搜索引擎建立索引从而提供支持，它决定着整个引擎系统的内容是否丰富，信息是否即时，因此其性能的优劣直接影响着搜索引擎的效果。\n\n第一步：抓取网页\n搜索引擎网络爬虫的基本工作流程如下：\n1. 首先选取一部分的种子URL \n\n1. 将这些URL放入待抓取URL队列；\n2. 取出待抓取URL，解析DNS得到主机的IP，并将URL对应的网页下载下来，存储进已下载网页库中，并且将这些URL放进已抓取URL队列；\n3. 分析已抓取URL队列中的URL，分析其中的其他URL，并且将URL放入待抓取URL队列，从而进入下一个循环。\n\n但是搜索引擎蜘蛛的爬行是被输入了一定的规则的，它需要遵从一些命令或文件的内容，如标注为nofollow的链接，或者是Robots协议。\n> Robots协议（也叫爬虫协议、机器人协议等），全称是“网络爬虫排除标准”（Robots Exclusion Protocol），网站通过Robots协议告诉搜索引擎哪些页面可以抓取，哪些页面不能抓取，例如：  \n  淘宝网：https://www.taobao.com/robots.txt  \n  腾讯网： http://www.qq.com/robots.txt\n  \n第二步：数据存储\n搜索引擎通过爬虫爬取到的网页，将数据存入原始页面数据库。其中的页面数据与用户浏览器得到的HTML是完全一样的。  \n搜索引擎蜘蛛在抓取页面时，也做一定的重复内容检测，一旦遇到访问权重很低的网站上有大量抄袭、采集或者复制的内容，很可能就不再爬行。\n\n第三步：预处理\n搜索引擎将爬虫抓取回来的页面，进行各种步骤的预处理。\n\n- 提取文字\n- 中文分词\n- 消除噪音（比如版权声明文字、导航条、广告等……）\n- 索引处理\n- 链接关系计算\n- 特殊文件处理\n- ...\n\n除了HTML文件外，搜索引擎通常还能抓取和索引以文字为基础的多种文件类型，如 PDF、Word、WPS、XLS、PPT、TXT 文件等。我们在搜索结果中也经常会看到这些文件类型。  \n但搜索引擎还不能处理图片、视频、Flash 这类非文字内容，也不能执行脚本和程序。\n\n第四步：提供检索服务，网站排名\n搜索引擎在对信息进行组织和处理后，为用户提供关键字检索服务，将用户检索相关的信息展示给用户。  \n同时会根据页面的PageRank值（链接的访问量排名）来进行网站排名，这样Rank值高的网站在搜索结果中会排名较前，当然也可以直接使用 Money 购买搜索引擎网站排名，简单粗暴。\n\n**但是，这些通用性搜索引擎也存在着一定的局限性：**\n1. 通用搜索引擎所返回的结果都是网页，而大多情况下，网页里90%的内容对用户来说都是无用的。\n2. 不同领域、不同背景的用户往往具有不同的检索目的和需求，搜索引擎无法提供针对具体某个用户的搜索结果。\n3. 万维网数据形式的丰富和网络技术的不断发展，图片、数据库、音频、视频多媒体等不同数据大量出现，通用搜索引擎对这些文件无能为力，不能很好地发现和获取。\n4. 通用搜索引擎大多提供基于关键字的检索，难以支持根据语义信息提出的查询，无法准确理解用户的具体需求。\n\n#### 聚焦爬虫\n聚焦爬虫，是\"面向特定主题需求\"的一种网络爬虫程序，它与通用搜索引擎爬虫的区别在于：***聚焦爬虫在实施网页抓取时会对内容进行处理筛选，尽量保证只抓取与需求相关的网页信息***。\n\n### HTTP/HTTPS的请求与相应\n\n#### HTTP和HTTPS\nHTTP协议（HyperText Transfer Protocol，超文本传输协议）：是一种发布和接收 HTML页面的方法。  \nHTTPS（Hypertext Transfer Protocol over Secure Socket Layer）简单讲是HTTP的安全版，在HTTP下加入SSL层。  \nSSL（Secure Sockets Layer 安全套接层）主要用于Web的安全传输协议，在传输层对网络连接进行加密，保障在Internet上数据传输的安全。  \n> HTTP的端口号为80  \n  HTTPS的端口号为443\n  \n#### HTTP的请求与响应\nHTTP通信由两部分组成：*客户端请求消息*与*服务器响应消息*。\n\n##### 浏览器发送HTTP请求的过程：\n当用户在浏览器的地址栏中输入一个URL并按回车键之后，浏览器会向HTTP服务器发送HTTP请求。HTTP请求主要分为“Get”和“Post”两种方法。  \n当我们在浏览器输入URL http://www.baidu.com 的时候，浏览器发送一个Request请求去获取 http://www.baidu.com 的html文件，服务器把Response文件对象发送回给浏览器。  \n浏览器分析Response中的 HTML，发现其中引用了很多其他文件，比如Images文件，CSS文件，JS文件。 浏览器会自动再次发送Request去获取图片，CSS文件，或者JS文件。  \n当所有的文件都下载成功后，网页会根据HTML语法结构，完整的显示出来了。  \nURL（Uniform / Universal Resource Locator的缩写）：统一资源定位符，是用于完整地描述Internet上网页和其他资源的地址的一种标识方法。  \n\n基本格式：\n```\nscheme://host[:port#]/path/…/[?query-string][#anchor]\n```\n- scheme：协议(例如：http, https, ftp)\n- host：服务器的IP地址或者域名\n- port#：服务器的端口（如果是走协议默认端口，缺省端口80）\n- path：访问资源的路径\n- query-string：参数，发送给http服务器的数据\n- anchor：锚（跳转到网页的指定锚点位置）\n\n#### 客户端HTTP请求\nURL只是标识资源的位置，而HTTP是用来提交和获取资源。客户端发送一个HTTP请求到服务器的请求消息，包括以下格式：  \n> 请求行、请求头部、空行、请求数据\n\n![\"HTTP请求报文格式\"](/images/spider/client_request_format.png)  \n\n一个典型的HTTP请求示例：\n```\nGET https://www.baidu.com/ HTTP/1.1\nHost: www.baidu.com\nConnection: keep-alive\nUpgrade-Insecure-Requests: 1\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.99 Safari/537.36\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\nReferer: http://www.baidu.com/\nAccept-Encoding: gzip, deflate, sdch, br\nAccept-Language: zh-CN,zh;q=0.8,en;q=0.6\nCookie: BAIDUID=04E4001F34EA74AD4601512DD3C41A7B:FG=1; BIDUPSID=04E4001F34EA74AD4601512DD3C41A7B; PSTM=1470329258; MCITY=-343%3A340%3A; BDUSS=nF0MVFiMTVLcUh-Q2MxQ0M3STZGQUZ4N2hBa1FFRkIzUDI3QlBCZjg5cFdOd1pZQVFBQUFBJCQAAAAAAAAAAAEAAADpLvgG0KGyvLrcyfrG-AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFaq3ldWqt5XN; H_PS_PSSID=1447_18240_21105_21386_21454_21409_21554; BD_UPN=12314753; sug=3; sugstore=0; ORIGIN=0; bdime=0; H_PS_645EC=7e2ad3QHl181NSPbFbd7PRUCE1LlufzxrcFmwYin0E6b%2BW8bbTMKHZbDP0g; BDSVRTM=0\n```\n\n##### HTTP请求主要分为Get和Post两种方法\nGET是从服务器上获取数据，POST是向服务器传送数据。  \nGET请求参数显示，都显示在浏览器网址上，HTTP服务器根据该请求所包含URL中的参数来产生响应内容，即“Get”请求的参数是URL的一部分。 例如： http://www.baidu.com/s?wd=Chinese  \nPOST请求参数在请求体当中，消息长度没有限制而且以隐式的方式进行发送，通常用来向HTTP服务器提交量比较大的数据（比如请求中包含许多参数或者文件上传操作等），请求的参数包含在“Content-Type”消息头里，指明该消息体的媒体类型和编码。  \n*注意：避免使用Get方式提交表单，因为有可能会导致安全问题。 比如说在登陆表单中用Get方式，用户输入的用户名和密码将在地址栏中暴露无遗。*  \n\n##### 常用的请求报头\n1. Host (主机和端口号)  \nHost：对应网址URL中的Web名称和端口号，用于指定被请求资源的Internet主机和端口号，通常属于URL的一部分。\n\n2. Connection (链接类型)  \nConnection：表示客户端与服务连接类型  \n    1. Client 发起一个包含 Connection:keep-alive 的请求，HTTP/1.1使用 keep-alive 为默认值。  \n    2. Server收到请求后：  \n       如果 Server 支持 keep-alive，回复一个包含 Connection:keep-alive 的响应，不关闭连接；  \n       如果 Server 不支持 keep-alive，回复一个包含 Connection:close 的响应，关闭连接；  \n    3. 如果client收到包含 Connection:keep-alive 的响应，向同一个连接发送下一个请求，直到一方主动关闭连接。  \n\n    *keep-alive在很多情况下能够重用连接，减少资源消耗，缩短响应时间，比如当浏览器需要多个文件时(比如一个HTML文件和相关的图形文件)，不需要每次都去请求建立连接。*  \n\n3. Upgrade-Insecure-Requests (升级为HTTPS请求)  \nUpgrade-Insecure-Requests：升级不安全的请求，意思是会在加载 http 资源时自动替换成 https 请求，让浏览器不再显示https页面中的http请求警报。  \nHTTPS 是以安全为目标的 HTTP 通道，所以在 HTTPS 承载的页面上不允许出现 HTTP 请求，一旦出现就是提示或报错。  \n\n4. User-Agent (浏览器名称)  \nUser-Agent：是客户浏览器的名称。\n\n5. Accept (传输文件类型)  \nAccept：指浏览器或其他客户端可以接受的MIME（Multipurpose Internet Mail Extensions（多用途互联网邮件扩展））文件类型，服务器可以根据它判断并返回适当的文件格式。  \n    > Accept: */*：表示什么都可以接收；  \n      Accept：image/gif：表明客户端希望接受GIF图像格式的资源；  \n      Accept：text/html：表明客户端希望接受html文本;  \n      Accept: text/html, application/xhtml+xml;q=0.9, image/*;q=0.8：表示浏览器支持的 MIME 类型分别是 html文本、xhtml和xml文档、所有的图像格式资源。  \n  \n    *q是权重系数，范围 0 =< q <= 1，q 值越大，请求越倾向于获得其“;”之前的类型表示的内容。若没有指定q值，则默认为1，按从左到右排序顺序；若被赋值为0，则用于表示浏览器不接受此内容类型。*  \n    *Text：用于标准化地表示的文本信息，文本消息可以是多种字符集和或者多种格式的；Application：用于传输应用程序数据或者二进制数据。*  \n\n6. Referer(页面跳转处)  \nReferer：表明产生请求的网页来自于哪个URL，用户是从该 Referer页面访问到当前请求的页面。这个属性可以用来跟踪Web请求来自哪个页面，是从什么网站来的等。\n\n   有时候遇到下载某网站图片，需要对应的referer，否则无法下载图片，那是因为人家做了防盗链，原理就是根据referer去判断是否是本网站的地址，如果不是，则拒绝，如果是，就可以下载；\n\n7. Accept-Encoding（文件编解码格式）  \nAccept-Encoding：指出浏览器可以接受的编码方式。编码方式不同于文件格式，它是为了压缩文件并加速文件传递速度。浏览器在接收到Web响应之后先解码，然后再检查文件格式，许多情形下这可以减少大量的下载时间。  \n\n   >Accept-Encoding:gzip;q=1.0, identity; q=0.5, *;q=0  \n    如果有多个Encoding同时匹配, 按照q值顺序排列，本例中按顺序支持 gzip, identity压缩编码，支持gzip的浏览器会返回经过gzip编码的HTML页面。 如果请求消息中没有设置这个域服务器假定客户端对各种内容编码都可以接受。\n\n8. Accept-Language（语言种类）  \nAccept-Langeuage：指出浏览器可以接受的语言种类，如en或en-us指英语，zh或者zh-cn指中文，当服务器能够提供一种以上的语言版本时要用到。\n\n9. Accept-Charset（字符编码）  \nAccept-Charset：指出浏览器可以接受的字符编码。\n\n   >举例：Accept-Charset:iso-8859-1,gb2312,utf-8  \n    - ISO8859-1：通常叫做Latin-1。Latin-1包括了书写所有西方欧洲语言不可缺少的附加字符，英文浏览器的默认值是ISO-8859-1.\n    - gb2312：标准简体中文字符集;  \n    - utf-8：UNICODE 的一种变长字符编码，可以解决多种语言文本显示问题，从而实现应用国际化和本地化。\n    如果在请求消息中没有设置这个域，缺省是任何字符集都可以接受。  \n\n10. Cookie （Cookie）  \nCookie：浏览器用这个属性向服务器发送Cookie。Cookie是在浏览器中寄存的小型数据体，它可以记载和服务器相关的用户信息，也可以用来实现会话功能，以后会详细讲。\n\n11. Content-Type (POST数据类型)  \nContent-Type：POST请求里用来表示的内容类型。\n\n    >Content-Type = Text/XML; charset=gb2312：  \n     指明该请求的消息体中包含的是纯文本的XML类型的数据，字符编码采用“gb2312”。\n     \n#### 服务端HTTP响应\nHTTP响应也由四个部分组成，分别是： 状态行、消息报头、空行、响应正文\n\n```\nHTTP/1.1 200 OK\nServer: Tengine\nConnection: keep-alive\nDate: Wed, 30 Nov 2016 07:58:21 GMT\nCache-Control: no-cache\nContent-Type: text/html;charset=UTF-8\nKeep-Alive: timeout=20\nVary: Accept-Encoding\nPragma: no-cache\nX-NWS-LOG-UUID: bd27210a-24e5-4740-8f6c-25dbafa9c395\nContent-Length: 180945\n\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" ....\n```\n\n##### 常用的响应报头  \n理论上所有的响应头信息都应该是回应请求头的。但是服务端为了效率，安全，还有其他方面的考虑，会添加相对应的响应头信息：\n\n1. Cache-Control：must-revalidate, no-cache, private。   \n这个值告诉客户端，服务端不希望客户端缓存资源，在下次请求资源时，必须要从新请求服务器，不能从缓存副本中获取资源。  \n    - Cache-Control是响应头中很重要的信息，当客户端请求头中包含Cache-Control:max-age=0请求，明确表示不会缓存服务器资源时,Cache-Control作为作为回应信息，通常会返回no-cache，意思就是说，\"那不缓存了\"。\n    - 当客户端在请求头中没有包含Cache-Control时，服务端往往会定,不同的资源不同的缓存策略，比如说oschina在缓存图片资源的策略就是Cache-Control：max-age=86400,这个意思是，从当前时间开始，在86400秒的时间内，客户端可以直接从缓存副本中读取资源，而不需要向服务器请求。  \n\n2. Connection：keep-alive  \n这个字段作为回应客户端的Connection：keep-alive，告诉客户端服务器的tcp连接也是一个长连接，客户端可以继续使用这个tcp连接发送http请求。  \n\n3. Content-Encoding:gzip  \n告诉客户端，服务端发送的资源是采用gzip编码的，客户端看到这个信息后，应该采用gzip对资源进行解码。  \n\n4. Content-Type：text/html;charset=UTF-8  \n告诉客户端，资源文件的类型，还有字符编码，客户端通过utf-8对资源进行解码，然后对资源进行html解析。如果我们看到有些网站是乱码的，往往就是服务器端没有返回正确的编码。  \n\n5. Date：Sun, 21 Sep 2016 06:18:21 GMT    \n这个是服务端发送资源时的服务器时间，GMT是格林尼治所在地的标准时间。http协议中发送的时间都是GMT的，这主要是解决在互联网上，不同时区在相互请求资源的时候，时间混乱问题。\n\n6. Expires:Sun, 1 Jan 2000 01:00:00 GMT  \n这个响应头也跟缓存有关，告诉客户端在这个时间前，可以直接访问缓存副本，很显然这个值会存在问题，因为客户端和服务器的时间不一定会都是相同的，如果时间不同就会导致问题。所以这个响应头是没有Cache-Control：max-age=*这个响应头准确的，因为max-age=date中的date是个相对时间，不仅更好理解，也更准确。\n\n7. Pragma:no-cache  \n这个含义与Cache-Control等同。\n\n8. Server：Tengine/1.4.6  \n这个是服务器和相对应的版本，只是告诉客户端服务器的信息。\n\n9. Transfer-Encoding：chunked  \n这个响应头告诉客户端，服务器发送的资源的方式是分块发送的。一般分块发送的资源都是服务器动态生成的，在发送时还不知道发送资源的大小，所以采用分块发送，每一块都是独立的，独立的块都能标示自己的长度，最后一块是0长度的，当客户端读到这个0长度的块时，就可以确定资源已经传输完了。\n\n10. Vary: Accept-Encoding  \n告诉缓存服务器，缓存压缩文件和非压缩文件两个版本，现在这个字段用处并不大，因为现在的浏览器都是支持压缩的。  \n\n##### 响应状态码\n响应状态代码有三位数字组成，第一个数字定义了响应的类别，且有五种可能取值。  \n>常见状态码：  \n- 100~199：表示服务器成功接收部分请求，要求客户端继续提交其余请求才能完成整个处理过程。\n- 200~299：表示服务器成功接收请求并已完成整个处理过程。常用200（OK 请求成功）。\n- 300~399：为完成请求，客户需进一步细化请求。例如：请求的资源已经移动一个新地址、常用302（所请求的页面已经临时转移至新的url）、307和304（使用缓存资源）。\n- 400~499：客户端的请求有错误，常用404（服务器无法找到被请求的页面）、403（服务器拒绝访问，权限不够）。\n- 500~599：服务器端出现错误，常用500（请求未完成。服务器遇到不可预知的情况）。  \n\n#### Cookie 和 Session：\n服务器和客户端的交互仅限于请求/响应过程，结束之后便断开，在下一次请求时，服务器会认为新的客户端。  \n为了维护他们之间的链接，让服务器知道这是前一个用户发送的请求，必须在一个地方保存客户端的信息。  \n*Cookie*：通过在 客户端 记录的信息确定用户的身份。  \n*Session*：通过在 服务器端 记录的信息确定用户的身份。 \n \n### HTTP代理神器Fiddler\n\n\n### urllib库的基本使用\n\n所谓网页抓取，就是把URL地址中指定的网络资源从网络流中读取出来，保存到本地。 在Python3中一般使用urllib库。\n\n#### urlopen和Request\n\n可以直接使用urlopen()打开一个网页；但是，如果需要执行更复杂的操作，比如增加HTTP报头，必须创建一个 Request 实例来作为urlopen()的参数；而需要访问的url地址则作为 Request 实例的参数。  \n\n```python\nfrom urllib import request\n\ndef get_page_info():\n    headers = {\n        \"User-Agent\": \"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36\"\n    }\n\n    req = request.Request(\"http://www.baidu.com/\", headers=headers)\n    res = request.urlopen(req)\n    html = res.read()\n    # 请求页面的源代码\n    print(html)\n    # 请求的状态码\n    print(res.getcode())\n    # 请求的链接\n    print(res.geturl())\n    # 请求头信息\n    print(res.info())\n\nif __name__ == \"__main__\":\n    get_page_info()\n```\n\n> 新建Request实例，除了必须要有 url 参数之外，还可以设置另外两个参数：  \n  - data（默认空）：是伴随 url 提交的数据（比如要post的数据），同时 HTTP 请求将从 \"GET\"方式 改为 \"POST\"方式。  \n  - headers（默认空）：是一个字典，包含了需要发送的HTTP报头的键值对。  \n  \n#### User-Agent\n浏览器就是互联网世界上公认被允许的身份，如果我们希望我们的爬虫程序更像一个真实用户，那我们第一步，就是需要伪装成一个被公认的浏览器。用不同的浏览器在发送请求的时候，会有不同的User-Agent头。 urllib默认的User-Agent头为：Python-urllib/x.y（x和y是Python主版本和次版本号）\n\n#### 添加更多的Header信息\n在 HTTP Request 中加入特定的 Header，来构造一个完整的HTTP请求消息。\n- 可以通过调用Request.add_header() 添加/修改一个特定的header \n- 也可以通过调用Request.get_header()来查看已有的header。\n\n#### parse.urlencode()\n一般HTTP请求提交数据，需要编码成URL编码格式，然后做为url的一部分，或者作为参数传到Request对象中。  \n此时需要使用parse.urlencode对需要提交的数据进行编码。\n\n#### Get方式\nGET请求一般用于向服务器获取数据。\n\n```python\nfrom urllib import request, parse\n\ndef baidu_search_by_keyword(kw):\n    url = \"http://www.baidu.com/\"\n    wd = {\"wd\": kw}\n    wd = parse.urlencode(wd)\n\n    full_url = url + \"s?\" + wd\n\n    headers = {\n        \"User-Agent\": \"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36\"\n    }\n\n    req = request.Request(full_url, headers=headers)\n    res = request.urlopen(req)\n\n    with open(\"02_result.html\", \"wb\") as f:\n        f.write(res.read())\n\nif __name__ == \"__main__\":\n    keyword = input(\"请输入要搜索的内容：\")\n    baidu_search_by_keyword(keyword)\n```\n\n##### 批量爬取贴吧页面数据\n首先需要对百度贴吧的链接进行分析，找出其中的规律。\n\n```python\nfrom urllib import request, parse\n\n\ndef tieba_spider(url, beginpage, endpage):\n    \"\"\"\n        作用：负责处理url，分配每个url去发送请求\n        url：需要处理的第一个url\n        beginPage: 爬虫执行的起始页面\n        endPage: 爬虫执行的截止页面\n    \"\"\"\n\n    for page in range(beginpage, endpage + 1):\n        pn = (page - 1) * 50\n\n        filename = \"第\" + str(page) + \"页.html\"\n        # 组合为完整的 url，并且pn值每次增加50\n        fullurl = url + \"&pn=\" + str(pn)\n\n        # 调用loadPage()发送请求获取HTML页面\n        html = load_page(fullurl, filename)\n        # 将获取到的HTML页面写入本地磁盘文件\n        write_file(html, filename)\n\n\ndef load_page(url, filename):\n    \"\"\" \n        作用：根据url发送请求，获取服务器响应文件\n        url：需要爬取的url地址\n        filename: 文件名\n    \"\"\"\n\n    print(\"正在下载\" + filename)\n    headers = {\"User-Agent\": \"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0;\"}\n    req = request.Request(url, headers=headers)\n    res = request.urlopen(req)\n    return res.read()\n\n\ndef write_file(html, filename):\n    \"\"\"\n        作用：保存服务器响应文件到本地磁盘文件里\n        html: 服务器响应文件\n        filename: 本地磁盘文件名\n    \"\"\"\n    print(\"正在存储\" + filename)\n    with open(filename, 'wb') as f:\n        f.write(html)\n    print(\"-\" * 20)\n\nif __name__ == \"__main__\":\n    kw = input(\"请输入需要爬取的贴吧:\")\n    # 输入起始页和终止页，str转成int类型\n    beginPage = int(input(\"请输入起始页：\"))\n    endPage = int(input(\"请输入终止页：\"))\n    url = \"http://tieba.baidu.com/f?\"\n    key = parse.urlencode({\"kw\": kw})\n    # 组合后的url示例：http://tieba.baidu.com/f?kw=python\n    url = url + key\n    tieba_spider(url, beginPage, endPage)\n```\n\n#### POST方式\nRequest请求对象的里有data参数，它就是用在POST里的，此时要传送的数据就是这个参数data，data是一个字典，里面要匹配键值对。  \n\n```python\nfrom urllib import request, parse\n\ndef youdao_translate(keyword):\n    url = \"http://fanyi.youdao.com/translate?smartresult=dict&smartresult=rule\"\n    headers = {\n        \"User-Agent\": \"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36\"\n    }\n\n    formdata = {\n        \"from\": \"AUTO\",\n        \"to\": \"AUTO\",\n        \"i\": keyword,\n        \"smartresult\": \"dict\",\n        \"client\": \"fanyideskweb\",\n        \"doctype\": \"json\",\n        \"version\": \"2.1\",\n        \"keyfrom\": \"fanyi.web\",\n        \"ue\": \"UTF-8\",\n        \"action\": \"FY_BY_ENTER\",\n        \"typoResult\": \"false\"\n    }\n\n    data = parse.urlencode(formdata).encode('utf-8')\n    req = request.Request(url, data=data, headers=headers)\n    res = request.urlopen(req)\n\n    print(res.read().decode('utf-8'))\n\nif __name__ == \"__main__\":\n    youdao_translate(\"黑暗\")\n```\n\n#### 获取AJAX加载的内容\n有些网页内容使用AJAX加载，AJAX一般返回的是JSON，直接对AJAX地址进行post或get，就返回JSON数据了。  \n在写爬虫程序时，最需要关注的，是数据的来源。  \n\n#### 处理HTTPS请求 SSL证书验证\n在访问网页的时候则会报出SSLError：\nurllib.error.URLError:<urlopen error [SSL: CERTIFICATE_VERIFY_FAILED] certificate verity failed (.ssl.c:777)\n\n此时需要单独处理SSL证书，让程序忽略SSL证书验证错误，即可正常访问。解决办法：  \n\n```python\nimport ssl\n\nssl._create_default_https_context = ssl._create_unverified_context\n```\n\n#### 关于CA\nCA(Certificate Authority)是数字证书认证中心的简称，是指发放、管理、废除数字证书的受信任的第三方机构，如北京数字认证股份有限公司、上海市数字证书认证中心有限公司等。  \nCA的作用是检查证书持有者身份的合法性，并签发证书，以防证书被伪造或篡改，以及对证书和密钥进行管理。  \n现实生活中可以用身份证来证明身份， 那么在网络世界里，数字证书就是身份证。和现实生活不同的是，并不是每个上网的用户都有数字证书的，往往只有当一个人需要证明自己的身份的时候才需要用到数字证书。  \n普通用户一般是不需要，因为网站并不关心是谁访问了网站，现在的网站只关心流量。但是反过来，网站就需要证明自己的身份了。  \n比如说现在钓鱼网站很多的，比如你想访问的是www.baidu.com，但其实你访问的是www.daibu.com”，所以在提交自己的隐私信息之前需要验证一下网站的身份，要求网站出示数字证书。  \n一般正常的网站都会主动出示自己的数字证书，来确保客户端和网站服务器之间的通信数据是加密安全的。  \n","source":"_posts/spider_principle_and_wireshark.md","raw":"---\ntitle: 爬虫原理与数据抓取\ndate: 2018-06-123 09:44:15\nmodified:\ncategories:\n- Spider\ntags:\n- Spider \n---\n\n### 通用爬虫和聚焦爬虫\n根据使用场景，网络爬虫可分为通用爬虫和聚焦爬虫两种。\n\n#### 通用爬虫\n通用网络爬虫是搜索引擎抓取系统的重要组成部分。主要目的是将互联网上的网页下载到本地，形成一个互联网内容的镜像备份。\n\n##### 通用搜索引擎的工作原理\n通用网络爬虫 从互联网中搜集网页，采集信息，这些网页信息用于为搜索引擎建立索引从而提供支持，它决定着整个引擎系统的内容是否丰富，信息是否即时，因此其性能的优劣直接影响着搜索引擎的效果。\n\n第一步：抓取网页\n搜索引擎网络爬虫的基本工作流程如下：\n1. 首先选取一部分的种子URL \n\n1. 将这些URL放入待抓取URL队列；\n2. 取出待抓取URL，解析DNS得到主机的IP，并将URL对应的网页下载下来，存储进已下载网页库中，并且将这些URL放进已抓取URL队列；\n3. 分析已抓取URL队列中的URL，分析其中的其他URL，并且将URL放入待抓取URL队列，从而进入下一个循环。\n\n但是搜索引擎蜘蛛的爬行是被输入了一定的规则的，它需要遵从一些命令或文件的内容，如标注为nofollow的链接，或者是Robots协议。\n> Robots协议（也叫爬虫协议、机器人协议等），全称是“网络爬虫排除标准”（Robots Exclusion Protocol），网站通过Robots协议告诉搜索引擎哪些页面可以抓取，哪些页面不能抓取，例如：  \n  淘宝网：https://www.taobao.com/robots.txt  \n  腾讯网： http://www.qq.com/robots.txt\n  \n第二步：数据存储\n搜索引擎通过爬虫爬取到的网页，将数据存入原始页面数据库。其中的页面数据与用户浏览器得到的HTML是完全一样的。  \n搜索引擎蜘蛛在抓取页面时，也做一定的重复内容检测，一旦遇到访问权重很低的网站上有大量抄袭、采集或者复制的内容，很可能就不再爬行。\n\n第三步：预处理\n搜索引擎将爬虫抓取回来的页面，进行各种步骤的预处理。\n\n- 提取文字\n- 中文分词\n- 消除噪音（比如版权声明文字、导航条、广告等……）\n- 索引处理\n- 链接关系计算\n- 特殊文件处理\n- ...\n\n除了HTML文件外，搜索引擎通常还能抓取和索引以文字为基础的多种文件类型，如 PDF、Word、WPS、XLS、PPT、TXT 文件等。我们在搜索结果中也经常会看到这些文件类型。  \n但搜索引擎还不能处理图片、视频、Flash 这类非文字内容，也不能执行脚本和程序。\n\n第四步：提供检索服务，网站排名\n搜索引擎在对信息进行组织和处理后，为用户提供关键字检索服务，将用户检索相关的信息展示给用户。  \n同时会根据页面的PageRank值（链接的访问量排名）来进行网站排名，这样Rank值高的网站在搜索结果中会排名较前，当然也可以直接使用 Money 购买搜索引擎网站排名，简单粗暴。\n\n**但是，这些通用性搜索引擎也存在着一定的局限性：**\n1. 通用搜索引擎所返回的结果都是网页，而大多情况下，网页里90%的内容对用户来说都是无用的。\n2. 不同领域、不同背景的用户往往具有不同的检索目的和需求，搜索引擎无法提供针对具体某个用户的搜索结果。\n3. 万维网数据形式的丰富和网络技术的不断发展，图片、数据库、音频、视频多媒体等不同数据大量出现，通用搜索引擎对这些文件无能为力，不能很好地发现和获取。\n4. 通用搜索引擎大多提供基于关键字的检索，难以支持根据语义信息提出的查询，无法准确理解用户的具体需求。\n\n#### 聚焦爬虫\n聚焦爬虫，是\"面向特定主题需求\"的一种网络爬虫程序，它与通用搜索引擎爬虫的区别在于：***聚焦爬虫在实施网页抓取时会对内容进行处理筛选，尽量保证只抓取与需求相关的网页信息***。\n\n### HTTP/HTTPS的请求与相应\n\n#### HTTP和HTTPS\nHTTP协议（HyperText Transfer Protocol，超文本传输协议）：是一种发布和接收 HTML页面的方法。  \nHTTPS（Hypertext Transfer Protocol over Secure Socket Layer）简单讲是HTTP的安全版，在HTTP下加入SSL层。  \nSSL（Secure Sockets Layer 安全套接层）主要用于Web的安全传输协议，在传输层对网络连接进行加密，保障在Internet上数据传输的安全。  \n> HTTP的端口号为80  \n  HTTPS的端口号为443\n  \n#### HTTP的请求与响应\nHTTP通信由两部分组成：*客户端请求消息*与*服务器响应消息*。\n\n##### 浏览器发送HTTP请求的过程：\n当用户在浏览器的地址栏中输入一个URL并按回车键之后，浏览器会向HTTP服务器发送HTTP请求。HTTP请求主要分为“Get”和“Post”两种方法。  \n当我们在浏览器输入URL http://www.baidu.com 的时候，浏览器发送一个Request请求去获取 http://www.baidu.com 的html文件，服务器把Response文件对象发送回给浏览器。  \n浏览器分析Response中的 HTML，发现其中引用了很多其他文件，比如Images文件，CSS文件，JS文件。 浏览器会自动再次发送Request去获取图片，CSS文件，或者JS文件。  \n当所有的文件都下载成功后，网页会根据HTML语法结构，完整的显示出来了。  \nURL（Uniform / Universal Resource Locator的缩写）：统一资源定位符，是用于完整地描述Internet上网页和其他资源的地址的一种标识方法。  \n\n基本格式：\n```\nscheme://host[:port#]/path/…/[?query-string][#anchor]\n```\n- scheme：协议(例如：http, https, ftp)\n- host：服务器的IP地址或者域名\n- port#：服务器的端口（如果是走协议默认端口，缺省端口80）\n- path：访问资源的路径\n- query-string：参数，发送给http服务器的数据\n- anchor：锚（跳转到网页的指定锚点位置）\n\n#### 客户端HTTP请求\nURL只是标识资源的位置，而HTTP是用来提交和获取资源。客户端发送一个HTTP请求到服务器的请求消息，包括以下格式：  \n> 请求行、请求头部、空行、请求数据\n\n![\"HTTP请求报文格式\"](/images/spider/client_request_format.png)  \n\n一个典型的HTTP请求示例：\n```\nGET https://www.baidu.com/ HTTP/1.1\nHost: www.baidu.com\nConnection: keep-alive\nUpgrade-Insecure-Requests: 1\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.99 Safari/537.36\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\nReferer: http://www.baidu.com/\nAccept-Encoding: gzip, deflate, sdch, br\nAccept-Language: zh-CN,zh;q=0.8,en;q=0.6\nCookie: BAIDUID=04E4001F34EA74AD4601512DD3C41A7B:FG=1; BIDUPSID=04E4001F34EA74AD4601512DD3C41A7B; PSTM=1470329258; MCITY=-343%3A340%3A; BDUSS=nF0MVFiMTVLcUh-Q2MxQ0M3STZGQUZ4N2hBa1FFRkIzUDI3QlBCZjg5cFdOd1pZQVFBQUFBJCQAAAAAAAAAAAEAAADpLvgG0KGyvLrcyfrG-AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFaq3ldWqt5XN; H_PS_PSSID=1447_18240_21105_21386_21454_21409_21554; BD_UPN=12314753; sug=3; sugstore=0; ORIGIN=0; bdime=0; H_PS_645EC=7e2ad3QHl181NSPbFbd7PRUCE1LlufzxrcFmwYin0E6b%2BW8bbTMKHZbDP0g; BDSVRTM=0\n```\n\n##### HTTP请求主要分为Get和Post两种方法\nGET是从服务器上获取数据，POST是向服务器传送数据。  \nGET请求参数显示，都显示在浏览器网址上，HTTP服务器根据该请求所包含URL中的参数来产生响应内容，即“Get”请求的参数是URL的一部分。 例如： http://www.baidu.com/s?wd=Chinese  \nPOST请求参数在请求体当中，消息长度没有限制而且以隐式的方式进行发送，通常用来向HTTP服务器提交量比较大的数据（比如请求中包含许多参数或者文件上传操作等），请求的参数包含在“Content-Type”消息头里，指明该消息体的媒体类型和编码。  \n*注意：避免使用Get方式提交表单，因为有可能会导致安全问题。 比如说在登陆表单中用Get方式，用户输入的用户名和密码将在地址栏中暴露无遗。*  \n\n##### 常用的请求报头\n1. Host (主机和端口号)  \nHost：对应网址URL中的Web名称和端口号，用于指定被请求资源的Internet主机和端口号，通常属于URL的一部分。\n\n2. Connection (链接类型)  \nConnection：表示客户端与服务连接类型  \n    1. Client 发起一个包含 Connection:keep-alive 的请求，HTTP/1.1使用 keep-alive 为默认值。  \n    2. Server收到请求后：  \n       如果 Server 支持 keep-alive，回复一个包含 Connection:keep-alive 的响应，不关闭连接；  \n       如果 Server 不支持 keep-alive，回复一个包含 Connection:close 的响应，关闭连接；  \n    3. 如果client收到包含 Connection:keep-alive 的响应，向同一个连接发送下一个请求，直到一方主动关闭连接。  \n\n    *keep-alive在很多情况下能够重用连接，减少资源消耗，缩短响应时间，比如当浏览器需要多个文件时(比如一个HTML文件和相关的图形文件)，不需要每次都去请求建立连接。*  \n\n3. Upgrade-Insecure-Requests (升级为HTTPS请求)  \nUpgrade-Insecure-Requests：升级不安全的请求，意思是会在加载 http 资源时自动替换成 https 请求，让浏览器不再显示https页面中的http请求警报。  \nHTTPS 是以安全为目标的 HTTP 通道，所以在 HTTPS 承载的页面上不允许出现 HTTP 请求，一旦出现就是提示或报错。  \n\n4. User-Agent (浏览器名称)  \nUser-Agent：是客户浏览器的名称。\n\n5. Accept (传输文件类型)  \nAccept：指浏览器或其他客户端可以接受的MIME（Multipurpose Internet Mail Extensions（多用途互联网邮件扩展））文件类型，服务器可以根据它判断并返回适当的文件格式。  \n    > Accept: */*：表示什么都可以接收；  \n      Accept：image/gif：表明客户端希望接受GIF图像格式的资源；  \n      Accept：text/html：表明客户端希望接受html文本;  \n      Accept: text/html, application/xhtml+xml;q=0.9, image/*;q=0.8：表示浏览器支持的 MIME 类型分别是 html文本、xhtml和xml文档、所有的图像格式资源。  \n  \n    *q是权重系数，范围 0 =< q <= 1，q 值越大，请求越倾向于获得其“;”之前的类型表示的内容。若没有指定q值，则默认为1，按从左到右排序顺序；若被赋值为0，则用于表示浏览器不接受此内容类型。*  \n    *Text：用于标准化地表示的文本信息，文本消息可以是多种字符集和或者多种格式的；Application：用于传输应用程序数据或者二进制数据。*  \n\n6. Referer(页面跳转处)  \nReferer：表明产生请求的网页来自于哪个URL，用户是从该 Referer页面访问到当前请求的页面。这个属性可以用来跟踪Web请求来自哪个页面，是从什么网站来的等。\n\n   有时候遇到下载某网站图片，需要对应的referer，否则无法下载图片，那是因为人家做了防盗链，原理就是根据referer去判断是否是本网站的地址，如果不是，则拒绝，如果是，就可以下载；\n\n7. Accept-Encoding（文件编解码格式）  \nAccept-Encoding：指出浏览器可以接受的编码方式。编码方式不同于文件格式，它是为了压缩文件并加速文件传递速度。浏览器在接收到Web响应之后先解码，然后再检查文件格式，许多情形下这可以减少大量的下载时间。  \n\n   >Accept-Encoding:gzip;q=1.0, identity; q=0.5, *;q=0  \n    如果有多个Encoding同时匹配, 按照q值顺序排列，本例中按顺序支持 gzip, identity压缩编码，支持gzip的浏览器会返回经过gzip编码的HTML页面。 如果请求消息中没有设置这个域服务器假定客户端对各种内容编码都可以接受。\n\n8. Accept-Language（语言种类）  \nAccept-Langeuage：指出浏览器可以接受的语言种类，如en或en-us指英语，zh或者zh-cn指中文，当服务器能够提供一种以上的语言版本时要用到。\n\n9. Accept-Charset（字符编码）  \nAccept-Charset：指出浏览器可以接受的字符编码。\n\n   >举例：Accept-Charset:iso-8859-1,gb2312,utf-8  \n    - ISO8859-1：通常叫做Latin-1。Latin-1包括了书写所有西方欧洲语言不可缺少的附加字符，英文浏览器的默认值是ISO-8859-1.\n    - gb2312：标准简体中文字符集;  \n    - utf-8：UNICODE 的一种变长字符编码，可以解决多种语言文本显示问题，从而实现应用国际化和本地化。\n    如果在请求消息中没有设置这个域，缺省是任何字符集都可以接受。  \n\n10. Cookie （Cookie）  \nCookie：浏览器用这个属性向服务器发送Cookie。Cookie是在浏览器中寄存的小型数据体，它可以记载和服务器相关的用户信息，也可以用来实现会话功能，以后会详细讲。\n\n11. Content-Type (POST数据类型)  \nContent-Type：POST请求里用来表示的内容类型。\n\n    >Content-Type = Text/XML; charset=gb2312：  \n     指明该请求的消息体中包含的是纯文本的XML类型的数据，字符编码采用“gb2312”。\n     \n#### 服务端HTTP响应\nHTTP响应也由四个部分组成，分别是： 状态行、消息报头、空行、响应正文\n\n```\nHTTP/1.1 200 OK\nServer: Tengine\nConnection: keep-alive\nDate: Wed, 30 Nov 2016 07:58:21 GMT\nCache-Control: no-cache\nContent-Type: text/html;charset=UTF-8\nKeep-Alive: timeout=20\nVary: Accept-Encoding\nPragma: no-cache\nX-NWS-LOG-UUID: bd27210a-24e5-4740-8f6c-25dbafa9c395\nContent-Length: 180945\n\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" ....\n```\n\n##### 常用的响应报头  \n理论上所有的响应头信息都应该是回应请求头的。但是服务端为了效率，安全，还有其他方面的考虑，会添加相对应的响应头信息：\n\n1. Cache-Control：must-revalidate, no-cache, private。   \n这个值告诉客户端，服务端不希望客户端缓存资源，在下次请求资源时，必须要从新请求服务器，不能从缓存副本中获取资源。  \n    - Cache-Control是响应头中很重要的信息，当客户端请求头中包含Cache-Control:max-age=0请求，明确表示不会缓存服务器资源时,Cache-Control作为作为回应信息，通常会返回no-cache，意思就是说，\"那不缓存了\"。\n    - 当客户端在请求头中没有包含Cache-Control时，服务端往往会定,不同的资源不同的缓存策略，比如说oschina在缓存图片资源的策略就是Cache-Control：max-age=86400,这个意思是，从当前时间开始，在86400秒的时间内，客户端可以直接从缓存副本中读取资源，而不需要向服务器请求。  \n\n2. Connection：keep-alive  \n这个字段作为回应客户端的Connection：keep-alive，告诉客户端服务器的tcp连接也是一个长连接，客户端可以继续使用这个tcp连接发送http请求。  \n\n3. Content-Encoding:gzip  \n告诉客户端，服务端发送的资源是采用gzip编码的，客户端看到这个信息后，应该采用gzip对资源进行解码。  \n\n4. Content-Type：text/html;charset=UTF-8  \n告诉客户端，资源文件的类型，还有字符编码，客户端通过utf-8对资源进行解码，然后对资源进行html解析。如果我们看到有些网站是乱码的，往往就是服务器端没有返回正确的编码。  \n\n5. Date：Sun, 21 Sep 2016 06:18:21 GMT    \n这个是服务端发送资源时的服务器时间，GMT是格林尼治所在地的标准时间。http协议中发送的时间都是GMT的，这主要是解决在互联网上，不同时区在相互请求资源的时候，时间混乱问题。\n\n6. Expires:Sun, 1 Jan 2000 01:00:00 GMT  \n这个响应头也跟缓存有关，告诉客户端在这个时间前，可以直接访问缓存副本，很显然这个值会存在问题，因为客户端和服务器的时间不一定会都是相同的，如果时间不同就会导致问题。所以这个响应头是没有Cache-Control：max-age=*这个响应头准确的，因为max-age=date中的date是个相对时间，不仅更好理解，也更准确。\n\n7. Pragma:no-cache  \n这个含义与Cache-Control等同。\n\n8. Server：Tengine/1.4.6  \n这个是服务器和相对应的版本，只是告诉客户端服务器的信息。\n\n9. Transfer-Encoding：chunked  \n这个响应头告诉客户端，服务器发送的资源的方式是分块发送的。一般分块发送的资源都是服务器动态生成的，在发送时还不知道发送资源的大小，所以采用分块发送，每一块都是独立的，独立的块都能标示自己的长度，最后一块是0长度的，当客户端读到这个0长度的块时，就可以确定资源已经传输完了。\n\n10. Vary: Accept-Encoding  \n告诉缓存服务器，缓存压缩文件和非压缩文件两个版本，现在这个字段用处并不大，因为现在的浏览器都是支持压缩的。  \n\n##### 响应状态码\n响应状态代码有三位数字组成，第一个数字定义了响应的类别，且有五种可能取值。  \n>常见状态码：  \n- 100~199：表示服务器成功接收部分请求，要求客户端继续提交其余请求才能完成整个处理过程。\n- 200~299：表示服务器成功接收请求并已完成整个处理过程。常用200（OK 请求成功）。\n- 300~399：为完成请求，客户需进一步细化请求。例如：请求的资源已经移动一个新地址、常用302（所请求的页面已经临时转移至新的url）、307和304（使用缓存资源）。\n- 400~499：客户端的请求有错误，常用404（服务器无法找到被请求的页面）、403（服务器拒绝访问，权限不够）。\n- 500~599：服务器端出现错误，常用500（请求未完成。服务器遇到不可预知的情况）。  \n\n#### Cookie 和 Session：\n服务器和客户端的交互仅限于请求/响应过程，结束之后便断开，在下一次请求时，服务器会认为新的客户端。  \n为了维护他们之间的链接，让服务器知道这是前一个用户发送的请求，必须在一个地方保存客户端的信息。  \n*Cookie*：通过在 客户端 记录的信息确定用户的身份。  \n*Session*：通过在 服务器端 记录的信息确定用户的身份。 \n \n### HTTP代理神器Fiddler\n\n\n### urllib库的基本使用\n\n所谓网页抓取，就是把URL地址中指定的网络资源从网络流中读取出来，保存到本地。 在Python3中一般使用urllib库。\n\n#### urlopen和Request\n\n可以直接使用urlopen()打开一个网页；但是，如果需要执行更复杂的操作，比如增加HTTP报头，必须创建一个 Request 实例来作为urlopen()的参数；而需要访问的url地址则作为 Request 实例的参数。  \n\n```python\nfrom urllib import request\n\ndef get_page_info():\n    headers = {\n        \"User-Agent\": \"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36\"\n    }\n\n    req = request.Request(\"http://www.baidu.com/\", headers=headers)\n    res = request.urlopen(req)\n    html = res.read()\n    # 请求页面的源代码\n    print(html)\n    # 请求的状态码\n    print(res.getcode())\n    # 请求的链接\n    print(res.geturl())\n    # 请求头信息\n    print(res.info())\n\nif __name__ == \"__main__\":\n    get_page_info()\n```\n\n> 新建Request实例，除了必须要有 url 参数之外，还可以设置另外两个参数：  \n  - data（默认空）：是伴随 url 提交的数据（比如要post的数据），同时 HTTP 请求将从 \"GET\"方式 改为 \"POST\"方式。  \n  - headers（默认空）：是一个字典，包含了需要发送的HTTP报头的键值对。  \n  \n#### User-Agent\n浏览器就是互联网世界上公认被允许的身份，如果我们希望我们的爬虫程序更像一个真实用户，那我们第一步，就是需要伪装成一个被公认的浏览器。用不同的浏览器在发送请求的时候，会有不同的User-Agent头。 urllib默认的User-Agent头为：Python-urllib/x.y（x和y是Python主版本和次版本号）\n\n#### 添加更多的Header信息\n在 HTTP Request 中加入特定的 Header，来构造一个完整的HTTP请求消息。\n- 可以通过调用Request.add_header() 添加/修改一个特定的header \n- 也可以通过调用Request.get_header()来查看已有的header。\n\n#### parse.urlencode()\n一般HTTP请求提交数据，需要编码成URL编码格式，然后做为url的一部分，或者作为参数传到Request对象中。  \n此时需要使用parse.urlencode对需要提交的数据进行编码。\n\n#### Get方式\nGET请求一般用于向服务器获取数据。\n\n```python\nfrom urllib import request, parse\n\ndef baidu_search_by_keyword(kw):\n    url = \"http://www.baidu.com/\"\n    wd = {\"wd\": kw}\n    wd = parse.urlencode(wd)\n\n    full_url = url + \"s?\" + wd\n\n    headers = {\n        \"User-Agent\": \"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36\"\n    }\n\n    req = request.Request(full_url, headers=headers)\n    res = request.urlopen(req)\n\n    with open(\"02_result.html\", \"wb\") as f:\n        f.write(res.read())\n\nif __name__ == \"__main__\":\n    keyword = input(\"请输入要搜索的内容：\")\n    baidu_search_by_keyword(keyword)\n```\n\n##### 批量爬取贴吧页面数据\n首先需要对百度贴吧的链接进行分析，找出其中的规律。\n\n```python\nfrom urllib import request, parse\n\n\ndef tieba_spider(url, beginpage, endpage):\n    \"\"\"\n        作用：负责处理url，分配每个url去发送请求\n        url：需要处理的第一个url\n        beginPage: 爬虫执行的起始页面\n        endPage: 爬虫执行的截止页面\n    \"\"\"\n\n    for page in range(beginpage, endpage + 1):\n        pn = (page - 1) * 50\n\n        filename = \"第\" + str(page) + \"页.html\"\n        # 组合为完整的 url，并且pn值每次增加50\n        fullurl = url + \"&pn=\" + str(pn)\n\n        # 调用loadPage()发送请求获取HTML页面\n        html = load_page(fullurl, filename)\n        # 将获取到的HTML页面写入本地磁盘文件\n        write_file(html, filename)\n\n\ndef load_page(url, filename):\n    \"\"\" \n        作用：根据url发送请求，获取服务器响应文件\n        url：需要爬取的url地址\n        filename: 文件名\n    \"\"\"\n\n    print(\"正在下载\" + filename)\n    headers = {\"User-Agent\": \"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0;\"}\n    req = request.Request(url, headers=headers)\n    res = request.urlopen(req)\n    return res.read()\n\n\ndef write_file(html, filename):\n    \"\"\"\n        作用：保存服务器响应文件到本地磁盘文件里\n        html: 服务器响应文件\n        filename: 本地磁盘文件名\n    \"\"\"\n    print(\"正在存储\" + filename)\n    with open(filename, 'wb') as f:\n        f.write(html)\n    print(\"-\" * 20)\n\nif __name__ == \"__main__\":\n    kw = input(\"请输入需要爬取的贴吧:\")\n    # 输入起始页和终止页，str转成int类型\n    beginPage = int(input(\"请输入起始页：\"))\n    endPage = int(input(\"请输入终止页：\"))\n    url = \"http://tieba.baidu.com/f?\"\n    key = parse.urlencode({\"kw\": kw})\n    # 组合后的url示例：http://tieba.baidu.com/f?kw=python\n    url = url + key\n    tieba_spider(url, beginPage, endPage)\n```\n\n#### POST方式\nRequest请求对象的里有data参数，它就是用在POST里的，此时要传送的数据就是这个参数data，data是一个字典，里面要匹配键值对。  \n\n```python\nfrom urllib import request, parse\n\ndef youdao_translate(keyword):\n    url = \"http://fanyi.youdao.com/translate?smartresult=dict&smartresult=rule\"\n    headers = {\n        \"User-Agent\": \"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36\"\n    }\n\n    formdata = {\n        \"from\": \"AUTO\",\n        \"to\": \"AUTO\",\n        \"i\": keyword,\n        \"smartresult\": \"dict\",\n        \"client\": \"fanyideskweb\",\n        \"doctype\": \"json\",\n        \"version\": \"2.1\",\n        \"keyfrom\": \"fanyi.web\",\n        \"ue\": \"UTF-8\",\n        \"action\": \"FY_BY_ENTER\",\n        \"typoResult\": \"false\"\n    }\n\n    data = parse.urlencode(formdata).encode('utf-8')\n    req = request.Request(url, data=data, headers=headers)\n    res = request.urlopen(req)\n\n    print(res.read().decode('utf-8'))\n\nif __name__ == \"__main__\":\n    youdao_translate(\"黑暗\")\n```\n\n#### 获取AJAX加载的内容\n有些网页内容使用AJAX加载，AJAX一般返回的是JSON，直接对AJAX地址进行post或get，就返回JSON数据了。  \n在写爬虫程序时，最需要关注的，是数据的来源。  \n\n#### 处理HTTPS请求 SSL证书验证\n在访问网页的时候则会报出SSLError：\nurllib.error.URLError:<urlopen error [SSL: CERTIFICATE_VERIFY_FAILED] certificate verity failed (.ssl.c:777)\n\n此时需要单独处理SSL证书，让程序忽略SSL证书验证错误，即可正常访问。解决办法：  \n\n```python\nimport ssl\n\nssl._create_default_https_context = ssl._create_unverified_context\n```\n\n#### 关于CA\nCA(Certificate Authority)是数字证书认证中心的简称，是指发放、管理、废除数字证书的受信任的第三方机构，如北京数字认证股份有限公司、上海市数字证书认证中心有限公司等。  \nCA的作用是检查证书持有者身份的合法性，并签发证书，以防证书被伪造或篡改，以及对证书和密钥进行管理。  \n现实生活中可以用身份证来证明身份， 那么在网络世界里，数字证书就是身份证。和现实生活不同的是，并不是每个上网的用户都有数字证书的，往往只有当一个人需要证明自己的身份的时候才需要用到数字证书。  \n普通用户一般是不需要，因为网站并不关心是谁访问了网站，现在的网站只关心流量。但是反过来，网站就需要证明自己的身份了。  \n比如说现在钓鱼网站很多的，比如你想访问的是www.baidu.com，但其实你访问的是www.daibu.com”，所以在提交自己的隐私信息之前需要验证一下网站的身份，要求网站出示数字证书。  \n一般正常的网站都会主动出示自己的数字证书，来确保客户端和网站服务器之间的通信数据是加密安全的。  \n","slug":"spider_principle_and_wireshark","published":1,"updated":"2018-06-23T07:26:55.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjir2nro000149xasezbxsgup","content":"<h3 id=\"通用爬虫和聚焦爬虫\"><a href=\"#通用爬虫和聚焦爬虫\" class=\"headerlink\" title=\"通用爬虫和聚焦爬虫\"></a>通用爬虫和聚焦爬虫</h3><p>根据使用场景，网络爬虫可分为通用爬虫和聚焦爬虫两种。</p>\n<h4 id=\"通用爬虫\"><a href=\"#通用爬虫\" class=\"headerlink\" title=\"通用爬虫\"></a>通用爬虫</h4><p>通用网络爬虫是搜索引擎抓取系统的重要组成部分。主要目的是将互联网上的网页下载到本地，形成一个互联网内容的镜像备份。</p>\n<h5 id=\"通用搜索引擎的工作原理\"><a href=\"#通用搜索引擎的工作原理\" class=\"headerlink\" title=\"通用搜索引擎的工作原理\"></a>通用搜索引擎的工作原理</h5><p>通用网络爬虫 从互联网中搜集网页，采集信息，这些网页信息用于为搜索引擎建立索引从而提供支持，它决定着整个引擎系统的内容是否丰富，信息是否即时，因此其性能的优劣直接影响着搜索引擎的效果。</p>\n<p>第一步：抓取网页<br>搜索引擎网络爬虫的基本工作流程如下：</p>\n<ol>\n<li><p>首先选取一部分的种子URL </p>\n</li>\n<li><p>将这些URL放入待抓取URL队列；</p>\n</li>\n<li>取出待抓取URL，解析DNS得到主机的IP，并将URL对应的网页下载下来，存储进已下载网页库中，并且将这些URL放进已抓取URL队列；</li>\n<li>分析已抓取URL队列中的URL，分析其中的其他URL，并且将URL放入待抓取URL队列，从而进入下一个循环。</li>\n</ol>\n<p>但是搜索引擎蜘蛛的爬行是被输入了一定的规则的，它需要遵从一些命令或文件的内容，如标注为nofollow的链接，或者是Robots协议。</p>\n<blockquote>\n<p>Robots协议（也叫爬虫协议、机器人协议等），全称是“网络爬虫排除标准”（Robots Exclusion Protocol），网站通过Robots协议告诉搜索引擎哪些页面可以抓取，哪些页面不能抓取，例如：<br>  淘宝网：<a href=\"https://www.taobao.com/robots.txt\" target=\"_blank\" rel=\"noopener\">https://www.taobao.com/robots.txt</a><br>  腾讯网： <a href=\"http://www.qq.com/robots.txt\" target=\"_blank\" rel=\"noopener\">http://www.qq.com/robots.txt</a></p>\n</blockquote>\n<p>第二步：数据存储<br>搜索引擎通过爬虫爬取到的网页，将数据存入原始页面数据库。其中的页面数据与用户浏览器得到的HTML是完全一样的。<br>搜索引擎蜘蛛在抓取页面时，也做一定的重复内容检测，一旦遇到访问权重很低的网站上有大量抄袭、采集或者复制的内容，很可能就不再爬行。</p>\n<p>第三步：预处理<br>搜索引擎将爬虫抓取回来的页面，进行各种步骤的预处理。</p>\n<ul>\n<li>提取文字</li>\n<li>中文分词</li>\n<li>消除噪音（比如版权声明文字、导航条、广告等……）</li>\n<li>索引处理</li>\n<li>链接关系计算</li>\n<li>特殊文件处理</li>\n<li>…</li>\n</ul>\n<p>除了HTML文件外，搜索引擎通常还能抓取和索引以文字为基础的多种文件类型，如 PDF、Word、WPS、XLS、PPT、TXT 文件等。我们在搜索结果中也经常会看到这些文件类型。<br>但搜索引擎还不能处理图片、视频、Flash 这类非文字内容，也不能执行脚本和程序。</p>\n<p>第四步：提供检索服务，网站排名<br>搜索引擎在对信息进行组织和处理后，为用户提供关键字检索服务，将用户检索相关的信息展示给用户。<br>同时会根据页面的PageRank值（链接的访问量排名）来进行网站排名，这样Rank值高的网站在搜索结果中会排名较前，当然也可以直接使用 Money 购买搜索引擎网站排名，简单粗暴。</p>\n<p><strong>但是，这些通用性搜索引擎也存在着一定的局限性：</strong></p>\n<ol>\n<li>通用搜索引擎所返回的结果都是网页，而大多情况下，网页里90%的内容对用户来说都是无用的。</li>\n<li>不同领域、不同背景的用户往往具有不同的检索目的和需求，搜索引擎无法提供针对具体某个用户的搜索结果。</li>\n<li>万维网数据形式的丰富和网络技术的不断发展，图片、数据库、音频、视频多媒体等不同数据大量出现，通用搜索引擎对这些文件无能为力，不能很好地发现和获取。</li>\n<li>通用搜索引擎大多提供基于关键字的检索，难以支持根据语义信息提出的查询，无法准确理解用户的具体需求。</li>\n</ol>\n<h4 id=\"聚焦爬虫\"><a href=\"#聚焦爬虫\" class=\"headerlink\" title=\"聚焦爬虫\"></a>聚焦爬虫</h4><p>聚焦爬虫，是”面向特定主题需求”的一种网络爬虫程序，它与通用搜索引擎爬虫的区别在于：<strong><em>聚焦爬虫在实施网页抓取时会对内容进行处理筛选，尽量保证只抓取与需求相关的网页信息</em></strong>。</p>\n<h3 id=\"HTTP-HTTPS的请求与相应\"><a href=\"#HTTP-HTTPS的请求与相应\" class=\"headerlink\" title=\"HTTP/HTTPS的请求与相应\"></a>HTTP/HTTPS的请求与相应</h3><h4 id=\"HTTP和HTTPS\"><a href=\"#HTTP和HTTPS\" class=\"headerlink\" title=\"HTTP和HTTPS\"></a>HTTP和HTTPS</h4><p>HTTP协议（HyperText Transfer Protocol，超文本传输协议）：是一种发布和接收 HTML页面的方法。<br>HTTPS（Hypertext Transfer Protocol over Secure Socket Layer）简单讲是HTTP的安全版，在HTTP下加入SSL层。<br>SSL（Secure Sockets Layer 安全套接层）主要用于Web的安全传输协议，在传输层对网络连接进行加密，保障在Internet上数据传输的安全。  </p>\n<blockquote>\n<p>HTTP的端口号为80<br>  HTTPS的端口号为443</p>\n</blockquote>\n<h4 id=\"HTTP的请求与响应\"><a href=\"#HTTP的请求与响应\" class=\"headerlink\" title=\"HTTP的请求与响应\"></a>HTTP的请求与响应</h4><p>HTTP通信由两部分组成：<em>客户端请求消息</em>与<em>服务器响应消息</em>。</p>\n<h5 id=\"浏览器发送HTTP请求的过程：\"><a href=\"#浏览器发送HTTP请求的过程：\" class=\"headerlink\" title=\"浏览器发送HTTP请求的过程：\"></a>浏览器发送HTTP请求的过程：</h5><p>当用户在浏览器的地址栏中输入一个URL并按回车键之后，浏览器会向HTTP服务器发送HTTP请求。HTTP请求主要分为“Get”和“Post”两种方法。<br>当我们在浏览器输入URL <a href=\"http://www.baidu.com\" target=\"_blank\" rel=\"noopener\">http://www.baidu.com</a> 的时候，浏览器发送一个Request请求去获取 <a href=\"http://www.baidu.com\" target=\"_blank\" rel=\"noopener\">http://www.baidu.com</a> 的html文件，服务器把Response文件对象发送回给浏览器。<br>浏览器分析Response中的 HTML，发现其中引用了很多其他文件，比如Images文件，CSS文件，JS文件。 浏览器会自动再次发送Request去获取图片，CSS文件，或者JS文件。<br>当所有的文件都下载成功后，网页会根据HTML语法结构，完整的显示出来了。<br>URL（Uniform / Universal Resource Locator的缩写）：统一资源定位符，是用于完整地描述Internet上网页和其他资源的地址的一种标识方法。  </p>\n<p>基本格式：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scheme://host[:port#]/path/…/[?query-string][#anchor]</span><br></pre></td></tr></table></figure></p>\n<ul>\n<li>scheme：协议(例如：http, https, ftp)</li>\n<li>host：服务器的IP地址或者域名</li>\n<li>port#：服务器的端口（如果是走协议默认端口，缺省端口80）</li>\n<li>path：访问资源的路径</li>\n<li>query-string：参数，发送给http服务器的数据</li>\n<li>anchor：锚（跳转到网页的指定锚点位置）</li>\n</ul>\n<h4 id=\"客户端HTTP请求\"><a href=\"#客户端HTTP请求\" class=\"headerlink\" title=\"客户端HTTP请求\"></a>客户端HTTP请求</h4><p>URL只是标识资源的位置，而HTTP是用来提交和获取资源。客户端发送一个HTTP请求到服务器的请求消息，包括以下格式：  </p>\n<blockquote>\n<p>请求行、请求头部、空行、请求数据</p>\n</blockquote>\n<p><img src=\"/images/spider/client_request_format.png\" alt=\"&quot;HTTP请求报文格式&quot;\">  </p>\n<p>一个典型的HTTP请求示例：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">GET https://www.baidu.com/ HTTP/1.1</span><br><span class=\"line\">Host: www.baidu.com</span><br><span class=\"line\">Connection: keep-alive</span><br><span class=\"line\">Upgrade-Insecure-Requests: 1</span><br><span class=\"line\">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.99 Safari/537.36</span><br><span class=\"line\">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</span><br><span class=\"line\">Referer: http://www.baidu.com/</span><br><span class=\"line\">Accept-Encoding: gzip, deflate, sdch, br</span><br><span class=\"line\">Accept-Language: zh-CN,zh;q=0.8,en;q=0.6</span><br><span class=\"line\">Cookie: BAIDUID=04E4001F34EA74AD4601512DD3C41A7B:FG=1; BIDUPSID=04E4001F34EA74AD4601512DD3C41A7B; PSTM=1470329258; MCITY=-343%3A340%3A; BDUSS=nF0MVFiMTVLcUh-Q2MxQ0M3STZGQUZ4N2hBa1FFRkIzUDI3QlBCZjg5cFdOd1pZQVFBQUFBJCQAAAAAAAAAAAEAAADpLvgG0KGyvLrcyfrG-AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFaq3ldWqt5XN; H_PS_PSSID=1447_18240_21105_21386_21454_21409_21554; BD_UPN=12314753; sug=3; sugstore=0; ORIGIN=0; bdime=0; H_PS_645EC=7e2ad3QHl181NSPbFbd7PRUCE1LlufzxrcFmwYin0E6b%2BW8bbTMKHZbDP0g; BDSVRTM=0</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"HTTP请求主要分为Get和Post两种方法\"><a href=\"#HTTP请求主要分为Get和Post两种方法\" class=\"headerlink\" title=\"HTTP请求主要分为Get和Post两种方法\"></a>HTTP请求主要分为Get和Post两种方法</h5><p>GET是从服务器上获取数据，POST是向服务器传送数据。<br>GET请求参数显示，都显示在浏览器网址上，HTTP服务器根据该请求所包含URL中的参数来产生响应内容，即“Get”请求的参数是URL的一部分。 例如： <a href=\"http://www.baidu.com/s?wd=Chinese\" target=\"_blank\" rel=\"noopener\">http://www.baidu.com/s?wd=Chinese</a><br>POST请求参数在请求体当中，消息长度没有限制而且以隐式的方式进行发送，通常用来向HTTP服务器提交量比较大的数据（比如请求中包含许多参数或者文件上传操作等），请求的参数包含在“Content-Type”消息头里，指明该消息体的媒体类型和编码。<br><em>注意：避免使用Get方式提交表单，因为有可能会导致安全问题。 比如说在登陆表单中用Get方式，用户输入的用户名和密码将在地址栏中暴露无遗。</em>  </p>\n<h5 id=\"常用的请求报头\"><a href=\"#常用的请求报头\" class=\"headerlink\" title=\"常用的请求报头\"></a>常用的请求报头</h5><ol>\n<li><p>Host (主机和端口号)<br>Host：对应网址URL中的Web名称和端口号，用于指定被请求资源的Internet主机和端口号，通常属于URL的一部分。</p>\n</li>\n<li><p>Connection (链接类型)<br>Connection：表示客户端与服务连接类型  </p>\n<ol>\n<li>Client 发起一个包含 Connection:keep-alive 的请求，HTTP/1.1使用 keep-alive 为默认值。  </li>\n<li>Server收到请求后：<br>如果 Server 支持 keep-alive，回复一个包含 Connection:keep-alive 的响应，不关闭连接；<br>如果 Server 不支持 keep-alive，回复一个包含 Connection:close 的响应，关闭连接；  </li>\n<li><p>如果client收到包含 Connection:keep-alive 的响应，向同一个连接发送下一个请求，直到一方主动关闭连接。  </p>\n<p><em>keep-alive在很多情况下能够重用连接，减少资源消耗，缩短响应时间，比如当浏览器需要多个文件时(比如一个HTML文件和相关的图形文件)，不需要每次都去请求建立连接。</em>  </p>\n</li>\n</ol>\n</li>\n<li><p>Upgrade-Insecure-Requests (升级为HTTPS请求)<br>Upgrade-Insecure-Requests：升级不安全的请求，意思是会在加载 http 资源时自动替换成 https 请求，让浏览器不再显示https页面中的http请求警报。<br>HTTPS 是以安全为目标的 HTTP 通道，所以在 HTTPS 承载的页面上不允许出现 HTTP 请求，一旦出现就是提示或报错。  </p>\n</li>\n<li><p>User-Agent (浏览器名称)<br>User-Agent：是客户浏览器的名称。</p>\n</li>\n<li><p>Accept (传输文件类型)<br>Accept：指浏览器或其他客户端可以接受的MIME（Multipurpose Internet Mail Extensions（多用途互联网邮件扩展））文件类型，服务器可以根据它判断并返回适当的文件格式。  </p>\n<blockquote>\n<p>Accept: <em>/</em>：表示什么都可以接收；<br>   Accept：image/gif：表明客户端希望接受GIF图像格式的资源；<br>   Accept：text/html：表明客户端希望接受html文本;<br>   Accept: text/html, application/xhtml+xml;q=0.9, image/*;q=0.8：表示浏览器支持的 MIME 类型分别是 html文本、xhtml和xml文档、所有的图像格式资源。  </p>\n</blockquote>\n<p> <em>q是权重系数，范围 0 =&lt; q &lt;= 1，q 值越大，请求越倾向于获得其“;”之前的类型表示的内容。若没有指定q值，则默认为1，按从左到右排序顺序；若被赋值为0，则用于表示浏览器不接受此内容类型。</em><br> <em>Text：用于标准化地表示的文本信息，文本消息可以是多种字符集和或者多种格式的；Application：用于传输应用程序数据或者二进制数据。</em>  </p>\n</li>\n<li><p>Referer(页面跳转处)<br>Referer：表明产生请求的网页来自于哪个URL，用户是从该 Referer页面访问到当前请求的页面。这个属性可以用来跟踪Web请求来自哪个页面，是从什么网站来的等。</p>\n<p>有时候遇到下载某网站图片，需要对应的referer，否则无法下载图片，那是因为人家做了防盗链，原理就是根据referer去判断是否是本网站的地址，如果不是，则拒绝，如果是，就可以下载；</p>\n</li>\n<li><p>Accept-Encoding（文件编解码格式）<br>Accept-Encoding：指出浏览器可以接受的编码方式。编码方式不同于文件格式，它是为了压缩文件并加速文件传递速度。浏览器在接收到Web响应之后先解码，然后再检查文件格式，许多情形下这可以减少大量的下载时间。  </p>\n<blockquote>\n<p>Accept-Encoding:gzip;q=1.0, identity; q=0.5, *;q=0<br> 如果有多个Encoding同时匹配, 按照q值顺序排列，本例中按顺序支持 gzip, identity压缩编码，支持gzip的浏览器会返回经过gzip编码的HTML页面。 如果请求消息中没有设置这个域服务器假定客户端对各种内容编码都可以接受。</p>\n</blockquote>\n</li>\n<li><p>Accept-Language（语言种类）<br>Accept-Langeuage：指出浏览器可以接受的语言种类，如en或en-us指英语，zh或者zh-cn指中文，当服务器能够提供一种以上的语言版本时要用到。</p>\n</li>\n<li><p>Accept-Charset（字符编码）<br>Accept-Charset：指出浏览器可以接受的字符编码。</p>\n<blockquote>\n<p>举例：Accept-Charset:iso-8859-1,gb2312,utf-8  </p>\n<ul>\n<li>ISO8859-1：通常叫做Latin-1。Latin-1包括了书写所有西方欧洲语言不可缺少的附加字符，英文浏览器的默认值是ISO-8859-1.</li>\n<li>gb2312：标准简体中文字符集;  </li>\n<li>utf-8：UNICODE 的一种变长字符编码，可以解决多种语言文本显示问题，从而实现应用国际化和本地化。<br>如果在请求消息中没有设置这个域，缺省是任何字符集都可以接受。  </li>\n</ul>\n</blockquote>\n</li>\n<li><p>Cookie （Cookie）<br>Cookie：浏览器用这个属性向服务器发送Cookie。Cookie是在浏览器中寄存的小型数据体，它可以记载和服务器相关的用户信息，也可以用来实现会话功能，以后会详细讲。</p>\n</li>\n<li><p>Content-Type (POST数据类型)<br>Content-Type：POST请求里用来表示的内容类型。</p>\n<blockquote>\n<p>Content-Type = Text/XML; charset=gb2312：<br> 指明该请求的消息体中包含的是纯文本的XML类型的数据，字符编码采用“gb2312”。</p>\n</blockquote>\n</li>\n</ol>\n<h4 id=\"服务端HTTP响应\"><a href=\"#服务端HTTP响应\" class=\"headerlink\" title=\"服务端HTTP响应\"></a>服务端HTTP响应</h4><p>HTTP响应也由四个部分组成，分别是： 状态行、消息报头、空行、响应正文</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">HTTP/1.1 200 OK</span><br><span class=\"line\">Server: Tengine</span><br><span class=\"line\">Connection: keep-alive</span><br><span class=\"line\">Date: Wed, 30 Nov 2016 07:58:21 GMT</span><br><span class=\"line\">Cache-Control: no-cache</span><br><span class=\"line\">Content-Type: text/html;charset=UTF-8</span><br><span class=\"line\">Keep-Alive: timeout=20</span><br><span class=\"line\">Vary: Accept-Encoding</span><br><span class=\"line\">Pragma: no-cache</span><br><span class=\"line\">X-NWS-LOG-UUID: bd27210a-24e5-4740-8f6c-25dbafa9c395</span><br><span class=\"line\">Content-Length: 180945</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; ....</span><br></pre></td></tr></table></figure>\n<h5 id=\"常用的响应报头\"><a href=\"#常用的响应报头\" class=\"headerlink\" title=\"常用的响应报头\"></a>常用的响应报头</h5><p>理论上所有的响应头信息都应该是回应请求头的。但是服务端为了效率，安全，还有其他方面的考虑，会添加相对应的响应头信息：</p>\n<ol>\n<li><p>Cache-Control：must-revalidate, no-cache, private。<br>这个值告诉客户端，服务端不希望客户端缓存资源，在下次请求资源时，必须要从新请求服务器，不能从缓存副本中获取资源。  </p>\n<ul>\n<li>Cache-Control是响应头中很重要的信息，当客户端请求头中包含Cache-Control:max-age=0请求，明确表示不会缓存服务器资源时,Cache-Control作为作为回应信息，通常会返回no-cache，意思就是说，”那不缓存了”。</li>\n<li>当客户端在请求头中没有包含Cache-Control时，服务端往往会定,不同的资源不同的缓存策略，比如说oschina在缓存图片资源的策略就是Cache-Control：max-age=86400,这个意思是，从当前时间开始，在86400秒的时间内，客户端可以直接从缓存副本中读取资源，而不需要向服务器请求。  </li>\n</ul>\n</li>\n<li><p>Connection：keep-alive<br>这个字段作为回应客户端的Connection：keep-alive，告诉客户端服务器的tcp连接也是一个长连接，客户端可以继续使用这个tcp连接发送http请求。  </p>\n</li>\n<li><p>Content-Encoding:gzip<br>告诉客户端，服务端发送的资源是采用gzip编码的，客户端看到这个信息后，应该采用gzip对资源进行解码。  </p>\n</li>\n<li><p>Content-Type：text/html;charset=UTF-8<br>告诉客户端，资源文件的类型，还有字符编码，客户端通过utf-8对资源进行解码，然后对资源进行html解析。如果我们看到有些网站是乱码的，往往就是服务器端没有返回正确的编码。  </p>\n</li>\n<li><p>Date：Sun, 21 Sep 2016 06:18:21 GMT<br>这个是服务端发送资源时的服务器时间，GMT是格林尼治所在地的标准时间。http协议中发送的时间都是GMT的，这主要是解决在互联网上，不同时区在相互请求资源的时候，时间混乱问题。</p>\n</li>\n<li><p>Expires:Sun, 1 Jan 2000 01:00:00 GMT<br>这个响应头也跟缓存有关，告诉客户端在这个时间前，可以直接访问缓存副本，很显然这个值会存在问题，因为客户端和服务器的时间不一定会都是相同的，如果时间不同就会导致问题。所以这个响应头是没有Cache-Control：max-age=*这个响应头准确的，因为max-age=date中的date是个相对时间，不仅更好理解，也更准确。</p>\n</li>\n<li><p>Pragma:no-cache<br>这个含义与Cache-Control等同。</p>\n</li>\n<li><p>Server：Tengine/1.4.6<br>这个是服务器和相对应的版本，只是告诉客户端服务器的信息。</p>\n</li>\n<li><p>Transfer-Encoding：chunked<br>这个响应头告诉客户端，服务器发送的资源的方式是分块发送的。一般分块发送的资源都是服务器动态生成的，在发送时还不知道发送资源的大小，所以采用分块发送，每一块都是独立的，独立的块都能标示自己的长度，最后一块是0长度的，当客户端读到这个0长度的块时，就可以确定资源已经传输完了。</p>\n</li>\n<li><p>Vary: Accept-Encoding<br>告诉缓存服务器，缓存压缩文件和非压缩文件两个版本，现在这个字段用处并不大，因为现在的浏览器都是支持压缩的。  </p>\n</li>\n</ol>\n<h5 id=\"响应状态码\"><a href=\"#响应状态码\" class=\"headerlink\" title=\"响应状态码\"></a>响应状态码</h5><p>响应状态代码有三位数字组成，第一个数字定义了响应的类别，且有五种可能取值。  </p>\n<blockquote>\n<p>常见状态码：  </p>\n<ul>\n<li>100~199：表示服务器成功接收部分请求，要求客户端继续提交其余请求才能完成整个处理过程。</li>\n<li>200~299：表示服务器成功接收请求并已完成整个处理过程。常用200（OK 请求成功）。</li>\n<li>300~399：为完成请求，客户需进一步细化请求。例如：请求的资源已经移动一个新地址、常用302（所请求的页面已经临时转移至新的url）、307和304（使用缓存资源）。</li>\n<li>400~499：客户端的请求有错误，常用404（服务器无法找到被请求的页面）、403（服务器拒绝访问，权限不够）。</li>\n<li>500~599：服务器端出现错误，常用500（请求未完成。服务器遇到不可预知的情况）。  </li>\n</ul>\n</blockquote>\n<h4 id=\"Cookie-和-Session：\"><a href=\"#Cookie-和-Session：\" class=\"headerlink\" title=\"Cookie 和 Session：\"></a>Cookie 和 Session：</h4><p>服务器和客户端的交互仅限于请求/响应过程，结束之后便断开，在下一次请求时，服务器会认为新的客户端。<br>为了维护他们之间的链接，让服务器知道这是前一个用户发送的请求，必须在一个地方保存客户端的信息。<br><em>Cookie</em>：通过在 客户端 记录的信息确定用户的身份。<br><em>Session</em>：通过在 服务器端 记录的信息确定用户的身份。 </p>\n<h3 id=\"HTTP代理神器Fiddler\"><a href=\"#HTTP代理神器Fiddler\" class=\"headerlink\" title=\"HTTP代理神器Fiddler\"></a>HTTP代理神器Fiddler</h3><h3 id=\"urllib库的基本使用\"><a href=\"#urllib库的基本使用\" class=\"headerlink\" title=\"urllib库的基本使用\"></a>urllib库的基本使用</h3><p>所谓网页抓取，就是把URL地址中指定的网络资源从网络流中读取出来，保存到本地。 在Python3中一般使用urllib库。</p>\n<h4 id=\"urlopen和Request\"><a href=\"#urlopen和Request\" class=\"headerlink\" title=\"urlopen和Request\"></a>urlopen和Request</h4><p>可以直接使用urlopen()打开一个网页；但是，如果需要执行更复杂的操作，比如增加HTTP报头，必须创建一个 Request 实例来作为urlopen()的参数；而需要访问的url地址则作为 Request 实例的参数。  </p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> urllib <span class=\"keyword\">import</span> request</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_page_info</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">    headers = &#123;</span><br><span class=\"line\">        <span class=\"string\">\"User-Agent\"</span>: <span class=\"string\">\"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36\"</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    req = request.Request(<span class=\"string\">\"http://www.baidu.com/\"</span>, headers=headers)</span><br><span class=\"line\">    res = request.urlopen(req)</span><br><span class=\"line\">    html = res.read()</span><br><span class=\"line\">    <span class=\"comment\"># 请求页面的源代码</span></span><br><span class=\"line\">    print(html)</span><br><span class=\"line\">    <span class=\"comment\"># 请求的状态码</span></span><br><span class=\"line\">    print(res.getcode())</span><br><span class=\"line\">    <span class=\"comment\"># 请求的链接</span></span><br><span class=\"line\">    print(res.geturl())</span><br><span class=\"line\">    <span class=\"comment\"># 请求头信息</span></span><br><span class=\"line\">    print(res.info())</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">\"__main__\"</span>:</span><br><span class=\"line\">    get_page_info()</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>新建Request实例，除了必须要有 url 参数之外，还可以设置另外两个参数：  </p>\n<ul>\n<li>data（默认空）：是伴随 url 提交的数据（比如要post的数据），同时 HTTP 请求将从 “GET”方式 改为 “POST”方式。  </li>\n<li>headers（默认空）：是一个字典，包含了需要发送的HTTP报头的键值对。  </li>\n</ul>\n</blockquote>\n<h4 id=\"User-Agent\"><a href=\"#User-Agent\" class=\"headerlink\" title=\"User-Agent\"></a>User-Agent</h4><p>浏览器就是互联网世界上公认被允许的身份，如果我们希望我们的爬虫程序更像一个真实用户，那我们第一步，就是需要伪装成一个被公认的浏览器。用不同的浏览器在发送请求的时候，会有不同的User-Agent头。 urllib默认的User-Agent头为：Python-urllib/x.y（x和y是Python主版本和次版本号）</p>\n<h4 id=\"添加更多的Header信息\"><a href=\"#添加更多的Header信息\" class=\"headerlink\" title=\"添加更多的Header信息\"></a>添加更多的Header信息</h4><p>在 HTTP Request 中加入特定的 Header，来构造一个完整的HTTP请求消息。</p>\n<ul>\n<li>可以通过调用Request.add_header() 添加/修改一个特定的header </li>\n<li>也可以通过调用Request.get_header()来查看已有的header。</li>\n</ul>\n<h4 id=\"parse-urlencode\"><a href=\"#parse-urlencode\" class=\"headerlink\" title=\"parse.urlencode()\"></a>parse.urlencode()</h4><p>一般HTTP请求提交数据，需要编码成URL编码格式，然后做为url的一部分，或者作为参数传到Request对象中。<br>此时需要使用parse.urlencode对需要提交的数据进行编码。</p>\n<h4 id=\"Get方式\"><a href=\"#Get方式\" class=\"headerlink\" title=\"Get方式\"></a>Get方式</h4><p>GET请求一般用于向服务器获取数据。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> urllib <span class=\"keyword\">import</span> request, parse</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">baidu_search_by_keyword</span><span class=\"params\">(kw)</span>:</span></span><br><span class=\"line\">    url = <span class=\"string\">\"http://www.baidu.com/\"</span></span><br><span class=\"line\">    wd = &#123;<span class=\"string\">\"wd\"</span>: kw&#125;</span><br><span class=\"line\">    wd = parse.urlencode(wd)</span><br><span class=\"line\"></span><br><span class=\"line\">    full_url = url + <span class=\"string\">\"s?\"</span> + wd</span><br><span class=\"line\"></span><br><span class=\"line\">    headers = &#123;</span><br><span class=\"line\">        <span class=\"string\">\"User-Agent\"</span>: <span class=\"string\">\"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36\"</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    req = request.Request(full_url, headers=headers)</span><br><span class=\"line\">    res = request.urlopen(req)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">with</span> open(<span class=\"string\">\"02_result.html\"</span>, <span class=\"string\">\"wb\"</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">        f.write(res.read())</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">\"__main__\"</span>:</span><br><span class=\"line\">    keyword = input(<span class=\"string\">\"请输入要搜索的内容：\"</span>)</span><br><span class=\"line\">    baidu_search_by_keyword(keyword)</span><br></pre></td></tr></table></figure>\n<h5 id=\"批量爬取贴吧页面数据\"><a href=\"#批量爬取贴吧页面数据\" class=\"headerlink\" title=\"批量爬取贴吧页面数据\"></a>批量爬取贴吧页面数据</h5><p>首先需要对百度贴吧的链接进行分析，找出其中的规律。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> urllib <span class=\"keyword\">import</span> request, parse</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">tieba_spider</span><span class=\"params\">(url, beginpage, endpage)</span>:</span></span><br><span class=\"line\">    <span class=\"string\">\"\"\"</span></span><br><span class=\"line\"><span class=\"string\">        作用：负责处理url，分配每个url去发送请求</span></span><br><span class=\"line\"><span class=\"string\">        url：需要处理的第一个url</span></span><br><span class=\"line\"><span class=\"string\">        beginPage: 爬虫执行的起始页面</span></span><br><span class=\"line\"><span class=\"string\">        endPage: 爬虫执行的截止页面</span></span><br><span class=\"line\"><span class=\"string\">    \"\"\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> page <span class=\"keyword\">in</span> range(beginpage, endpage + <span class=\"number\">1</span>):</span><br><span class=\"line\">        pn = (page - <span class=\"number\">1</span>) * <span class=\"number\">50</span></span><br><span class=\"line\"></span><br><span class=\"line\">        filename = <span class=\"string\">\"第\"</span> + str(page) + <span class=\"string\">\"页.html\"</span></span><br><span class=\"line\">        <span class=\"comment\"># 组合为完整的 url，并且pn值每次增加50</span></span><br><span class=\"line\">        fullurl = url + <span class=\"string\">\"&amp;pn=\"</span> + str(pn)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 调用loadPage()发送请求获取HTML页面</span></span><br><span class=\"line\">        html = load_page(fullurl, filename)</span><br><span class=\"line\">        <span class=\"comment\"># 将获取到的HTML页面写入本地磁盘文件</span></span><br><span class=\"line\">        write_file(html, filename)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">load_page</span><span class=\"params\">(url, filename)</span>:</span></span><br><span class=\"line\">    <span class=\"string\">\"\"\" </span></span><br><span class=\"line\"><span class=\"string\">        作用：根据url发送请求，获取服务器响应文件</span></span><br><span class=\"line\"><span class=\"string\">        url：需要爬取的url地址</span></span><br><span class=\"line\"><span class=\"string\">        filename: 文件名</span></span><br><span class=\"line\"><span class=\"string\">    \"\"\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">    print(<span class=\"string\">\"正在下载\"</span> + filename)</span><br><span class=\"line\">    headers = &#123;<span class=\"string\">\"User-Agent\"</span>: <span class=\"string\">\"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0;\"</span>&#125;</span><br><span class=\"line\">    req = request.Request(url, headers=headers)</span><br><span class=\"line\">    res = request.urlopen(req)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res.read()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">write_file</span><span class=\"params\">(html, filename)</span>:</span></span><br><span class=\"line\">    <span class=\"string\">\"\"\"</span></span><br><span class=\"line\"><span class=\"string\">        作用：保存服务器响应文件到本地磁盘文件里</span></span><br><span class=\"line\"><span class=\"string\">        html: 服务器响应文件</span></span><br><span class=\"line\"><span class=\"string\">        filename: 本地磁盘文件名</span></span><br><span class=\"line\"><span class=\"string\">    \"\"\"</span></span><br><span class=\"line\">    print(<span class=\"string\">\"正在存储\"</span> + filename)</span><br><span class=\"line\">    <span class=\"keyword\">with</span> open(filename, <span class=\"string\">'wb'</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">        f.write(html)</span><br><span class=\"line\">    print(<span class=\"string\">\"-\"</span> * <span class=\"number\">20</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">\"__main__\"</span>:</span><br><span class=\"line\">    kw = input(<span class=\"string\">\"请输入需要爬取的贴吧:\"</span>)</span><br><span class=\"line\">    <span class=\"comment\"># 输入起始页和终止页，str转成int类型</span></span><br><span class=\"line\">    beginPage = int(input(<span class=\"string\">\"请输入起始页：\"</span>))</span><br><span class=\"line\">    endPage = int(input(<span class=\"string\">\"请输入终止页：\"</span>))</span><br><span class=\"line\">    url = <span class=\"string\">\"http://tieba.baidu.com/f?\"</span></span><br><span class=\"line\">    key = parse.urlencode(&#123;<span class=\"string\">\"kw\"</span>: kw&#125;)</span><br><span class=\"line\">    <span class=\"comment\"># 组合后的url示例：http://tieba.baidu.com/f?kw=python</span></span><br><span class=\"line\">    url = url + key</span><br><span class=\"line\">    tieba_spider(url, beginPage, endPage)</span><br></pre></td></tr></table></figure>\n<h4 id=\"POST方式\"><a href=\"#POST方式\" class=\"headerlink\" title=\"POST方式\"></a>POST方式</h4><p>Request请求对象的里有data参数，它就是用在POST里的，此时要传送的数据就是这个参数data，data是一个字典，里面要匹配键值对。  </p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> urllib <span class=\"keyword\">import</span> request, parse</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">youdao_translate</span><span class=\"params\">(keyword)</span>:</span></span><br><span class=\"line\">    url = <span class=\"string\">\"http://fanyi.youdao.com/translate?smartresult=dict&amp;smartresult=rule\"</span></span><br><span class=\"line\">    headers = &#123;</span><br><span class=\"line\">        <span class=\"string\">\"User-Agent\"</span>: <span class=\"string\">\"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36\"</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    formdata = &#123;</span><br><span class=\"line\">        <span class=\"string\">\"from\"</span>: <span class=\"string\">\"AUTO\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"to\"</span>: <span class=\"string\">\"AUTO\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"i\"</span>: keyword,</span><br><span class=\"line\">        <span class=\"string\">\"smartresult\"</span>: <span class=\"string\">\"dict\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"client\"</span>: <span class=\"string\">\"fanyideskweb\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"doctype\"</span>: <span class=\"string\">\"json\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"version\"</span>: <span class=\"string\">\"2.1\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"keyfrom\"</span>: <span class=\"string\">\"fanyi.web\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"ue\"</span>: <span class=\"string\">\"UTF-8\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"action\"</span>: <span class=\"string\">\"FY_BY_ENTER\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"typoResult\"</span>: <span class=\"string\">\"false\"</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    data = parse.urlencode(formdata).encode(<span class=\"string\">'utf-8'</span>)</span><br><span class=\"line\">    req = request.Request(url, data=data, headers=headers)</span><br><span class=\"line\">    res = request.urlopen(req)</span><br><span class=\"line\"></span><br><span class=\"line\">    print(res.read().decode(<span class=\"string\">'utf-8'</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">\"__main__\"</span>:</span><br><span class=\"line\">    youdao_translate(<span class=\"string\">\"黑暗\"</span>)</span><br></pre></td></tr></table></figure>\n<h4 id=\"获取AJAX加载的内容\"><a href=\"#获取AJAX加载的内容\" class=\"headerlink\" title=\"获取AJAX加载的内容\"></a>获取AJAX加载的内容</h4><p>有些网页内容使用AJAX加载，AJAX一般返回的是JSON，直接对AJAX地址进行post或get，就返回JSON数据了。<br>在写爬虫程序时，最需要关注的，是数据的来源。  </p>\n<h4 id=\"处理HTTPS请求-SSL证书验证\"><a href=\"#处理HTTPS请求-SSL证书验证\" class=\"headerlink\" title=\"处理HTTPS请求 SSL证书验证\"></a>处理HTTPS请求 SSL证书验证</h4><p>在访问网页的时候则会报出SSLError：<br>urllib.error.URLError:&lt;urlopen error [SSL: CERTIFICATE_VERIFY_FAILED] certificate verity failed (.ssl.c:777)</p>\n<p>此时需要单独处理SSL证书，让程序忽略SSL证书验证错误，即可正常访问。解决办法：  </p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> ssl</span><br><span class=\"line\"></span><br><span class=\"line\">ssl._create_default_https_context = ssl._create_unverified_context</span><br></pre></td></tr></table></figure>\n<h4 id=\"关于CA\"><a href=\"#关于CA\" class=\"headerlink\" title=\"关于CA\"></a>关于CA</h4><p>CA(Certificate Authority)是数字证书认证中心的简称，是指发放、管理、废除数字证书的受信任的第三方机构，如北京数字认证股份有限公司、上海市数字证书认证中心有限公司等。<br>CA的作用是检查证书持有者身份的合法性，并签发证书，以防证书被伪造或篡改，以及对证书和密钥进行管理。<br>现实生活中可以用身份证来证明身份， 那么在网络世界里，数字证书就是身份证。和现实生活不同的是，并不是每个上网的用户都有数字证书的，往往只有当一个人需要证明自己的身份的时候才需要用到数字证书。<br>普通用户一般是不需要，因为网站并不关心是谁访问了网站，现在的网站只关心流量。但是反过来，网站就需要证明自己的身份了。<br>比如说现在钓鱼网站很多的，比如你想访问的是www.baidu.com，但其实你访问的是www.daibu.com”，所以在提交自己的隐私信息之前需要验证一下网站的身份，要求网站出示数字证书。<br>一般正常的网站都会主动出示自己的数字证书，来确保客户端和网站服务器之间的通信数据是加密安全的。  </p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"通用爬虫和聚焦爬虫\"><a href=\"#通用爬虫和聚焦爬虫\" class=\"headerlink\" title=\"通用爬虫和聚焦爬虫\"></a>通用爬虫和聚焦爬虫</h3><p>根据使用场景，网络爬虫可分为通用爬虫和聚焦爬虫两种。</p>\n<h4 id=\"通用爬虫\"><a href=\"#通用爬虫\" class=\"headerlink\" title=\"通用爬虫\"></a>通用爬虫</h4><p>通用网络爬虫是搜索引擎抓取系统的重要组成部分。主要目的是将互联网上的网页下载到本地，形成一个互联网内容的镜像备份。</p>\n<h5 id=\"通用搜索引擎的工作原理\"><a href=\"#通用搜索引擎的工作原理\" class=\"headerlink\" title=\"通用搜索引擎的工作原理\"></a>通用搜索引擎的工作原理</h5><p>通用网络爬虫 从互联网中搜集网页，采集信息，这些网页信息用于为搜索引擎建立索引从而提供支持，它决定着整个引擎系统的内容是否丰富，信息是否即时，因此其性能的优劣直接影响着搜索引擎的效果。</p>\n<p>第一步：抓取网页<br>搜索引擎网络爬虫的基本工作流程如下：</p>\n<ol>\n<li><p>首先选取一部分的种子URL </p>\n</li>\n<li><p>将这些URL放入待抓取URL队列；</p>\n</li>\n<li>取出待抓取URL，解析DNS得到主机的IP，并将URL对应的网页下载下来，存储进已下载网页库中，并且将这些URL放进已抓取URL队列；</li>\n<li>分析已抓取URL队列中的URL，分析其中的其他URL，并且将URL放入待抓取URL队列，从而进入下一个循环。</li>\n</ol>\n<p>但是搜索引擎蜘蛛的爬行是被输入了一定的规则的，它需要遵从一些命令或文件的内容，如标注为nofollow的链接，或者是Robots协议。</p>\n<blockquote>\n<p>Robots协议（也叫爬虫协议、机器人协议等），全称是“网络爬虫排除标准”（Robots Exclusion Protocol），网站通过Robots协议告诉搜索引擎哪些页面可以抓取，哪些页面不能抓取，例如：<br>  淘宝网：<a href=\"https://www.taobao.com/robots.txt\" target=\"_blank\" rel=\"noopener\">https://www.taobao.com/robots.txt</a><br>  腾讯网： <a href=\"http://www.qq.com/robots.txt\" target=\"_blank\" rel=\"noopener\">http://www.qq.com/robots.txt</a></p>\n</blockquote>\n<p>第二步：数据存储<br>搜索引擎通过爬虫爬取到的网页，将数据存入原始页面数据库。其中的页面数据与用户浏览器得到的HTML是完全一样的。<br>搜索引擎蜘蛛在抓取页面时，也做一定的重复内容检测，一旦遇到访问权重很低的网站上有大量抄袭、采集或者复制的内容，很可能就不再爬行。</p>\n<p>第三步：预处理<br>搜索引擎将爬虫抓取回来的页面，进行各种步骤的预处理。</p>\n<ul>\n<li>提取文字</li>\n<li>中文分词</li>\n<li>消除噪音（比如版权声明文字、导航条、广告等……）</li>\n<li>索引处理</li>\n<li>链接关系计算</li>\n<li>特殊文件处理</li>\n<li>…</li>\n</ul>\n<p>除了HTML文件外，搜索引擎通常还能抓取和索引以文字为基础的多种文件类型，如 PDF、Word、WPS、XLS、PPT、TXT 文件等。我们在搜索结果中也经常会看到这些文件类型。<br>但搜索引擎还不能处理图片、视频、Flash 这类非文字内容，也不能执行脚本和程序。</p>\n<p>第四步：提供检索服务，网站排名<br>搜索引擎在对信息进行组织和处理后，为用户提供关键字检索服务，将用户检索相关的信息展示给用户。<br>同时会根据页面的PageRank值（链接的访问量排名）来进行网站排名，这样Rank值高的网站在搜索结果中会排名较前，当然也可以直接使用 Money 购买搜索引擎网站排名，简单粗暴。</p>\n<p><strong>但是，这些通用性搜索引擎也存在着一定的局限性：</strong></p>\n<ol>\n<li>通用搜索引擎所返回的结果都是网页，而大多情况下，网页里90%的内容对用户来说都是无用的。</li>\n<li>不同领域、不同背景的用户往往具有不同的检索目的和需求，搜索引擎无法提供针对具体某个用户的搜索结果。</li>\n<li>万维网数据形式的丰富和网络技术的不断发展，图片、数据库、音频、视频多媒体等不同数据大量出现，通用搜索引擎对这些文件无能为力，不能很好地发现和获取。</li>\n<li>通用搜索引擎大多提供基于关键字的检索，难以支持根据语义信息提出的查询，无法准确理解用户的具体需求。</li>\n</ol>\n<h4 id=\"聚焦爬虫\"><a href=\"#聚焦爬虫\" class=\"headerlink\" title=\"聚焦爬虫\"></a>聚焦爬虫</h4><p>聚焦爬虫，是”面向特定主题需求”的一种网络爬虫程序，它与通用搜索引擎爬虫的区别在于：<strong><em>聚焦爬虫在实施网页抓取时会对内容进行处理筛选，尽量保证只抓取与需求相关的网页信息</em></strong>。</p>\n<h3 id=\"HTTP-HTTPS的请求与相应\"><a href=\"#HTTP-HTTPS的请求与相应\" class=\"headerlink\" title=\"HTTP/HTTPS的请求与相应\"></a>HTTP/HTTPS的请求与相应</h3><h4 id=\"HTTP和HTTPS\"><a href=\"#HTTP和HTTPS\" class=\"headerlink\" title=\"HTTP和HTTPS\"></a>HTTP和HTTPS</h4><p>HTTP协议（HyperText Transfer Protocol，超文本传输协议）：是一种发布和接收 HTML页面的方法。<br>HTTPS（Hypertext Transfer Protocol over Secure Socket Layer）简单讲是HTTP的安全版，在HTTP下加入SSL层。<br>SSL（Secure Sockets Layer 安全套接层）主要用于Web的安全传输协议，在传输层对网络连接进行加密，保障在Internet上数据传输的安全。  </p>\n<blockquote>\n<p>HTTP的端口号为80<br>  HTTPS的端口号为443</p>\n</blockquote>\n<h4 id=\"HTTP的请求与响应\"><a href=\"#HTTP的请求与响应\" class=\"headerlink\" title=\"HTTP的请求与响应\"></a>HTTP的请求与响应</h4><p>HTTP通信由两部分组成：<em>客户端请求消息</em>与<em>服务器响应消息</em>。</p>\n<h5 id=\"浏览器发送HTTP请求的过程：\"><a href=\"#浏览器发送HTTP请求的过程：\" class=\"headerlink\" title=\"浏览器发送HTTP请求的过程：\"></a>浏览器发送HTTP请求的过程：</h5><p>当用户在浏览器的地址栏中输入一个URL并按回车键之后，浏览器会向HTTP服务器发送HTTP请求。HTTP请求主要分为“Get”和“Post”两种方法。<br>当我们在浏览器输入URL <a href=\"http://www.baidu.com\" target=\"_blank\" rel=\"noopener\">http://www.baidu.com</a> 的时候，浏览器发送一个Request请求去获取 <a href=\"http://www.baidu.com\" target=\"_blank\" rel=\"noopener\">http://www.baidu.com</a> 的html文件，服务器把Response文件对象发送回给浏览器。<br>浏览器分析Response中的 HTML，发现其中引用了很多其他文件，比如Images文件，CSS文件，JS文件。 浏览器会自动再次发送Request去获取图片，CSS文件，或者JS文件。<br>当所有的文件都下载成功后，网页会根据HTML语法结构，完整的显示出来了。<br>URL（Uniform / Universal Resource Locator的缩写）：统一资源定位符，是用于完整地描述Internet上网页和其他资源的地址的一种标识方法。  </p>\n<p>基本格式：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scheme://host[:port#]/path/…/[?query-string][#anchor]</span><br></pre></td></tr></table></figure></p>\n<ul>\n<li>scheme：协议(例如：http, https, ftp)</li>\n<li>host：服务器的IP地址或者域名</li>\n<li>port#：服务器的端口（如果是走协议默认端口，缺省端口80）</li>\n<li>path：访问资源的路径</li>\n<li>query-string：参数，发送给http服务器的数据</li>\n<li>anchor：锚（跳转到网页的指定锚点位置）</li>\n</ul>\n<h4 id=\"客户端HTTP请求\"><a href=\"#客户端HTTP请求\" class=\"headerlink\" title=\"客户端HTTP请求\"></a>客户端HTTP请求</h4><p>URL只是标识资源的位置，而HTTP是用来提交和获取资源。客户端发送一个HTTP请求到服务器的请求消息，包括以下格式：  </p>\n<blockquote>\n<p>请求行、请求头部、空行、请求数据</p>\n</blockquote>\n<p><img src=\"/images/spider/client_request_format.png\" alt=\"&quot;HTTP请求报文格式&quot;\">  </p>\n<p>一个典型的HTTP请求示例：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">GET https://www.baidu.com/ HTTP/1.1</span><br><span class=\"line\">Host: www.baidu.com</span><br><span class=\"line\">Connection: keep-alive</span><br><span class=\"line\">Upgrade-Insecure-Requests: 1</span><br><span class=\"line\">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.99 Safari/537.36</span><br><span class=\"line\">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</span><br><span class=\"line\">Referer: http://www.baidu.com/</span><br><span class=\"line\">Accept-Encoding: gzip, deflate, sdch, br</span><br><span class=\"line\">Accept-Language: zh-CN,zh;q=0.8,en;q=0.6</span><br><span class=\"line\">Cookie: BAIDUID=04E4001F34EA74AD4601512DD3C41A7B:FG=1; BIDUPSID=04E4001F34EA74AD4601512DD3C41A7B; PSTM=1470329258; MCITY=-343%3A340%3A; BDUSS=nF0MVFiMTVLcUh-Q2MxQ0M3STZGQUZ4N2hBa1FFRkIzUDI3QlBCZjg5cFdOd1pZQVFBQUFBJCQAAAAAAAAAAAEAAADpLvgG0KGyvLrcyfrG-AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFaq3ldWqt5XN; H_PS_PSSID=1447_18240_21105_21386_21454_21409_21554; BD_UPN=12314753; sug=3; sugstore=0; ORIGIN=0; bdime=0; H_PS_645EC=7e2ad3QHl181NSPbFbd7PRUCE1LlufzxrcFmwYin0E6b%2BW8bbTMKHZbDP0g; BDSVRTM=0</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"HTTP请求主要分为Get和Post两种方法\"><a href=\"#HTTP请求主要分为Get和Post两种方法\" class=\"headerlink\" title=\"HTTP请求主要分为Get和Post两种方法\"></a>HTTP请求主要分为Get和Post两种方法</h5><p>GET是从服务器上获取数据，POST是向服务器传送数据。<br>GET请求参数显示，都显示在浏览器网址上，HTTP服务器根据该请求所包含URL中的参数来产生响应内容，即“Get”请求的参数是URL的一部分。 例如： <a href=\"http://www.baidu.com/s?wd=Chinese\" target=\"_blank\" rel=\"noopener\">http://www.baidu.com/s?wd=Chinese</a><br>POST请求参数在请求体当中，消息长度没有限制而且以隐式的方式进行发送，通常用来向HTTP服务器提交量比较大的数据（比如请求中包含许多参数或者文件上传操作等），请求的参数包含在“Content-Type”消息头里，指明该消息体的媒体类型和编码。<br><em>注意：避免使用Get方式提交表单，因为有可能会导致安全问题。 比如说在登陆表单中用Get方式，用户输入的用户名和密码将在地址栏中暴露无遗。</em>  </p>\n<h5 id=\"常用的请求报头\"><a href=\"#常用的请求报头\" class=\"headerlink\" title=\"常用的请求报头\"></a>常用的请求报头</h5><ol>\n<li><p>Host (主机和端口号)<br>Host：对应网址URL中的Web名称和端口号，用于指定被请求资源的Internet主机和端口号，通常属于URL的一部分。</p>\n</li>\n<li><p>Connection (链接类型)<br>Connection：表示客户端与服务连接类型  </p>\n<ol>\n<li>Client 发起一个包含 Connection:keep-alive 的请求，HTTP/1.1使用 keep-alive 为默认值。  </li>\n<li>Server收到请求后：<br>如果 Server 支持 keep-alive，回复一个包含 Connection:keep-alive 的响应，不关闭连接；<br>如果 Server 不支持 keep-alive，回复一个包含 Connection:close 的响应，关闭连接；  </li>\n<li><p>如果client收到包含 Connection:keep-alive 的响应，向同一个连接发送下一个请求，直到一方主动关闭连接。  </p>\n<p><em>keep-alive在很多情况下能够重用连接，减少资源消耗，缩短响应时间，比如当浏览器需要多个文件时(比如一个HTML文件和相关的图形文件)，不需要每次都去请求建立连接。</em>  </p>\n</li>\n</ol>\n</li>\n<li><p>Upgrade-Insecure-Requests (升级为HTTPS请求)<br>Upgrade-Insecure-Requests：升级不安全的请求，意思是会在加载 http 资源时自动替换成 https 请求，让浏览器不再显示https页面中的http请求警报。<br>HTTPS 是以安全为目标的 HTTP 通道，所以在 HTTPS 承载的页面上不允许出现 HTTP 请求，一旦出现就是提示或报错。  </p>\n</li>\n<li><p>User-Agent (浏览器名称)<br>User-Agent：是客户浏览器的名称。</p>\n</li>\n<li><p>Accept (传输文件类型)<br>Accept：指浏览器或其他客户端可以接受的MIME（Multipurpose Internet Mail Extensions（多用途互联网邮件扩展））文件类型，服务器可以根据它判断并返回适当的文件格式。  </p>\n<blockquote>\n<p>Accept: <em>/</em>：表示什么都可以接收；<br>   Accept：image/gif：表明客户端希望接受GIF图像格式的资源；<br>   Accept：text/html：表明客户端希望接受html文本;<br>   Accept: text/html, application/xhtml+xml;q=0.9, image/*;q=0.8：表示浏览器支持的 MIME 类型分别是 html文本、xhtml和xml文档、所有的图像格式资源。  </p>\n</blockquote>\n<p> <em>q是权重系数，范围 0 =&lt; q &lt;= 1，q 值越大，请求越倾向于获得其“;”之前的类型表示的内容。若没有指定q值，则默认为1，按从左到右排序顺序；若被赋值为0，则用于表示浏览器不接受此内容类型。</em><br> <em>Text：用于标准化地表示的文本信息，文本消息可以是多种字符集和或者多种格式的；Application：用于传输应用程序数据或者二进制数据。</em>  </p>\n</li>\n<li><p>Referer(页面跳转处)<br>Referer：表明产生请求的网页来自于哪个URL，用户是从该 Referer页面访问到当前请求的页面。这个属性可以用来跟踪Web请求来自哪个页面，是从什么网站来的等。</p>\n<p>有时候遇到下载某网站图片，需要对应的referer，否则无法下载图片，那是因为人家做了防盗链，原理就是根据referer去判断是否是本网站的地址，如果不是，则拒绝，如果是，就可以下载；</p>\n</li>\n<li><p>Accept-Encoding（文件编解码格式）<br>Accept-Encoding：指出浏览器可以接受的编码方式。编码方式不同于文件格式，它是为了压缩文件并加速文件传递速度。浏览器在接收到Web响应之后先解码，然后再检查文件格式，许多情形下这可以减少大量的下载时间。  </p>\n<blockquote>\n<p>Accept-Encoding:gzip;q=1.0, identity; q=0.5, *;q=0<br> 如果有多个Encoding同时匹配, 按照q值顺序排列，本例中按顺序支持 gzip, identity压缩编码，支持gzip的浏览器会返回经过gzip编码的HTML页面。 如果请求消息中没有设置这个域服务器假定客户端对各种内容编码都可以接受。</p>\n</blockquote>\n</li>\n<li><p>Accept-Language（语言种类）<br>Accept-Langeuage：指出浏览器可以接受的语言种类，如en或en-us指英语，zh或者zh-cn指中文，当服务器能够提供一种以上的语言版本时要用到。</p>\n</li>\n<li><p>Accept-Charset（字符编码）<br>Accept-Charset：指出浏览器可以接受的字符编码。</p>\n<blockquote>\n<p>举例：Accept-Charset:iso-8859-1,gb2312,utf-8  </p>\n<ul>\n<li>ISO8859-1：通常叫做Latin-1。Latin-1包括了书写所有西方欧洲语言不可缺少的附加字符，英文浏览器的默认值是ISO-8859-1.</li>\n<li>gb2312：标准简体中文字符集;  </li>\n<li>utf-8：UNICODE 的一种变长字符编码，可以解决多种语言文本显示问题，从而实现应用国际化和本地化。<br>如果在请求消息中没有设置这个域，缺省是任何字符集都可以接受。  </li>\n</ul>\n</blockquote>\n</li>\n<li><p>Cookie （Cookie）<br>Cookie：浏览器用这个属性向服务器发送Cookie。Cookie是在浏览器中寄存的小型数据体，它可以记载和服务器相关的用户信息，也可以用来实现会话功能，以后会详细讲。</p>\n</li>\n<li><p>Content-Type (POST数据类型)<br>Content-Type：POST请求里用来表示的内容类型。</p>\n<blockquote>\n<p>Content-Type = Text/XML; charset=gb2312：<br> 指明该请求的消息体中包含的是纯文本的XML类型的数据，字符编码采用“gb2312”。</p>\n</blockquote>\n</li>\n</ol>\n<h4 id=\"服务端HTTP响应\"><a href=\"#服务端HTTP响应\" class=\"headerlink\" title=\"服务端HTTP响应\"></a>服务端HTTP响应</h4><p>HTTP响应也由四个部分组成，分别是： 状态行、消息报头、空行、响应正文</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">HTTP/1.1 200 OK</span><br><span class=\"line\">Server: Tengine</span><br><span class=\"line\">Connection: keep-alive</span><br><span class=\"line\">Date: Wed, 30 Nov 2016 07:58:21 GMT</span><br><span class=\"line\">Cache-Control: no-cache</span><br><span class=\"line\">Content-Type: text/html;charset=UTF-8</span><br><span class=\"line\">Keep-Alive: timeout=20</span><br><span class=\"line\">Vary: Accept-Encoding</span><br><span class=\"line\">Pragma: no-cache</span><br><span class=\"line\">X-NWS-LOG-UUID: bd27210a-24e5-4740-8f6c-25dbafa9c395</span><br><span class=\"line\">Content-Length: 180945</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; ....</span><br></pre></td></tr></table></figure>\n<h5 id=\"常用的响应报头\"><a href=\"#常用的响应报头\" class=\"headerlink\" title=\"常用的响应报头\"></a>常用的响应报头</h5><p>理论上所有的响应头信息都应该是回应请求头的。但是服务端为了效率，安全，还有其他方面的考虑，会添加相对应的响应头信息：</p>\n<ol>\n<li><p>Cache-Control：must-revalidate, no-cache, private。<br>这个值告诉客户端，服务端不希望客户端缓存资源，在下次请求资源时，必须要从新请求服务器，不能从缓存副本中获取资源。  </p>\n<ul>\n<li>Cache-Control是响应头中很重要的信息，当客户端请求头中包含Cache-Control:max-age=0请求，明确表示不会缓存服务器资源时,Cache-Control作为作为回应信息，通常会返回no-cache，意思就是说，”那不缓存了”。</li>\n<li>当客户端在请求头中没有包含Cache-Control时，服务端往往会定,不同的资源不同的缓存策略，比如说oschina在缓存图片资源的策略就是Cache-Control：max-age=86400,这个意思是，从当前时间开始，在86400秒的时间内，客户端可以直接从缓存副本中读取资源，而不需要向服务器请求。  </li>\n</ul>\n</li>\n<li><p>Connection：keep-alive<br>这个字段作为回应客户端的Connection：keep-alive，告诉客户端服务器的tcp连接也是一个长连接，客户端可以继续使用这个tcp连接发送http请求。  </p>\n</li>\n<li><p>Content-Encoding:gzip<br>告诉客户端，服务端发送的资源是采用gzip编码的，客户端看到这个信息后，应该采用gzip对资源进行解码。  </p>\n</li>\n<li><p>Content-Type：text/html;charset=UTF-8<br>告诉客户端，资源文件的类型，还有字符编码，客户端通过utf-8对资源进行解码，然后对资源进行html解析。如果我们看到有些网站是乱码的，往往就是服务器端没有返回正确的编码。  </p>\n</li>\n<li><p>Date：Sun, 21 Sep 2016 06:18:21 GMT<br>这个是服务端发送资源时的服务器时间，GMT是格林尼治所在地的标准时间。http协议中发送的时间都是GMT的，这主要是解决在互联网上，不同时区在相互请求资源的时候，时间混乱问题。</p>\n</li>\n<li><p>Expires:Sun, 1 Jan 2000 01:00:00 GMT<br>这个响应头也跟缓存有关，告诉客户端在这个时间前，可以直接访问缓存副本，很显然这个值会存在问题，因为客户端和服务器的时间不一定会都是相同的，如果时间不同就会导致问题。所以这个响应头是没有Cache-Control：max-age=*这个响应头准确的，因为max-age=date中的date是个相对时间，不仅更好理解，也更准确。</p>\n</li>\n<li><p>Pragma:no-cache<br>这个含义与Cache-Control等同。</p>\n</li>\n<li><p>Server：Tengine/1.4.6<br>这个是服务器和相对应的版本，只是告诉客户端服务器的信息。</p>\n</li>\n<li><p>Transfer-Encoding：chunked<br>这个响应头告诉客户端，服务器发送的资源的方式是分块发送的。一般分块发送的资源都是服务器动态生成的，在发送时还不知道发送资源的大小，所以采用分块发送，每一块都是独立的，独立的块都能标示自己的长度，最后一块是0长度的，当客户端读到这个0长度的块时，就可以确定资源已经传输完了。</p>\n</li>\n<li><p>Vary: Accept-Encoding<br>告诉缓存服务器，缓存压缩文件和非压缩文件两个版本，现在这个字段用处并不大，因为现在的浏览器都是支持压缩的。  </p>\n</li>\n</ol>\n<h5 id=\"响应状态码\"><a href=\"#响应状态码\" class=\"headerlink\" title=\"响应状态码\"></a>响应状态码</h5><p>响应状态代码有三位数字组成，第一个数字定义了响应的类别，且有五种可能取值。  </p>\n<blockquote>\n<p>常见状态码：  </p>\n<ul>\n<li>100~199：表示服务器成功接收部分请求，要求客户端继续提交其余请求才能完成整个处理过程。</li>\n<li>200~299：表示服务器成功接收请求并已完成整个处理过程。常用200（OK 请求成功）。</li>\n<li>300~399：为完成请求，客户需进一步细化请求。例如：请求的资源已经移动一个新地址、常用302（所请求的页面已经临时转移至新的url）、307和304（使用缓存资源）。</li>\n<li>400~499：客户端的请求有错误，常用404（服务器无法找到被请求的页面）、403（服务器拒绝访问，权限不够）。</li>\n<li>500~599：服务器端出现错误，常用500（请求未完成。服务器遇到不可预知的情况）。  </li>\n</ul>\n</blockquote>\n<h4 id=\"Cookie-和-Session：\"><a href=\"#Cookie-和-Session：\" class=\"headerlink\" title=\"Cookie 和 Session：\"></a>Cookie 和 Session：</h4><p>服务器和客户端的交互仅限于请求/响应过程，结束之后便断开，在下一次请求时，服务器会认为新的客户端。<br>为了维护他们之间的链接，让服务器知道这是前一个用户发送的请求，必须在一个地方保存客户端的信息。<br><em>Cookie</em>：通过在 客户端 记录的信息确定用户的身份。<br><em>Session</em>：通过在 服务器端 记录的信息确定用户的身份。 </p>\n<h3 id=\"HTTP代理神器Fiddler\"><a href=\"#HTTP代理神器Fiddler\" class=\"headerlink\" title=\"HTTP代理神器Fiddler\"></a>HTTP代理神器Fiddler</h3><h3 id=\"urllib库的基本使用\"><a href=\"#urllib库的基本使用\" class=\"headerlink\" title=\"urllib库的基本使用\"></a>urllib库的基本使用</h3><p>所谓网页抓取，就是把URL地址中指定的网络资源从网络流中读取出来，保存到本地。 在Python3中一般使用urllib库。</p>\n<h4 id=\"urlopen和Request\"><a href=\"#urlopen和Request\" class=\"headerlink\" title=\"urlopen和Request\"></a>urlopen和Request</h4><p>可以直接使用urlopen()打开一个网页；但是，如果需要执行更复杂的操作，比如增加HTTP报头，必须创建一个 Request 实例来作为urlopen()的参数；而需要访问的url地址则作为 Request 实例的参数。  </p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> urllib <span class=\"keyword\">import</span> request</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_page_info</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">    headers = &#123;</span><br><span class=\"line\">        <span class=\"string\">\"User-Agent\"</span>: <span class=\"string\">\"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36\"</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    req = request.Request(<span class=\"string\">\"http://www.baidu.com/\"</span>, headers=headers)</span><br><span class=\"line\">    res = request.urlopen(req)</span><br><span class=\"line\">    html = res.read()</span><br><span class=\"line\">    <span class=\"comment\"># 请求页面的源代码</span></span><br><span class=\"line\">    print(html)</span><br><span class=\"line\">    <span class=\"comment\"># 请求的状态码</span></span><br><span class=\"line\">    print(res.getcode())</span><br><span class=\"line\">    <span class=\"comment\"># 请求的链接</span></span><br><span class=\"line\">    print(res.geturl())</span><br><span class=\"line\">    <span class=\"comment\"># 请求头信息</span></span><br><span class=\"line\">    print(res.info())</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">\"__main__\"</span>:</span><br><span class=\"line\">    get_page_info()</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>新建Request实例，除了必须要有 url 参数之外，还可以设置另外两个参数：  </p>\n<ul>\n<li>data（默认空）：是伴随 url 提交的数据（比如要post的数据），同时 HTTP 请求将从 “GET”方式 改为 “POST”方式。  </li>\n<li>headers（默认空）：是一个字典，包含了需要发送的HTTP报头的键值对。  </li>\n</ul>\n</blockquote>\n<h4 id=\"User-Agent\"><a href=\"#User-Agent\" class=\"headerlink\" title=\"User-Agent\"></a>User-Agent</h4><p>浏览器就是互联网世界上公认被允许的身份，如果我们希望我们的爬虫程序更像一个真实用户，那我们第一步，就是需要伪装成一个被公认的浏览器。用不同的浏览器在发送请求的时候，会有不同的User-Agent头。 urllib默认的User-Agent头为：Python-urllib/x.y（x和y是Python主版本和次版本号）</p>\n<h4 id=\"添加更多的Header信息\"><a href=\"#添加更多的Header信息\" class=\"headerlink\" title=\"添加更多的Header信息\"></a>添加更多的Header信息</h4><p>在 HTTP Request 中加入特定的 Header，来构造一个完整的HTTP请求消息。</p>\n<ul>\n<li>可以通过调用Request.add_header() 添加/修改一个特定的header </li>\n<li>也可以通过调用Request.get_header()来查看已有的header。</li>\n</ul>\n<h4 id=\"parse-urlencode\"><a href=\"#parse-urlencode\" class=\"headerlink\" title=\"parse.urlencode()\"></a>parse.urlencode()</h4><p>一般HTTP请求提交数据，需要编码成URL编码格式，然后做为url的一部分，或者作为参数传到Request对象中。<br>此时需要使用parse.urlencode对需要提交的数据进行编码。</p>\n<h4 id=\"Get方式\"><a href=\"#Get方式\" class=\"headerlink\" title=\"Get方式\"></a>Get方式</h4><p>GET请求一般用于向服务器获取数据。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> urllib <span class=\"keyword\">import</span> request, parse</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">baidu_search_by_keyword</span><span class=\"params\">(kw)</span>:</span></span><br><span class=\"line\">    url = <span class=\"string\">\"http://www.baidu.com/\"</span></span><br><span class=\"line\">    wd = &#123;<span class=\"string\">\"wd\"</span>: kw&#125;</span><br><span class=\"line\">    wd = parse.urlencode(wd)</span><br><span class=\"line\"></span><br><span class=\"line\">    full_url = url + <span class=\"string\">\"s?\"</span> + wd</span><br><span class=\"line\"></span><br><span class=\"line\">    headers = &#123;</span><br><span class=\"line\">        <span class=\"string\">\"User-Agent\"</span>: <span class=\"string\">\"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36\"</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    req = request.Request(full_url, headers=headers)</span><br><span class=\"line\">    res = request.urlopen(req)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">with</span> open(<span class=\"string\">\"02_result.html\"</span>, <span class=\"string\">\"wb\"</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">        f.write(res.read())</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">\"__main__\"</span>:</span><br><span class=\"line\">    keyword = input(<span class=\"string\">\"请输入要搜索的内容：\"</span>)</span><br><span class=\"line\">    baidu_search_by_keyword(keyword)</span><br></pre></td></tr></table></figure>\n<h5 id=\"批量爬取贴吧页面数据\"><a href=\"#批量爬取贴吧页面数据\" class=\"headerlink\" title=\"批量爬取贴吧页面数据\"></a>批量爬取贴吧页面数据</h5><p>首先需要对百度贴吧的链接进行分析，找出其中的规律。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> urllib <span class=\"keyword\">import</span> request, parse</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">tieba_spider</span><span class=\"params\">(url, beginpage, endpage)</span>:</span></span><br><span class=\"line\">    <span class=\"string\">\"\"\"</span></span><br><span class=\"line\"><span class=\"string\">        作用：负责处理url，分配每个url去发送请求</span></span><br><span class=\"line\"><span class=\"string\">        url：需要处理的第一个url</span></span><br><span class=\"line\"><span class=\"string\">        beginPage: 爬虫执行的起始页面</span></span><br><span class=\"line\"><span class=\"string\">        endPage: 爬虫执行的截止页面</span></span><br><span class=\"line\"><span class=\"string\">    \"\"\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> page <span class=\"keyword\">in</span> range(beginpage, endpage + <span class=\"number\">1</span>):</span><br><span class=\"line\">        pn = (page - <span class=\"number\">1</span>) * <span class=\"number\">50</span></span><br><span class=\"line\"></span><br><span class=\"line\">        filename = <span class=\"string\">\"第\"</span> + str(page) + <span class=\"string\">\"页.html\"</span></span><br><span class=\"line\">        <span class=\"comment\"># 组合为完整的 url，并且pn值每次增加50</span></span><br><span class=\"line\">        fullurl = url + <span class=\"string\">\"&amp;pn=\"</span> + str(pn)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 调用loadPage()发送请求获取HTML页面</span></span><br><span class=\"line\">        html = load_page(fullurl, filename)</span><br><span class=\"line\">        <span class=\"comment\"># 将获取到的HTML页面写入本地磁盘文件</span></span><br><span class=\"line\">        write_file(html, filename)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">load_page</span><span class=\"params\">(url, filename)</span>:</span></span><br><span class=\"line\">    <span class=\"string\">\"\"\" </span></span><br><span class=\"line\"><span class=\"string\">        作用：根据url发送请求，获取服务器响应文件</span></span><br><span class=\"line\"><span class=\"string\">        url：需要爬取的url地址</span></span><br><span class=\"line\"><span class=\"string\">        filename: 文件名</span></span><br><span class=\"line\"><span class=\"string\">    \"\"\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">    print(<span class=\"string\">\"正在下载\"</span> + filename)</span><br><span class=\"line\">    headers = &#123;<span class=\"string\">\"User-Agent\"</span>: <span class=\"string\">\"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0;\"</span>&#125;</span><br><span class=\"line\">    req = request.Request(url, headers=headers)</span><br><span class=\"line\">    res = request.urlopen(req)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res.read()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">write_file</span><span class=\"params\">(html, filename)</span>:</span></span><br><span class=\"line\">    <span class=\"string\">\"\"\"</span></span><br><span class=\"line\"><span class=\"string\">        作用：保存服务器响应文件到本地磁盘文件里</span></span><br><span class=\"line\"><span class=\"string\">        html: 服务器响应文件</span></span><br><span class=\"line\"><span class=\"string\">        filename: 本地磁盘文件名</span></span><br><span class=\"line\"><span class=\"string\">    \"\"\"</span></span><br><span class=\"line\">    print(<span class=\"string\">\"正在存储\"</span> + filename)</span><br><span class=\"line\">    <span class=\"keyword\">with</span> open(filename, <span class=\"string\">'wb'</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">        f.write(html)</span><br><span class=\"line\">    print(<span class=\"string\">\"-\"</span> * <span class=\"number\">20</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">\"__main__\"</span>:</span><br><span class=\"line\">    kw = input(<span class=\"string\">\"请输入需要爬取的贴吧:\"</span>)</span><br><span class=\"line\">    <span class=\"comment\"># 输入起始页和终止页，str转成int类型</span></span><br><span class=\"line\">    beginPage = int(input(<span class=\"string\">\"请输入起始页：\"</span>))</span><br><span class=\"line\">    endPage = int(input(<span class=\"string\">\"请输入终止页：\"</span>))</span><br><span class=\"line\">    url = <span class=\"string\">\"http://tieba.baidu.com/f?\"</span></span><br><span class=\"line\">    key = parse.urlencode(&#123;<span class=\"string\">\"kw\"</span>: kw&#125;)</span><br><span class=\"line\">    <span class=\"comment\"># 组合后的url示例：http://tieba.baidu.com/f?kw=python</span></span><br><span class=\"line\">    url = url + key</span><br><span class=\"line\">    tieba_spider(url, beginPage, endPage)</span><br></pre></td></tr></table></figure>\n<h4 id=\"POST方式\"><a href=\"#POST方式\" class=\"headerlink\" title=\"POST方式\"></a>POST方式</h4><p>Request请求对象的里有data参数，它就是用在POST里的，此时要传送的数据就是这个参数data，data是一个字典，里面要匹配键值对。  </p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> urllib <span class=\"keyword\">import</span> request, parse</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">youdao_translate</span><span class=\"params\">(keyword)</span>:</span></span><br><span class=\"line\">    url = <span class=\"string\">\"http://fanyi.youdao.com/translate?smartresult=dict&amp;smartresult=rule\"</span></span><br><span class=\"line\">    headers = &#123;</span><br><span class=\"line\">        <span class=\"string\">\"User-Agent\"</span>: <span class=\"string\">\"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36\"</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    formdata = &#123;</span><br><span class=\"line\">        <span class=\"string\">\"from\"</span>: <span class=\"string\">\"AUTO\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"to\"</span>: <span class=\"string\">\"AUTO\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"i\"</span>: keyword,</span><br><span class=\"line\">        <span class=\"string\">\"smartresult\"</span>: <span class=\"string\">\"dict\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"client\"</span>: <span class=\"string\">\"fanyideskweb\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"doctype\"</span>: <span class=\"string\">\"json\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"version\"</span>: <span class=\"string\">\"2.1\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"keyfrom\"</span>: <span class=\"string\">\"fanyi.web\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"ue\"</span>: <span class=\"string\">\"UTF-8\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"action\"</span>: <span class=\"string\">\"FY_BY_ENTER\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"typoResult\"</span>: <span class=\"string\">\"false\"</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    data = parse.urlencode(formdata).encode(<span class=\"string\">'utf-8'</span>)</span><br><span class=\"line\">    req = request.Request(url, data=data, headers=headers)</span><br><span class=\"line\">    res = request.urlopen(req)</span><br><span class=\"line\"></span><br><span class=\"line\">    print(res.read().decode(<span class=\"string\">'utf-8'</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">\"__main__\"</span>:</span><br><span class=\"line\">    youdao_translate(<span class=\"string\">\"黑暗\"</span>)</span><br></pre></td></tr></table></figure>\n<h4 id=\"获取AJAX加载的内容\"><a href=\"#获取AJAX加载的内容\" class=\"headerlink\" title=\"获取AJAX加载的内容\"></a>获取AJAX加载的内容</h4><p>有些网页内容使用AJAX加载，AJAX一般返回的是JSON，直接对AJAX地址进行post或get，就返回JSON数据了。<br>在写爬虫程序时，最需要关注的，是数据的来源。  </p>\n<h4 id=\"处理HTTPS请求-SSL证书验证\"><a href=\"#处理HTTPS请求-SSL证书验证\" class=\"headerlink\" title=\"处理HTTPS请求 SSL证书验证\"></a>处理HTTPS请求 SSL证书验证</h4><p>在访问网页的时候则会报出SSLError：<br>urllib.error.URLError:&lt;urlopen error [SSL: CERTIFICATE_VERIFY_FAILED] certificate verity failed (.ssl.c:777)</p>\n<p>此时需要单独处理SSL证书，让程序忽略SSL证书验证错误，即可正常访问。解决办法：  </p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> ssl</span><br><span class=\"line\"></span><br><span class=\"line\">ssl._create_default_https_context = ssl._create_unverified_context</span><br></pre></td></tr></table></figure>\n<h4 id=\"关于CA\"><a href=\"#关于CA\" class=\"headerlink\" title=\"关于CA\"></a>关于CA</h4><p>CA(Certificate Authority)是数字证书认证中心的简称，是指发放、管理、废除数字证书的受信任的第三方机构，如北京数字认证股份有限公司、上海市数字证书认证中心有限公司等。<br>CA的作用是检查证书持有者身份的合法性，并签发证书，以防证书被伪造或篡改，以及对证书和密钥进行管理。<br>现实生活中可以用身份证来证明身份， 那么在网络世界里，数字证书就是身份证。和现实生活不同的是，并不是每个上网的用户都有数字证书的，往往只有当一个人需要证明自己的身份的时候才需要用到数字证书。<br>普通用户一般是不需要，因为网站并不关心是谁访问了网站，现在的网站只关心流量。但是反过来，网站就需要证明自己的身份了。<br>比如说现在钓鱼网站很多的，比如你想访问的是www.baidu.com，但其实你访问的是www.daibu.com”，所以在提交自己的隐私信息之前需要验证一下网站的身份，要求网站出示数字证书。<br>一般正常的网站都会主动出示自己的数字证书，来确保客户端和网站服务器之间的通信数据是加密安全的。  </p>\n"},{"title":"vim基础","date":"2018-01-31T16:00:00.000Z","modified":null,"_content":"\n1. vim编辑器在内存缓冲区中处理数据。\n2. vim编辑器有两种操作模式：普通模式和插入模式。\n3. vim移动光标的命令：h-左  j-下  k-上  l-右\n4. 快速移动命令：PageDown、PageUp、G(最后一行)、num G(移动到第num行)、gg(移动到第一行)\n\n### 编辑数据\nx\t\t删除当前光标所在位置的字符\ndd\t\t删除当前光标所在行\ndw\t\t删除当前光标所在位置的单词\nd$\t\t删除当前光标所在位置至行尾的内容\nJ\t\t删除当前光标所在行尾的换行符\nu\t\t撤销前一编辑命令\na\t\t在当前光标后追加数据\n\n### 复制和粘贴\n先使用dd删除，然后使用p粘贴\nyw\t\t复制一个单词\ny$\t\t复制到行尾\n\n### 查找和替换\n/content\tn\n:s/old/new/\t\t替换\n:s/old/new/g\n:n,ms/old/new/g\t替换行号n和m之间所有old\n:%s/old/new/g\t替换整个文件中所有old\n:%s/old/new/gc\t替换整个文件中的所有old，但在每次出现时提示\n","source":"_posts/vim-base.md","raw":"---\ntitle: vim基础\ndate: 2018-02-01\nmodified:\ncategories:\n- Linux\ntags:\n- vim\n- Linux\n---\n\n1. vim编辑器在内存缓冲区中处理数据。\n2. vim编辑器有两种操作模式：普通模式和插入模式。\n3. vim移动光标的命令：h-左  j-下  k-上  l-右\n4. 快速移动命令：PageDown、PageUp、G(最后一行)、num G(移动到第num行)、gg(移动到第一行)\n\n### 编辑数据\nx\t\t删除当前光标所在位置的字符\ndd\t\t删除当前光标所在行\ndw\t\t删除当前光标所在位置的单词\nd$\t\t删除当前光标所在位置至行尾的内容\nJ\t\t删除当前光标所在行尾的换行符\nu\t\t撤销前一编辑命令\na\t\t在当前光标后追加数据\n\n### 复制和粘贴\n先使用dd删除，然后使用p粘贴\nyw\t\t复制一个单词\ny$\t\t复制到行尾\n\n### 查找和替换\n/content\tn\n:s/old/new/\t\t替换\n:s/old/new/g\n:n,ms/old/new/g\t替换行号n和m之间所有old\n:%s/old/new/g\t替换整个文件中所有old\n:%s/old/new/gc\t替换整个文件中的所有old，但在每次出现时提示\n","slug":"vim-base","published":1,"updated":"2018-02-12T06:10:17.005Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjir2nro500199xasitu10bbi","content":"<ol>\n<li>vim编辑器在内存缓冲区中处理数据。</li>\n<li>vim编辑器有两种操作模式：普通模式和插入模式。</li>\n<li>vim移动光标的命令：h-左  j-下  k-上  l-右</li>\n<li>快速移动命令：PageDown、PageUp、G(最后一行)、num G(移动到第num行)、gg(移动到第一行)</li>\n</ol>\n<h3 id=\"编辑数据\"><a href=\"#编辑数据\" class=\"headerlink\" title=\"编辑数据\"></a>编辑数据</h3><p>x        删除当前光标所在位置的字符<br>dd        删除当前光标所在行<br>dw        删除当前光标所在位置的单词<br>d$        删除当前光标所在位置至行尾的内容<br>J        删除当前光标所在行尾的换行符<br>u        撤销前一编辑命令<br>a        在当前光标后追加数据</p>\n<h3 id=\"复制和粘贴\"><a href=\"#复制和粘贴\" class=\"headerlink\" title=\"复制和粘贴\"></a>复制和粘贴</h3><p>先使用dd删除，然后使用p粘贴<br>yw        复制一个单词<br>y$        复制到行尾</p>\n<h3 id=\"查找和替换\"><a href=\"#查找和替换\" class=\"headerlink\" title=\"查找和替换\"></a>查找和替换</h3><p>/content    n<br>:s/old/new/        替换<br>:s/old/new/g<br>:n,ms/old/new/g    替换行号n和m之间所有old<br>:%s/old/new/g    替换整个文件中所有old<br>:%s/old/new/gc    替换整个文件中的所有old，但在每次出现时提示</p>\n","site":{"data":{}},"excerpt":"","more":"<ol>\n<li>vim编辑器在内存缓冲区中处理数据。</li>\n<li>vim编辑器有两种操作模式：普通模式和插入模式。</li>\n<li>vim移动光标的命令：h-左  j-下  k-上  l-右</li>\n<li>快速移动命令：PageDown、PageUp、G(最后一行)、num G(移动到第num行)、gg(移动到第一行)</li>\n</ol>\n<h3 id=\"编辑数据\"><a href=\"#编辑数据\" class=\"headerlink\" title=\"编辑数据\"></a>编辑数据</h3><p>x        删除当前光标所在位置的字符<br>dd        删除当前光标所在行<br>dw        删除当前光标所在位置的单词<br>d$        删除当前光标所在位置至行尾的内容<br>J        删除当前光标所在行尾的换行符<br>u        撤销前一编辑命令<br>a        在当前光标后追加数据</p>\n<h3 id=\"复制和粘贴\"><a href=\"#复制和粘贴\" class=\"headerlink\" title=\"复制和粘贴\"></a>复制和粘贴</h3><p>先使用dd删除，然后使用p粘贴<br>yw        复制一个单词<br>y$        复制到行尾</p>\n<h3 id=\"查找和替换\"><a href=\"#查找和替换\" class=\"headerlink\" title=\"查找和替换\"></a>查找和替换</h3><p>/content    n<br>:s/old/new/        替换<br>:s/old/new/g<br>:n,ms/old/new/g    替换行号n和m之间所有old<br>:%s/old/new/g    替换整个文件中所有old<br>:%s/old/new/gc    替换整个文件中的所有old，但在每次出现时提示</p>\n"},{"title":"Zookeeper的安装和使用","date":"2018-02-04T16:00:00.000Z","modified":null,"_content":"\n## jdk1.8的安装\n> 由于采用最小化安装，所以centOS中并没有预安装的jdk，故不需要先卸载\n\n```\nrpm -qa|grep java\nmkdir /usr/java/\nmv jdk-8u161-linux-x64.tar.gz /usr/java/\ntar zxvf jdk-8u161-linux-x64.tar.gz\nmv jdk1.8.0_161/ jdk1.8\n```\n\n> 编辑配置文件，配置环境变量\n\n```\nvim /etc/profile\n\nJAVA_HOME=/usr/java/jdk1.8\nCLASSPATH=$JAVA_HOME/lib/\nPATH=$PATH:$JAVA_HOME/bin\nexport PATH JAVA_HOME CLASSPATH\n\nsource /etc/profile\n```\n\n## zookeeper安装\n\n```\nmkdir /usr/zookeeper/\nmv zookeeper-3.4.11.tar.gz /usr/zookeeper/\ntar zxvf zookeeper-3.4.11.tar.gz\ncd zookeeper-3.4.11\ncd conf\ncp zoo_sample.cfg zoo.cfg\n```\n\n> 新增zookeeper用户以及zookeeper组\n\n```\ngroupadd zookeeper\nuseradd -g zookeeper zookeeper\n```\n\n> 修改文件夹用户和组\n\n```\nchown -R zookeeper zookeeper-3.4.11\nchgrp -R zookeeper zookeeper-3.4.11\n```\n\n> 新增data和logs文件夹\n\n```\ncd /usr/zookeeper/zookeeper-3.4.11\nmkdir data\nmkdir logs\n```\n\n> 修改/usr/zookeeper/zookeeper-3.4.11/conf目录下的zoo.cfg文件\n\n```\n# The number of milliseconds of each tick\n# zookeeper 定义的基准时间间隔，单位：毫秒\ntickTime=2000\n# The number of ticks that the initial\n# synchronization phase can take\ninitLimit=10\n# The number of ticks that can pass between\n# sending a request and getting an acknowledgement\nsyncLimit=5\n# the directory where the snapshot is stored.\n# do not use /tmp for storage, /tmp here is just\n# example sakes.\n# dataDir=/tmp/zookeeper\n \n# 数据文件夹\ndataDir=/usr/zookeeper/zookeeper-3.4.11/data\n \n# 日志文件夹\ndataLogDir=/usr/zookeeper/zookeeper-3.4.11/logs\n \n# the port at which the clients will connect\n# 客户端访问 zookeeper 的端口号\nclientPort=2181\n \n# the maximum number of client connections.\n# increase this if you need to handle more clients\n#maxClientCnxns=60\n#\n# Be sure to read the maintenance section of the\n# administrator guide before turning on autopurge.\n#\n# http://zookeeper.apache.org/doc/current/zookeeperAdmin.html#sc_maintenance\n#\n# The number of snapshots to retain in dataDir\n#autopurge.snapRetainCount=3\n# Purge task interval in hours\n# Set to \"0\" to disable auto purge feature\n#autopurge.purgeInterval=1\n```\n\n> 修改系统配置文件，添加环境变量\n\n```\nvim /etc/profile\n\nJAVA_HOME=/usr/java/jdk1.8\nZOOKEEPER_HOME=/usr/zookeeper/zookeeper-3.4.11\nCLASSPATH=$JAVA_HOME/lib/\nPATH=$PATH:$JAVA_HOME/bin:$ZOOKEEPER_HOME/bin\nexport PATH JAVA_HOME CLASSPATH\n\nsource /etc/profile\n```\n\n### zookeeper常用命令\n\n```\nzkServer.sh start\nzkServer.sh stop\nzkServer.sh status\nzkServer.sh restart\n```\n\n### 以集群方式启动zookeeper\n\n> 先备份配置文件，然后将配置文件中的注释行去除\n\n```\nmv zoo.cfg zoo.cfg.standalone\ngrep -v \"^$\" zoo.cfg.standalone | grep -v \"^#\" > zoo.cfg\n```\n\n> 修改配置文件，如下\n\n```\ntickTime=2000\ninitLimit=10\nsyncLimit=5\ndataDir=/usr/zookeeper/zookeeper-3.4.11/data\ndataLogDir=/usr/zookeeper/zookeeper-3.4.11/logs\nclientPort=2181\nserver.1=192.168.17.133:2888:3888\nserver.2=192.168.17.134:2888:3888\nserver.3=192.168.17.135:2888:3888\n```\n\n> 然后在配置的datadir目录下，创建一个名为myid的文件，在该文件的第一行写上一个数字，与配置文件中server.后的数字一直\n\n```\necho 1 > data/myid\necho 2 > data/myid\necho 3 > data/myid\n```\n\n> 在启动zookeeper集群前，需要先关闭防火墙\n\n```\nsystemctl stop firewalld.service\nsystemctl disable firewalld.service\nfirewall-cmd --state\n```\n\n### zookeeper的可执行脚本\n\n脚本 | 说明\n---|---\nzkCleanup | 清理Zookeeper的历史数据，包括事务日志和快照数据文件\nzkCli | ZooKeeper的一个建议客户端\nzkEvn | 设置ZooKeeper的环境变量\nzkServer | ZooKeeper服务器的启动、停止和重启脚本\n","source":"_posts/zookeeper-install.md","raw":"---\ntitle: Zookeeper的安装和使用\ndate: 2018-02-05\nmodified:\ncategories:\n- Zookeeper\ntags:\n- Zookeeper\n- Linux\n---\n\n## jdk1.8的安装\n> 由于采用最小化安装，所以centOS中并没有预安装的jdk，故不需要先卸载\n\n```\nrpm -qa|grep java\nmkdir /usr/java/\nmv jdk-8u161-linux-x64.tar.gz /usr/java/\ntar zxvf jdk-8u161-linux-x64.tar.gz\nmv jdk1.8.0_161/ jdk1.8\n```\n\n> 编辑配置文件，配置环境变量\n\n```\nvim /etc/profile\n\nJAVA_HOME=/usr/java/jdk1.8\nCLASSPATH=$JAVA_HOME/lib/\nPATH=$PATH:$JAVA_HOME/bin\nexport PATH JAVA_HOME CLASSPATH\n\nsource /etc/profile\n```\n\n## zookeeper安装\n\n```\nmkdir /usr/zookeeper/\nmv zookeeper-3.4.11.tar.gz /usr/zookeeper/\ntar zxvf zookeeper-3.4.11.tar.gz\ncd zookeeper-3.4.11\ncd conf\ncp zoo_sample.cfg zoo.cfg\n```\n\n> 新增zookeeper用户以及zookeeper组\n\n```\ngroupadd zookeeper\nuseradd -g zookeeper zookeeper\n```\n\n> 修改文件夹用户和组\n\n```\nchown -R zookeeper zookeeper-3.4.11\nchgrp -R zookeeper zookeeper-3.4.11\n```\n\n> 新增data和logs文件夹\n\n```\ncd /usr/zookeeper/zookeeper-3.4.11\nmkdir data\nmkdir logs\n```\n\n> 修改/usr/zookeeper/zookeeper-3.4.11/conf目录下的zoo.cfg文件\n\n```\n# The number of milliseconds of each tick\n# zookeeper 定义的基准时间间隔，单位：毫秒\ntickTime=2000\n# The number of ticks that the initial\n# synchronization phase can take\ninitLimit=10\n# The number of ticks that can pass between\n# sending a request and getting an acknowledgement\nsyncLimit=5\n# the directory where the snapshot is stored.\n# do not use /tmp for storage, /tmp here is just\n# example sakes.\n# dataDir=/tmp/zookeeper\n \n# 数据文件夹\ndataDir=/usr/zookeeper/zookeeper-3.4.11/data\n \n# 日志文件夹\ndataLogDir=/usr/zookeeper/zookeeper-3.4.11/logs\n \n# the port at which the clients will connect\n# 客户端访问 zookeeper 的端口号\nclientPort=2181\n \n# the maximum number of client connections.\n# increase this if you need to handle more clients\n#maxClientCnxns=60\n#\n# Be sure to read the maintenance section of the\n# administrator guide before turning on autopurge.\n#\n# http://zookeeper.apache.org/doc/current/zookeeperAdmin.html#sc_maintenance\n#\n# The number of snapshots to retain in dataDir\n#autopurge.snapRetainCount=3\n# Purge task interval in hours\n# Set to \"0\" to disable auto purge feature\n#autopurge.purgeInterval=1\n```\n\n> 修改系统配置文件，添加环境变量\n\n```\nvim /etc/profile\n\nJAVA_HOME=/usr/java/jdk1.8\nZOOKEEPER_HOME=/usr/zookeeper/zookeeper-3.4.11\nCLASSPATH=$JAVA_HOME/lib/\nPATH=$PATH:$JAVA_HOME/bin:$ZOOKEEPER_HOME/bin\nexport PATH JAVA_HOME CLASSPATH\n\nsource /etc/profile\n```\n\n### zookeeper常用命令\n\n```\nzkServer.sh start\nzkServer.sh stop\nzkServer.sh status\nzkServer.sh restart\n```\n\n### 以集群方式启动zookeeper\n\n> 先备份配置文件，然后将配置文件中的注释行去除\n\n```\nmv zoo.cfg zoo.cfg.standalone\ngrep -v \"^$\" zoo.cfg.standalone | grep -v \"^#\" > zoo.cfg\n```\n\n> 修改配置文件，如下\n\n```\ntickTime=2000\ninitLimit=10\nsyncLimit=5\ndataDir=/usr/zookeeper/zookeeper-3.4.11/data\ndataLogDir=/usr/zookeeper/zookeeper-3.4.11/logs\nclientPort=2181\nserver.1=192.168.17.133:2888:3888\nserver.2=192.168.17.134:2888:3888\nserver.3=192.168.17.135:2888:3888\n```\n\n> 然后在配置的datadir目录下，创建一个名为myid的文件，在该文件的第一行写上一个数字，与配置文件中server.后的数字一直\n\n```\necho 1 > data/myid\necho 2 > data/myid\necho 3 > data/myid\n```\n\n> 在启动zookeeper集群前，需要先关闭防火墙\n\n```\nsystemctl stop firewalld.service\nsystemctl disable firewalld.service\nfirewall-cmd --state\n```\n\n### zookeeper的可执行脚本\n\n脚本 | 说明\n---|---\nzkCleanup | 清理Zookeeper的历史数据，包括事务日志和快照数据文件\nzkCli | ZooKeeper的一个建议客户端\nzkEvn | 设置ZooKeeper的环境变量\nzkServer | ZooKeeper服务器的启动、停止和重启脚本\n","slug":"zookeeper-install","published":1,"updated":"2018-02-12T06:10:37.481Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjir2nro9001c9xas1vlkuey9","content":"<h2 id=\"jdk1-8的安装\"><a href=\"#jdk1-8的安装\" class=\"headerlink\" title=\"jdk1.8的安装\"></a>jdk1.8的安装</h2><blockquote>\n<p>由于采用最小化安装，所以centOS中并没有预安装的jdk，故不需要先卸载</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rpm -qa|grep java</span><br><span class=\"line\">mkdir /usr/java/</span><br><span class=\"line\">mv jdk-8u161-linux-x64.tar.gz /usr/java/</span><br><span class=\"line\">tar zxvf jdk-8u161-linux-x64.tar.gz</span><br><span class=\"line\">mv jdk1.8.0_161/ jdk1.8</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>编辑配置文件，配置环境变量</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim /etc/profile</span><br><span class=\"line\"></span><br><span class=\"line\">JAVA_HOME=/usr/java/jdk1.8</span><br><span class=\"line\">CLASSPATH=$JAVA_HOME/lib/</span><br><span class=\"line\">PATH=$PATH:$JAVA_HOME/bin</span><br><span class=\"line\">export PATH JAVA_HOME CLASSPATH</span><br><span class=\"line\"></span><br><span class=\"line\">source /etc/profile</span><br></pre></td></tr></table></figure>\n<h2 id=\"zookeeper安装\"><a href=\"#zookeeper安装\" class=\"headerlink\" title=\"zookeeper安装\"></a>zookeeper安装</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir /usr/zookeeper/</span><br><span class=\"line\">mv zookeeper-3.4.11.tar.gz /usr/zookeeper/</span><br><span class=\"line\">tar zxvf zookeeper-3.4.11.tar.gz</span><br><span class=\"line\">cd zookeeper-3.4.11</span><br><span class=\"line\">cd conf</span><br><span class=\"line\">cp zoo_sample.cfg zoo.cfg</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>新增zookeeper用户以及zookeeper组</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">groupadd zookeeper</span><br><span class=\"line\">useradd -g zookeeper zookeeper</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>修改文件夹用户和组</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chown -R zookeeper zookeeper-3.4.11</span><br><span class=\"line\">chgrp -R zookeeper zookeeper-3.4.11</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>新增data和logs文件夹</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /usr/zookeeper/zookeeper-3.4.11</span><br><span class=\"line\">mkdir data</span><br><span class=\"line\">mkdir logs</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>修改/usr/zookeeper/zookeeper-3.4.11/conf目录下的zoo.cfg文件</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># The number of milliseconds of each tick</span><br><span class=\"line\"># zookeeper 定义的基准时间间隔，单位：毫秒</span><br><span class=\"line\">tickTime=2000</span><br><span class=\"line\"># The number of ticks that the initial</span><br><span class=\"line\"># synchronization phase can take</span><br><span class=\"line\">initLimit=10</span><br><span class=\"line\"># The number of ticks that can pass between</span><br><span class=\"line\"># sending a request and getting an acknowledgement</span><br><span class=\"line\">syncLimit=5</span><br><span class=\"line\"># the directory where the snapshot is stored.</span><br><span class=\"line\"># do not use /tmp for storage, /tmp here is just</span><br><span class=\"line\"># example sakes.</span><br><span class=\"line\"># dataDir=/tmp/zookeeper</span><br><span class=\"line\"> </span><br><span class=\"line\"># 数据文件夹</span><br><span class=\"line\">dataDir=/usr/zookeeper/zookeeper-3.4.11/data</span><br><span class=\"line\"> </span><br><span class=\"line\"># 日志文件夹</span><br><span class=\"line\">dataLogDir=/usr/zookeeper/zookeeper-3.4.11/logs</span><br><span class=\"line\"> </span><br><span class=\"line\"># the port at which the clients will connect</span><br><span class=\"line\"># 客户端访问 zookeeper 的端口号</span><br><span class=\"line\">clientPort=2181</span><br><span class=\"line\"> </span><br><span class=\"line\"># the maximum number of client connections.</span><br><span class=\"line\"># increase this if you need to handle more clients</span><br><span class=\"line\">#maxClientCnxns=60</span><br><span class=\"line\">#</span><br><span class=\"line\"># Be sure to read the maintenance section of the</span><br><span class=\"line\"># administrator guide before turning on autopurge.</span><br><span class=\"line\">#</span><br><span class=\"line\"># http://zookeeper.apache.org/doc/current/zookeeperAdmin.html#sc_maintenance</span><br><span class=\"line\">#</span><br><span class=\"line\"># The number of snapshots to retain in dataDir</span><br><span class=\"line\">#autopurge.snapRetainCount=3</span><br><span class=\"line\"># Purge task interval in hours</span><br><span class=\"line\"># Set to &quot;0&quot; to disable auto purge feature</span><br><span class=\"line\">#autopurge.purgeInterval=1</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>修改系统配置文件，添加环境变量</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim /etc/profile</span><br><span class=\"line\"></span><br><span class=\"line\">JAVA_HOME=/usr/java/jdk1.8</span><br><span class=\"line\">ZOOKEEPER_HOME=/usr/zookeeper/zookeeper-3.4.11</span><br><span class=\"line\">CLASSPATH=$JAVA_HOME/lib/</span><br><span class=\"line\">PATH=$PATH:$JAVA_HOME/bin:$ZOOKEEPER_HOME/bin</span><br><span class=\"line\">export PATH JAVA_HOME CLASSPATH</span><br><span class=\"line\"></span><br><span class=\"line\">source /etc/profile</span><br></pre></td></tr></table></figure>\n<h3 id=\"zookeeper常用命令\"><a href=\"#zookeeper常用命令\" class=\"headerlink\" title=\"zookeeper常用命令\"></a>zookeeper常用命令</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">zkServer.sh start</span><br><span class=\"line\">zkServer.sh stop</span><br><span class=\"line\">zkServer.sh status</span><br><span class=\"line\">zkServer.sh restart</span><br></pre></td></tr></table></figure>\n<h3 id=\"以集群方式启动zookeeper\"><a href=\"#以集群方式启动zookeeper\" class=\"headerlink\" title=\"以集群方式启动zookeeper\"></a>以集群方式启动zookeeper</h3><blockquote>\n<p>先备份配置文件，然后将配置文件中的注释行去除</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mv zoo.cfg zoo.cfg.standalone</span><br><span class=\"line\">grep -v &quot;^$&quot; zoo.cfg.standalone | grep -v &quot;^#&quot; &gt; zoo.cfg</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>修改配置文件，如下</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tickTime=2000</span><br><span class=\"line\">initLimit=10</span><br><span class=\"line\">syncLimit=5</span><br><span class=\"line\">dataDir=/usr/zookeeper/zookeeper-3.4.11/data</span><br><span class=\"line\">dataLogDir=/usr/zookeeper/zookeeper-3.4.11/logs</span><br><span class=\"line\">clientPort=2181</span><br><span class=\"line\">server.1=192.168.17.133:2888:3888</span><br><span class=\"line\">server.2=192.168.17.134:2888:3888</span><br><span class=\"line\">server.3=192.168.17.135:2888:3888</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>然后在配置的datadir目录下，创建一个名为myid的文件，在该文件的第一行写上一个数字，与配置文件中server.后的数字一直</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">echo 1 &gt; data/myid</span><br><span class=\"line\">echo 2 &gt; data/myid</span><br><span class=\"line\">echo 3 &gt; data/myid</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>在启动zookeeper集群前，需要先关闭防火墙</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl stop firewalld.service</span><br><span class=\"line\">systemctl disable firewalld.service</span><br><span class=\"line\">firewall-cmd --state</span><br></pre></td></tr></table></figure>\n<h3 id=\"zookeeper的可执行脚本\"><a href=\"#zookeeper的可执行脚本\" class=\"headerlink\" title=\"zookeeper的可执行脚本\"></a>zookeeper的可执行脚本</h3><table>\n<thead>\n<tr>\n<th>脚本</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>zkCleanup</td>\n<td>清理Zookeeper的历史数据，包括事务日志和快照数据文件</td>\n</tr>\n<tr>\n<td>zkCli</td>\n<td>ZooKeeper的一个建议客户端</td>\n</tr>\n<tr>\n<td>zkEvn</td>\n<td>设置ZooKeeper的环境变量</td>\n</tr>\n<tr>\n<td>zkServer</td>\n<td>ZooKeeper服务器的启动、停止和重启脚本</td>\n</tr>\n</tbody>\n</table>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"jdk1-8的安装\"><a href=\"#jdk1-8的安装\" class=\"headerlink\" title=\"jdk1.8的安装\"></a>jdk1.8的安装</h2><blockquote>\n<p>由于采用最小化安装，所以centOS中并没有预安装的jdk，故不需要先卸载</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rpm -qa|grep java</span><br><span class=\"line\">mkdir /usr/java/</span><br><span class=\"line\">mv jdk-8u161-linux-x64.tar.gz /usr/java/</span><br><span class=\"line\">tar zxvf jdk-8u161-linux-x64.tar.gz</span><br><span class=\"line\">mv jdk1.8.0_161/ jdk1.8</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>编辑配置文件，配置环境变量</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim /etc/profile</span><br><span class=\"line\"></span><br><span class=\"line\">JAVA_HOME=/usr/java/jdk1.8</span><br><span class=\"line\">CLASSPATH=$JAVA_HOME/lib/</span><br><span class=\"line\">PATH=$PATH:$JAVA_HOME/bin</span><br><span class=\"line\">export PATH JAVA_HOME CLASSPATH</span><br><span class=\"line\"></span><br><span class=\"line\">source /etc/profile</span><br></pre></td></tr></table></figure>\n<h2 id=\"zookeeper安装\"><a href=\"#zookeeper安装\" class=\"headerlink\" title=\"zookeeper安装\"></a>zookeeper安装</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir /usr/zookeeper/</span><br><span class=\"line\">mv zookeeper-3.4.11.tar.gz /usr/zookeeper/</span><br><span class=\"line\">tar zxvf zookeeper-3.4.11.tar.gz</span><br><span class=\"line\">cd zookeeper-3.4.11</span><br><span class=\"line\">cd conf</span><br><span class=\"line\">cp zoo_sample.cfg zoo.cfg</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>新增zookeeper用户以及zookeeper组</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">groupadd zookeeper</span><br><span class=\"line\">useradd -g zookeeper zookeeper</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>修改文件夹用户和组</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chown -R zookeeper zookeeper-3.4.11</span><br><span class=\"line\">chgrp -R zookeeper zookeeper-3.4.11</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>新增data和logs文件夹</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /usr/zookeeper/zookeeper-3.4.11</span><br><span class=\"line\">mkdir data</span><br><span class=\"line\">mkdir logs</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>修改/usr/zookeeper/zookeeper-3.4.11/conf目录下的zoo.cfg文件</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># The number of milliseconds of each tick</span><br><span class=\"line\"># zookeeper 定义的基准时间间隔，单位：毫秒</span><br><span class=\"line\">tickTime=2000</span><br><span class=\"line\"># The number of ticks that the initial</span><br><span class=\"line\"># synchronization phase can take</span><br><span class=\"line\">initLimit=10</span><br><span class=\"line\"># The number of ticks that can pass between</span><br><span class=\"line\"># sending a request and getting an acknowledgement</span><br><span class=\"line\">syncLimit=5</span><br><span class=\"line\"># the directory where the snapshot is stored.</span><br><span class=\"line\"># do not use /tmp for storage, /tmp here is just</span><br><span class=\"line\"># example sakes.</span><br><span class=\"line\"># dataDir=/tmp/zookeeper</span><br><span class=\"line\"> </span><br><span class=\"line\"># 数据文件夹</span><br><span class=\"line\">dataDir=/usr/zookeeper/zookeeper-3.4.11/data</span><br><span class=\"line\"> </span><br><span class=\"line\"># 日志文件夹</span><br><span class=\"line\">dataLogDir=/usr/zookeeper/zookeeper-3.4.11/logs</span><br><span class=\"line\"> </span><br><span class=\"line\"># the port at which the clients will connect</span><br><span class=\"line\"># 客户端访问 zookeeper 的端口号</span><br><span class=\"line\">clientPort=2181</span><br><span class=\"line\"> </span><br><span class=\"line\"># the maximum number of client connections.</span><br><span class=\"line\"># increase this if you need to handle more clients</span><br><span class=\"line\">#maxClientCnxns=60</span><br><span class=\"line\">#</span><br><span class=\"line\"># Be sure to read the maintenance section of the</span><br><span class=\"line\"># administrator guide before turning on autopurge.</span><br><span class=\"line\">#</span><br><span class=\"line\"># http://zookeeper.apache.org/doc/current/zookeeperAdmin.html#sc_maintenance</span><br><span class=\"line\">#</span><br><span class=\"line\"># The number of snapshots to retain in dataDir</span><br><span class=\"line\">#autopurge.snapRetainCount=3</span><br><span class=\"line\"># Purge task interval in hours</span><br><span class=\"line\"># Set to &quot;0&quot; to disable auto purge feature</span><br><span class=\"line\">#autopurge.purgeInterval=1</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>修改系统配置文件，添加环境变量</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim /etc/profile</span><br><span class=\"line\"></span><br><span class=\"line\">JAVA_HOME=/usr/java/jdk1.8</span><br><span class=\"line\">ZOOKEEPER_HOME=/usr/zookeeper/zookeeper-3.4.11</span><br><span class=\"line\">CLASSPATH=$JAVA_HOME/lib/</span><br><span class=\"line\">PATH=$PATH:$JAVA_HOME/bin:$ZOOKEEPER_HOME/bin</span><br><span class=\"line\">export PATH JAVA_HOME CLASSPATH</span><br><span class=\"line\"></span><br><span class=\"line\">source /etc/profile</span><br></pre></td></tr></table></figure>\n<h3 id=\"zookeeper常用命令\"><a href=\"#zookeeper常用命令\" class=\"headerlink\" title=\"zookeeper常用命令\"></a>zookeeper常用命令</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">zkServer.sh start</span><br><span class=\"line\">zkServer.sh stop</span><br><span class=\"line\">zkServer.sh status</span><br><span class=\"line\">zkServer.sh restart</span><br></pre></td></tr></table></figure>\n<h3 id=\"以集群方式启动zookeeper\"><a href=\"#以集群方式启动zookeeper\" class=\"headerlink\" title=\"以集群方式启动zookeeper\"></a>以集群方式启动zookeeper</h3><blockquote>\n<p>先备份配置文件，然后将配置文件中的注释行去除</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mv zoo.cfg zoo.cfg.standalone</span><br><span class=\"line\">grep -v &quot;^$&quot; zoo.cfg.standalone | grep -v &quot;^#&quot; &gt; zoo.cfg</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>修改配置文件，如下</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tickTime=2000</span><br><span class=\"line\">initLimit=10</span><br><span class=\"line\">syncLimit=5</span><br><span class=\"line\">dataDir=/usr/zookeeper/zookeeper-3.4.11/data</span><br><span class=\"line\">dataLogDir=/usr/zookeeper/zookeeper-3.4.11/logs</span><br><span class=\"line\">clientPort=2181</span><br><span class=\"line\">server.1=192.168.17.133:2888:3888</span><br><span class=\"line\">server.2=192.168.17.134:2888:3888</span><br><span class=\"line\">server.3=192.168.17.135:2888:3888</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>然后在配置的datadir目录下，创建一个名为myid的文件，在该文件的第一行写上一个数字，与配置文件中server.后的数字一直</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">echo 1 &gt; data/myid</span><br><span class=\"line\">echo 2 &gt; data/myid</span><br><span class=\"line\">echo 3 &gt; data/myid</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>在启动zookeeper集群前，需要先关闭防火墙</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl stop firewalld.service</span><br><span class=\"line\">systemctl disable firewalld.service</span><br><span class=\"line\">firewall-cmd --state</span><br></pre></td></tr></table></figure>\n<h3 id=\"zookeeper的可执行脚本\"><a href=\"#zookeeper的可执行脚本\" class=\"headerlink\" title=\"zookeeper的可执行脚本\"></a>zookeeper的可执行脚本</h3><table>\n<thead>\n<tr>\n<th>脚本</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>zkCleanup</td>\n<td>清理Zookeeper的历史数据，包括事务日志和快照数据文件</td>\n</tr>\n<tr>\n<td>zkCli</td>\n<td>ZooKeeper的一个建议客户端</td>\n</tr>\n<tr>\n<td>zkEvn</td>\n<td>设置ZooKeeper的环境变量</td>\n</tr>\n<tr>\n<td>zkServer</td>\n<td>ZooKeeper服务器的启动、停止和重启脚本</td>\n</tr>\n</tbody>\n</table>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cjir2nrls00089xask2vnaws8","category_id":"cjir2nrl500049xasqnrzxyt6","_id":"cjir2nrmd000e9xaspc9zbfuo"},{"post_id":"cjir2nrkc00009xas518qrt7l","category_id":"cjir2nrl500049xasqnrzxyt6","_id":"cjir2nrmp000i9xas05knfsse"},{"post_id":"cjir2nrlv00099xasvd5jffw6","category_id":"cjir2nrl500049xasqnrzxyt6","_id":"cjir2nrmv000l9xask2o3ho9s"},{"post_id":"cjir2nrm6000c9xaswl53gnz5","category_id":"cjir2nrl500049xasqnrzxyt6","_id":"cjir2nrn1000p9xaswh27mo5x"},{"post_id":"cjir2nrkx00029xasxdimtfnc","category_id":"cjir2nrl500049xasqnrzxyt6","_id":"cjir2nrna000t9xaserrq2dye"},{"post_id":"cjir2nrma000d9xasyrudn038","category_id":"cjir2nrl500049xasqnrzxyt6","_id":"cjir2nrni000w9xasgqx5wb8g"},{"post_id":"cjir2nrmk000h9xas8r5zt0f1","category_id":"cjir2nrl500049xasqnrzxyt6","_id":"cjir2nrns000z9xass9neck9k"},{"post_id":"cjir2nrlj00069xas2rnwago8","category_id":"cjir2nrl500049xasqnrzxyt6","_id":"cjir2nrnz00129xaseky51cdh"},{"post_id":"cjir2nrnd000v9xas9tg7s8ht","category_id":"cjir2nrl500049xasqnrzxyt6","_id":"cjir2nro300169xasq2scv95w"},{"post_id":"cjir2nrmt000k9xastja5qavy","category_id":"cjir2nrn3000r9xasq6s2k37g","_id":"cjir2nro6001a9xas4uc8pj3k"},{"post_id":"cjir2nrnm000x9xasplvzm092","category_id":"cjir2nrl500049xasqnrzxyt6","_id":"cjir2nroe001d9xas92jeye9p"},{"post_id":"cjir2nrmy000o9xas47yxx8zq","category_id":"cjir2nrn3000r9xasq6s2k37g","_id":"cjir2nroi001g9xaso4ylgmet"},{"post_id":"cjir2nro500199xasitu10bbi","category_id":"cjir2nrl500049xasqnrzxyt6","_id":"cjir2nrok001j9xasbdnhythn"},{"post_id":"cjir2nrn6000s9xasfqgymj6s","category_id":"cjir2nro300159xaslulzef1v","_id":"cjir2nrom001m9xasb0ogd7xu"},{"post_id":"cjir2nrnx00119xas423b3g9w","category_id":"cjir2nroh001e9xas9lzuhziw","_id":"cjir2nroo001p9xasozovny6s"},{"post_id":"cjir2nro000149xasezbxsgup","category_id":"cjir2nrok001k9xasv745961d","_id":"cjir2nror001u9xas085olc4y"},{"post_id":"cjir2nro9001c9xas1vlkuey9","category_id":"cjir2nroo001q9xassf8juris","_id":"cjir2nrou001y9xasnl8bc992"}],"PostTag":[{"post_id":"cjir2nrkc00009xas518qrt7l","tag_id":"cjir2nrli00059xas01jl0onr","_id":"cjir2nrmq000j9xaseiqenzfn"},{"post_id":"cjir2nrkc00009xas518qrt7l","tag_id":"cjir2nrm3000b9xasb0xz7adu","_id":"cjir2nrmv000m9xast0qj6lvv"},{"post_id":"cjir2nrkx00029xasxdimtfnc","tag_id":"cjir2nrli00059xas01jl0onr","_id":"cjir2nrn2000q9xasj9r36322"},{"post_id":"cjir2nrlj00069xas2rnwago8","tag_id":"cjir2nrli00059xas01jl0onr","_id":"cjir2nrnz00139xasakeb3s9o"},{"post_id":"cjir2nrlj00069xas2rnwago8","tag_id":"cjir2nrnc000u9xas2uho91h5","_id":"cjir2nro400179xasz3f62x7j"},{"post_id":"cjir2nrls00089xask2vnaws8","tag_id":"cjir2nrli00059xas01jl0onr","_id":"cjir2nro8001b9xasgbuq02vg"},{"post_id":"cjir2nrls00089xask2vnaws8","tag_id":"cjir2nrnw00109xassunjjvzt","_id":"cjir2nroi001f9xas1t6okr15"},{"post_id":"cjir2nrlv00099xasvd5jffw6","tag_id":"cjir2nro400189xas22m084no","_id":"cjir2nrok001i9xas45owzco4"},{"post_id":"cjir2nrlv00099xasvd5jffw6","tag_id":"cjir2nrli00059xas01jl0onr","_id":"cjir2nrom001l9xas20hht5fd"},{"post_id":"cjir2nrm6000c9xaswl53gnz5","tag_id":"cjir2nrnw00109xassunjjvzt","_id":"cjir2nron001o9xasg0v72445"},{"post_id":"cjir2nrm6000c9xaswl53gnz5","tag_id":"cjir2nrli00059xas01jl0onr","_id":"cjir2nrop001r9xas5u6nplv0"},{"post_id":"cjir2nrma000d9xasyrudn038","tag_id":"cjir2nrli00059xas01jl0onr","_id":"cjir2nroq001t9xasb860o85f"},{"post_id":"cjir2nrma000d9xasyrudn038","tag_id":"cjir2nrnw00109xassunjjvzt","_id":"cjir2nros001v9xasjsvhpx18"},{"post_id":"cjir2nrmk000h9xas8r5zt0f1","tag_id":"cjir2nroq001s9xastiv7zjyv","_id":"cjir2nrou001x9xasyd0yz70n"},{"post_id":"cjir2nrmk000h9xas8r5zt0f1","tag_id":"cjir2nrli00059xas01jl0onr","_id":"cjir2nrou001z9xas86k0by24"},{"post_id":"cjir2nrmt000k9xastja5qavy","tag_id":"cjir2nros001w9xas9iuxzsq9","_id":"cjir2nrp300229xasin97w80m"},{"post_id":"cjir2nrmt000k9xastja5qavy","tag_id":"cjir2nrov00209xas7i3ozh02","_id":"cjir2nrp400239xas9ngx5qq9"},{"post_id":"cjir2nrmy000o9xas47yxx8zq","tag_id":"cjir2nroz00219xas8tu6lnu1","_id":"cjir2nrp500259xasvwkgq673"},{"post_id":"cjir2nrn6000s9xasfqgymj6s","tag_id":"cjir2nrp400249xassdre9erc","_id":"cjir2nrp700279xassfnafahh"},{"post_id":"cjir2nrn6000s9xasfqgymj6s","tag_id":"cjir2nrli00059xas01jl0onr","_id":"cjir2nrp700289xasxzahsrth"},{"post_id":"cjir2nrnd000v9xas9tg7s8ht","tag_id":"cjir2nrp500269xas9lackafa","_id":"cjir2nrpa002b9xasgeipzoky"},{"post_id":"cjir2nrnd000v9xas9tg7s8ht","tag_id":"cjir2nrp700299xasgz6sx6dv","_id":"cjir2nrpa002c9xas56tlwr0t"},{"post_id":"cjir2nrnd000v9xas9tg7s8ht","tag_id":"cjir2nrli00059xas01jl0onr","_id":"cjir2nrpc002e9xaspeygzh7b"},{"post_id":"cjir2nrnm000x9xasplvzm092","tag_id":"cjir2nrp500269xas9lackafa","_id":"cjir2nrpc002f9xasecbejcly"},{"post_id":"cjir2nrnm000x9xasplvzm092","tag_id":"cjir2nrli00059xas01jl0onr","_id":"cjir2nrpd002h9xasl9j72y7x"},{"post_id":"cjir2nrnx00119xas423b3g9w","tag_id":"cjir2nrpa002d9xasb4czow3u","_id":"cjir2nrpd002i9xasxt4az8be"},{"post_id":"cjir2nro000149xasezbxsgup","tag_id":"cjir2nrpd002g9xas5arur724","_id":"cjir2nrpe002k9xasereu167o"},{"post_id":"cjir2nro500199xasitu10bbi","tag_id":"cjir2nrpe002j9xasyjq594ol","_id":"cjir2nrpf002m9xas769vc0pw"},{"post_id":"cjir2nro500199xasitu10bbi","tag_id":"cjir2nrli00059xas01jl0onr","_id":"cjir2nrpf002n9xash39vp7s6"},{"post_id":"cjir2nro9001c9xas1vlkuey9","tag_id":"cjir2nrpf002l9xasumtvz70b","_id":"cjir2nrpf002o9xas943jihy6"},{"post_id":"cjir2nro9001c9xas1vlkuey9","tag_id":"cjir2nrli00059xas01jl0onr","_id":"cjir2nrpf002p9xas5yyslvim"}],"Tag":[{"name":"Linux","_id":"cjir2nrli00059xas01jl0onr"},{"name":"awk","_id":"cjir2nrm3000b9xasb0xz7adu"},{"name":"grep","_id":"cjir2nrnc000u9xas2uho91h5"},{"name":"Shell","_id":"cjir2nrnw00109xassunjjvzt"},{"name":"sed","_id":"cjir2nro400189xas22m084no"},{"name":"docker","_id":"cjir2nroq001s9xastiv7zjyv"},{"name":"Hadoop","_id":"cjir2nros001w9xas9iuxzsq9"},{"name":"大数据","_id":"cjir2nrov00209xas7i3ozh02"},{"name":"hadoop","_id":"cjir2nroz00219xas8tu6lnu1"},{"name":"HEXO","_id":"cjir2nrp400249xassdre9erc"},{"name":"Nginx","_id":"cjir2nrp500269xas9lackafa"},{"name":"Keepalived","_id":"cjir2nrp700299xasgz6sx6dv"},{"name":"python","_id":"cjir2nrpa002d9xasb4czow3u"},{"name":"Spider","_id":"cjir2nrpd002g9xas5arur724"},{"name":"vim","_id":"cjir2nrpe002j9xasyjq594ol"},{"name":"Zookeeper","_id":"cjir2nrpf002l9xasumtvz70b"}]}}