<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[python3基础数据类型详解]]></title>
      <url>/2018/02/12/python3-base-datatype/</url>
      <content type="html"><![CDATA[<h3 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h3><h4 id="Integral类型"><a href="#Integral类型" class="headerlink" title="Integral类型"></a>Integral类型</h4><p>Python提供了两种内置的Integral类型，即int与bool。</p>
<h4 id="浮点类型"><a href="#浮点类型" class="headerlink" title="浮点类型"></a>浮点类型</h4><p>Python提供了3中浮点值：内置的float与complex类型，以及来自标准库的decimal.Decimal类型。</p>
<h4 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h4><p>字符串是使用固定不变的str数据类型表示的，其中存放Unicode字符序列。<br>由于字符串是固定序列，所有可用于固定序列的功能都可用于字符串。</p>
<h3 id="组合数据类型"><a href="#组合数据类型" class="headerlink" title="组合数据类型"></a>组合数据类型</h3><h4 id="序列类型"><a href="#序列类型" class="headerlink" title="序列类型"></a>序列类型</h4><p>序列类型支持成员关系操作符(in)、大小计算函数(len())、分片([])，并且是可以迭代的。<br>Python提供了5中内置的序列类型：bytearray、bytes、list、str与tuple，以及标准类库中提供的collections.namedtuple。</p>
<h5 id="元组tuple"><a href="#元组tuple" class="headerlink" title="元组tuple"></a>元组tuple</h5><p>元组是有序的序列，其中包含0个或多个对象引用。<br>元组是固定的，不能替换或删除其中包含的任意数据项。<br>元组使用小括号()表示，中间的元素用逗号分隔。<br>元组是可以迭代的(iterable)。</p>
<h5 id="列表list"><a href="#列表list" class="headerlink" title="列表list"></a>列表list</h5><p>列表是包含0个或多个对象引用的有序序列，支持与字符串以及元组一样的分片与步距语法。<br>列表是可变的，可以对列表中的项进行删除或替换。<br>列表使用方括号[]表示，中间的元素用逗号分隔。<br>列表是可以迭代的(iterable)。</p>
<h4 id="集合类型set"><a href="#集合类型set" class="headerlink" title="集合类型set"></a>集合类型set</h4><p>set是可以迭代的(iterable)。在进行迭代时，集合类型以任意顺序提供其数据项。<br>Python提供了两种内置的集合类型：可变的set类型，固定的frozenset类型。<br>只有可哈希运算的对象可以添加到集合中，可哈希运算的对象包含一个<strong>hash</strong>()特殊方法。<br>所有内置的固定数据类型(例如float、frozenset、int、str、tuple)都是可以哈希运算的，都可以添加到集合中。内置的可变数据类型(例如dict、list、set)都不是可哈希运算的，因为其哈希值会随着包含项数的变化而变化，因此这些数据类型不能添加到集合中。</p>
<p>集合是0个或多个对象引用的无序组合，这些对象引用所引用的对象都是可哈希运算的。集合是可变的，但其中的项是无序的，所以没有索引位置的概念。<br>集合中包含的每个数据项都是独一无二的，不会出现重复的数据项。<br>集合使用大括号&#123;&#125;表示，数据项用逗号分隔。</p>
<p>固定集合是指那种一旦创建后就不能改变的集合，固定集合只能使用frozenset数据类型函数进行创建。<br>集合与固定集合都可以包含固定集合。</p>
<h4 id="映射类型"><a href="#映射类型" class="headerlink" title="映射类型"></a>映射类型</h4><p>映射类型是一种支持成员关系操作符(in)与尺寸函数(len())的数据类型，并且也是可以迭代的。<br>映射是键-值数据项的组合，并提供了存取数据项及其键、值的方法。<br>在进行迭代时，映射类型以任意顺序提供其数据项。<br>Python3支持三种无序的映射类型-内置的dict类型，标准库中的collections.defaultdict和collections.OrderedDict。<br>只有可哈希运算的对象可用作字典的键，因此固定数据类型都可以用作字典的值，可变的数据类型则不能。</p>
<p>字典dict是一种无序的组合数据类型，其中包含0个或多个键-值对。<br>字典是可变的，可以对其进行数据项的添加或移除操作。<br>字典的键是独一无二的，所以不存在重复的键。</p>
<p>默认字典也是一种字典，但是可以对遗失的键进行处理，其他与普通字典一样。</p>
<p>有序字典可用作对无序字典dict的下降替代，有序字典以数据项插入的顺序进行存储。</p>
<h4 id="组合数据类型的迭代与复制"><a href="#组合数据类型的迭代与复制" class="headerlink" title="组合数据类型的迭代与复制"></a>组合数据类型的迭代与复制</h4><p>iterable数据类型每次返回其中的一个数据项。任意包含<strong>iter</strong>()方法的对象或任意序列(即包含<strong>getitem</strong>()方法的对象)都是一个iterable，并可以提供一个迭代子。迭代子是一个对象，该对象可以提供<strong>next</strong>()方法。</p>
<p>浅复制和深复制<br>深复制需要调用copy模块中的deepcopy函数。</p>
]]></content>
      
        <categories>
            
            <category> python </category>
            
        </categories>
        
        
        <tags>
            
            <tag> python </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Linux shell的实用脚本]]></title>
      <url>/2018/02/12/Linux-shell-script/</url>
      <content type="html"><![CDATA[<h3 id="归档"><a href="#归档" class="headerlink" title="归档"></a>归档</h3>]]></content>
      
        <categories>
            
            <category> Linux </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Shell </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Hadoop配置文件详解]]></title>
      <url>/2018/02/11/hadoop-configure-file/</url>
      <content type="html"><![CDATA[<h3 id="配置文件的层级关系"><a href="#配置文件的层级关系" class="headerlink" title="配置文件的层级关系"></a>配置文件的层级关系</h3><h3 id="core-site-xml文件"><a href="#core-site-xml文件" class="headerlink" title="core-site.xml文件"></a>core-site.xml文件</h3><table>
<thead>
<tr>
<th style="text-align:center">参数</th>
<th style="text-align:center">属性值</th>
<th style="text-align:center">解释</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">fs.defaultFS</td>
<td style="text-align:center">NameNode URL</td>
<td style="text-align:center">hdfs://host:port/</td>
</tr>
<tr>
<td style="text-align:center">io.file.buffer.size</td>
<td style="text-align:center">131072</td>
<td style="text-align:center">SequenceFiles文件中.读写缓存size设定</td>
</tr>
<tr>
<td style="text-align:center">hadoop.tmp.dir</td>
<td style="text-align:center">/home/hadoop/tmp</td>
<td style="text-align:center">hadoop文件系统依赖的基础配置</td>
</tr>
<tr>
<td style="text-align:center">ha.zookeeper.quorum</td>
<td style="text-align:center">hostname:port</td>
<td style="text-align:center">zookeeper的地址，多个地址以逗号分隔</td>
</tr>
</tbody>
</table>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;configuration&gt;</span><br><span class="line">  &lt;property&gt;</span><br><span class="line">    &lt;name&gt;fs.default.name&lt;/name&gt;</span><br><span class="line">    &lt;value&gt;hdfs://hadoop1:9000&lt;/value&gt;</span><br><span class="line">    &lt;description&gt;hadoop1为服务器主机名，其实也可以使用IP地址&lt;/description&gt;</span><br><span class="line">  &lt;/property&gt;</span><br><span class="line">  &lt;property&gt;</span><br><span class="line">    &lt;name&gt;hadoop.tmp.dir&lt;/name&gt;</span><br><span class="line">    &lt;value&gt;/home/hadoop/tmp&lt;/value&gt;</span><br><span class="line">  &lt;/property&gt;</span><br><span class="line">  &lt;property&gt;</span><br><span class="line">    &lt;name&gt;io.file.buffer.size&lt;/name&gt;</span><br><span class="line">    &lt;value&gt;131072&lt;/value&gt;</span><br><span class="line">    &lt;description&gt;该属性值单位为KB，131072KB即为默认的64M&lt;/description&gt;</span><br><span class="line">  &lt;/property&gt;</span><br><span class="line">&lt;/configuration&gt;</span><br></pre></td></tr></table></figure>
<h3 id="hdfs-site-xml文件"><a href="#hdfs-site-xml文件" class="headerlink" title="hdfs-site.xml文件"></a>hdfs-site.xml文件</h3><table>
<thead>
<tr>
<th style="text-align:center">参数</th>
<th style="text-align:center">属性值</th>
<th style="text-align:center">解释</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">dfs.namenode.name.dir</td>
<td style="text-align:center">本地文件系统所在的NameNode的存储空间和持续化处理日志的路径</td>
<td style="text-align:center">可以是按逗号分隔的目录列表，fsimage文件会存储在全部目录，冗余安全</td>
</tr>
<tr>
<td style="text-align:center">dfs.blocksize</td>
<td style="text-align:center">268435456</td>
<td style="text-align:center">大文件系统HDFS块大小为256M，默认值为64M</td>
</tr>
<tr>
<td style="text-align:center">dfs.datanode.data.dir</td>
<td style="text-align:center">datanode存放数据块文件的目录</td>
<td style="text-align:center">如果这是一个以逗号分隔的目录列表，那么数据将被存储在所有命名的目录，通常在不同的设备</td>
</tr>
<tr>
<td style="text-align:center">dfs.replication</td>
<td style="text-align:center">hdfs保存数据的副本数量</td>
<td style="text-align:center">副本数目不能大于datanode数目，伪分布式可以将其配置成1</td>
</tr>
<tr>
<td style="text-align:center">dfs.permissions</td>
<td style="text-align:center">true/false</td>
<td style="text-align:center">是否对远程读写hdfs进行权限检查，可以设置为false，即不检查</td>
</tr>
<tr>
<td style="text-align:center">dfs.nameservices</td>
<td style="text-align:center">clustername</td>
<td style="text-align:center">使用federation，启动两个HDFS集群，clustername为集群的别名，可以为任意，但不能重复</td>
</tr>
<tr>
<td style="text-align:center">dfs.ha.namenodes.clustername</td>
<td style="text-align:center">hostname</td>
<td style="text-align:center">指定nameservice是clustername时的namenode有哪些，这里的值是逻辑名称，可以随意，但不能重复</td>
</tr>
<tr>
<td style="text-align:center">dfs.namenode.rpc-address.clustername.hostname</td>
<td style="text-align:center">hostname:9000</td>
<td style="text-align:center">指定rpc地址</td>
</tr>
<tr>
<td style="text-align:center">dfs.namenode.http-address.clustername.hostname</td>
<td style="text-align:center">hostname:50070</td>
<td style="text-align:center">指定http地址</td>
</tr>
<tr>
<td style="text-align:center">dfs.namenode.shared.edits.dir</td>
<td style="text-align:center">qjournal://hostname:port;hostname:port/clustername</td>
<td style="text-align:center">指定clustername的NameNode共享edits文件目录时，使用的JournalNode集群信息</td>
</tr>
<tr>
<td style="text-align:center">dfs.ha.automatic-failover.enabled.cluster1</td>
<td style="text-align:center">true/false</td>
<td style="text-align:center">cluster1是否启用自动故障恢复，即当NameNode出故障时，是否切换到另一台NameNode</td>
</tr>
<tr>
<td style="text-align:center">dfs.client.failover.proxy.provider.cluster1</td>
<td style="text-align:center">org.apache.hadoop.hdfs.server.namenode.ha.ConfiguredFailoverProxyProvider</td>
<td style="text-align:center">指定cluster1出故障时，哪个实现类负责执行故障切换</td>
</tr>
<tr>
<td style="text-align:center">dfs.ha.fencing.methods</td>
<td style="text-align:center">sshfence</td>
<td style="text-align:center">NameNode需要进行切换时，使用ssh方式进行操作</td>
</tr>
<tr>
<td style="text-align:center">dfs.ha.fencing.ssh.private-key-files</td>
<td style="text-align:center">/home/hadoop/.ssh/id_rsa</td>
<td style="text-align:center">如果使用ssh方式，指定密钥存储的位置</td>
</tr>
</tbody>
</table>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;configuration&gt;</span><br><span class="line">  &lt;property&gt;</span><br><span class="line">    &lt;name&gt;dfs.name.dir&lt;/name&gt;</span><br><span class="line">    &lt;value&gt;/home/hadoop/hdfs/name&lt;/value&gt;</span><br><span class="line">  &lt;/property&gt;</span><br><span class="line"></span><br><span class="line">  &lt;property&gt;</span><br><span class="line">    &lt;name&gt;dfs.data.dir&lt;/name&gt;</span><br><span class="line">    &lt;value&gt;/home/hadoop/hdfs/data&lt;/value&gt;</span><br><span class="line">  &lt;/property&gt;</span><br><span class="line"></span><br><span class="line">  &lt;property&gt;</span><br><span class="line">    &lt;name&gt;dfs.replication&lt;/name&gt;</span><br><span class="line">    &lt;value&gt;2&lt;/value&gt;</span><br><span class="line">  &lt;/property&gt;</span><br><span class="line"></span><br><span class="line">  &lt;property&gt;</span><br><span class="line">    &lt;name&gt;dfs.permissions&lt;/name&gt;</span><br><span class="line">    &lt;value&gt;false&lt;/value&gt;</span><br><span class="line">    &lt;description&gt;need not permissions&lt;/description&gt;</span><br><span class="line">  &lt;/property&gt;</span><br><span class="line">&lt;/configuration&gt;</span><br></pre></td></tr></table></figure>
<h3 id="slaves文件"><a href="#slaves文件" class="headerlink" title="slaves文件"></a>slaves文件</h3><p>从节点的主机名，直接添加即可。</p>
<h3 id="mapred-site-xml文件"><a href="#mapred-site-xml文件" class="headerlink" title="mapred-site.xml文件"></a>mapred-site.xml文件</h3><h3 id="yarn-site-xml文件"><a href="#yarn-site-xml文件" class="headerlink" title="yarn-site.xml文件"></a>yarn-site.xml文件</h3>]]></content>
      
        <categories>
            
            <category> 大数据 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Hadoop </tag>
            
            <tag> 大数据 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[hadoop安装和基本使用]]></title>
      <url>/2018/02/07/hadoop-install-use/</url>
      <content type="html"><![CDATA[<h3 id="Hadoop安装"><a href="#Hadoop安装" class="headerlink" title="Hadoop安装"></a>Hadoop安装</h3><h4 id="创建hadoop用户"><a href="#创建hadoop用户" class="headerlink" title="创建hadoop用户"></a>创建hadoop用户</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">useradd -m hadoop -s /bin/bash</span><br></pre></td></tr></table></figure>
<h4 id="安装java环境"><a href="#安装java环境" class="headerlink" title="安装java环境"></a>安装java环境</h4><ol>
<li><p>如果是系统自带的java，请先卸载：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rpm -qa | grep jdk</span><br><span class="line">rpm -e --nodeps XXXX		#XXXX是上一条命令的查询结构</span><br></pre></td></tr></table></figure>
</li>
<li><p>到Oracle官网下载jdk，并安装(这里下载的是.tar.gz版)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mkdir /usr/java/</span><br><span class="line">mv jdk-8u161-linux-x64.tar.gz /usr/java/</span><br><span class="line">tar zxvf jdk-8u161-linux-x64.tar.gz</span><br><span class="line">mv jdk1.8.0_161/ jdk1.8</span><br></pre></td></tr></table></figure>
</li>
<li><p>编辑配置文件，配置环境变量</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/profile</span><br><span class="line"></span><br><span class="line">JAVA_HOME=/usr/java/jdk1.8</span><br><span class="line">CLASSPATH=$JAVA_HOME/lib/</span><br><span class="line">PATH=$PATH:$JAVA_HOME/bin</span><br><span class="line">export PATH JAVA_HOME CLASSPATH</span><br><span class="line"></span><br><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h4 id="安装Hadoop2"><a href="#安装Hadoop2" class="headerlink" title="安装Hadoop2"></a>安装Hadoop2</h4><p>从hadoop的官网下载已经编译好的(binary)hadoop压缩包，在这里使用的是hadoop2.8.3版本。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd /home/hadoop</span><br><span class="line">tar -zxvf hadoop-2.8.3.tar.gz</span><br><span class="line">mv hadoop-2.8.3 hadoop</span><br></pre></td></tr></table></figure>
<p>修改配置文件，添加环境变量</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">su</span><br><span class="line">vim /etc/profile</span><br><span class="line"></span><br><span class="line">export HADOOP_HOME=/home/hadoop/hadoop</span><br><span class="line">export PATH=.:$HADOOP_HOME/bin:$HADOOP_HOME/sbin:$PATH</span><br><span class="line"></span><br><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure>
<h3 id="Hadoop配置"><a href="#Hadoop配置" class="headerlink" title="Hadoop配置"></a>Hadoop配置</h3><h4 id="在-home-hadoop-目录下，建立tmp、hdfs-name、hdfs-data目录"><a href="#在-home-hadoop-目录下，建立tmp、hdfs-name、hdfs-data目录" class="headerlink" title="在/home/hadoop/目录下，建立tmp、hdfs/name、hdfs/data目录"></a>在/home/hadoop/目录下，建立tmp、hdfs/name、hdfs/data目录</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ cd /home/hadoop</span><br><span class="line">$ mkdir tmp</span><br><span class="line">$ mkdir hdfs</span><br><span class="line">$ cd hdfs/</span><br><span class="line">$ mkdir data</span><br><span class="line">$ mkdir name</span><br></pre></td></tr></table></figure>
<h4 id="修改hadoop的配置文件"><a href="#修改hadoop的配置文件" class="headerlink" title="修改hadoop的配置文件"></a>修改hadoop的配置文件</h4><ol>
<li><p>配置hadoop-env.sh和yarn-env.sh</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ cd /home/hadoop/hadoop/etc/hadoop</span><br><span class="line"></span><br><span class="line">$ vim hadoop-env.sh</span><br><span class="line">#修改export JAVA_HOME</span><br><span class="line">export JAVA_HOME=/usr/java/jdk1.8</span><br><span class="line"></span><br><span class="line">$ vim yarn-env.sh</span><br><span class="line">#修改export JAVA_HOME</span><br><span class="line">export JAVA_HOME=/usr/java/jdk1.8</span><br></pre></td></tr></table></figure>
</li>
<li><p>配置core-site.xml</p>
<p>其中fs.default.name是HDFS的URI，hadoop.tmp.dir是namenode上本地的hadoop临时文件夹</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;configuration&gt;</span><br><span class="line">  &lt;property&gt;</span><br><span class="line">    &lt;name&gt;fs.default.name&lt;/name&gt;</span><br><span class="line">    &lt;value&gt;hdfs://localhost:9000&lt;/value&gt;</span><br><span class="line">  &lt;/property&gt;</span><br><span class="line"></span><br><span class="line">  &lt;property&gt;</span><br><span class="line">    &lt;name&gt;hadoop.tmp.dir&lt;/name&gt;</span><br><span class="line">    &lt;value&gt;/home/hadoop/tmp&lt;/value&gt;</span><br><span class="line">  &lt;/property&gt;</span><br><span class="line">&lt;/configuration&gt;</span><br></pre></td></tr></table></figure>
</li>
<li><p>配置hdfs-site.xml</p>
<p>其中dfs.name.dir是namenode上存储hdfs名字空间元数据，dfs.data.dir是namenode上数据块的物理存储位置，dfs.replication是副本的个数，默认为3，一般小于datanode的机器数量。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;configuration&gt;</span><br><span class="line">  &lt;property&gt;</span><br><span class="line">    &lt;name&gt;dfs.name.dir&lt;/name&gt;</span><br><span class="line">    &lt;value&gt;/home/hadoop/hdfs/name&lt;/value&gt;</span><br><span class="line">  &lt;/property&gt;</span><br><span class="line"></span><br><span class="line">  &lt;property&gt;</span><br><span class="line">    &lt;name&gt;dfs.data.dir&lt;/name&gt;</span><br><span class="line">    &lt;value&gt;/home/hadoop/hdfs/data&lt;/value&gt;</span><br><span class="line">  &lt;/property&gt;</span><br><span class="line"></span><br><span class="line">  &lt;property&gt;</span><br><span class="line">    &lt;name&gt;dfs.replication&lt;/name&gt;</span><br><span class="line">    &lt;value&gt;1&lt;/value&gt;</span><br><span class="line">  &lt;/property&gt;</span><br><span class="line">&lt;/configuration&gt;</span><br></pre></td></tr></table></figure>
</li>
<li><p>配置mapred-site.xml</p>
<blockquote>
<p>注意，默认文件夹中并没有这个文件，而是有一个mapred-site.xml.template，可以将该文件复制并重命名</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;configuration&gt;</span><br><span class="line">  &lt;property&gt;</span><br><span class="line">    &lt;name&gt;mapreduce.framework.name&lt;/name&gt;</span><br><span class="line">    &lt;value&gt;yarn&lt;/value&gt;</span><br><span class="line">  &lt;/property&gt;</span><br><span class="line">&lt;/configuration&gt;</span><br></pre></td></tr></table></figure>
</li>
<li><p>配置yarn-site.xml</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;configuration&gt;</span><br><span class="line">  &lt;property&gt;</span><br><span class="line">    &lt;name&gt;yarn.nodemanager.aux-services&lt;/name&gt;</span><br><span class="line">    &lt;value&gt;mapreduce_shuffle&lt;/value&gt;</span><br><span class="line">  &lt;/property&gt;</span><br><span class="line">&lt;/configuration&gt;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h3 id="Hadoop启动"><a href="#Hadoop启动" class="headerlink" title="Hadoop启动"></a>Hadoop启动</h3><h4 id="格式化namenode"><a href="#格式化namenode" class="headerlink" title="格式化namenode"></a>格式化namenode</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ./bin/hdfs namenode -format</span><br></pre></td></tr></table></figure>
<h4 id="启动NameNode和DataNode的守护进程"><a href="#启动NameNode和DataNode的守护进程" class="headerlink" title="启动NameNode和DataNode的守护进程"></a>启动NameNode和DataNode的守护进程</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ./sbin/start-dfs.sh</span><br></pre></td></tr></table></figure>
<h4 id="启动ResourceManager和NodeManager的守护进程"><a href="#启动ResourceManager和NodeManager的守护进程" class="headerlink" title="启动ResourceManager和NodeManager的守护进程"></a>启动ResourceManager和NodeManager的守护进程</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ./sbin/start-yarn.sh</span><br></pre></td></tr></table></figure>
<h4 id="验证启动"><a href="#验证启动" class="headerlink" title="验证启动"></a>验证启动</h4><p>执行jps命令</p>
<h4 id="免密登陆"><a href="#免密登陆" class="headerlink" title="免密登陆"></a>免密登陆</h4><p>每次在启动或者停止hadoop是都需要输入密码进行验证，此时可以设置免密登陆：</p>
<ol>
<li><p>安装ssh服务</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ yum install -y openssh-server openssh-clients</span><br></pre></td></tr></table></figure>
</li>
<li><p>进入用户目录，生成密钥</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ cd ~</span><br><span class="line">$ cd .ssh/</span><br><span class="line">$ ssh-keygen -t rsa (然后一路回车)</span><br><span class="line">$ cp id_rsa.pub authorized_keys</span><br><span class="line"></span><br><span class="line">$ ssh localhost  #如果此时不提示任何错误，则表明设置成功</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h3 id="Hadoop集群安装"><a href="#Hadoop集群安装" class="headerlink" title="Hadoop集群安装"></a>Hadoop集群安装</h3><h4 id="安装3台机器"><a href="#安装3台机器" class="headerlink" title="安装3台机器"></a>安装3台机器</h4><p>  安装3个虚拟机，主机名分别为hadoop1，hadoop2和hadoop3，对应的ip分别为192.168.17.133,192.168.17.134以及192.168.17.135。</p>
<h4 id="修改机器名"><a href="#修改机器名" class="headerlink" title="修改机器名"></a>修改机器名</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hostnamectl set-hostname hadoop1</span><br><span class="line">hostnamectl set-hostname hadoop2</span><br><span class="line">hostnamectl set-hostname hadoop3</span><br></pre></td></tr></table></figure>
<h4 id="修改-etc-hosts文件"><a href="#修改-etc-hosts文件" class="headerlink" title="修改/etc/hosts文件"></a>修改/etc/hosts文件</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">192.168.17.133 hadoop1</span><br><span class="line">192.168.17.134 hadoop2</span><br><span class="line">192.168.17.135 hadoop3</span><br></pre></td></tr></table></figure>
<h4 id="免密登陆-1"><a href="#免密登陆-1" class="headerlink" title="免密登陆"></a>免密登陆</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ cd ~</span><br><span class="line">$ cd .ssh/</span><br><span class="line">$ ssh-keygen -t rsa (然后一路回车)</span><br><span class="line">$ cp id_rsa.pub authorized_keys </span><br><span class="line"></span><br><span class="line">然后修改authorized_keys文件，将三台机器的文件内容合并，然后复制到每台机器中</span><br></pre></td></tr></table></figure>
<h4 id="配置Hadoop"><a href="#配置Hadoop" class="headerlink" title="配置Hadoop"></a>配置Hadoop</h4><p>在hadoop1机器中执行以下命令：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mkdir /home/hadoop/tmp  </span><br><span class="line">mkdir /home/hadoop/var  </span><br><span class="line">mkdir /home/hadoop/hdfs  </span><br><span class="line">mkdir /home/hadoop/hdfs/name  </span><br><span class="line">mkdir /home/hadoop/hdfs/data</span><br></pre></td></tr></table></figure>
<ol>
<li><p>修改core-site.xml文件：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;configuration&gt;</span><br><span class="line">  &lt;property&gt;</span><br><span class="line">    &lt;name&gt;hadoop.tmp.dir&lt;/name&gt;</span><br><span class="line">    &lt;value&gt;/home/hadoop/tmp&lt;/value&gt;</span><br><span class="line">    &lt;description&gt;Abase for other temporary directories.&lt;/description&gt;</span><br><span class="line">  &lt;/property&gt;</span><br><span class="line">  &lt;property&gt;</span><br><span class="line">    &lt;name&gt;fs.default.name&lt;/name&gt;</span><br><span class="line">    &lt;value&gt;hdfs://hadoop1:9000&lt;/value&gt;</span><br><span class="line">  &lt;/property&gt;</span><br><span class="line">&lt;/configuration&gt;</span><br></pre></td></tr></table></figure>
</li>
<li><p>修改hadoop-env.sh文件：</p>
<p>略</p>
</li>
<li><p>修改hdfs-site.xml文件：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;configuration&gt;</span><br><span class="line">  &lt;property&gt;</span><br><span class="line">    &lt;name&gt;dfs.name.dir&lt;/name&gt;</span><br><span class="line">    &lt;value&gt;/home/hadoop/hdfs/name&lt;/value&gt;</span><br><span class="line">  &lt;/property&gt;</span><br><span class="line">  &lt;property&gt;</span><br><span class="line">    &lt;name&gt;dfs.data.dir&lt;/name&gt;</span><br><span class="line">    &lt;value&gt;/home/hadoop/hdfs/data&lt;/value&gt;</span><br><span class="line">  &lt;/property&gt;</span><br><span class="line">  &lt;property&gt;</span><br><span class="line">    &lt;name&gt;dfs.replication&lt;/name&gt;</span><br><span class="line">    &lt;value&gt;2&lt;/value&gt;</span><br><span class="line">  &lt;/property&gt;</span><br><span class="line">  &lt;property&gt;</span><br><span class="line">    &lt;name&gt;dfs.permissions&lt;/name&gt;</span><br><span class="line">    &lt;value&gt;false&lt;/value&gt;</span><br><span class="line">  &lt;/property&gt;</span><br><span class="line">&lt;/configuration&gt;</span><br></pre></td></tr></table></figure>
</li>
<li><p>修改mapred-site.xml文件：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;configuration&gt;</span><br><span class="line">  &lt;property&gt;</span><br><span class="line">    &lt;name&gt;mapred.job.tracker&lt;/name&gt;</span><br><span class="line">    &lt;value&gt;hadoop1:49001&lt;/value&gt;</span><br><span class="line">  &lt;/property&gt;</span><br><span class="line">  &lt;property&gt;</span><br><span class="line">    &lt;name&gt;mapred.local.dir&lt;/name&gt;</span><br><span class="line">    &lt;value&gt;/home/hadoop/var&lt;/value&gt;</span><br><span class="line">  &lt;/property&gt;</span><br><span class="line">  &lt;property&gt;</span><br><span class="line">    &lt;name&gt;mapreduce.framework.name&lt;/name&gt;</span><br><span class="line">    &lt;value&gt;yarn&lt;/value&gt;</span><br><span class="line">  &lt;/property&gt;</span><br><span class="line">&lt;/configuration&gt;</span><br></pre></td></tr></table></figure>
</li>
<li><p>修改slaves文件：</p>
<blockquote>
<p>hadoop2<br> hadoop3</p>
</blockquote>
</li>
<li><p>修改yarn-site.xml文件：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">&lt;configuration&gt;</span><br><span class="line">  &lt;property&gt;</span><br><span class="line">    &lt;name&gt;yarn.resourcemanager.hostname&lt;/name&gt;</span><br><span class="line">    &lt;value&gt;hadoop1&lt;/value&gt;</span><br><span class="line">  &lt;/property&gt;</span><br><span class="line">  &lt;property&gt;</span><br><span class="line">    &lt;description&gt;The address of the applications manager interface in the RM.&lt;/description&gt;</span><br><span class="line">    &lt;name&gt;yarn.resourcemanager.address&lt;/name&gt;</span><br><span class="line">    &lt;value&gt;$&#123;yarn.resourcemanager.hostname&#125;:8032&lt;/value&gt;</span><br><span class="line">  &lt;/property&gt;</span><br><span class="line">  &lt;property&gt;</span><br><span class="line">    &lt;description&gt;The address of the scheduler interface.&lt;/description&gt;</span><br><span class="line">    &lt;name&gt;yarn.resourcemanager.scheduler.address&lt;/name&gt;</span><br><span class="line">    &lt;value&gt;$&#123;yarn.resourcemanager.hostname&#125;:8030&lt;/value&gt;</span><br><span class="line">  &lt;/property&gt;</span><br><span class="line">  &lt;property&gt;</span><br><span class="line">    &lt;description&gt;The http address of the RM web application.&lt;/description&gt;</span><br><span class="line">    &lt;name&gt;yarn.resourcemanager.webapp.address&lt;/name&gt;</span><br><span class="line">    &lt;value&gt;$&#123;yarn.resourcemanager.hostname&#125;:8088&lt;/value&gt;</span><br><span class="line">  &lt;/property&gt;</span><br><span class="line">  &lt;property&gt;</span><br><span class="line">    &lt;description&gt;The https adddress of the RM web application.&lt;/description&gt;</span><br><span class="line">    &lt;name&gt;yarn.resourcemanager.webapp.https.address&lt;/name&gt;</span><br><span class="line">    &lt;value&gt;$&#123;yarn.resourcemanager.hostname&#125;:8090&lt;/value&gt;</span><br><span class="line">  &lt;/property&gt;</span><br><span class="line">  &lt;property&gt;</span><br><span class="line">    &lt;name&gt;yarn.resourcemanager.resource-tracker.address&lt;/name&gt;</span><br><span class="line">    &lt;value&gt;$&#123;yarn.resourcemanager.hostname&#125;:8031&lt;/value&gt;</span><br><span class="line">  &lt;/property&gt;</span><br><span class="line">  &lt;property&gt;</span><br><span class="line">    &lt;description&gt;The address of the RM admin interface.&lt;/description&gt;</span><br><span class="line">    &lt;name&gt;yarn.resourcemanager.admin.address&lt;/name&gt;</span><br><span class="line">    &lt;value&gt;$&#123;yarn.resourcemanager.hostname&#125;:8033&lt;/value&gt;</span><br><span class="line">  &lt;/property&gt;</span><br><span class="line">  &lt;property&gt;</span><br><span class="line">    &lt;name&gt;yarn.nodemanager.aux-services&lt;/name&gt;</span><br><span class="line">    &lt;value&gt;mapreduce_shuffle&lt;/value&gt;</span><br><span class="line">  &lt;/property&gt;</span><br><span class="line">  &lt;property&gt;</span><br><span class="line">    &lt;name&gt;yarn.scheduler.maximum-allocation-mb&lt;/name&gt;</span><br><span class="line">    &lt;value&gt;2048&lt;/value&gt;</span><br><span class="line">    &lt;discription&gt;每个节点可用内存,单位MB,默认8182MB&lt;/discription&gt;</span><br><span class="line">  &lt;/property&gt;</span><br><span class="line">  &lt;property&gt;</span><br><span class="line">    &lt;name&gt;yarn.nodemanager.vmem-pmem-ratio&lt;/name&gt;</span><br><span class="line">    &lt;value&gt;2.1&lt;/value&gt;</span><br><span class="line">  &lt;/property&gt;</span><br><span class="line">  &lt;property&gt;</span><br><span class="line">    &lt;name&gt;yarn.nodemanager.resource.memory-mb&lt;/name&gt;</span><br><span class="line">    &lt;value&gt;2048&lt;/value&gt;</span><br><span class="line">  &lt;/property&gt;</span><br><span class="line">  &lt;property&gt;</span><br><span class="line">    &lt;name&gt;yarn.nodemanager.vmem-check-enabled&lt;/name&gt;</span><br><span class="line">    &lt;value&gt;false&lt;/value&gt;</span><br><span class="line">  &lt;/property&gt;</span><br><span class="line">&lt;/configuration&gt;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h4 id="启动hadoop"><a href="#启动hadoop" class="headerlink" title="启动hadoop"></a>启动hadoop</h4><p>略</p>
<h4 id="测试hadoop"><a href="#测试hadoop" class="headerlink" title="测试hadoop"></a>测试hadoop</h4><p>在浏览器访问  <a href="http://192.168.17.133:50070" target="_blank" rel="noopener">http://192.168.17.133:50070</a> 以及 <a href="http://192.168.17.133:8088/" target="_blank" rel="noopener">http://192.168.17.133:8088/</a></p>
]]></content>
      
        <categories>
            
            <category> 大数据 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> hadoop </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Zookeeper的安装和使用]]></title>
      <url>/2018/02/05/zookeeper-install/</url>
      <content type="html"><![CDATA[<h2 id="jdk1-8的安装"><a href="#jdk1-8的安装" class="headerlink" title="jdk1.8的安装"></a>jdk1.8的安装</h2><blockquote>
<p>由于采用最小化安装，所以centOS中并没有预安装的jdk，故不需要先卸载</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">rpm -qa|grep java</span><br><span class="line">mkdir /usr/java/</span><br><span class="line">mv jdk-8u161-linux-x64.tar.gz /usr/java/</span><br><span class="line">tar zxvf jdk-8u161-linux-x64.tar.gz</span><br><span class="line">mv jdk1.8.0_161/ jdk1.8</span><br></pre></td></tr></table></figure>
<blockquote>
<p>编辑配置文件，配置环境变量</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/profile</span><br><span class="line"></span><br><span class="line">JAVA_HOME=/usr/java/jdk1.8</span><br><span class="line">CLASSPATH=$JAVA_HOME/lib/</span><br><span class="line">PATH=$PATH:$JAVA_HOME/bin</span><br><span class="line">export PATH JAVA_HOME CLASSPATH</span><br><span class="line"></span><br><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure>
<h2 id="zookeeper安装"><a href="#zookeeper安装" class="headerlink" title="zookeeper安装"></a>zookeeper安装</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mkdir /usr/zookeeper/</span><br><span class="line">mv zookeeper-3.4.11.tar.gz /usr/zookeeper/</span><br><span class="line">tar zxvf zookeeper-3.4.11.tar.gz</span><br><span class="line">cd zookeeper-3.4.11</span><br><span class="line">cd conf</span><br><span class="line">cp zoo_sample.cfg zoo.cfg</span><br></pre></td></tr></table></figure>
<blockquote>
<p>新增zookeeper用户以及zookeeper组</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">groupadd zookeeper</span><br><span class="line">useradd -g zookeeper zookeeper</span><br></pre></td></tr></table></figure>
<blockquote>
<p>修改文件夹用户和组</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chown -R zookeeper zookeeper-3.4.11</span><br><span class="line">chgrp -R zookeeper zookeeper-3.4.11</span><br></pre></td></tr></table></figure>
<blockquote>
<p>新增data和logs文件夹</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/zookeeper/zookeeper-3.4.11</span><br><span class="line">mkdir data</span><br><span class="line">mkdir logs</span><br></pre></td></tr></table></figure>
<blockquote>
<p>修改/usr/zookeeper/zookeeper-3.4.11/conf目录下的zoo.cfg文件</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"># The number of milliseconds of each tick</span><br><span class="line"># zookeeper 定义的基准时间间隔，单位：毫秒</span><br><span class="line">tickTime=2000</span><br><span class="line"># The number of ticks that the initial</span><br><span class="line"># synchronization phase can take</span><br><span class="line">initLimit=10</span><br><span class="line"># The number of ticks that can pass between</span><br><span class="line"># sending a request and getting an acknowledgement</span><br><span class="line">syncLimit=5</span><br><span class="line"># the directory where the snapshot is stored.</span><br><span class="line"># do not use /tmp for storage, /tmp here is just</span><br><span class="line"># example sakes.</span><br><span class="line"># dataDir=/tmp/zookeeper</span><br><span class="line"> </span><br><span class="line"># 数据文件夹</span><br><span class="line">dataDir=/usr/zookeeper/zookeeper-3.4.11/data</span><br><span class="line"> </span><br><span class="line"># 日志文件夹</span><br><span class="line">dataLogDir=/usr/zookeeper/zookeeper-3.4.11/logs</span><br><span class="line"> </span><br><span class="line"># the port at which the clients will connect</span><br><span class="line"># 客户端访问 zookeeper 的端口号</span><br><span class="line">clientPort=2181</span><br><span class="line"> </span><br><span class="line"># the maximum number of client connections.</span><br><span class="line"># increase this if you need to handle more clients</span><br><span class="line">#maxClientCnxns=60</span><br><span class="line">#</span><br><span class="line"># Be sure to read the maintenance section of the</span><br><span class="line"># administrator guide before turning on autopurge.</span><br><span class="line">#</span><br><span class="line"># http://zookeeper.apache.org/doc/current/zookeeperAdmin.html#sc_maintenance</span><br><span class="line">#</span><br><span class="line"># The number of snapshots to retain in dataDir</span><br><span class="line">#autopurge.snapRetainCount=3</span><br><span class="line"># Purge task interval in hours</span><br><span class="line"># Set to &quot;0&quot; to disable auto purge feature</span><br><span class="line">#autopurge.purgeInterval=1</span><br></pre></td></tr></table></figure>
<blockquote>
<p>修改系统配置文件，添加环境变量</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/profile</span><br><span class="line"></span><br><span class="line">JAVA_HOME=/usr/java/jdk1.8</span><br><span class="line">ZOOKEEPER_HOME=/usr/zookeeper/zookeeper-3.4.11</span><br><span class="line">CLASSPATH=$JAVA_HOME/lib/</span><br><span class="line">PATH=$PATH:$JAVA_HOME/bin:$ZOOKEEPER_HOME/bin</span><br><span class="line">export PATH JAVA_HOME CLASSPATH</span><br><span class="line"></span><br><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure>
<h3 id="zookeeper常用命令"><a href="#zookeeper常用命令" class="headerlink" title="zookeeper常用命令"></a>zookeeper常用命令</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">zkServer.sh start</span><br><span class="line">zkServer.sh stop</span><br><span class="line">zkServer.sh status</span><br><span class="line">zkServer.sh restart</span><br></pre></td></tr></table></figure>
<h3 id="以集群方式启动zookeeper"><a href="#以集群方式启动zookeeper" class="headerlink" title="以集群方式启动zookeeper"></a>以集群方式启动zookeeper</h3><blockquote>
<p>先备份配置文件，然后将配置文件中的注释行去除</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mv zoo.cfg zoo.cfg.standalone</span><br><span class="line">grep -v &quot;^$&quot; zoo.cfg.standalone | grep -v &quot;^#&quot; &gt; zoo.cfg</span><br></pre></td></tr></table></figure>
<blockquote>
<p>修改配置文件，如下</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">tickTime=2000</span><br><span class="line">initLimit=10</span><br><span class="line">syncLimit=5</span><br><span class="line">dataDir=/usr/zookeeper/zookeeper-3.4.11/data</span><br><span class="line">dataLogDir=/usr/zookeeper/zookeeper-3.4.11/logs</span><br><span class="line">clientPort=2181</span><br><span class="line">server.1=192.168.17.133:2888:3888</span><br><span class="line">server.2=192.168.17.134:2888:3888</span><br><span class="line">server.3=192.168.17.135:2888:3888</span><br></pre></td></tr></table></figure>
<blockquote>
<p>然后在配置的datadir目录下，创建一个名为myid的文件，在该文件的第一行写上一个数字，与配置文件中server.后的数字一直</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">echo 1 &gt; data/myid</span><br><span class="line">echo 2 &gt; data/myid</span><br><span class="line">echo 3 &gt; data/myid</span><br></pre></td></tr></table></figure>
<blockquote>
<p>在启动zookeeper集群前，需要先关闭防火墙</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop firewalld.service</span><br><span class="line">systemctl disable firewalld.service</span><br><span class="line">firewall-cmd --state</span><br></pre></td></tr></table></figure>
<h3 id="zookeeper的可执行脚本"><a href="#zookeeper的可执行脚本" class="headerlink" title="zookeeper的可执行脚本"></a>zookeeper的可执行脚本</h3><table>
<thead>
<tr>
<th>脚本</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>zkCleanup</td>
<td>清理Zookeeper的历史数据，包括事务日志和快照数据文件</td>
</tr>
<tr>
<td>zkCli</td>
<td>ZooKeeper的一个建议客户端</td>
</tr>
<tr>
<td>zkEvn</td>
<td>设置ZooKeeper的环境变量</td>
</tr>
<tr>
<td>zkServer</td>
<td>ZooKeeper服务器的启动、停止和重启脚本</td>
</tr>
</tbody>
</table>
]]></content>
      
        <categories>
            
            <category> Zookeeper </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Zookeeper </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Linux的shell编程]]></title>
      <url>/2018/02/04/Linux-shell/</url>
      <content type="html"><![CDATA[<h3 id="创建shell脚本文件"><a href="#创建shell脚本文件" class="headerlink" title="创建shell脚本文件"></a>创建shell脚本文件</h3><p>在创建shell脚本文件时，必须在文件的第一行指定要使用的shell。其格式为</p>
<blockquote>
<p>#!/bin/bash<br>  注意：shell只会去处理第一行注释行，并不会处理其他的注释行。</p>
</blockquote>
<p>创建shell脚本文件后，给文件添加执行权限</p>
<blockquote>
<p>chmod u+x filename</p>
</blockquote>
<p>如果想把脚本中的文本字符串和命令输出显示在同一行中，可以用echo语句的-n参数</p>
<blockquote>
<p>echo -n “The time and date are: “<br>  date</p>
</blockquote>
<p>使用等号将值赋给用户变量时，在变量、等号和值之间不能出现空格。</p>
<blockquote>
<p>testing=`date`<br>  testing=$(date)</p>
</blockquote>
<p>引用一个变量值时需要使用$，而引用变量来对其进行赋值时则不要使用$：</p>
<blockquote>
<p>value1=10<br>  value2=$value1<br>  # 注意：没有使用$，shell会将变量名解释成普通的文本字符串。</p>
</blockquote>
<h4 id="命令替换"><a href="#命令替换" class="headerlink" title="命令替换"></a>命令替换</h4><p>有两种方法可以将命令输出赋给变量：</p>
<ol>
<li><p>反引号字符``</p>
</li>
<li><p>$()格式</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">testing=`date`</span><br><span class="line">testing=$(date)</span><br><span class="line">echo &quot;The date and time are: &quot; $testing</span><br><span class="line"></span><br><span class="line">today=$(date +%y%m%d)</span><br><span class="line">ls /usr/bin -al &gt; log.$today</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h4 id="重定向"><a href="#重定向" class="headerlink" title="重定向"></a>重定向</h4><p>重定向包括输出重定向<code>&gt;  &gt;&gt;</code>以及输入重定向<code>&lt;  &lt;&lt;</code></p>
<blockquote>
<p>内联输入重定向</p>
</blockquote>
<h4 id="执行数学运算"><a href="#执行数学运算" class="headerlink" title="执行数学运算"></a>执行数学运算</h4><h5 id="expr命令"><a href="#expr命令" class="headerlink" title="expr命令"></a>expr命令</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">expr 1 + 5</span><br><span class="line">6</span><br></pre></td></tr></table></figure>
<h5 id="使用方括号"><a href="#使用方括号" class="headerlink" title="使用方括号"></a>使用方括号</h5><p>如果需要将一个数学运算结果赋给某个变量，可以用美元符和方括号：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">var1=100</span><br><span class="line">var2=50</span><br><span class="line">var3=30</span><br><span class="line">var4=$[$var1 * ($var3 - $var2)]</span><br></pre></td></tr></table></figure>
<blockquote>
<p>需要注意的是，bash shell数学运算符只支持整数运算。</p>
</blockquote>
<h5 id="浮点解决方案"><a href="#浮点解决方案" class="headerlink" title="浮点解决方案"></a>浮点解决方案</h5><p>在脚本中使用bc，基本格式如下：</p>
<blockquote>
<p>variable=$(echo “options; expression” | bc)</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var1=20</span><br><span class="line">var2=3.14159</span><br><span class="line">var3=$(echo &quot;scale=4; $var1 * var2&quot; | bc)</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">var1=10.46</span><br><span class="line">var2=43.67</span><br><span class="line">var3=33.2</span><br><span class="line">var4=71</span><br><span class="line"></span><br><span class="line">var5=$(bc &lt;&lt; EOF</span><br><span class="line">scale = 4</span><br><span class="line">a1 = ($var1 * $var2)</span><br><span class="line">b1 = ($var3 * $var4)</span><br><span class="line">a1 + b1</span><br><span class="line">EOF</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">echo $var5</span><br></pre></td></tr></table></figure>
<h4 id="退出脚本"><a href="#退出脚本" class="headerlink" title="退出脚本"></a>退出脚本</h4><p>退出状态码的查看<code>$?</code></p>
<table>
<thead>
<tr>
<th style="text-align:center">状态码</th>
<th style="text-align:center">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">0</td>
<td style="text-align:center">命令成功结束</td>
</tr>
<tr>
<td style="text-align:center">1</td>
<td style="text-align:center">通用未知错误</td>
</tr>
<tr>
<td style="text-align:center">2</td>
<td style="text-align:center">误用Shell命令</td>
</tr>
<tr>
<td style="text-align:center">126</td>
<td style="text-align:center">命令不可执行</td>
</tr>
<tr>
<td style="text-align:center">127</td>
<td style="text-align:center">没找到命令</td>
</tr>
<tr>
<td style="text-align:center">128</td>
<td style="text-align:center">无效退出参数</td>
</tr>
<tr>
<td style="text-align:center">128+x</td>
<td style="text-align:center">Linux信号x的严重错误</td>
</tr>
<tr>
<td style="text-align:center">130</td>
<td style="text-align:center">命令通过Ctrl+C控制码越界</td>
</tr>
<tr>
<td style="text-align:center">255</td>
<td style="text-align:center">退出码越界</td>
</tr>
</tbody>
</table>
<p>exit命令</p>
<h3 id="结构化命令"><a href="#结构化命令" class="headerlink" title="结构化命令"></a>结构化命令</h3><h4 id="if-then"><a href="#if-then" class="headerlink" title="if-then"></a>if-then</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">if command; then</span><br><span class="line">  commands</span><br><span class="line">fi</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">if pwd; then</span><br><span class="line">  echo &quot;It worked&quot;</span><br><span class="line">fi</span><br></pre></td></tr></table></figure>
<h4 id="if-then-else"><a href="#if-then-else" class="headerlink" title="if-then-else"></a>if-then-else</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">if command</span><br><span class="line">then </span><br><span class="line">  commands</span><br><span class="line">else</span><br><span class="line">  commands</span><br><span class="line">fi</span><br></pre></td></tr></table></figure>
<h4 id="嵌套if"><a href="#嵌套if" class="headerlink" title="嵌套if"></a>嵌套if</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">if command1</span><br><span class="line">then</span><br><span class="line">  commands</span><br><span class="line">else</span><br><span class="line">  if command2</span><br><span class="line">  then</span><br><span class="line">    more commands</span><br><span class="line">  else</span><br><span class="line">    more commands</span><br><span class="line">  fi</span><br><span class="line">fi</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">if command1</span><br><span class="line">then</span><br><span class="line">  commands</span><br><span class="line">elif command2</span><br><span class="line">then</span><br><span class="line">  more commands</span><br><span class="line">fi</span><br></pre></td></tr></table></figure>
<h4 id="test命令"><a href="#test命令" class="headerlink" title="test命令"></a>test命令</h4><p>如果test命令中列出的条件成立，test命令就会退出并返回退出状态码0。</p>
<blockquote>
<p>test condition</p>
</blockquote>
<p>或者可以用在<code>if-then</code>语句中</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">if test condition</span><br><span class="line">then</span><br><span class="line">  commands</span><br><span class="line">fi</span><br></pre></td></tr></table></figure>
<p>也可以使用方括号进行测试</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">if [ condition ]</span><br><span class="line">then</span><br><span class="line">  commands</span><br><span class="line">fi</span><br></pre></td></tr></table></figure>
<h5 id="数值比较"><a href="#数值比较" class="headerlink" title="数值比较"></a>数值比较</h5><table>
<thead>
<tr>
<th style="text-align:center">比较</th>
<th style="text-align:center">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">n1 -eq n2</td>
<td style="text-align:center">检查n1是否等于n2</td>
</tr>
<tr>
<td style="text-align:center">n1 -ge n2</td>
<td style="text-align:center">检查n1是否大于等于n2</td>
</tr>
<tr>
<td style="text-align:center">n1 -gt n2</td>
<td style="text-align:center">检查n1是否大于n2</td>
</tr>
<tr>
<td style="text-align:center">n1 -le n2</td>
<td style="text-align:center">检查n1是否小于等于n2</td>
</tr>
<tr>
<td style="text-align:center">n1 -lt n2</td>
<td style="text-align:center">检查n1是否小于n2</td>
</tr>
<tr>
<td style="text-align:center">n1 -ne n2</td>
<td style="text-align:center">检查n1是否不等于n2</td>
</tr>
</tbody>
</table>
<h5 id="字符串比较"><a href="#字符串比较" class="headerlink" title="字符串比较"></a>字符串比较</h5><table>
<thead>
<tr>
<th style="text-align:center">比较</th>
<th style="text-align:center">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">str1 = str2</td>
<td style="text-align:center">检查字符串是否相同</td>
</tr>
<tr>
<td style="text-align:center">str1 != str2</td>
<td style="text-align:center">检查字符串是否不同</td>
</tr>
<tr>
<td style="text-align:center">str1 &lt; str2</td>
<td style="text-align:center">检查str1是否比str2大</td>
</tr>
<tr>
<td style="text-align:center">str1 > str2</td>
<td style="text-align:center">检查str1是否比str2小</td>
</tr>
<tr>
<td style="text-align:center">-n str1</td>
<td style="text-align:center">检查str1的长度是否非0</td>
</tr>
<tr>
<td style="text-align:center">-z str1</td>
<td style="text-align:center">检查str1的长度是否为0</td>
</tr>
</tbody>
</table>
<blockquote>
<p>需要注意的是，大于号和小于号在使用时需要转义</p>
</blockquote>
<h5 id="文件比较"><a href="#文件比较" class="headerlink" title="文件比较"></a>文件比较</h5><table>
<thead>
<tr>
<th style="text-align:center">比较</th>
<th style="text-align:center">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">-e file</td>
<td style="text-align:center">如果file存在，则为真</td>
</tr>
<tr>
<td style="text-align:center">-d file</td>
<td style="text-align:center">如果file存在并为目录，则为真</td>
</tr>
<tr>
<td style="text-align:center">-f file</td>
<td style="text-align:center">如果file为常规文件，则为真</td>
</tr>
<tr>
<td style="text-align:center">-r file</td>
<td style="text-align:center">如果file存在并可读，则为真</td>
</tr>
<tr>
<td style="text-align:center">-s file</td>
<td style="text-align:center">如果file存在并非空，则为真</td>
</tr>
<tr>
<td style="text-align:center">-w file</td>
<td style="text-align:center">如果file存在并可写，则为真</td>
</tr>
<tr>
<td style="text-align:center">-x file</td>
<td style="text-align:center">如果file存在并可执行，则为真</td>
</tr>
<tr>
<td style="text-align:center">-O file</td>
<td style="text-align:center">如果file存在并属于当前用户，则为真</td>
</tr>
<tr>
<td style="text-align:center">-G file</td>
<td style="text-align:center">如果file存在并且默认组与当前用户相同，则为真</td>
</tr>
<tr>
<td style="text-align:center">file1 -nt file2</td>
<td style="text-align:center">如果file1比file2新，则为真</td>
</tr>
<tr>
<td style="text-align:center">file1 -ot file2</td>
<td style="text-align:center">如果file1比file2旧，则为真</td>
</tr>
</tbody>
</table>
<h5 id="复合条件测试"><a href="#复合条件测试" class="headerlink" title="复合条件测试"></a>复合条件测试</h5><p>if-then可以用<code>&amp;&amp;</code>和<code>||</code>来组合测试</p>
<h4 id="if-then的高级特性"><a href="#if-then的高级特性" class="headerlink" title="if-then的高级特性"></a>if-then的高级特性</h4><h5 id="使用双括号"><a href="#使用双括号" class="headerlink" title="使用双括号"></a>使用双括号</h5><p>双括号命令允许你在比较过程中使用高级数学表达式。其格式如下：</p>
<blockquote>
<p>((expression))</p>
</blockquote>
<p>双括号命令符号包括以下：<br>val++，val–，++val，–val，!，~，**(幂运算)，&lt;&lt;，&gt;&gt;，&amp;，|，&amp;&amp;，||</p>
<h5 id="使用双方括号"><a href="#使用双方括号" class="headerlink" title="使用双方括号"></a>使用双方括号</h5><p>双方括号命令提供了针对字符串比较的高级特性。其格式如下：</p>
<blockquote>
<p>[[expression]]</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">if [[ $USER == r* ]]</span><br></pre></td></tr></table></figure>
<h4 id="case命令"><a href="#case命令" class="headerlink" title="case命令"></a>case命令</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">case variable in</span><br><span class="line">pattern1 | pattern2) commands1;;</span><br><span class="line">pattern3) commands2;;</span><br><span class="line">*) default commands;;</span><br><span class="line">esac</span><br></pre></td></tr></table></figure>
<h4 id="for命令"><a href="#for命令" class="headerlink" title="for命令"></a>for命令</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">for var in list</span><br><span class="line">do</span><br><span class="line">  commands</span><br><span class="line">done</span><br></pre></td></tr></table></figure>
<p>for循环假定每个值都是用空格分割的。<br>可以使用内部字段分隔符<code>IFS</code>来自定义分隔符，例如</p>
<blockquote>
<p>IFS=$’\n’<br>  IFS=$’\n’:;”</p>
</blockquote>
<h5 id="C语言分隔的for命令"><a href="#C语言分隔的for命令" class="headerlink" title="C语言分隔的for命令"></a>C语言分隔的for命令</h5><p>命令格式：</p>
<blockquote>
<p>for (( variable assignment ; condition ; iteration process ))</p>
</blockquote>
<h4 id="while命令"><a href="#while命令" class="headerlink" title="while命令"></a>while命令</h4><p>while命令的基本格式：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">while test command</span><br><span class="line">do</span><br><span class="line">  other commands</span><br><span class="line">done</span><br></pre></td></tr></table></figure>
<h4 id="until命令"><a href="#until命令" class="headerlink" title="until命令"></a>until命令</h4><p>until命令和while命令正好相反，只有测试命令的退出状态码不为0，bash shell才会执行循环中列出的命令。</p>
<p>命令格式：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">until test commands</span><br><span class="line">do</span><br><span class="line">  other commands</span><br><span class="line">done</span><br></pre></td></tr></table></figure>
<h4 id="循环处理文件数据"><a href="#循环处理文件数据" class="headerlink" title="循环处理文件数据"></a>循环处理文件数据</h4><p>需要使用嵌套循环以及修改IFS环境变量</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">IFS.OLD=$IFS</span><br><span class="line">IFS=$&apos;\n&apos;</span><br><span class="line">for entry in $(cat /etc/passwd)</span><br><span class="line">do</span><br><span class="line">  echo &quot;Value in $entry&quot;</span><br><span class="line">  IFS=:</span><br><span class="line">  for value in $entry</span><br><span class="line">  do</span><br><span class="line">    if [ -n &quot;$value&quot; ]</span><br><span class="line">    then</span><br><span class="line">      echo &quot;$value&quot;</span><br><span class="line">    fi</span><br><span class="line">  done</span><br><span class="line">done</span><br></pre></td></tr></table></figure>
<h4 id="控制循环"><a href="#控制循环" class="headerlink" title="控制循环"></a>控制循环</h4><h5 id="break命令"><a href="#break命令" class="headerlink" title="break命令"></a>break命令</h5><p>可以用break退出任意的循环，包括while和until循环。<br>也可以使用<code>break -n</code>跳出外部循环，默认为1。</p>
<h5 id="continue命令"><a href="#continue命令" class="headerlink" title="continue命令"></a>continue命令</h5><p>continue命令可以提前终止某次循环中的命令，但并不会完全终止整个循环。<br>也可以使用<code>continue -n</code>继续执行哪一层循环。</p>
<h4 id="处理循环的输出"><a href="#处理循环的输出" class="headerlink" title="处理循环的输出"></a>处理循环的输出</h4><p>可以对循环的输出使用管道或重定向。通过在done命令之后添加一个处理命令来实现。</p>
<blockquote>
<p>done &gt; output.txt</p>
</blockquote>
<h4 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h4><p>创建多个用户账户</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">input=&quot;user.csv&quot;</span><br><span class="line">while IFS=&quot;,&quot; read -r userid name</span><br><span class="line">do</span><br><span class="line">  echo &quot;adding $userid&quot;</span><br><span class="line">  useradd -c &quot;$name&quot; -m &quot;userid&quot; </span><br><span class="line">done &lt; &quot;$input&quot;</span><br></pre></td></tr></table></figure>
<h3 id="处理用户输入"><a href="#处理用户输入" class="headerlink" title="处理用户输入"></a>处理用户输入</h3><h4 id="命令行参数"><a href="#命令行参数" class="headerlink" title="命令行参数"></a>命令行参数</h4><p>向shell脚本传递数据的最基本方法是使用命令行参数。<br>命令行参数允许在运行脚本时向命令行添加数据。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./test.sh 10 abc</span><br></pre></td></tr></table></figure>
<p>bash shell会将一些位置参数的特殊变量分配给输入到命令行中的所有参数。这也包括shell所执行的脚本<br>命令。其中：<code>$0</code>是程序名，<code>$1</code>是第一个参数，<code>$2</code>是第二个参数，一直到<code>$9</code>。</p>
<p>在使用时，需要用空格将每个命令行参数分隔开，例如:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">count=$[ $1 * $2 ]</span><br></pre></td></tr></table></figure>
<p>注意，当命令行参数中出现空格时，需要使用引号：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./test1.sh &apos;hello world&apos;</span><br></pre></td></tr></table></figure>
<p>如果命令行参数的数量超过9个时，从第十个参数开始，需要使用花括号，例如<code>${10}</code>、<code>${11}</code>等。</p>
<p>使用<code>basename</code>命令可以返回不包含路径的脚本名，例如：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;$0&quot;</span><br><span class="line">echo &quot;$(basename $0)&quot;</span><br></pre></td></tr></table></figure>
<p>在使用命令行参数的脚本中，需要先检测其中是否存在数据：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">if [ -n &quot;$1&quot; ]</span><br></pre></td></tr></table></figure>
<h4 id="特殊的参数变量"><a href="#特殊的参数变量" class="headerlink" title="特殊的参数变量"></a>特殊的参数变量</h4><p>特殊变量<code>$#</code>含有脚本运行时携带的命令行参数的个数，例如：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo There are $# parameters supplied.</span><br></pre></td></tr></table></figure>
<p>使用$&#123;!#&#125;可以返回最后一个命令行参数的值，如果命令行参数的个数为0，则返回当前脚本的名称。</p>
<p>使用<code>$*</code>和<code>$@</code>可以访问所有的参数。其中<code>$*</code>变量会将命令行上提供的所有参数当作一个单词保存。这个单词包括了命令行中出现的每一个参数值；<code>$@</code>变量会将命令行上所有参数当作同一个字符串中的多个独立的单词，然后通过遍历获取所有的参数值。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">count=1</span><br><span class="line">for param in &quot;$*&quot;</span><br><span class="line">do</span><br><span class="line">  echo &quot;\$* parameter #count = $param&quot;</span><br><span class="line">  count=$[ $count + 1 ]</span><br><span class="line">done</span><br><span class="line">echo</span><br><span class="line">count=1</span><br><span class="line">for param in &quot;$@&quot;</span><br><span class="line">do</span><br><span class="line">  echo &quot;\$@ parameter #count = $param&quot;</span><br><span class="line">  count=$[ $count + 1 ]</span><br><span class="line">done</span><br></pre></td></tr></table></figure>
<h4 id="移动变量"><a href="#移动变量" class="headerlink" title="移动变量"></a>移动变量</h4><p>bash shell的<code>shift</code>命令可以用来操作命令行参数，shift命令会根据命令行参数的相对位置来移动。<br>在默认情况下，会将每个参数变量向左移动一个位置。其中$2的值会移动到$1，而$1的值则会被删除，$0不会改变。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">while [ -n &quot;$1&quot; ]</span><br><span class="line">do</span><br><span class="line">  echo &quot;$1&quot;</span><br><span class="line">  shift</span><br><span class="line">done</span><br></pre></td></tr></table></figure>
<p>也可以一次性移动多个位置</p>
<blockquote>
<p>shift n</p>
</blockquote>
<h4 id="处理选项"><a href="#处理选项" class="headerlink" title="处理选项"></a>处理选项</h4><p>选项是跟在单破折号后面的单个字母，可以用来改变命令的行为。<br>可以使用<code>--</code>来表明选项列表结束。</p>
<h5 id="getopt命令"><a href="#getopt命令" class="headerlink" title="getopt命令"></a>getopt命令</h5><p>getopt命令能够识别命令行参数，从而在脚本中解析更加方便。</p>
<p>命令格式：</p>
<blockquote>
<p>getopt optstring parameters<br>  其中optstring定义了命令行有效的选项字母，还定义了哪些选项字母需要参数值。</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">getopt ab:cd -a -b test1 -cd test2 test3</span><br><span class="line">-a -b test1 -c -d -- test2 test3</span><br></pre></td></tr></table></figure>
<blockquote>
<p>如果指定了一个不再optstring中的选项，默认情况下，getopt命令会产生一条错误消息。可以在命令后加-q忽略。</p>
</blockquote>
<p>在脚本中使用getopt</p>
<blockquote>
<p>set – $(getopt -q ab:cd “$@”)</p>
</blockquote>
<h5 id="getopts命令"><a href="#getopts命令" class="headerlink" title="getopts命令"></a>getopts命令</h5><p>命令格式如下：</p>
<blockquote>
<p>getopts optstring variable</p>
</blockquote>
<p>如果选项需要跟一个参数值，<code>OPTARG</code>环境变量就会保存这个值。<code>OPTIND</code>环境变量保存了参数列表中getopts正在处理的参数位置。</p>
<h4 id="获取用户输入"><a href="#获取用户输入" class="headerlink" title="获取用户输入"></a>获取用户输入</h4><p>使用<code>read</code>命令获取用户输入。</p>
<p>read命令从标准输入或另一个文件描述符接收输入。在收到输入后，read命令会将数据放进一个变量。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">read -p &quot;Enter your name: &quot; first last</span><br><span class="line">echo $last, $first</span><br></pre></td></tr></table></figure>
<p>如果在read命令行中不指定变量，那么read命令会将它收到的任何数据都放进特殊环境变量<code>REPLY</code>中：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">read -p &quot;Enter your name: &quot;</span><br><span class="line">echo $REPLY</span><br></pre></td></tr></table></figure>
<blockquote>
<p>在使用read命令时，需要注意超时时间，可以使用-t选项来指定计时器</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">read -t 5 -p &quot;Please enter your name: &quot; name</span><br></pre></td></tr></table></figure>
<p>如果需要隐藏输入的值时，可以使用<code>-s</code>选项。<br>read在读取文件时，每次从文件中读取一行文本，当文件中没有内容时，read命令将会退出并返回非零退出状态码。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat test | while read line</span><br></pre></td></tr></table></figure>
<h3 id="呈现数据"><a href="#呈现数据" class="headerlink" title="呈现数据"></a>呈现数据</h3><table>
<thead>
<tr>
<th style="text-align:center">文件描述符</th>
<th style="text-align:center">缩写</th>
<th style="text-align:center">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">0</td>
<td style="text-align:center">STDIN</td>
<td style="text-align:center">标准输入</td>
</tr>
<tr>
<td style="text-align:center">1</td>
<td style="text-align:center">STDOUT</td>
<td style="text-align:center">标准输出</td>
</tr>
<tr>
<td style="text-align:center">2</td>
<td style="text-align:center">STDERR</td>
<td style="text-align:center">标准错误</td>
</tr>
</tbody>
</table>
<p>默认情况下，STDERR文件描述符和STDOUT文件描述符指向同样的地方。</p>
<p>只重定向错误：</p>
<blockquote>
<p>ls -al errorfile 2&gt; test</p>
</blockquote>
<p>重定向错误和数据：</p>
<blockquote>
<p>ls -al test.txt errorfile 2&gt;test 1&gt;test1</p>
</blockquote>
<p>同时重定向STDERR和STDOUT：</p>
<blockquote>
<p>ls -al test.txt errorfile &amp;&gt;test2</p>
</blockquote>
<p>如果需要重定向到某个文件描述符时，必须在文件描述符之前加一个<code>&amp;</code>：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;This is an error&quot; &gt;&amp;2</span><br></pre></td></tr></table></figure>
<p>可以使用<code>exec</code>命令进行永久重定向：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">exec 1&gt; testout</span><br><span class="line">exec 0&lt; testin</span><br></pre></td></tr></table></figure>
<p>关闭文件描述符：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exec 3&gt;&amp;-</span><br></pre></td></tr></table></figure>
<p>如果需要阻止命令输出，可以将STDERR重定向到<code>/dev/null</code>。</p>
<p>也可以在/tmp目录中创建临时文件或文件夹。使用<code>mktemp</code>在本地目录创建临时文件。创建时，只需要指定一个临时模板：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#在当前目录创建临时文件，并返回文件名</span><br><span class="line">mktemp testing.xxxxxx</span><br><span class="line">#在系统临时目录创建临时文件，并返回全路径</span><br><span class="line">mktemp -t tmp.xxxxxx</span><br><span class="line">#在当前目录创建临时文件夹，并返回文件夹名</span><br><span class="line">mktemp -d dir.xxxxxx</span><br></pre></td></tr></table></figure>
<p>使用<code>tee</code>命令可以将输出同时发送到显示器和日志文件中</p>
<blockquote>
<p>date | tee testfile<br>  #将文件进行追加，使用-a选项<br>  date | tee -a testfile</p>
</blockquote>
<h4 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"></span><br><span class="line">outputfile=&quot;person.sql&quot;</span><br><span class="line">IFS=&apos;,&apos;</span><br><span class="line"></span><br><span class="line">while read name age address</span><br><span class="line">do</span><br><span class="line">  cat &gt;&gt; $outputfile &lt;&lt; EOF</span><br><span class="line">  insert into person(name,age,address) values(&apos;$name&apos;,&apos;$age&apos;,&apos;$address&apos;);</span><br><span class="line">  EOF</span><br><span class="line">done &lt; $1</span><br></pre></td></tr></table></figure>
<blockquote>
<p>./test.sh testfile</p>
</blockquote>
<h3 id="脚本控制"><a href="#脚本控制" class="headerlink" title="脚本控制"></a>脚本控制</h3><h4 id="处理信号"><a href="#处理信号" class="headerlink" title="处理信号"></a>处理信号</h4><p>常用的Linux信号如下：</p>
<table>
<thead>
<tr>
<th style="text-align:center">信号</th>
<th style="text-align:center">值</th>
<th style="text-align:center">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">1</td>
<td style="text-align:center">SIGHUP</td>
<td style="text-align:center">挂起进程</td>
</tr>
<tr>
<td style="text-align:center">2</td>
<td style="text-align:center">SIGINT</td>
<td style="text-align:center">终止进程</td>
</tr>
<tr>
<td style="text-align:center">3</td>
<td style="text-align:center">SIGQUIT</td>
<td style="text-align:center">停止进程</td>
</tr>
<tr>
<td style="text-align:center">9</td>
<td style="text-align:center">SIGKILL</td>
<td style="text-align:center">无条件终止进程</td>
</tr>
<tr>
<td style="text-align:center">15</td>
<td style="text-align:center">SIGTERM</td>
<td style="text-align:center">尽可能终止进程</td>
</tr>
<tr>
<td style="text-align:center">17</td>
<td style="text-align:center">SIGSTOP</td>
<td style="text-align:center">无条件停止进程，但不是终止进程</td>
</tr>
<tr>
<td style="text-align:center">18</td>
<td style="text-align:center">SIGTSTP</td>
<td style="text-align:center">停止或暂停进程，但不终止进程</td>
</tr>
<tr>
<td style="text-align:center">19</td>
<td style="text-align:center">SIGCONT</td>
<td style="text-align:center">继续运行停止的进程</td>
</tr>
</tbody>
</table>
<p><code>Ctrl+Z</code>组合键会生成一个<code>SIGTSTP</code>信号，停止shell中运行的任何进程。停止进程会让程序继续保留在内存中，并能从上次停止的位置继续运行。</p>
<p>使用<code>exit</code>退出停止的作业，使用<code>ps -l</code>查看已停止的作业。</p>
<p>可以使用<code>trap</code>命令来捕获信号，其命令格式为：</p>
<blockquote>
<p>trap command signals</p>
</blockquote>
<p>或者在trap命令后加上<code>EXIT</code>信号来捕获脚本的退出：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">trap &quot;echo end...&quot; EXIT</span><br></pre></td></tr></table></figure>
<p>也可以重新使用带有选项的trap命令在脚本中的不同位置进行不同的捕获处理。</p>
<h4 id="以后台模式运行脚本"><a href="#以后台模式运行脚本" class="headerlink" title="以后台模式运行脚本"></a>以后台模式运行脚本</h4><p>直接在命令后面添加<code>&amp;</code>即可：</p>
<blockquote>
<p>./test.sh &amp;</p>
</blockquote>
<p>注意：在ps命令的输出中，每一个后台进程都和终端会话终端联系在一起。如果终端会话退出，那么后台进程也会随之退出。</p>
<p>此时可以使用<code>nohup</code>命令来阻止后台进程在终端退出时也一起终止：</p>
<blockquote>
<p>nohup ./test.sh &amp;</p>
</blockquote>
<h4 id="作业控制"><a href="#作业控制" class="headerlink" title="作业控制"></a>作业控制</h4><p>作业控制：启动、停止终止以及恢复作业的功能。</p>
<p>使用<code>jobs</code>命令查看shell当前正在处理的作业。jobs命令参数如下：</p>
<table>
<thead>
<tr>
<th style="text-align:center">参数</th>
<th style="text-align:center">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">-l</td>
<td style="text-align:center">列出进程的PID以及作业号</td>
</tr>
<tr>
<td style="text-align:center">-n</td>
<td style="text-align:center">只列出上次shell发出的通知后改变了状态的作业</td>
</tr>
<tr>
<td style="text-align:center">-p</td>
<td style="text-align:center">只列出作业的PID</td>
</tr>
<tr>
<td style="text-align:center">-r</td>
<td style="text-align:center">只列出运行中的作业</td>
</tr>
<tr>
<td style="text-align:center">-s</td>
<td style="text-align:center">只列出已停止的作业</td>
</tr>
</tbody>
</table>
<p>如果要以后台模式重启一个作业，可以用<code>bg</code>命令加上作业号：</p>
<blockquote>
<p>bg 2</p>
</blockquote>
<p>如果要以前台模式重启一个作业，可以用<code>fg</code>命令加上作业号：</p>
<blockquote>
<p>fg 2</p>
</blockquote>
<h4 id="调整优先级"><a href="#调整优先级" class="headerlink" title="调整优先级"></a>调整优先级</h4><p>调度优先级：内核分配给进程的CPU时间。<br>调度优先级是一个整数值，从-20(最高优先级)到+19(最低优先级)。默认情况下以优先级0来启动所有进程。</p>
<p>使用<code>nice</code>命令设置命令启动时的调度优先级，例如：</p>
<blockquote>
<p>nice -n 10 ./test.sh &gt; test.out &amp;</p>
</blockquote>
<p>使用<code>renice</code>命令改变运行中进程的PID，例如：</p>
<blockquote>
<p>renice -n 10 -p 8888</p>
</blockquote>
<h4 id="定时运行作业"><a href="#定时运行作业" class="headerlink" title="定时运行作业"></a>定时运行作业</h4><p>使用<code>at</code>命令来计划执行作业。at命令会将作业提交到队列中，指定shell何时运行该作业。<br>at命令的格式如下：</p>
<blockquote>
<p>at [-f filename] time</p>
</blockquote>
<p>当作业在运行时，Linux系统会将提交该作业的用户的电子邮件地址作为STDOUT和STDERR。所以需要在脚本中对输出进行重定向。</p>
<p>使用<code>atq</code>命令查看系统中有哪些作业在等待。</p>
<p>使用<code>atrm</code>命令来删除等待中的作业。</p>
<h5 id="使用cron程序"><a href="#使用cron程序" class="headerlink" title="使用cron程序"></a>使用cron程序</h5><p>Linux系统使用cron程序来安排要定期执行的作业。cron程序会在后台运行并检查一个特殊的表，以获知已安排执行的作业。</p>
<p>cron时间表的格式如下：</p>
<blockquote>
<p>min hour dayofmonth month dayof week command</p>
</blockquote>
<p>如果想在每天下午15:20执行某个文件，可以设置为：</p>
<blockquote>
<p>20 15 * * * * /home/zyj/shell/tesh.sh &gt; test.out</p>
</blockquote>
<p>使用crontab命令来处理cron时间表。</p>
<h3 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h3><h4 id="基本函数"><a href="#基本函数" class="headerlink" title="基本函数"></a>基本函数</h4><p>创建函数</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">function name &#123;</span><br><span class="line">    commands</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="在函数中使用变量"><a href="#在函数中使用变量" class="headerlink" title="在函数中使用变量"></a>在函数中使用变量</h4><p>向函数传递参数<br>在脚本中指定函数时，必须将参数和函数放在同一行，例如：</p>
<blockquote>
<p>func1 $value1 10</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"></span><br><span class="line">function add &#123;</span><br><span class="line">  if [ $# -eq 0] || [ $# -gt 2]</span><br><span class="line">  then</span><br><span class="line">    echo -1</span><br><span class="line">  elif [ $# -eq 1 ]</span><br><span class="line">  then</span><br><span class="line">    echo $[ $1 + $1 ]</span><br><span class="line">  else </span><br><span class="line">    echo $[ $1 + $2 ]</span><br><span class="line">  fi</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">value1=$(add 10 15)</span><br><span class="line">value2=$(add 10)</span><br><span class="line">value3=$(add)</span><br><span class="line">value4=$(add 5 10 15)</span><br><span class="line">echo $value1 $value2 $value3 $value4</span><br></pre></td></tr></table></figure>
<h4 id="全局变量和局部变量"><a href="#全局变量和局部变量" class="headerlink" title="全局变量和局部变量"></a>全局变量和局部变量</h4><p>使用<code>local</code>关键字定义局部变量。</p>
<blockquote>
<p>local temp</p>
</blockquote>
<p>local关键字保证了变量只局限在该函数中。如果脚本中在该函数之外有同样名字的变量，那么shell将会保持这两个变量的值是分离的。</p>
<h4 id="数组变量和函数"><a href="#数组变量和函数" class="headerlink" title="数组变量和函数"></a>数组变量和函数</h4><p>向函数传递数组参数</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"></span><br><span class="line">function testArr &#123;</span><br><span class="line">    local newArr</span><br><span class="line">    newArr=(&quot;$@&quot;)</span><br><span class="line">    echo &quot;The new array is $&#123;newArr[*]&#125;&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">myArr=(1 2 3 4 5)</span><br><span class="line">testArr $&#123;myArr[*]&#125;</span><br></pre></td></tr></table></figure>
<p>从函数返回数组</p>
<h4 id="函数递归"><a href="#函数递归" class="headerlink" title="函数递归"></a>函数递归</h4><p>计算阶乘</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"></span><br><span class="line">function factorial &#123;</span><br><span class="line">  if [ $1 -eq 1 ]</span><br><span class="line">  then</span><br><span class="line">    echo 1</span><br><span class="line">  else</span><br><span class="line">    local temp=$[ $1 - 1 ]</span><br><span class="line">    local result=$(factorial $temp)</span><br><span class="line">    echo $[ $result * $1 ]</span><br><span class="line">  fi</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">read -p &quot;Enter a number:&quot; value</span><br><span class="line">result=$(factorial $value)</span><br><span class="line">echo &quot;The result is: &quot; $result</span><br></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> Linux </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Shell </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Nginx中proxy_pass和rewrite详解]]></title>
      <url>/2018/02/04/nginx-proxypass-rewrite/</url>
      <content type="html"><![CDATA[<h2 id="proxy-pass和rewrite"><a href="#proxy-pass和rewrite" class="headerlink" title="proxy_pass和rewrite"></a>proxy_pass和rewrite</h2><h3 id="proxy-pass"><a href="#proxy-pass" class="headerlink" title="proxy_pass"></a>proxy_pass</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Syntax:     proxy_pass URL;</span><br><span class="line">Default:    —</span><br><span class="line">Context:    location, if in location, limit_except</span><br></pre></td></tr></table></figure>
<ol>
<li><p>不影响浏览器地址栏的url</p>
</li>
<li><p>设置被代理server的协议和地址，URI可选(可以有，也可以没有)</p>
</li>
<li><p>协议可以为http或https</p>
</li>
<li><p>地址可以为域名或者IP，端口可选；eg：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">proxy_pass http://localhost:8000/uri/;</span><br></pre></td></tr></table></figure>
</li>
<li><p>如果一个域名可以解析到多个地址，那么这些地址会被轮流使用，此外，还可以把一个地址指定为 server group（如：nginx的upstream）, eg:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">upstream backend &#123;</span><br><span class="line">  server backend1.example.com       weight=5;</span><br><span class="line">  server backend2.example.com:8080;</span><br><span class="line">  server unix:/tmp/backend3;</span><br><span class="line"> </span><br><span class="line">  server backup1.example.com:8080   backup;</span><br><span class="line">  server backup2.example.com:8080   backup;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">server &#123;</span><br><span class="line">  location / &#123;</span><br><span class="line">      proxy_pass http://backend;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>server name，port，  URI支持变量的形式，eg：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">proxy_pass http://$host$uri;</span><br></pre></td></tr></table></figure>
<p>这种情况下，nginx会在server groups（upstream后端server）里搜索server name，如果没有找到，会用dns解析请求的URI按照下面的规则传给后端server</p>
<p>6.1. 如果proxy_pass的URL定向里包括URI，那么请求中匹配到location中URI的部分会被proxy_pass后面URL中的URI替换，eg：</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">location /name/ &#123;</span><br><span class="line">    proxy_pass http://127.0.0.1/remote/;</span><br><span class="line">&#125;</span><br><span class="line"># 请求http://127.0.0.1/name/test.html 会被代理到http://127.0.0.1/remote/test.html</span><br></pre></td></tr></table></figure>
<p>6.2. 如果proxy_pass的URL定向里不包括URI，那么请求中的URI会保持原样传送给后端server，eg：</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">location /name/ &#123;</span><br><span class="line">    proxy_pass http://127.0.0.1;</span><br><span class="line">&#125;</span><br><span class="line">#请求http://127.0.0.1/name/test.html 会被代理到http://127.0.0.1/name/test.html</span><br></pre></td></tr></table></figure>
<p>6.3. 一些情况下，不能确定替换的URI：</p>
<ol>
<li>location里是正则表达式，这种情况下，proxy_pass里最好不要有URI；</li>
<li>在proxy_pass前面用了rewrite，如下，这种情况下，proxy_pass是无效的，eg:<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">location /name/ &#123;</span><br><span class="line">  rewrite    /name/([^/]+) /users?name=$1 break;</span><br><span class="line">  proxy_pass http://127.0.0.1;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ol>
</li>
</ol>
<h3 id="rewrite"><a href="#rewrite" class="headerlink" title="rewrite"></a>rewrite</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">syntax:     rewrite regex replacement [flag]</span><br><span class="line">Default:    —</span><br><span class="line">Context:    server, location, if</span><br></pre></td></tr></table></figure>
<ul>
<li>如果正则表达式（regex）匹配到了请求的URI（request URI），这个URI会被后面的replacement替换</li>
<li>rewrite的定向会根据他们在配置文件中出现的顺序依次执行</li>
<li>通过使用flag可以终止定向后进一步的处理</li>
<li>如果replacement以“http://”, “https://”, or “$scheme”开头，处理将会终止，请求结果会以重定向的形式返回给客户端（client）</li>
<li><p>如果replacement字符串里有新的request参数，那么之前的参数会附加到其后面，如果要避免这种情况，那就在replacement字符串后面加上“？”，eg：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rewrite ^/users/(.*)$ /show?user=$1? last;=</span><br></pre></td></tr></table></figure>
</li>
<li><p>如果正则表达式（regex）里包含“}” or “;”字符，需要用单引号或者双引号把正则表达式引起来</p>
</li>
</ul>
<p>可选的flag参数如下：</p>
<ul>
<li>last<ol>
<li>结束当前的请求处理，用替换后的URI重新匹配location；</li>
<li>可理解为重写（rewrite）后，发起了一个新请求，进入server模块，匹配location；</li>
<li>如果重新匹配循环的次数超过10次，nginx会返回500错误；</li>
<li>返回302 http状态码 ；</li>
<li>浏览器地址栏显示重地向后的url</li>
</ol>
</li>
<li>break<ol>
<li>结束当前的请求处理，使用当前资源，不在执行location里余下的语句；</li>
<li>返回302 http状态码 ；</li>
<li>浏览器地址栏显示重定向后的url</li>
</ol>
</li>
<li>redirect<ol>
<li>临时跳转，返回302 http状态码；</li>
<li>浏览器地址栏显示重定向后的url</li>
</ol>
</li>
<li>permanent<ol>
<li>永久跳转，返回301 http状态码；</li>
<li>浏览器地址栏显示重定向后的url</li>
</ol>
</li>
</ul>
]]></content>
      
        <categories>
            
            <category> Linux </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Nginx </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Linux之grep详解]]></title>
      <url>/2018/02/03/Linux-grep/</url>
      <content type="html"><![CDATA[<p>grep（global search regular expression(RE) and print out the line）是一种强大的文本搜索工具，它能使用正则表达式搜索文本，并把匹配的行打印出来。</p>
<h4 id="选项"><a href="#选项" class="headerlink" title="选项"></a>选项</h4><blockquote>
<p>-a 不要忽略二进制数据。<br>  -A&lt;显示列数&gt; 除了显示符合范本样式的那一行之外，并显示该行之后的内容。<br>  -b 在显示符合范本样式的那一行之外，并显示该行之前的内容。<br>  -c 计算符合范本样式的列数。<br>  -C&lt;显示列数&gt;或-&lt;显示列数&gt;  除了显示符合范本样式的那一列之外，并显示该列之前后的内容。<br>  -d&lt;进行动作&gt; 当指定要查找的是目录而非文件时，必须使用这项参数，否则grep命令将回报信息并停止动作。<br>  -e&lt;范本样式&gt; 指定字符串作为查找文件内容的范本样式。<br>  -E 将范本样式为延伸的普通表示法来使用，意味着使用能使用扩展正则表达式。<br>  -f&lt;范本文件&gt; 指定范本文件，其内容有一个或多个范本样式，让grep查找符合范本条件的文件内容，格式为每一列的范本样式。<br>  -F 将范本样式视为固定字符串的列表。<br>  -G 将范本样式视为普通的表示法来使用。<br>  -h 在显示符合范本样式的那一列之前，不标示该列所属的文件名称。<br>  -H 在显示符合范本样式的那一列之前，标示该列的文件名称。<br>  -i 忽略字符大小写的差别。<br>  -l 列出文件内容符合指定的范本样式的文件名称。<br>  -L 列出文件内容不符合指定的范本样式的文件名称。<br>  -n 在显示符合范本样式的那一列之前，标示出该列的编号。<br>  -q 不显示任何信息。<br>  -R/-r 此参数的效果和指定“-d recurse”参数相同。<br>  -s 不显示错误信息。<br>  -v 反转查找。<br>  -w 只显示全字符合的列。<br>  -x 只显示全列符合的列。<br>  -y 此参数效果跟“-i”相同。<br>  -o 只输出文件中匹配到的部分。</p>
</blockquote>
<h4 id="常见用法"><a href="#常见用法" class="headerlink" title="常见用法"></a>常见用法</h4><p>在文件中搜索一个单词，命令会返回一个包含“match_pattern”的文本行：</p>
<blockquote>
<p>grep match_pattern file_name<br>  grep “match_pattern” file_name</p>
</blockquote>
<p>在多个文件中查找：</p>
<blockquote>
<p>grep “match_pattern” file_1 file_2 file_3 …</p>
</blockquote>
<p>输出除之外的所有行 -v 选项：</p>
<blockquote>
<p>grep -v “match_pattern” file_name</p>
</blockquote>
<p>使用正则表达式 -E 选项：</p>
<blockquote>
<p>grep -E “[1-9]+”<br>  或<br>  egrep “[1-9]+”</p>
</blockquote>
<p>只输出文件中匹配到的部分 -o 选项：</p>
<blockquote>
<p>echo this is a test line. | grep -o -E “[a-z]+.“<br>  line.<br>  echo this is a test line. | egrep -o “[a-z]+.“<br>  line.</p>
</blockquote>
<p>统计文件或者文本中包含匹配字符串的行数 -c 选项：</p>
<blockquote>
<p>grep -c “text” file_name</p>
</blockquote>
<p>输出包含匹配字符串的行数 -n 选项：</p>
<blockquote>
<p>grep “text” -n file_name<br>  或<br>  cat file_name | grep “text” -n</p>
<p>  #多个文件<br>  grep “text” -n file_1 file_2</p>
</blockquote>
<p>搜索多个文件并查找匹配文本在哪些文件中：</p>
<blockquote>
<p>grep -l “text” file1 file2 file3…</p>
</blockquote>
<h4 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h4><ol>
<li><p>获取root用户的shell程序</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/passwd|grep ^root.*&quot;/root:&quot; | cut -d : -f 7</span><br></pre></td></tr></table></figure>
</li>
<li><p>显示CentOS7的/etc/grub2.cfg文件中，至少以一个空白 字符开头的且后面存非空白字符的行</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/grub2.cfg | egrep &quot;^[[:space:]] [^[:space:]]&quot;</span><br></pre></td></tr></table></figure>
</li>
<li><p>找出<code>netstat -tan</code>命令的结果中以<code>LISTEN</code>后跟任意多个空白字符结尾的行</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -tan | grep &quot;.*LISTEN.*$&quot;</span><br></pre></td></tr></table></figure>
</li>
</ol>
]]></content>
      
        <categories>
            
            <category> Linux </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Linux </tag>
            
            <tag> grep </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Linux的正则表达式]]></title>
      <url>/2018/02/03/Linux-regular/</url>
      <content type="html"><![CDATA[<h3 id="通配符"><a href="#通配符" class="headerlink" title="通配符"></a>通配符</h3><table>
<thead>
<tr>
<th style="text-align:center">元字符</th>
<th style="text-align:left">作用</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">*</td>
<td style="text-align:left">匹配0个或任意多个字符，也就是可以匹配任何内容</td>
</tr>
<tr>
<td style="text-align:center">?</td>
<td style="text-align:left">匹配任意一个字符</td>
</tr>
<tr>
<td style="text-align:center">[]</td>
<td style="text-align:left">匹配[ ]中任意一个字符</td>
</tr>
<tr>
<td style="text-align:center">[-]</td>
<td style="text-align:left">匹配括号中任意一个字符，-代表一个范围，例如：[a-z]代表匹配一个小写字母</td>
</tr>
<tr>
<td style="text-align:center">[^]</td>
<td style="text-align:left">逻辑非，表示匹配不是中括号内的一个字符，例如[^0-9]代表匹配一个不是数字的字符</td>
</tr>
</tbody>
</table>
<h3 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h3><h4 id="基础正则表达式"><a href="#基础正则表达式" class="headerlink" title="基础正则表达式"></a>基础正则表达式</h4><table>
<thead>
<tr>
<th style="text-align:center">元字符</th>
<th style="text-align:left">作用</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">*</td>
<td style="text-align:left">前一个字符匹配0次或任意多次，匹配0次前一个字符则表示匹配任意字符，包括空白行</td>
</tr>
<tr>
<td style="text-align:center">.</td>
<td style="text-align:left">匹配除了换行符以外任意一个字符，“.*”匹配所有内容</td>
</tr>
<tr>
<td style="text-align:center">^</td>
<td style="text-align:left">用于指定匹配字符串的头部，也称行首定位符；匹配行首。例如：^hello会匹配以hello开头的行，grep -n “^$” test.txt匹配空白行并显示行号</td>
</tr>
<tr>
<td style="text-align:center">$</td>
<td style="text-align:left">用于指定匹配字符串的尾部，也称行尾定位符；匹配行尾。例如：hello$会匹配以hello结尾的行</td>
</tr>
<tr>
<td style="text-align:center">[]</td>
<td style="text-align:left">匹配中括号中指定的任意一个字符，只匹配一个字符，要匹配[则要转义[</td>
</tr>
<tr>
<td style="text-align:center">[^]</td>
<td style="text-align:left">匹配除中括号的字符以外的任意一个字符</td>
</tr>
<tr>
<td style="text-align:center">\</td>
<td style="text-align:left">转义符用于取消特殊符号的含义，匹配包含以.结尾的行grep “.$” test.txt</td>
</tr>
<tr>
<td style="text-align:center">{n}</td>
<td style="text-align:left">表示其前面的字符恰好出现n次。例如：[0-9]{4}匹配4位数字，但注意添加两边的定界符，以精确匹配</td>
</tr>
<tr>
<td style="text-align:center">{n,}</td>
<td style="text-align:left">表示其前面的字符出现不小于n次。例如：[0-9]{2,}匹配2位以上的数字</td>
</tr>
<tr>
<td style="text-align:center">{n,m}</td>
<td style="text-align:left">表示其前面的字符至少出现n次，最多出现m次。例如：[a-z]{6,8}匹配6到8位的小写字母</td>
</tr>
</tbody>
</table>
<blockquote>
<p>注1：<code>?、()</code>是扩展正则中的元字符<br>  注2：正则表达式中使用以上的元字符，如<code>[]、{}、*、.</code>等所以在匹配字符串中包含有这些元字符时必须使用反斜杠<code>\\</code>转义，但像<code>&lt;&gt;</code>这个非元字符符号就不需要转义。</p>
</blockquote>
<h4 id="特殊字符"><a href="#特殊字符" class="headerlink" title="特殊字符"></a>特殊字符</h4><p>正则表达式识别的特殊字符包括：</p>
<blockquote>
<p>.*[]^$&#123;&#125;\+?()</p>
</blockquote>
<p>如果需要将特殊字符当作普通字符来使用，必须对特殊字符进行转义。</p>
<h4 id="特殊字符组"><a href="#特殊字符组" class="headerlink" title="特殊字符组"></a>特殊字符组</h4><table>
<thead>
<tr>
<th style="text-align:center">组</th>
<th style="text-align:center">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">[[:alpha:]]</td>
<td style="text-align:center">匹配任意的字母字符，不管是大写还是小写</td>
</tr>
<tr>
<td style="text-align:center">[[:alnum:]]</td>
<td style="text-align:center">匹配任意的字母数字字符0~9，A~Z或a~z</td>
</tr>
<tr>
<td style="text-align:center">[[:blank:]]</td>
<td style="text-align:center">匹配空格或制表符</td>
</tr>
<tr>
<td style="text-align:center">[[:digit:]]</td>
<td style="text-align:center">匹配0~9之间的数字</td>
</tr>
<tr>
<td style="text-align:center">[[:lower:]]</td>
<td style="text-align:center">匹配小写字母字符a~z</td>
</tr>
<tr>
<td style="text-align:center">[[:print:]]</td>
<td style="text-align:center">匹配任意可打印字符</td>
</tr>
<tr>
<td style="text-align:center">[[:punct:]]</td>
<td style="text-align:center">匹配标点符号</td>
</tr>
<tr>
<td style="text-align:center">[[:space:]]</td>
<td style="text-align:center">匹配任意空白字符：空格、制表符、NF、FF、VT和CR</td>
</tr>
<tr>
<td style="text-align:center">[[:upper:]]</td>
<td style="text-align:center">匹配任意大写字母字符A~Z</td>
</tr>
</tbody>
</table>
<h4 id="扩展正则表达式"><a href="#扩展正则表达式" class="headerlink" title="扩展正则表达式"></a>扩展正则表达式</h4><blockquote>
<p>需要注意的是，gawk程序可以识别扩展正则表达式，而sed编辑器不能。</p>
</blockquote>
<table>
<thead>
<tr>
<th style="text-align:center">元字符</th>
<th style="text-align:left">作用</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">&#124;</td>
<td style="text-align:left">管道符，表示或，即匹配其中任何一个，book&#124;desk将匹配book或desk</td>
</tr>
<tr>
<td style="text-align:center">()</td>
<td style="text-align:left">小括号，可以将正则字符和元字符或表达式进行组合，(book&#124;desk)s将匹配books或desks</td>
</tr>
<tr>
<td style="text-align:center">?</td>
<td style="text-align:left">问号，匹配0个或1个前导表达式，如<code>a?</code>匹配其他字符串或a</td>
</tr>
<tr>
<td style="text-align:center">\&lt;</td>
<td style="text-align:left">反斜杠+小于号，词首定位符， <code>\&lt; abc</code>表示所有包含以<code>abc</code>开头的单词的行</td>
</tr>
<tr>
<td style="text-align:center">\&gt;</td>
<td style="text-align:left">反斜杠+大于号，词尾定位符， <code>\&gt;abc</code>表示所有包含以<code>abc</code>结尾的单词的行</td>
</tr>
<tr>
<td style="text-align:center">-</td>
<td style="text-align:left">减号，用于指明字符范围， <code>[a-c]</code>将匹配包含<code>a、b和c</code>中任意一个字符的字符串</td>
</tr>
<tr>
<td style="text-align:center">+</td>
<td style="text-align:left">加号，匹配一个或多个前导表达式，相当于<code>expr{1,}</code></td>
</tr>
<tr>
<td style="text-align:center">&#123;&#125;</td>
<td style="text-align:left">为重复的正则表达式设定一个范围</td>
</tr>
</tbody>
</table>
<h3 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h3><h4 id="目录文件计数"><a href="#目录文件计数" class="headerlink" title="目录文件计数"></a>目录文件计数</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"></span><br><span class="line">mypath=$(echo $PATH | sed &apos;s/:/ /g&apos;)</span><br><span class="line">count=0</span><br><span class="line"></span><br><span class="line">for dir in $mypath</span><br><span class="line">do</span><br><span class="line">  subdir=$(ls $dir)</span><br><span class="line">  for item in $subdir</span><br><span class="line">  do</span><br><span class="line">    count=$[ $count + 1]</span><br><span class="line">  done</span><br><span class="line">  echo &quot;$dir ---- $count&quot; </span><br><span class="line">  count=0</span><br><span class="line">done</span><br></pre></td></tr></table></figure>
<h4 id="解析邮件地址"><a href="#解析邮件地址" class="headerlink" title="解析邮件地址"></a>解析邮件地址</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">^([a-zA-Z0-9_\-\.\+]+)@([a-zA-Z0-9_\-\.]+)\.([a-zA-Z]&#123;2,5&#125;)$</span><br></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> Linux </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Shell </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Linux之sed详解]]></title>
      <url>/2018/02/03/Linux-sed/</url>
      <content type="html"><![CDATA[<p>sed是一种流编辑器，它是文本处理中常营的工具，能够完美的配合正则表达式使用。处理时，把当前处理的行存储在临时缓冲区中，称为“模式空间”（pattern space），接着用sed命令处理缓冲区中的内容，处理完成后，把缓冲区的内容送往屏幕。接着处理下一行，这样不断重复，直到文件末尾。文件内容并没有 改变，除非你使用重定向存储输出。Sed主要用来自动编辑一个或多个文件；简化对文件的反复操作；编写转换程序等。</p>
<h3 id="命令格式"><a href="#命令格式" class="headerlink" title="命令格式"></a>命令格式</h3><p>sed [-nefri] ‘command’ 输入文本</p>
<h3 id="常用选项"><a href="#常用选项" class="headerlink" title="常用选项"></a>常用选项</h3><p>-n∶使用安静(silent)模式。在一般 sed 的用法中，所有来自STDIN的资料一般都会被列出到屏幕上。但如果加上<code>-n</code>参数后，则只有经过sed特殊处理的那一行(或者动作)才会被列出来。<br>-e∶直接在指令列模式上进行sed的动作编辑；或者需要在sed命令行上执行多个命令；例如<code>sed -e &#39;s/brown/green/; s/dog/cat/&#39; test.txt</code>；<br>-f∶直接将sed的动作写在一个档案内，<code>-f filename</code>则可以执行 filename 内的sed 动作；<br>-r∶sed的动作支援的是延伸型正规表示法的语法。(预设是基础正规表示法语法)<br>-i∶直接修改读取的档案内容，而不是由屏幕输出。 </p>
<h3 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h3><p>a：新增，a的后面可以接字串，而这些字串会在新的一行出现(目前的下一行)<br>c：取代，c的后面可以接字串，这些字串可以取代n1,n2之间的行<br>d：删除，由于是删除，所以d后面通常不接任何符号<br>g：新文本将会替换所有匹配的文本<br>i：插入，i的后面可以接字串，而这些字串会在新的一行出现(目前的上一行)<br>l：打印数据流中的文本和不可打印的ASCII字符<br>p：打印，即将某个匹配的字符串打印。通常p会与参数 sed -n 一起使用<br>r：将一个独立文件中的数据插入到数据流中<br>s：替换，直接将匹配的字符串进行替换。通常与正则表达式一起使用<br>w file：将替换的结果写到文件中</p>
<h3 id="使用文本过滤器"><a href="#使用文本过滤器" class="headerlink" title="使用文本过滤器"></a>使用文本过滤器</h3><p>格式如下：</p>
<blockquote>
<p>/pattern/command</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed &apos;/jimmy/s/bash/csh/&apos; /etc/passwd</span><br></pre></td></tr></table></figure>
<h3 id="sed进阶"><a href="#sed进阶" class="headerlink" title="sed进阶"></a>sed进阶</h3><h4 id="多行命令"><a href="#多行命令" class="headerlink" title="多行命令"></a>多行命令</h4><p>N：将数据流中的下一行加进来创建一个多行组来处理；<br>D：删除多行组中的一行；注意：D命令会强制sed编辑器返回到脚本的顶部，而不读取新的行；<br>P：打印多行组中的一行。</p>
<p>next命令</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sed &apos;/head/&#123;n ; d&#125;&apos; data.txt		#删除含有head行的下一行</span><br><span class="line">sed &apos;/first/&#123;N ; s/\n/ /&#125;&apos; data.txt     #将含有first的行以及下一行当作一行处理</span><br><span class="line">sed &apos;N ; s/System.Administrator/Desktop User&apos; data.txt</span><br></pre></td></tr></table></figure>
<p>多行删除</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed &apos;/^$/&#123;N ; /header/D&#125;&apos; data.txt	#首先找到空白行，然后将下一行合并到模式空间内，由于D只会删除模式空间里的第一行，所以只会删除含有header行前的空白行</span><br></pre></td></tr></table></figure>
<p>多行打印</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -n &apos;N ; /System\nAdministrator/P&apos; data.txt  #只打印多行模式空间中的第一行</span><br></pre></td></tr></table></figure>
<h4 id="保持空间"><a href="#保持空间" class="headerlink" title="保持空间"></a>保持空间</h4><p>模式空间是一块活跃的缓冲区，在sed编辑器执行命令时它会保存待检查的文本。但它并不是sed编辑器保存文本的唯一空间。</p>
<p>sed编辑器有另一块称作保持空间的缓冲区域。在处理模式空间中的某些行时，可以用保持空间来临时保存一些行。</p>
<p>sed编辑器的保持空间命令：</p>
<table>
<thead>
<tr>
<th style="text-align:center">命令</th>
<th style="text-align:center">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">h</td>
<td style="text-align:center">将模式空间复制到保持空间</td>
</tr>
<tr>
<td style="text-align:center">H</td>
<td style="text-align:center">将模式空间附加到保持空间</td>
</tr>
<tr>
<td style="text-align:center">g</td>
<td style="text-align:center">将保持空间复制到模式空间</td>
</tr>
<tr>
<td style="text-align:center">G</td>
<td style="text-align:center">将保持空间附加到模式空间</td>
</tr>
<tr>
<td style="text-align:center">x</td>
<td style="text-align:center">交换模式空间和保持空间的内容</td>
</tr>
</tbody>
</table>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -n &apos;/first/&#123;h ; n ; p; g; p&#125;&apos; data.txt	#将含有first的行和后面一行交换顺序输出</span><br></pre></td></tr></table></figure>
<h4 id="排除命令"><a href="#排除命令" class="headerlink" title="排除命令"></a>排除命令</h4><p>使用感叹号(!)来排除命令，即让原本会起作用的命令不起作用。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -n &apos;&#123;1!G ; h ; $p&#125;&apos; data.txt</span><br></pre></td></tr></table></figure>
<h4 id="改变流"><a href="#改变流" class="headerlink" title="改变流"></a>改变流</h4><p>分支命令<code>b</code>，格式如下：<br>[address]b [label]</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed &apos;&#123;2,3b; s/This is/Is this/; s/line./test?/&#125;&apos; data.txt	#在第2、3行跳过替换</span><br></pre></td></tr></table></figure>
<p>测试命令<code>t</code>，根据替换命令的结果跳转到某个标签，而不是根据地址进行跳转，格式如下：<br>[address]t [label]</p>
<h4 id="模式替代"><a href="#模式替代" class="headerlink" title="模式替代"></a>模式替代</h4><p>使用<code>&amp;</code>符号用来代表替换命令中的匹配的模式</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ echo &quot;The cat sleeps in his hat.&quot; | sed &apos;s/.at/&quot;&amp;&quot;/g&apos;</span><br></pre></td></tr></table></figure>
<p>sed使用圆括号来定义替换模式中的子模式。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ echo &quot;The System Administrator manual&quot; | sed &apos;s/\(System\) Administrator</span><br><span class="line">/\1 User/g&apos;</span><br></pre></td></tr></table></figure>
<h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><h4 id="删除行"><a href="#删除行" class="headerlink" title="删除行"></a>删除行</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sed &apos;1d&apos; filename              #删除第一行 </span><br><span class="line">sed &apos;$d&apos; filename              #删除最后一行</span><br><span class="line">sed &apos;1,2d&apos; filename            #删除第一行到第二行</span><br><span class="line">sed &apos;2,$d&apos; filename            #删除第二行到最后一行</span><br><span class="line">sed &apos;/1/,/3/d&apos; filename        #在遇到数据行中有1时开始删除，遇到有3的行停止删除</span><br></pre></td></tr></table></figure>
<h4 id="显示行"><a href="#显示行" class="headerlink" title="显示行"></a>显示行</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sed -n &apos;1p&apos; filename           #显示第一行 </span><br><span class="line">sed -n &apos;$p&apos; filename           #显示最后一行</span><br><span class="line">sed -n &apos;1,2p&apos; filename         #显示第一行到第二行</span><br><span class="line">sed -n &apos;2,$p&apos; filename         #显示第二行到最后一行</span><br></pre></td></tr></table></figure>
<h4 id="查询"><a href="#查询" class="headerlink" title="查询"></a>查询</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sed -n &apos;/centos/p&apos; filename    #查询包括关键字centos所在所有行</span><br><span class="line">sed -n &apos;/\$/p&apos; filename        #查询包括关键字$所在所有行，使用反斜线\对特殊字符进行转义</span><br></pre></td></tr></table></figure>
<h4 id="增加一行或多行字符串"><a href="#增加一行或多行字符串" class="headerlink" title="增加一行或多行字符串"></a>增加一行或多行字符串</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sed &apos;1a drink tea&apos; filename     #第一行后增加字符串&quot;drink tea&quot;</span><br><span class="line">sed &apos;1,3a drink tea&apos; filename   #第一行到第三行后增加字符串&quot;drink tea&quot;</span><br><span class="line">sed &apos;1a drink\ncoffee&apos; filename #第一行后增加多行，使用换行符\n</span><br></pre></td></tr></table></figure>
<h4 id="替换一行或多行"><a href="#替换一行或多行" class="headerlink" title="替换一行或多行"></a>替换一行或多行</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sed &apos;1c Hi&apos; filename          #第一行代替为Hi</span><br><span class="line">sed &apos;1,2c Hi&apos; filename        #第一行到第二行代替为Hi</span><br></pre></td></tr></table></figure>
<h4 id="替换一行中的某部分"><a href="#替换一行中的某部分" class="headerlink" title="替换一行中的某部分"></a>替换一行中的某部分</h4><blockquote>
<p>格式<br>  sed ‘s/要替换的字符串/新的字符串/g’   (要替换的字符串可以用正则表达式)</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sed -n &apos;/centos/p&apos; filename | sed &apos;s/centos/redhat/g&apos;    #替换centos为redhat</span><br><span class="line">sed -n &apos;/centos/p&apos; filename | sed &apos;s/centos//g&apos;          #删除centos</span><br><span class="line">sed &apos;s/test/trial/2&apos; data.txt			         #只替换每行第二次出现的test</span><br></pre></td></tr></table></figure>
<h4 id="插入"><a href="#插入" class="headerlink" title="插入"></a>插入</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sed -i &apos;$a bye&apos; filename   #在文件filenamede 最后一行直接输入&quot;bye&quot;</span><br><span class="line">sed -n &apos;2,$p&apos; filename     #显示第二行到最后一行</span><br></pre></td></tr></table></figure>
<h4 id="转换"><a href="#转换" class="headerlink" title="转换"></a>转换</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed &apos;y/123/789/&apos; test.txt                   将1替换为7,2替换为8,3替换为9</span><br></pre></td></tr></table></figure>
<h3 id="习题"><a href="#习题" class="headerlink" title="习题"></a>习题</h3><ol>
<li><p>从ip addr中找到当前主机的ip</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ip addr|sed -nr &apos;s/.*inet (.*)\/24.*$/\1/gp&apos;</span><br><span class="line">192.168.17.131</span><br></pre></td></tr></table></figure>
</li>
<li><p>将/etc/passwd第一项和最后一项互换</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/passwd | sed -nr &apos;s/(.*)(:x.*:)(.*$)/\3\2\1/gp&apos;</span><br></pre></td></tr></table></figure>
</li>
<li><p>加倍行间距</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ sed &apos;$!G&apos; data.txt</span><br><span class="line">#如果文本中本身就有空白行</span><br><span class="line">$ sed &apos;/^$/d; $!G&apos; data.txt</span><br></pre></td></tr></table></figure>
</li>
<li><p>给文件中的行编号</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sed &quot;=&quot; data.txt | sed &apos;N; s/\n/ /g&apos;</span><br></pre></td></tr></table></figure>
</li>
<li><p>打印文件末尾的若干行</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ sed &apos;&#123;</span><br><span class="line">  :start</span><br><span class="line">  $q; N ; 11,$D</span><br><span class="line">  b start</span><br><span class="line">  &#125;&apos; data.txt</span><br></pre></td></tr></table></figure>
</li>
<li><p>删除连续的空白行</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sed &apos;/./,/^$/!d&apos; data.txt</span><br></pre></td></tr></table></figure>
</li>
<li><p>删除开头的空白行</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sed &apos;/./,$!d&apos; data.txt</span><br></pre></td></tr></table></figure>
</li>
<li><p>删除结尾的空白行</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ sed &apos;&#123;</span><br><span class="line">  :start</span><br><span class="line">  /^\n*$/&#123;$d ; N ; b start&#125;</span><br><span class="line">  &#125;&apos; data.txt</span><br></pre></td></tr></table></figure>
</li>
<li><p>删除HTML标签</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sed &apos;s/&lt;[^&gt;]*&gt;//g ; /^$/d&apos; data.txt</span><br></pre></td></tr></table></figure>
</li>
</ol>
]]></content>
      
        <categories>
            
            <category> Linux </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Linux </tag>
            
            <tag> sed </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Linux之awk详解]]></title>
      <url>/2018/02/03/Linux-awk/</url>
      <content type="html"><![CDATA[<p>awk是一个强大的文本分析工具，相对于grep的查找，sed的编辑，awk在其对数据分析并生成报告时，显得尤为强大。简单来说awk就是把文件逐行的读入，以空格为默认分隔符将每行切片，切开的部分再进行各种分析处理。在awk中可以定义变量来保存数据，使用算术和字符串操作符来处理数据，使用结构化编程概念来为数据处理增加处理逻辑，以及提取文件的数据并做处理生成报告。<br>awk有3个不同版本: awk、nawk和gawk，未作特别说明，一般指gawk，gawk是AWK的GNU版本。</p>
<h4 id="命令格式"><a href="#命令格式" class="headerlink" title="命令格式"></a>命令格式</h4><blockquote>
<p>awk ‘{pattern + action}’ {filenames}</p>
</blockquote>
<p>其中pattern表示AWK在数据中查找的内容，而action是在找到匹配内容时所执行的一系列命令。花括号({})不需要在程序中始终出现，但它们用于根据特定的模式对一系列指令进行分组。pattern就是要表示的正则表达式，用斜杠括起来。</p>
<h4 id="调用方式"><a href="#调用方式" class="headerlink" title="调用方式"></a>调用方式</h4><p>awk的调用方式通常分为以下三种：</p>
<h5 id="命令行方式"><a href="#命令行方式" class="headerlink" title="命令行方式"></a>命令行方式</h5><blockquote>
<p>awk [-F  field-separator]  ‘commands’  input-file(s)</p>
</blockquote>
<p>其中，commands 是真正awk命令，[-F域分隔符]是可选的。 input-file(s) 是待处理的文件。<br>在awk中，文件的每一行中，由域分隔符分开的每一项称为一个域。通常，在不指名-F域分隔符的情况下，默认的域分隔符是空格。</p>
<h5 id="shell脚本方式"><a href="#shell脚本方式" class="headerlink" title="shell脚本方式"></a>shell脚本方式</h5><p>将所有的awk命令插入一个文件，并使awk程序可执行，然后awk命令解释器作为脚本的首行，一遍通过键入脚本名称来调用。</p>
<blockquote>
<p>相当于shell脚本首行的：#!/bin/sh<br>  可以换成：#!/bin/awk</p>
</blockquote>
<h5 id="将所有的awk命令插入一个单独文件，然后调用"><a href="#将所有的awk命令插入一个单独文件，然后调用" class="headerlink" title="将所有的awk命令插入一个单独文件，然后调用"></a>将所有的awk命令插入一个单独文件，然后调用</h5><blockquote>
<p>awk -f awk-script-file input-file(s)</p>
</blockquote>
<p>其中，-f选项加载awk-script-file中的awk脚本，input-file(s)跟上面的是一样的。</p>
<h4 id="入门实例"><a href="#入门实例" class="headerlink" title="入门实例"></a>入门实例</h4><ol>
<li><p>显示最近登录的5个账号名</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">last -n 5 | awk &apos;&#123;print $1&#125;&apos;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>awk工作流程是这样的：读入有’\n’换行符分割的一条记录，然后将记录按指定的域分隔符划分域，填充域，$0则表示所有域,$1表示第一个域,$n表示第n个域。默认域分隔符是”空白键” 或 “[tab]键”,所以$1表示登录用户，$3表示登录用户ip,以此类推。</p>
</blockquote>
</li>
<li><p>只显示/etc/passwd的账户名</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/passwd | awk -F&apos;:&apos; &apos;&#123;print $1&#125;&apos;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>这种是awk+action的示例，每行都会执行<code>action{print $1}</code>。<br> -F指定域分隔符为<code>:</code>。</p>
</blockquote>
</li>
<li><p>只显示/etc/passwd的账户和账户对应的shell,并且账户与shell之间以tab键分割</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/passwd | awk -F&apos;:&apos; &apos;&#123;print $1&quot;\t&quot;$7&#125;&apos;</span><br></pre></td></tr></table></figure>
</li>
<li><p>只显示/etc/passwd的账户和账户对应的shell,账户与shell之间以逗号分割,并且在所有行前添加列名name,shell,在最后一行添加”blue,/bin/nosh”。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/passwd | awk -F&apos;:&apos; &apos;BEGIN&#123;print &quot;name,shell&quot;&#125; &#123;print $1&quot;,&quot;$7&#125; END&#123;print &quot;blue,/bin/nosh&quot;&#125;&apos;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>awk工作流程是这样的：先执行BEGIN，然后读取文件，读入有/n换行符分割的一条记录，然后将记录按指定的域分隔符划分域，填充域，$0则表示所有域,$1表示第一个域,$n表示第n个域,随后开始执行模式所对应的动作action。接着开始读入第二条记录······直到所有的记录都读完，最后执行END操作。</p>
</blockquote>
</li>
<li><p>搜索/etc/passwd有root关键字的所有行</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/passwd | awk -F&apos;:&apos; &apos;/root/&apos;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>这种是pattern的使用示例，匹配了pattern(这里是root)的行才会执行action(没有指定action，默认输出每行的内容)。<br> 搜索支持正则，例如找root开头的: <code>awk -F: &#39;/^root/&#39; /etc/passwd</code></p>
</blockquote>
</li>
<li><p>获取/etc/passwd有root关键字的所有行，并显示对应的shell</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/passwd | awk -F: &apos;/root/&#123;print $7&#125;&apos;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h4 id="awk内置变量"><a href="#awk内置变量" class="headerlink" title="awk内置变量"></a>awk内置变量</h4><p>awk有许多内置变量用来设置环境信息，这些变量可以被改变，下面给出了最常用的一些变量。</p>
<table>
<thead>
<tr>
<th style="text-align:center">变量名</th>
<th style="text-align:left">说明</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">ARGC</td>
<td style="text-align:left">命令行参数个数</td>
</tr>
<tr>
<td style="text-align:center">ARGV</td>
<td style="text-align:left">命令行参数排列</td>
</tr>
<tr>
<td style="text-align:center">ARGIND</td>
<td style="text-align:left">当前文件在ARGV中的位置</td>
</tr>
<tr>
<td style="text-align:center">ENVIRON</td>
<td style="text-align:left">支持队列中系统环境变量的使用</td>
</tr>
<tr>
<td style="text-align:center">ERRNO</td>
<td style="text-align:left">当读取或关闭输入文件发生错误时的系统错误号</td>
</tr>
<tr>
<td style="text-align:center">FILENAME</td>
<td style="text-align:left">awk浏览的文件名</td>
</tr>
<tr>
<td style="text-align:center">FNR</td>
<td style="text-align:left">当前数据文件中的数据行数</td>
</tr>
<tr>
<td style="text-align:center">FS</td>
<td style="text-align:left">设置输入域分隔符，等价于命令行 -F选项</td>
</tr>
<tr>
<td style="text-align:center">NF</td>
<td style="text-align:left">数据文件中的字段总数</td>
</tr>
<tr>
<td style="text-align:center">NR</td>
<td style="text-align:left">已处理的输入记录数</td>
</tr>
<tr>
<td style="text-align:center">OFS</td>
<td style="text-align:left">输出域分隔符</td>
</tr>
<tr>
<td style="text-align:center">ORS</td>
<td style="text-align:left">输出记录分隔符</td>
</tr>
<tr>
<td style="text-align:center">RS</td>
<td style="text-align:left">控制记录分隔符</td>
</tr>
<tr>
<td style="text-align:center">FIELDWIDTHS</td>
<td style="text-align:left">由空格分隔的一列数字，定义了每个数据字段确切宽度；一旦设置，会忽略FS变量</td>
</tr>
</tbody>
</table>
<h5 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h5><ol>
<li><p>统计/etc/passwd:文件名，每行的行号，每行的列数，对应的完整行内容</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk -F&apos;:&apos; &apos;&#123;print &quot;filename: &quot; FILENAME &quot;, linenumber: &quot; NR &quot;, columns: &quot; NF &quot;, linecontent: &quot; $0&#125;&apos; /etc/passwd</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h4 id="print和printf"><a href="#print和printf" class="headerlink" title="print和printf"></a>print和printf</h4><p>awk中同时提供了print和printf两种打印输出的函数。<br>其中print函数的参数可以是变量、数值或者字符串。字符串必须用双引号引用，参数用逗号分隔。如果没有逗号，参数就串联在一起而无法区分。这里，逗号的作用与输出文件的分隔符的作用是一样的，只是后者是空格而已。<br>printf函数，其用法和c语言中printf基本相似,可以格式化字符串,输出复杂时，printf更加好用，代码更易懂。</p>
<table>
<thead>
<tr>
<th style="text-align:center">控制字母</th>
<th style="text-align:center">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">c</td>
<td style="text-align:center">将一个数作为ASCII字符显示</td>
</tr>
<tr>
<td style="text-align:center">d</td>
<td style="text-align:center">显示一个整数值</td>
</tr>
<tr>
<td style="text-align:center">i</td>
<td style="text-align:center">显示一个整数值(跟d一样)</td>
</tr>
<tr>
<td style="text-align:center">e</td>
<td style="text-align:center">用科学计数法显示一个数</td>
</tr>
<tr>
<td style="text-align:center">f</td>
<td style="text-align:center">显示一个浮点数</td>
</tr>
<tr>
<td style="text-align:center">g</td>
<td style="text-align:center">用科学计数法或浮点数显示(选择较短的格式)</td>
</tr>
<tr>
<td style="text-align:center">o</td>
<td style="text-align:center">显示一个八进制值</td>
</tr>
<tr>
<td style="text-align:center">s</td>
<td style="text-align:center">显示一个文本字符串</td>
</tr>
<tr>
<td style="text-align:center">x</td>
<td style="text-align:center">显示一个十六进制值</td>
</tr>
<tr>
<td style="text-align:center">X</td>
<td style="text-align:center">显示一个十六进制值，单用大写字母</td>
</tr>
</tbody>
</table>
<blockquote>
<p>可以将上面的例子1改写为以下形式：</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">  awk -F&apos;:&apos; &apos;&#123;printf(&quot;filename: %10s, linenumber: %s, columns: %s, linecon</span><br><span class="line">tent: %s\n&quot;, FILENAME, NR, NF, $0)&#125;&apos; /etc/passwd</span><br></pre></td></tr></table></figure>
<h4 id="awk编程"><a href="#awk编程" class="headerlink" title="awk编程"></a>awk编程</h4><h5 id="变量和赋值"><a href="#变量和赋值" class="headerlink" title="变量和赋值"></a>变量和赋值</h5><p>除了awk的内置变量，awk还可以自定义变量。</p>
<ol>
<li><p>统计/etc/passwd的账户人数</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk &apos;BEGIN&#123;count=0&#125; &#123;count++&#125; END&#123;print &quot;the number of users is &quot;,count&#125;&apos; /etc/passwd</span><br></pre></td></tr></table></figure>
</li>
<li><p>统计某个文件夹下的文件占用的字节数</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls -l | awk &apos;BEGIN&#123;size=0&#125; &#123;size+=$5;&#125; END&#123;print &quot;[end]size is &quot;,size&#125;&apos;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h5 id="条件语句"><a href="#条件语句" class="headerlink" title="条件语句"></a>条件语句</h5><p>awk中的条件语句是从C语言中借鉴来的，声明方式如下：</p>
<blockquote>
<p>if (expression) {<br>    statement;<br>    statement;<br>    … …<br>  }</p>
</blockquote>
<p>或</p>
<blockquote>
<p>if (expression) {<br>    statement;<br>  } else {<br>    statement2;<br>  }</p>
</blockquote>
<p>或</p>
<blockquote>
<p>if (expression) {<br>    statement1;<br>  } else if (expression1) {<br>    statement2;<br>  } else {<br>    statement3;<br>  }</p>
</blockquote>
<ol>
<li><p>统计某个文件夹下的文件占用的字节数,过滤4096大小的文件</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls -l | awk &apos;BEGIN&#123;size=0&#125; &#123;if($5==4096)&#123;size+=$5&#125;&#125; END&#123;print &quot;the size of file is &quot;,size&#125;&apos;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h5 id="循环语句"><a href="#循环语句" class="headerlink" title="循环语句"></a>循环语句</h5><p>awk中的循环语句同样借鉴于C语言，支持while、do/while、for、break、continue，这些关键字的语义和C语言中的语义完全相同。</p>
<h5 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h5><p>因为awk中数组的下标可以是数字和字母，数组的下标通常被称为关键字(key)。值和关键字都存储在内部的一张针对key/value应用hash的表格里。由于hash不是顺序存储，因此在显示数组内容时会发现，它们并不是按照你预料的顺序显示出来的。数组和变量一样，都是在使用时自动创建的，awk也同样会自动判断其存储的是数字还是字符串。一般而言，awk中的数组用来从记录中收集信息，可以用于计算总和、统计单词以及跟踪模板被匹配的次数等等。</p>
<ol>
<li><p>显示/etc/passwd的账户</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk -F&apos;:&apos; &apos;BEGIN&#123;count=0;&#125; &#123;name[count]=$1;count++&#125; END&#123;for(i=0;i&lt;NR;i++)&#123;print i, name[i]&#125;&#125;&apos; /etc/passwd</span><br></pre></td></tr></table></figure>
</li>
<li><p>删除数组变量</p>
<blockquote>
<p>delete array[index]</p>
</blockquote>
</li>
</ol>
<h4 id="练习-1"><a href="#练习-1" class="headerlink" title="练习"></a>练习</h4><ol>
<li><p>取出/etc/passwd中的账户名以a或b开头的行并排序</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk &apos;$1~/^(a|b)/&#123;print $0&#125;&apos; /etc/passwd | sort</span><br></pre></td></tr></table></figure>
<blockquote>
<p>这里需要注意<code>~</code>是进行对<code>$1</code>的模糊匹配的意思。</p>
</blockquote>
</li>
<li><p>取出常用服务及其端口号</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/services | awk -F&apos;[ /]+&apos; &apos;$1~/^(ssh|ftp|https)/&#123;print $1,$2&#125;&apos;| uniq</span><br></pre></td></tr></table></figure>
</li>
<li><p>获取文件中空行的数量</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">awk &apos;BEGIN&#123;count=0&#125; &#123;if($0==&quot;&quot;)&#123;count++&#125;&#125; END&#123;print count&#125;&apos; filename</span><br><span class="line">或</span><br><span class="line">awk &apos;BEGIN&#123;count=0&#125; /^$/&#123;count++&#125; END&#123;print count&#125;&apos; filename</span><br></pre></td></tr></table></figure>
</li>
<li><p>从链接中获取域名</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk -F&apos;/&apos; &apos;&#123;array[$3]++&#125;END&#123;for(key in array)&#123;print key,array[key]&#125;&#125;&apos; filename</span><br></pre></td></tr></table></figure>
</li>
<li><p>获取非root用户的信息</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk -F&quot;:&quot; &apos;$1 !~ /root/&#123;print $1, $NF&#125;&apos; /etc/passwd</span><br></pre></td></tr></table></figure>
</li>
</ol>
]]></content>
      
        <categories>
            
            <category> Linux </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Linux </tag>
            
            <tag> awk </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Linux常用命令]]></title>
      <url>/2018/02/01/Linux-commands/</url>
      <content type="html"><![CDATA[<h3 id="系统信息"><a href="#系统信息" class="headerlink" title="系统信息"></a>系统信息</h3><h4 id="显示机器的处理器架构"><a href="#显示机器的处理器架构" class="headerlink" title="显示机器的处理器架构"></a>显示机器的处理器架构</h4><blockquote>
<p>arch<br>  uname -m</p>
</blockquote>
<h4 id="显示正在使用的内核版本"><a href="#显示正在使用的内核版本" class="headerlink" title="显示正在使用的内核版本"></a>显示正在使用的内核版本</h4><blockquote>
<p>uname -r</p>
</blockquote>
<h4 id="显示CPU的信息"><a href="#显示CPU的信息" class="headerlink" title="显示CPU的信息"></a>显示CPU的信息</h4><blockquote>
<p>cat /proc/cpuinfo</p>
</blockquote>
<h4 id="显示内存使用"><a href="#显示内存使用" class="headerlink" title="显示内存使用"></a>显示内存使用</h4><blockquote>
<p>cat /proc/meminfo</p>
</blockquote>
<h4 id="显示内核的版本"><a href="#显示内核的版本" class="headerlink" title="显示内核的版本"></a>显示内核的版本</h4><blockquote>
<p>cat /proc/version</p>
</blockquote>
<h4 id="显示系统日期"><a href="#显示系统日期" class="headerlink" title="显示系统日期"></a>显示系统日期</h4><blockquote>
<p>date</p>
</blockquote>
<h4 id="同步时间"><a href="#同步时间" class="headerlink" title="同步时间"></a>同步时间</h4><blockquote>
<p>ntpdate time.ntp.org </p>
</blockquote>
<h3 id="关机"><a href="#关机" class="headerlink" title="关机"></a>关机</h3><h4 id="关闭系统"><a href="#关闭系统" class="headerlink" title="关闭系统"></a>关闭系统</h4><blockquote>
<p>shutdown -h now<br>  init 0</p>
</blockquote>
<h4 id="重启"><a href="#重启" class="headerlink" title="重启"></a>重启</h4><blockquote>
<p>shutdown -r now<br>  reboot</p>
</blockquote>
<h4 id="注销"><a href="#注销" class="headerlink" title="注销"></a>注销</h4><blockquote>
<p>logout</p>
</blockquote>
<h3 id="文件和目录"><a href="#文件和目录" class="headerlink" title="文件和目录"></a>文件和目录</h3><h4 id="cd"><a href="#cd" class="headerlink" title="cd"></a>cd</h4><blockquote>
<p>/home 进入/home目录<br>  .. 返回上一级目录<br>  - 返回上次所在的目录</p>
</blockquote>
<h4 id="pwd"><a href="#pwd" class="headerlink" title="pwd"></a>pwd</h4><p>显示工作路径</p>
<h4 id="ls"><a href="#ls" class="headerlink" title="ls"></a>ls</h4><blockquote>
<p>-F 查看目录中的文件<br>  -l 显示文件和目录的详细资料<br>  -a 显示隐藏文件</p>
</blockquote>
<h4 id="mkdir"><a href="#mkdir" class="headerlink" title="mkdir"></a>mkdir</h4><p>创建目录</p>
<blockquote>
<p>-Z：设置安全上下文，当使用SELinux时有效；<br>  -m&lt;目标属性&gt;或–mode&lt;目标属性&gt;建立目录的同时设置目录的权限；<br>  -p或–parents 若所要建立目录的上层目录目前尚未建立，则会一并建立上层目录；<br>  –version 显示版本信息。 </p>
</blockquote>
<h4 id="rm"><a href="#rm" class="headerlink" title="rm"></a>rm</h4><blockquote>
<p>rm -f file1 删除一个叫做 ‘file1’ 的文件’<br>  rm dir dir1 删除一个叫做 ‘dir1’ 的目录’<br>  rm -rf dir1 删除一个叫做 ‘dir1’ 的目录并同时删除其内容<br>  rm -rf dir1 dir2 同时删除两个目录及它们的内容</p>
</blockquote>
<h4 id="mv"><a href="#mv" class="headerlink" title="mv"></a>mv</h4><blockquote>
<p>mv dir1 new_dir 重命名/移动 一个目录 </p>
</blockquote>
<h4 id="cp"><a href="#cp" class="headerlink" title="cp"></a>cp</h4><blockquote>
<p>cp file1 file2 复制一个文件<br>  cp dir/* . 复制一个目录下的所有文件到当前工作目录<br>  cp -a /tmp/dir1 . 复制一个目录到当前工作目录<br>  cp -a dir1 dir2 复制一个目录</p>
</blockquote>
<h4 id="ln"><a href="#ln" class="headerlink" title="ln"></a>ln</h4><h3 id="文件搜索"><a href="#文件搜索" class="headerlink" title="文件搜索"></a>文件搜索</h3><h4 id="find"><a href="#find" class="headerlink" title="find"></a>find</h4><blockquote>
<p>find / -name file1 从 ‘/‘ 开始进入根文件系统搜索文件和目录<br>  find / -user user1 搜索属于用户 ‘user1’ 的文件和目录<br>  find /home/user1 -name *.bin 在目录 ‘/ home/user1’ 中搜索带有’.bin’ 结尾的文件<br>  find /usr/bin -type f -atime +100 搜索在过去100天内未被使用过的执行文件<br>  find /usr/bin -type f -mtime -10 搜索在10天内被创建或者修改过的文件<br>  find / -name *.rpm -exec chmod 755 ‘{}’ \; 搜索以 ‘.rpm’ 结尾的文件并定义其权限<br>  find / -xdev -name *.rpm 搜索以 ‘.rpm’ 结尾的文件，忽略光驱、捷盘等可移动设备</p>
</blockquote>
<h4 id="locate"><a href="#locate" class="headerlink" title="locate"></a>locate</h4><blockquote>
<p>locate *.ps 寻找以 ‘.ps’ 结尾的文件 - 先运行 ‘updatedb’ 命令 </p>
</blockquote>
<h4 id="whereis"><a href="#whereis" class="headerlink" title="whereis"></a>whereis</h4><blockquote>
<p>whereis halt 显示一个二进制文件、源码或man的位置</p>
</blockquote>
<h4 id="which"><a href="#which" class="headerlink" title="which"></a>which</h4><blockquote>
<p>which halt 显示一个二进制文件或可执行文件的完整路径</p>
</blockquote>
<h3 id="挂载文件系统"><a href="#挂载文件系统" class="headerlink" title="挂载文件系统"></a>挂载文件系统</h3><h4 id="mount"><a href="#mount" class="headerlink" title="mount"></a>mount</h4><h4 id="unmount"><a href="#unmount" class="headerlink" title="unmount"></a>unmount</h4><h3 id="磁盘空间"><a href="#磁盘空间" class="headerlink" title="磁盘空间"></a>磁盘空间</h3><h4 id="df"><a href="#df" class="headerlink" title="df"></a>df</h4><blockquote>
<p>-a或–all：包含全部的文件系统；<br>  –block-size=&lt;区块大小&gt;：以指定的区块大小来显示区块数目；<br>  -h或–human-readable：以可读性较高的方式来显示信息；<br>  -H或–si：与-h参数相同，但在计算时是以1000 Bytes为换算单位而非1024 Bytes；<br>  -i或–inodes：显示inode的信息；<br>  -k或–kilobytes：指定区块大小为1024字节；<br>  -l或–local：仅显示本地端的文件系统；<br>  -m或–megabytes：指定区块大小为1048576字节；<br>  –no-sync：在取得磁盘使用信息前，不要执行sync指令，此为预设值；<br>  -P或–portability：使用POSIX的输出格式；<br>  –sync：在取得磁盘使用信息前，先执行sync指令；<br>  -t&lt;文件系统类型&gt;或–type=&lt;文件系统类型&gt;：仅显示指定文件系统类型的磁盘信息；<br>  -T或–print-type：显示文件系统的类型；<br>  -x&lt;文件系统类型&gt;或–exclude-type=&lt;文件系统类型&gt;：不要显示指定文件系统类型的磁盘信息；<br>  –help：显示帮助；<br>  –version：显示版本信息。</p>
</blockquote>
<h4 id="du"><a href="#du" class="headerlink" title="du"></a>du</h4><blockquote>
<p>-a或-all 显示目录中个别文件的大小。<br>  -b或-bytes 显示目录或文件大小时，以byte为单位。<br>  -c或–total 除了显示个别目录或文件的大小外，同时也显示所有目录或文件的总和。<br>  -k或–kilobytes 以KB(1024bytes)为单位输出。<br>  -m或–megabytes 以MB为单位输出。<br>  -s或–summarize 仅显示总计，只列出最后加总的值。<br>  -h或–human-readable 以K，M，G为单位，提高信息的可读性。<br>  -x或–one-file-xystem 以一开始处理时的文件系统为准，若遇上其它不同的文件系统目录则略过。<br>  -L&lt;符号链接&gt;或–dereference&lt;符号链接&gt; 显示选项中所指定符号链接的源文件大小。<br>  -S或–separate-dirs 显示个别目录的大小时，并不含其子目录的大小。<br>  -X&lt;文件&gt;或–exclude-from=&lt;文件&gt; 在&lt;文件&gt;指定目录或文件。<br>  –exclude=&lt;目录或文件&gt; 略过指定的目录或文件。<br>  -D或–dereference-args 显示指定符号链接的源文件大小。<br>  -H或–si 与-h参数相同，但是K，M，G是以1000为换算单位。<br>  -l或–count-links 重复计算硬件链接的文件。</p>
</blockquote>
<h3 id="用户和组"><a href="#用户和组" class="headerlink" title="用户和组"></a>用户和组</h3><h4 id="useradd"><a href="#useradd" class="headerlink" title="useradd"></a>useradd</h4><p>创建的新的系统用户。使用useradd指令所建立的帐号，实际上是保存在<code>/etc/passwd</code>文本文件中。</p>
<blockquote>
<p>-c&lt;备注&gt;：加上备注文字。备注文字会保存在passwd的备注栏位中；<br>  -d&lt;登入目录&gt;：指定用户登入时的启始目录；<br>  -D：变更预设值；<br>  -e&lt;有效期限&gt;：指定帐号的有效期限；<br>  -f&lt;缓冲天数&gt;：指定在密码过期后多少天即关闭该帐号；<br>  -g&lt;群组&gt;：指定用户所属的群组；<br>  -G&lt;群组&gt;：指定用户所属的附加群组；<br>  -m：自动建立用户的登入目录；<br>  -M：不要自动建立用户的登入目录；<br>  -n：取消建立以用户名称为名的群组；<br>  -r：建立系统帐号；<br>  -s<shell>：指定用户登入后所使用的shell；<br>  -u<uid>：指定用户id。</uid></shell></p>
</blockquote>
<h4 id="userdel"><a href="#userdel" class="headerlink" title="userdel"></a>userdel</h4><p>删除给定的用户，以及与用户相关的文件。若不加选项，则仅删除用户帐号，而不删除相关文件。</p>
<blockquote>
<p>-f：强制删除用户，即使用户当前已登录；<br>  -r：删除用户的同时，删除与用户相关的所有文件。</p>
</blockquote>
<h4 id="passwd"><a href="#passwd" class="headerlink" title="passwd"></a>passwd</h4><p>设置用户的认证信息，包括用户密码、密码过期时间等。<br>系统管理者则能用它管理系统用户的密码。只有管理者可以指定用户名称，一般用户只能变更自己的密码。</p>
<blockquote>
<p>-d：删除密码，仅有系统管理者才能使用；<br>  -f：强制执行；<br>  -k：设置只有在密码过期失效后，方能更新；<br>  -l：锁住密码；<br>  -s：列出密码的相关信息，仅有系统管理者才能使用；<br>  -u：解开已上锁的帐号。</p>
</blockquote>
<h4 id="groupadd"><a href="#groupadd" class="headerlink" title="groupadd"></a>groupadd</h4><p>创建一个新的工作组，新工作组的信息将被添加到系统文件中。</p>
<blockquote>
<p>-g：指定新建工作组的id；<br>  -r：创建系统工作组，系统工作组的组ID小于500；<br>  -K：覆盖配置文件“/ect/login.defs”；<br>  -o：允许添加组ID号不唯一的工作组。</p>
</blockquote>
<h4 id="groupdel"><a href="#groupdel" class="headerlink" title="groupdel"></a>groupdel</h4><p>删除指定的工作组，本命令要修改的系统文件包括/ect/group和/ect/gshadow。若该群组中仍包括某些用户，则必须先删除这些用户后，方能删除群组。</p>
<h3 id="文件权限"><a href="#文件权限" class="headerlink" title="文件权限"></a>文件权限</h3><h4 id="chmod"><a href="#chmod" class="headerlink" title="chmod"></a>chmod</h4><p>用来变更文件或目录的权限。在UNIX系统家族里，文件或目录权限的控制分别以读取、写入、执行3种一般权限来区分，另有3种特殊权限可供运用。用户可以使用chmod指令去变更文件与目录的权限，设置方式采用文字或数字代号皆可。符号连接的权限无法变更，如果用户对符号连接修改权限，其改变会作用在被连接的原始文件。</p>
<p>权限范围表示法如下：<br><code>u</code> User，即文件或目录的拥有者；<br><code>g</code> Group，即文件或目录的所属群组；<br><code>o</code> Other，除了文件或目录拥有者或所属群组之外，其他用户皆属于这个范围；<br><code>a</code> All，即全部的用户，包含拥有者，所属群组以及其他用户；<br><code>r</code> 读取权限，数字代号为“4”;<br><code>w</code> 写入权限，数字代号为“2”；<br><code>x</code> 执行或切换权限，数字代号为“1”；<br><code>-</code> 不具任何权限，数字代号为“0”；<br><code>s</code> 特殊功能说明：变更文件或目录的权限。</p>
<blockquote>
<p>-c或——changes：效果类似“-v”参数，但仅回报更改的部分；<br>  -f或–quiet或——silent：不显示错误信息；<br>  -R或——recursive：递归处理，将指令目录下的所有文件及子目录一并处理；<br>  -v或——verbose：显示指令执行过程；<br>  –reference=&lt;参考文件或目录&gt;：把指定文件或目录的所属群组全部设成和参考文件或目录的所属群组相同；<br>  &lt;权限范围&gt;+&lt;权限设置&gt;：开启权限范围的文件或目录的该选项权限设置；<br>  &lt;权限范围&gt;-&lt;权限设置&gt;：关闭权限范围的文件或目录的该选项权限设置；<br>  &lt;权限范围&gt;=&lt;权限设置&gt;：指定权限范围的文件或目录的该选项权限设置；</p>
</blockquote>
<h4 id="chown"><a href="#chown" class="headerlink" title="chown"></a>chown</h4><h4 id="chgrp"><a href="#chgrp" class="headerlink" title="chgrp"></a>chgrp</h4><h3 id="打包和压缩"><a href="#打包和压缩" class="headerlink" title="打包和压缩"></a>打包和压缩</h3><h4 id="gzip"><a href="#gzip" class="headerlink" title="gzip"></a>gzip</h4><h4 id="tar"><a href="#tar" class="headerlink" title="tar"></a>tar</h4><h4 id="zip"><a href="#zip" class="headerlink" title="zip"></a>zip</h4><h3 id="yum软件包管理"><a href="#yum软件包管理" class="headerlink" title="yum软件包管理"></a>yum软件包管理</h3><blockquote>
<p>yum install package_name 下载并安装一个rpm包<br>  yum localinstall package_name.rpm 将安装一个rpm包，使用你自己的软件仓库为你解决所有依赖关系<br>  yum update package_name.rpm 更新当前系统中所有安装的rpm包<br>  yum update package_name 更新一个rpm包<br>  yum remove package_name 删除一个rpm包<br>  yum list 列出当前系统中安装的所有包<br>  yum search package_name 在rpm仓库中搜寻软件包<br>  yum clean packages 清理rpm缓存删除下载的包<br>  yum clean headers 删除所有头文件<br>  yum clean all 删除所有缓存的包和头文件 </p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> Linux </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[docker的安装和使用]]></title>
      <url>/2018/02/01/docker/</url>
      <content type="html"><![CDATA[<h3 id="docker安装"><a href="#docker安装" class="headerlink" title="docker安装"></a>docker安装</h3><p>在最小化安装的情况下，docker是没有安装的，所以不需要先卸载。</p>
<blockquote>
<p>安装yum-config-manager工具</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install yum-utils</span><br></pre></td></tr></table></figure>
<blockquote>
<p>设置Docker仓库</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum-config-manager --add-repo https://docs.docker.com/v1.13/engine/installation/linux/repo_files/centos/docker.repo</span><br></pre></td></tr></table></figure>
<blockquote>
<p>更新yum源并安装最新的docker</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum makecache fast</span><br><span class="line">yum -y install docker-engine</span><br></pre></td></tr></table></figure>
<blockquote>
<p>启动docker</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl start docker</span><br><span class="line">systemctl enable docker</span><br></pre></td></tr></table></figure>
<blockquote>
<p>升级docker</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum makecache fast</span><br><span class="line">yum list docker-engine.x86_64  --showduplicates |sort -r</span><br><span class="line">yum -y install docker-engine-&lt;VERSION_STRING&gt;</span><br></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> Linux </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Linux </tag>
            
            <tag> docker </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[vim基础]]></title>
      <url>/2018/02/01/vim-base/</url>
      <content type="html"><![CDATA[<ol>
<li>vim编辑器在内存缓冲区中处理数据。</li>
<li>vim编辑器有两种操作模式：普通模式和插入模式。</li>
<li>vim移动光标的命令：h-左  j-下  k-上  l-右</li>
<li>快速移动命令：PageDown、PageUp、G(最后一行)、num G(移动到第num行)、gg(移动到第一行)</li>
</ol>
<h3 id="编辑数据"><a href="#编辑数据" class="headerlink" title="编辑数据"></a>编辑数据</h3><p>x        删除当前光标所在位置的字符<br>dd        删除当前光标所在行<br>dw        删除当前光标所在位置的单词<br>d$        删除当前光标所在位置至行尾的内容<br>J        删除当前光标所在行尾的换行符<br>u        撤销前一编辑命令<br>a        在当前光标后追加数据</p>
<h3 id="复制和粘贴"><a href="#复制和粘贴" class="headerlink" title="复制和粘贴"></a>复制和粘贴</h3><p>先使用dd删除，然后使用p粘贴<br>yw        复制一个单词<br>y$        复制到行尾</p>
<h3 id="查找和替换"><a href="#查找和替换" class="headerlink" title="查找和替换"></a>查找和替换</h3><p>/content    n<br>:s/old/new/        替换<br>:s/old/new/g<br>:n,ms/old/new/g    替换行号n和m之间所有old<br>:%s/old/new/g    替换整个文件中所有old<br>:%s/old/new/gc    替换整个文件中的所有old，但在每次出现时提示</p>
]]></content>
      
        <categories>
            
            <category> Linux </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Linux </tag>
            
            <tag> vim </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Nginx+Keepalived的安装和使用]]></title>
      <url>/2018/01/31/keepalived-nginx/</url>
      <content type="html"><![CDATA[<h2 id="vim安装"><a href="#vim安装" class="headerlink" title="vim安装"></a>vim安装</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install vim -y</span><br></pre></td></tr></table></figure>
<h2 id="修改ip"><a href="#修改ip" class="headerlink" title="修改ip"></a>修改ip</h2><p>修改<code>/etc/sysconfig/network-scripts/ifcfg-eth0</code>的内容(如果该文件不存在，先新建)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">DEVICE=eth0 #网卡对应的设备别名</span><br><span class="line">BOOTPROTO=static #设置为静态IP，static</span><br><span class="line">ONBOOT=yes</span><br><span class="line">DNS1=114.114.114.114</span><br><span class="line">HWADDR=00:07:E9:05:E8:B4 #对应的网卡物理地址，可以不用配置</span><br><span class="line">IPADDR=192.168.17.133 #ip地址静态指定</span><br><span class="line">NETMASK=255.255.255.0 </span><br><span class="line">GATEWAY=192.168.17.2</span><br></pre></td></tr></table></figure>
<p>然后在虚拟机-&gt;设置-&gt;网络适配器中选择自定义VMnet8</p>
<blockquote>
<p>可以将原有的<code>ifcfg-enoxxxxxxx</code>文件删除，然后修改<code>grub</code>文件<br>vim /etc/default/grub<br>然后在<code>GRUB_CMDLINE_LINUX</code>原有的参数后面加上<code>&quot;net.ifnames=0 biosdevname=0&quot;</code>，保存退出后，执行<br><code>grub2-mkconfig -o /boot/grub2/grub.cfg</code><br>然后重启计算机</p>
</blockquote>
<h2 id="添加用户和权限"><a href="#添加用户和权限" class="headerlink" title="添加用户和权限"></a>添加用户和权限</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ useradd apache</span><br><span class="line"></span><br><span class="line">$ passwd apache</span><br><span class="line"></span><br><span class="line">$ visudo </span><br><span class="line"></span><br><span class="line">$ /root</span><br><span class="line"></span><br><span class="line">$ yyp</span><br></pre></td></tr></table></figure>
<h2 id="安装apache"><a href="#安装apache" class="headerlink" title="安装apache"></a>安装apache</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">yum install httpd httpd-devel</span><br><span class="line"></span><br><span class="line">#开启apache服务</span><br><span class="line">systemctl start httpd.service</span><br><span class="line"></span><br><span class="line">#关闭apache服务</span><br><span class="line">systemctl stop httpd.service</span><br><span class="line"></span><br><span class="line">#设置为开机启动</span><br><span class="line">systemctl enable httpd.service</span><br><span class="line"></span><br><span class="line">#关闭防火墙</span><br><span class="line">systemctl stop firewalld.service</span><br><span class="line"></span><br><span class="line">#开机不启动防火墙</span><br><span class="line">systemctl disable firewalld.service</span><br><span class="line"></span><br><span class="line">#apache默认使用/var/www/html文件夹里的资源，故可以创建一个index.html文件</span><br><span class="line">echo apache133 &gt; index.html</span><br></pre></td></tr></table></figure>
<h2 id="安装Nginx"><a href="#安装Nginx" class="headerlink" title="安装Nginx"></a>安装Nginx</h2><h3 id="使用压缩包安装nginx"><a href="#使用压缩包安装nginx" class="headerlink" title="使用压缩包安装nginx"></a>使用压缩包安装nginx</h3><ol>
<li><p>切换为root用户</p>
</li>
<li><p>进入/usr/local/src目录下</p>
</li>
<li><p>下载Nginx、openssl、pcre以及zlib</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">wget http://nginx.org/download/nginx-1.12.2.tar.gz</span><br><span class="line">wget https://www.openssl.org/source/openssl-fips-2.0.16.tar.gz</span><br><span class="line">wget ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/pcre-8.40.tar.gz</span><br><span class="line">wget http://www.zlib.net/zlib-1.2.11.tar.gz</span><br></pre></td></tr></table></figure>
</li>
<li><p>可能需要先安装c++编译环境</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install gcc-c++</span><br></pre></td></tr></table></figure>
</li>
<li><p>安装openssl</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tar zxvf openssl-fips-2.0.16.tar.gz </span><br><span class="line">cd openssl-fips-2.0.16/</span><br><span class="line">./config</span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure>
</li>
<li><p>安装pcre</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tar zxvf pcre-8.40.tar.gz </span><br><span class="line">cd pcre-8.40/</span><br><span class="line">./configure</span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure>
</li>
<li><p>安装zlib</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tar zxvf zlib-1.2.11.tar.gz </span><br><span class="line">cd zlib-1.2.11/</span><br><span class="line">./configure</span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure>
</li>
<li><p>安装Nginx</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tar zxvf nginx-1.12.2.tar.gz </span><br><span class="line">cd nginx-1.12.2/</span><br><span class="line">./configure</span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure>
</li>
<li><p>启动Nginx</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/nginx/sbin/nginx</span><br></pre></td></tr></table></figure>
</li>
<li><p>Nginx基本操作</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">#启动</span><br><span class="line">[root@localhost ~]# /usr/local/nginx/sbin/nginx</span><br><span class="line">#停止/重启</span><br><span class="line">[root@localhost ~]# /usr/local/nginx/sbin/nginx -s stop(quit、reload)</span><br><span class="line">#命令帮助</span><br><span class="line">[root@localhost ~]# /usr/local/nginx/sbin/nginx -h</span><br><span class="line">#验证配置文件</span><br><span class="line">[root@localhost ~]# /usr/local/nginx/sbin/nginx -t</span><br><span class="line">#配置文件</span><br><span class="line">[root@localhost ~]# vim /usr/local/nginx/conf/nginx.conf</span><br></pre></td></tr></table></figure>
</li>
<li><p>获取Nginx的安装位置</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">whereis nginx</span><br></pre></td></tr></table></figure>
</li>
<li><p>修改Nginx的配置文件</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost conf]# cd /usr/local/nginx/conf/</span><br><span class="line">[root@localhost conf]# vim nginx.conf</span><br></pre></td></tr></table></figure>
</li>
<li><p>在http内添加</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">upstream test.com&#123;</span><br><span class="line">  server 192.168.17.133:80 weight=5;</span><br><span class="line">  server 192.168.17.134:80 weight=1;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>在http-&gt;server中的location中添加</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">location / &#123;</span><br><span class="line">  proxy_pass  http://test.com;</span><br><span class="line">  proxy_set_header Host       $host;</span><br><span class="line">  proxy_set_header X-Real-IP  $remote_addr;</span><br><span class="line">  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">  root   html;</span><br><span class="line">  index  index.html index.htm;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>安装rz和sz</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install lrzsz</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h3 id="使用yum安装nginx-推荐"><a href="#使用yum安装nginx-推荐" class="headerlink" title="使用yum安装nginx(推荐)"></a>使用yum安装nginx(推荐)</h3><blockquote>
<p>本地yum源中没有我们想要的nginx，那么就需要创建一个<code>/etc/yum.repos.d/nginx.repo</code>的文件，新增一个yum源。</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/yum.repos.d/nginx.repo</span><br></pre></td></tr></table></figure>
<blockquote>
<p>然后加入如下内容</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[nginx]</span><br><span class="line">name=nginx repo</span><br><span class="line">baseurl=http://nginx.org/packages/centos/$releasever/$basearch/</span><br><span class="line">gpgcheck=0</span><br><span class="line">enabled=1</span><br></pre></td></tr></table></figure>
<blockquote>
<p>查询nginx的相关信息并安装</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum list | grep nginx</span><br><span class="line">yum install -y nginx</span><br></pre></td></tr></table></figure>
<h2 id="安装Keepalived"><a href="#安装Keepalived" class="headerlink" title="安装Keepalived"></a>安装Keepalived</h2><h3 id="安装Keepalived-1"><a href="#安装Keepalived-1" class="headerlink" title="安装Keepalived"></a>安装Keepalived</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">wget http://www.keepalived.org/software/keepalived-1.2.24.tar.gz</span><br><span class="line">tar -zxvf keepalived-1.2.24.tar.gz</span><br><span class="line">cd keepalived-1.2.24</span><br><span class="line">./configure --prefix=/usr/local/keepalived</span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure>
<blockquote>
<p>在安装时可能会出现如下错误\<br>!!! OpenSSL is not properly installed on your system. !!!\<br>!!! Can not include OpenSSL headers files.\<br>解决办法：yum -y install openssl-devel</p>
<p>也可以直接使用yum安装</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install keepalived</span><br></pre></td></tr></table></figure>
<h3 id="配置Keepalived"><a href="#配置Keepalived" class="headerlink" title="配置Keepalived"></a>配置Keepalived</h3><p>keepalived启动时会从/etc/keepalived目录下查找keepalived.conf配置文件，如果没有找到则使用默认的配置。/etc/keepalived目录安装时默认是没有安装的，需要手动创建。</p>
<blockquote>
<p>先备份配置文件</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp keepalived.conf keepalived.conf.bak</span><br></pre></td></tr></table></figure>
<blockquote>
<p><code>在启动keepalived前先关闭防火墙和selinux</code></p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop firewalld.service</span><br><span class="line">systemctl disable firewalld.service</span><br><span class="line"></span><br><span class="line">getenforce</span><br><span class="line">/usr/sbin/sestatus -v</span><br><span class="line">#临时关闭</span><br><span class="line">setenforce 0</span><br><span class="line">#永久关闭</span><br><span class="line">vim /etc/selinux/config</span><br><span class="line">#将SELINUX=enforcing改为SELINUX=disabled，必须重启才能生效</span><br></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> Linux </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Nginx </tag>
            
            <tag> Keepalived </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[HEXO安装与使用]]></title>
      <url>/2018/01/30/hexo-install-use/</url>
      <content type="html"><![CDATA[<h3 id="nodejs安装"><a href="#nodejs安装" class="headerlink" title="nodejs安装"></a>nodejs安装</h3><blockquote>
<p>通过EPEL的方式进行安装</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 安装epel</span><br><span class="line">yum install -y epel-release</span><br><span class="line">yum repolist</span><br><span class="line"></span><br><span class="line"># 安装node</span><br><span class="line">yum install -y nodejs</span><br><span class="line">node --version</span><br><span class="line">yum install npm</span><br></pre></td></tr></table></figure>
<h3 id="hexo安装"><a href="#hexo安装" class="headerlink" title="hexo安装"></a>hexo安装</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br></pre></td></tr></table></figure>
<blockquote>
<p>快速新建一个博客系统</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hexo init blog</span><br><span class="line">cd blog</span><br><span class="line">npm install</span><br><span class="line">hexo server</span><br></pre></td></tr></table></figure>
<h3 id="hexo常用命令"><a href="#hexo常用命令" class="headerlink" title="hexo常用命令"></a>hexo常用命令</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 清空缓存</span><br><span class="line">hexo clean</span><br><span class="line"># 生成静态网页</span><br><span class="line">hexo g</span><br><span class="line"># 启动hexo服务，默认端口为4000</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure>
<h3 id="安装NEXT主题"><a href="#安装NEXT主题" class="headerlink" title="安装NEXT主题"></a>安装NEXT主题</h3><blockquote>
<p>资源链接</p>
</blockquote>
<p><a href="https://github.com/iissnan/hexo-theme-next" target="_blank" rel="noopener">https://github.com/iissnan/hexo-theme-next</a></p>
<blockquote>
<p>安装方法</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ cd hexo</span><br><span class="line">$ ls</span><br><span class="line">_config.yml  node_modules  package.json  public  scaffolds  source  themes</span><br><span class="line">$ mkdir themes/next</span><br><span class="line">$ curl -s https://api.github.com/repos/iissnan/hexo-theme-next/releases/latest | grep tarball_url | cut -d &apos;&quot;&apos; -f 4 | wget -i - -O- | tar -zx -C themes/next --strip-components=1</span><br></pre></td></tr></table></figure>
<h3 id="NEXT的相关配置"><a href="#NEXT的相关配置" class="headerlink" title="NEXT的相关配置"></a>NEXT的相关配置</h3><blockquote>
<p>对于整个项目，有一个站点配置文件<code>_config.yml</code>，该文件位于根目录下，在本项目中位于<code>/root/blog</code>目录下，对于每个主题，都有一个主题的配置文件<code>_config.yml</code>，位于每个主题的根目录下，在本项目中位于<code>/root/blog/themes/next</code>目录下：</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ ls /root/blog/</span><br><span class="line">_config.yml  node_modules  public     source</span><br><span class="line">db.json      package.json  scaffolds  themes</span><br><span class="line"></span><br><span class="line">$ ls /root/blog/themes/next/</span><br><span class="line">bower.json   gulpfile.coffee  layout   package.json  README.md  source</span><br><span class="line">_config.yml  languages        LICENSE  README.cn.md  scripts    test</span><br></pre></td></tr></table></figure>
<h3 id="添加分类标签"><a href="#添加分类标签" class="headerlink" title="添加分类标签"></a>添加分类标签</h3><blockquote>
<p>如果需要给首页添加分页，首先修改主题配置文件，将menu下的about前的#去除：</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: /</span><br><span class="line">  #tags: /tags/ || tags</span><br><span class="line">  categories: /categories/</span><br><span class="line">  archives: /archives/</span><br><span class="line">  about: /about/</span><br><span class="line">  #schedule: /schedule/ || calendar</span><br><span class="line">  #sitemap: /sitemap.xml || sitemap</span><br><span class="line">  #commonweal: /404/ || heartbeat</span><br></pre></td></tr></table></figure>
<blockquote>
<p>然后在source目录下新建一个categories文件夹，并在该文件夹中添加一个index.md文件</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ cd /root/blog/source</span><br><span class="line">$ mkdir categories/</span><br><span class="line">$ vim index.md</span><br></pre></td></tr></table></figure>
<blockquote>
<p>在文件中添加以下内容</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 文章分类</span><br><span class="line">date: 日期</span><br><span class="line">type: &quot;categories&quot;</span><br><span class="line">comments: false</span><br><span class="line">---</span><br></pre></td></tr></table></figure>
<blockquote>
<p>然后在文件的头部添加以下内容：</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: Hello World</span><br><span class="line">categories: </span><br><span class="line">- test</span><br><span class="line">---</span><br></pre></td></tr></table></figure>
<h3 id="添加动态背景"><a href="#添加动态背景" class="headerlink" title="添加动态背景"></a>添加动态背景</h3><blockquote>
<p>打开  next/layout/_layout.swig<br>在<code>&lt;/body&gt;</code>之前添加代码(注意不要放在<code>&lt;/head&gt;</code>的后面)：</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if theme.canvas_nest %&#125;</span><br><span class="line">&lt;script type=&quot;text/javascript&quot; src=&quot;//cdn.bootcss.com/canvas-nest.js/1.0.0/canvas-nest.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>修改主题配置文件，将canvas_nest修改为true</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">canvas_nest: true</span><br></pre></td></tr></table></figure>
<h3 id="添加更新时间"><a href="#添加更新时间" class="headerlink" title="添加更新时间"></a>添加更新时间</h3><blockquote>
<p>修改语言配置文件<code>/themes/next/languages/zh_Hans.yml</code>，在post下添加以下内容：</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">post:</span><br><span class="line">  updated: 更新于</span><br></pre></td></tr></table></figure>
<blockquote>
<p>修改主题配置文件<code>/themes/next/_config.yml</code></p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">updated_at: true</span><br></pre></td></tr></table></figure>
<blockquote>
<p>写文章的时候可以直接在文章开头设置更新时间</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">modified:</span><br></pre></td></tr></table></figure>
<h3 id="添加站内搜索"><a href="#添加站内搜索" class="headerlink" title="添加站内搜索"></a>添加站内搜索</h3><h4 id="安装hexo-generator-search"><a href="#安装hexo-generator-search" class="headerlink" title="安装hexo-generator-search"></a>安装hexo-generator-search</h4><blockquote>
<p>在站点的根目录下执行以下命令：</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-search --save</span><br></pre></td></tr></table></figure>
<h4 id="安装-hexo-generator-searchdb"><a href="#安装-hexo-generator-searchdb" class="headerlink" title="安装 hexo-generator-searchdb"></a>安装 hexo-generator-searchdb</h4><blockquote>
<p>在站点的根目录下执行以下命令：</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure>
<h4 id="启用搜索"><a href="#启用搜索" class="headerlink" title="启用搜索"></a>启用搜索</h4><blockquote>
<p>编辑站点配置文件，新增以下内容到最后：</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">search:</span><br><span class="line">  path: search.xml</span><br><span class="line">  field: post</span><br><span class="line">  format: html</span><br><span class="line">  limit: 10000</span><br></pre></td></tr></table></figure>
<blockquote>
<p>编辑主题配置文件，将local_search下的enable改为true：</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">local_search:</span><br><span class="line">  enable: true</span><br></pre></td></tr></table></figure>
<h3 id="上传代码到github"><a href="#上传代码到github" class="headerlink" title="上传代码到github"></a>上传代码到github</h3><h4 id="注册Github的账号"><a href="#注册Github的账号" class="headerlink" title="注册Github的账号"></a>注册Github的账号</h4><p>略</p>
<h4 id="创建Repository"><a href="#创建Repository" class="headerlink" title="创建Repository"></a>创建Repository</h4><p>创建的时候需要注意Repository的名字。例如我的Github账号是pchad321，那么应该创建的Repository的名字为：pchad321.github.io</p>
<h4 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h4><ol>
<li><p>进入刚刚创建的Repository，复制Repository的连接，例如<a href="https://github.com/pchad321/pchad321.github.io.git" target="_blank" rel="noopener">https://github.com/pchad321/pchad321.github.io.git</a></p>
</li>
<li><p>修改站点配置文件</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: https://github.com/pchad321/pchad321.github.io.git</span><br><span class="line">  branch: master</span><br><span class="line">  message: &apos;updated at:&#123;&#123;now(&quot;YYYY-MM-DD HH/mm/ss&quot;)&#125;&#125;&apos;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h4 id="设置SSH-keys"><a href="#设置SSH-keys" class="headerlink" title="设置SSH keys"></a>设置SSH keys</h4><ol>
<li><p>配置本机全局git环境</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.email &quot;you@example.com&quot;</span><br><span class="line">git config --global user.name &quot;Your Name&quot;</span><br></pre></td></tr></table></figure>
</li>
<li><p>生成SSH密钥</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># -C后面是github上的用户邮箱地址</span><br><span class="line">ssh-keygen -t rsa -C you@126.com</span><br><span class="line"></span><br><span class="line"># 然后一路回车</span><br></pre></td></tr></table></figure>
</li>
<li><p>将SSH密钥添加到github中</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">less ~/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure>
<blockquote>
<p>复制出现的一堆密码，然后在github的SSH and GPG keys中粘贴这一段密码</p>
</blockquote>
</li>
<li><p>设置的验证</p>
<p>在本地输入以下代码：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure>
<blockquote>
<p>如果在最后出现了你配置的用户名，说明配置成功</p>
</blockquote>
</li>
<li><p>提交代码到github上</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo generate</span><br><span class="line">hexo deploy</span><br></pre></td></tr></table></figure>
<blockquote>
<p>在提交代码时可能会出现<code>ERROR Deployer not found: git</code>的错误，此时只需要运行以下命令</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-deployer-git</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h4 id="将Hexo的源码备份到Github分支里面"><a href="#将Hexo的源码备份到Github分支里面" class="headerlink" title="将Hexo的源码备份到Github分支里面"></a>将Hexo的源码备份到Github分支里面</h4><p>上传到分支里存储，修改本地的时候先上传存储，再发布。更换电脑的时候再下载下来源文件</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ git init</span><br><span class="line">$ git remote add origin git@github.com:username/username.github.io.git</span><br><span class="line">$ git add .</span><br><span class="line">$ git commit -m &quot;blog&quot;</span><br><span class="line">$ git push origin master:Hexo-Blog</span><br></pre></td></tr></table></figure>
<p>在本地写好博文后，可以先执行：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git add .</span><br><span class="line">$ git commit -m &quot;blog&quot;</span><br><span class="line">$ git push origin master:Hexo-Blog</span><br></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> 前端 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Linux </tag>
            
            <tag> HEXO </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>
